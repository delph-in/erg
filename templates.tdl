;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  Macro definitions
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:begin :template.

satp ($head=head) := synsem &
  [ LOCAL local &
	  [ CONJ cnil,
	    CAT [ HEAD $head,
		  VAL [ SUBJ < >,
			    COMPS *olist*,
			    SPR *olist* ] ] ] ].

;; DPF (30-Apr-98) In satp, SUBJ must be < >, not *olist*, since we need to
;; have SUBJ < > unify with the filler in filler_head phrases, and the filler is
;; constrained to be SUBJ *prolist* which has a distinct synsem type (pro_ss)
;; which is constrained to be [OPT -].

; cp complement has to be MOD empty to exclude relative clauses

; ERB (21-01-98) Moving MOD into HEAD... will create problems if this
; is to be used for CP[to] complements as well, as these will not
; be MOD no-mod.  Yet another problem is that to_c_prop must be
; MC na so that it can feed extrasubj.  I conclude that we do
; not want to use one macro for both CP[to] and CP[that].

; ERB (03-02-98) Selected CPs can no longer be MC - because subjh_decl
; has to be MC + in order to keep it from being the modifier in the
; head-mod construction.  So this macro is now changed to MC bool,
; INV -.
; 17-Jun-98 - Tried another solution making use of the fact that subj-head-decl 
; is MC bool, so the CP template can say MC -.  This will (desirably) block
; the subj-head version of "who sleeps" to be the CP complement of "persuades".

cp ($vform=vform) := synsem & @satp($head=verbal) &		     
  [ LOCAL.CAT [ HEAD [ VFORM $vform,
		       MOOD ind_or_mod_subj,
		       INV - ],
		MC - ] ].

; DPF (28-Jul-98) Added MOD no-mod to exclude non-finite relative clauses, which
; are otherwise not distinguishable from nomp's.  Maybe also needed to exclude 
; the second (modifier) entries for temporal NPs like "Tuesday".

nomp ($case=case,$cont=mrs) := @satp($head=nominal) &
  [ LOCAL [ CAT [ HEAD strict_head &
		       [ CASE $case,
			 MOD no-mod ],
		  MC na ],
	    CONT $cont ] ].

np ($case=case,$cont=mrs) := @satp($head=supnoun) &
  [ LOCAL [ CAT.HEAD strict_head &
		     [ CASE $case ],
	    CONT $cont ] ].

; Only used as MOD value for relative clauses, so type LOCAL, not SYNSEM
nbar ($cont=nom-obj) := local &
  [ CAT [ HEAD noun &
	       [ MOD no-mod ],
	  VAL [ SUBJ < >,
		    COMPS *olist*,
		    SPR < synsem > ] ],
    CONT $cont,
    MC na ].

third-sg-np ( ) := @nomp ( ) & 
  [ LOCAL.CONT.INDEX.PNG 3sg ].

prd ($subj=synsem) :=
  [ LOCAL local &
	  [ CAT [ HEAD [ PRD + ],
		  VAL [ SUBJ < $subj >,
			    SPR *olist*,
			    COMPS *olist* ],
		  MC na ] ] ].

vp ($vform=vform) :=
  [ LOCAL local &
	  [ CONJ cnil,
	    CAT [ HEAD verbal & strict_head &
		     [ VFORM $vform,
		       INV - ],
		  VAL [ SUBJ < synsem >,
			    COMPS *olist* ] ] ] ].
pp () := synsem &
  [ LOCAL local &
	  [ CAT [ HEAD prep & [ PRD - ],
		  VAL [ SPR *olist*,
			    COMPS *olist* ],
		  MC na ] ] ].

:end :template.
