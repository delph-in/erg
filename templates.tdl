;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  Macro definitions
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:begin :template.

satp ($head=head) := synsem &
  [ LOCAL local &
	  [ CONJ cnil,
	    CAT [ HEAD $head,
		  VALENCE [ SUBJ < >,
			    COMPS *olist*,
			    SPR *olist* ] ] ] ].


cp ($vform=vform) := synsem & @satp($head=verbal) &		     
  [ LOCAL [ CAT [ HEAD [ VFORM $vform,
			 MOOD ind_or_mod_subj ],
	          ROOT bool ] ] ].

nomp ($case=case,$cont=mrs) := @satp($head=nominal) &
  [ LOCAL [ CAT [ HEAD strict_head &
		       [ CASE $case ],
		  ROOT na ],
	    CONT $cont ] ].

np ($case=case,$cont=mrs) := @satp($head=supnoun) &
  [ LOCAL [ CAT.HEAD.CASE $case,
	    CONT $cont ] ].

; Only used as MOD value for relative clauses, so type LOCAL, not SYNSEM
nbar ($cont=nom-obj) := local &
  [ CAT [ HEAD noun &
	       [ MOD no-mod ],
	  VALENCE [ SUBJ < >,
		    COMPS *olist*,
		    SPR < synsem > ]],
    CONT $cont,
    ROOT na ].

third-sg-np ( ) := @nomp ( ) & 
  [ LOCAL.CONT.INDEX.PNG 3sg ].

prd ($subj=synsem) :=
  [ LOCAL local &
	  [ CAT [ HEAD [ PRD + ],
		  VALENCE [ SUBJ < $subj >,
			    SPR *olist*,
			    COMPS *olist* ],
		  ROOT na ] ] ].

vp ($vform=vform) :=
  [ LOCAL local &
	  [ CONJ cnil,
	    CAT [ HEAD verbal & strict_head &
		     [ VFORM $vform,
		       INV - ],
		  VALENCE [ SUBJ < synsem >,
			    COMPS *olist* ] ] ] ].
pp () := synsem &
  [ LOCAL local &
	  [ CAT [ HEAD prep & [ PRD - ],
		  VALENCE [ SPR *olist*,
			    COMPS *olist* ],
		  ROOT na ] ] ].

:end :template.
