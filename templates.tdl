;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  Macro definitions
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:begin :template.

;; DPF (30-Apr-98) In satp, SUBJ must be < >, not *olist*, since we need to
;; have SUBJ < > unify with the filler in filler_head phrases, and the filler is
;; constrained to be SUBJ *prolist* which has a distinct synsem type (pro_ss)
;; which is constrained to be [OPT -].

;; DPF 27-May-99 - Having eliminated the need for *prolist* to be OPT -, we
;; can now make SATP require SUBJ to be *olist* rather than < >, which means
;; verbal gerunds can have an optional SUBJ but still themselves be subjects
;; or complements.

satp ($head=head) := synsem &
  [ LOCAL local_basic &
	  [ CONJ cnil,
	    CAT [ HEAD $head &
		       [ MOOD ind_or_mod_subj ],
		  VAL [ SUBJ *olist*,
			COMPS *olist*,
			SPR *olist* ] ] ] ].

; cp complement has to be MOD empty to exclude relative clauses

; ERB (21-01-98) Moving MOD into HEAD... will create problems if this
; is to be used for CP[to] complements as well, as these will not
; be MOD < >.  Yet another problem is that to_c_prop must be
; MC na so that it can feed extrasubj.  I conclude that we do
; not want to use one macro for both CP[to] and CP[that].

; ERB (03-02-98) Selected CPs can no longer be MC - because subjh_decl
; has to be MC + in order to keep it from being the modifier in the
; head-mod construction.  So this macro is now changed to MC bool,
; INV -.
; 17-Jun-98 - Tried another solution making use of the fact that subj-head-decl 
; is MC bool, so the CP template can say MC -.  This will (desirably) block
; the subj-head version of "who sleeps" to be the CP complement of "persuades".

cp ($vform=vform) := synsem & @satp($head=verbal) &		     
  [ LOCAL.CAT [ HEAD [ VFORM $vform,
		       INV - ],
		MC - ] ].

; DPF (28-Jul-98) Added MOD < > to exclude non-finite relative clauses, which
; are otherwise not distinguishable from nomp's.  Maybe also needed to exclude 
; the second (modifier) entries for temporal NPs like "Tuesday".
;
; DPF 27-May-99 - Changed [MC na] in NOMP to [MC na_or_-] to allow 
; acc-verbal-gerunds to be NP complements, even though they are built via the 
; head_subj rule.
;
; DPF 09-Jun-99 - Removed MOD < > (see above), since relative clauses are now
; all marked with non-empty REL, and because this constraint was falsely blocking
; "one to three pm" as an NP complement, because it has a non-empty MOD.

nomp ($cont=mrs) := @satp($head=nominal) &
  [ LOCAL [ CAT [ HEAD strict_type,
		  MC na_or_- ],
	    CONT $cont ] ].

; DPF (8-Jan-99) Added accusative and nominative subtypes of nomp, since 
; nominative ones are not 'mobile' - see fundamentals.tdl

nomp_acc ($cont=mrs) := @nomp() &
  [ LOCAL [ CAT.HEAD mobile & [ CASE acc ],
	    CONT $cont ] ].

nomp_nom ($cont=mrs) := @nomp() &
  [ LOCAL [ CAT.HEAD.CASE nom,
	    CONT $cont ] ].

third-sg-np ( ) := @nomp ( ) & 
  [ LOCAL.CONT.INDEX.PNG 3sg ].

prd ($subj=synsem) :=
  [ LOCAL local_basic &
	  [ CAT [ HEAD [ PRD + ],
		  VAL [ SUBJ < $subj >,
			    SPR *olist*,
			    COMPS *olist* ],
		  MC na ] ] ].

vp ($vform=vform) :=
  [ LOCAL local_basic &
	  [ CONJ cnil,
	    CAT [ HEAD verbal & strict_type &
		     [ VFORM $vform,
		       INV - ],
		  VAL [ SUBJ < synsem >,
			COMPS *olist* ] ] ] ].
pp () := synsem &
  [ LOCAL local_basic &
	  [ CAT [ HEAD prep & [ PRD - ],
		  VAL [ SPR *olist*,
			COMPS *olist* ],
		  MC na ] ] ].

:end :template.
