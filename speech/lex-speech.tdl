and_root_post := av_-_s-cp-mc-po_le &
 [ ORTH < "and" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_and_c_rel",
            PUNCT.PAIRED no_ppair,
            PHON.ONSET voc ] ].

or_root_post := av_-_s-cp-mc-po_le &
 [ ORTH < "or" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_or_c_rel",
            PHON.ONSET voc ] ].

reject_root_post := av_-_s-cp-mc-po_le &
 [ ORTH < "@reject@" >,
   SYNSEM [ LKEYS.KEYREL.PRED "reject_x_1_rel",
            PHON.ONSET con ] ].

delete_root_pre := av_-_dc-spch-pr_le &
 [ ORTH < "*delete*" >,
   SYNSEM [ LKEYS.KEYREL.PRED "delete_x_1_rel",
            PHON.ONSET con ] ].

delete_sp_fill := av_-_spfill_le &
 [ ORTH < "*delete*" >,
   SYNSEM [ LKEYS.KEYREL.CARG "delete",
            PHON.ONSET con ] ].

them_abb1 := n_-_pr-them_le &
 [ ORTH < "'em" >,
   SYNSEM.PHON.ONSET con ].

them_abb2 := n_-_pr-them_le &
 [ ORTH < "em" >,
   SYNSEM.PHON.ONSET con ].

uhf_disc_adv := av_-_dc-like-pr_le &
 [ ORTH < "uhf" >,
   SYNSEM [ LKEYS.KEYREL.CARG "uhf",
            PHON.ONSET con_or_voc ] ].

the_8_mal := d_-_the-mal_le &
 [ ORTH < "the-", "the" >,
   SYNSEM [ LKEYS.KEYREL.PRED _the_q_rel,
            PHON.ONSET con ] ].

yeah_disc_adv := av_-_dc-like-pr_le &
 [ ORTH < "yeah" >,
   SYNSEM [ LKEYS.KEYREL.CARG "yeah",
            PHON.ONSET con ] ].

oh_disc_adv := av_-_dc-like-pr_le &
 [ ORTH < "oh" >,
   SYNSEM [ LKEYS.KEYREL.CARG "oh",
            PHON.ONSET con ] ].

okay_disc_adv := av_-_dc-like-pr_le &
 [ ORTH < "okay" >,
   SYNSEM [ LKEYS.KEYREL.CARG "okay",
            PHON.ONSET voc ] ].

mkay_disc_adv := av_-_dc-like-pr_le &
 [ ORTH < "mkay" >,
   SYNSEM [ LKEYS.KEYREL.CARG "mkay",
            PHON.ONSET con_or_voc ] ].

duh_disc_adv := av_-_dc-like-pr_le &
 [ ORTH < "duh" >,
   SYNSEM [ LKEYS.KEYREL.CARG "duh",
            PHON.ONSET con ] ].

er_disc_adv := av_-_dc-like-pr_le &
 [ ORTH < "er" >,
   SYNSEM [ LKEYS.KEYREL.CARG "er",
            PHON.ONSET voc ] ].

er_disc_adv_2 := av_-_s-cp-nsp-po_le &
 [ ORTH < "er" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_er_a_1_rel",
            PHON.ONSET voc ] ].

yah_root_post := av_-_s-cp-nsp-po_le &
 [ ORTH < "yah" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_yah_a_1_rel",
            PHON.ONSET con ] ].

yah_root_pre := av_-_s-cp-mc-pr_le &
 [ ORTH < "yah" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_yah_a_1_rel",
            PHON.ONSET con ] ].

;;; Block the following entries in lexicon.tdl:
keep_n1 := never_unify_le.
box_v1 := never_unify_le.
fill_v2 := never_unify_le.
fill_n1 := never_unify_le.
minute_a1 := never_unify_le.
go_n1 := never_unify_le.
turn_around_n1 := never_unify_le.
oklahoma_n2  := never_unify_le.

;;; Allow use of `cancel' with base VP, as in `cancel keep lights off'
cancel_rbst_v2 := v_vp_seq-bse_le &
 [ ORTH < "cancel" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_cancel_v_1_rel",
            PHON.ONSET con ] ].

; Block `left' and `right' in compounds
left_n1 := n_-_c-nochd_le &
 [ ORTH < "left" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_left_n_1_rel",
            PHON.ONSET con ] ].

right_n1 := n_-_c-nochd_le &
 [ ORTH < "right" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_right_n_1_rel",
            PHON.ONSET con ] ].



; Block noun `turn' as robust bare singular
turn_n1 := n_pp_c-of_le &
 [ ORTH < "turn" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_turn_n_of_rel",
            LOCAL.CAT.HEAD.--BARE -,
            PHON.ONSET con ] ].

; Block plural use of noun 'look'

look_n1 := n_-_c-sg_le &
 [ ORTH < "look" >,
   SYNSEM [ LKEYS [ --COMPKEY _at_p_sel_rel,
                    KEYREL.PRED "_look_n_at_rel" ],
            PHON.ONSET con ] ].

; Add left and right prenominal adjectives

left_a1 := aj_-_i-att_le &
 [ ORTH < "left" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_left_a_1_rel",
            PHON.ONSET con ] ].

right_a1 := aj_-_i-att_le &
 [ ORTH < "right" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_right_a_1_rel",
            PHON.ONSET con ] ].

; Block compounds with "pick" as left member

pick_n1 := n_-_c-nocnh_le &
 [ ORTH < "pick" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pick_n_of_rel",
            PHON.ONSET con ] ].


