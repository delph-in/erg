alts :+ [ PLMASS bool ].

;; For robust plural of mass nouns
;;
lex_rule_plural_mass := lex_rule_basic & word_or_infl_rule &
  [ INFLECTD +,
    KEY-ARG #keyarg,   
    SYNSEM mass_or_count_synsem &
	   [ LOCAL [ CAT #cat & [ HEAD noun_or_ttl & [ --BARE - ],
				  VAL.SPR < synsem &
					    [ LOCAL.AGR [ PNG.PN 3p,
							  DIV + ] ] > ],
		     CONT #cont,
		     CONJ #conj,
		     CTXT #ctxt,
		     ARG-S #arg-s ],
	     NONLOC #nonloc,
	     OPT #opt,
	     --MIN #min,
	     --SIND #sind,
	     LEX #lex,
	     MODIFD #modifd,
	     PHON #phon,
	     PUNCT #punct,
	     LKEYS #lkeys ],
    ARGS < #dtr >,
    DTR #dtr & [ INFLECTD -,
                 KEY-ARG #keyarg,   
		 ALTS.PLMASS +,
                 SYNSEM basic_mass_noun_synsem &
			[ LOCAL [ CAT #cat,
				  CONT #cont,
				  CONJ #conj,
				  CTXT #ctxt,
				  AGR [ PNG.PN 3s,
					DIV + ],
				  ARG-S #arg-s ],
			  NONLOC #nonloc,
			  OPT #opt,
			  --MIN #min,
			  --SIND #sind,
			  LEX #lex,
			  MODIFD #modifd,
			  PHON #phon,
			  PUNCT #punct,
			  LKEYS #lkeys ] ],
    C-CONT.RELS <! !>,
    GENRE robust ].

; Add feature for blocking mal-3sg and mal-n3sg
;
vc_add :+ [ --MAL3SG bool,
            --MALN3SG bool ].

;; |this cats|
mal_det_pl_le := det_pl_lexent &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CAt.HEAD.--BARE -,
    GENRE robust ].

;; |X permits to Y|
v_vp_seq_le_rbst := main_verb & 
  [ SYNSEM subj_equi_verb,
    GENRE robust ].

; |She wants win.|
v_vp_seq-bse_le_rbst := main_verb_mliszt & 
  [ SYNSEM subj_equi_bse_verb,
    GENRE robust ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Missing |to| for raising verbs: |they tend win.|

ssr_bse_verb := verb_synsem & ssr_subst & bse_intrans_subst & basic_two_arg &
  [ LOCAL [ CAT.VAL [ SUBJ.FIRST.LOCAL.CONT.HOOK.LTOP #ltop,
		      KCMP.LOCAL.CONT.HOOK [ LTOP #chand ] ],
	    CONT [ HOOK [ LTOP #ltop ],
		   RELS <! #keyrel !>,
		   HCONS <! qeq &
			   [ HARG #arghand,
			     LARG #chand ] !>,
		   ICONS <! !> ] ],
    LKEYS.KEYREL arg1_relation & #keyrel & [ ARG1 handle & #arghand ] ].

ssr_bse_noimp_verb := ssr_bse_verb & 
  [ LOCAL.CAT.HEAD.VFORM fin_or_non_fin ].

v_vp_ssr-nimp_le_rbst := main_verb & 
  [ SYNSEM ssr_bse_noimp_verb,
    GENRE robust ].

;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; For e.g. "went the store"
;; Add COMPS..CASE acc to block v_mod rule for e.g. "went to visit her house"
v_np_pp_le_rbst := main_verb & 
  [ SYNSEM np_trans_verb &
     [ LOCAL.CAT [ VAL.COMPS < canonical_synsem &
			       [ OPT -,
				 LOCAL.CAT.HEAD noun &
				     [ --BARE -,
				       CASE acc ],
				 PUNCT.RPUNCT comma_or_clause_or_no_punct ] >]],
    GENRE robust ].

;; |we allow Kim arise|
v_np-vp_bse_le_rbst := main_verb_mliszt & 
  [ SYNSEM sorb_verb,
    GENRE robust ].
