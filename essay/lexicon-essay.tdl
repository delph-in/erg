make_xml_pn_sg := n_-_pn-sg_le &
 [ ORTH < "_MATH_" >,
   SYNSEM [ LKEYS.KEYREL.CARG "math-xml",
            PHON.ONSET con ] ].

math_xml_pn_pl := n_-_pn-pl_le &
 [ ORTH < "_MATH_" >,
   SYNSEM [ LKEYS.KEYREL.CARG "math-xml",
            PHON.ONSET con ] ].

math_xml_pn_pl2 := n_-_pn-pl_le &
 [ ORTH < "_MATH_s" >,
   SYNSEM [ LKEYS.KEYREL.CARG "math-xml",
            PHON.ONSET con ] ].

math_xml_pn_pl3 := n_-_pn-pl_le &
 [ ORTH < "_MATH_", "'s" >,
   SYNSEM [ LKEYS.KEYREL.CARG "math-xml",
            PHON.ONSET con ] ].

;; Needed to permit e.g. |3-step _MATH_|
math_xml_n1 := n_-_c-sg_le &
 [ ORTH < "_MATH_" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_math-xml_n_1_rel",
            LOCAL.CAT.HEAD.--BARE -,
            PHON.ONSET con ] ].

math_xml_cp_1 := x_-_generic-cp_le &
 [ ORTH < "_MATH_" >,
   SYNSEM.PHON.ONSET con ].

make_xml_pn := n_-_pn_le &
 [ ORTH < "_MATHDISP_" >,
   SYNSEM [ LKEYS.KEYREL.CARG "mathdisp-xml",
            PHON.ONSET con ] ].

make_xml_pn2 := n_-_pn_le &
 [ ORTH < "_MATHDISP_." >,
   SYNSEM [ LKEYS.KEYREL.CARG "mathdisp-xml",
            PHON.ONSET con ] ].

math_cdm_xml_pn := n_-_pn_le &
 [ ORTH < "_MATH_CDM" >,
   SYNSEM [ LKEYS.KEYREL.CARG "math_cdm-xml",
            PHON.ONSET con ] ].

cite_xml_pn_sg := n_-_pn-sg_le &
 [ ORTH < "_CITE_" >,
   SYNSEM [ LKEYS.KEYREL.CARG "cite-xml",
            PHON.ONSET con ] ].

cite_xml_pn_pl := n_-_pn-pl_le &
 [ ORTH < "_CITE_" >,
   SYNSEM [ LKEYS.KEYREL.CARG "cite-xml",
            PHON.ONSET con ] ].

ref_xml_pn := n_-_pn_le &
 [ ORTH < "_REF_" >,
   SYNSEM [ LKEYS.KEYREL.CARG "ref-xml",
            PHON.ONSET con ] ].

ref_xml_pn2 := n_-_pn_le &
 [ ORTH < "(_REF_)" >,
   SYNSEM [ LKEYS.KEYREL.CARG "ref-xml",
            PHON.ONSET con ] ].

refa_xml_pn := n_-_pn_le &
 [ ORTH < "(_REF_)a" >,
   SYNSEM [ LKEYS.KEYREL.CARG "refa-xml",
            PHON.ONSET con ] ].

refb_xml_pn := n_-_pn_le &
 [ ORTH < "(_REF_)b" >,
   SYNSEM [ LKEYS.KEYREL.CARG "refb-xml",
            PHON.ONSET con ] ].

;; |that cats|
this_det_rbst := mal_det_pl_le &
 [ ORTH < "this" >,
   SYNSEM [ LKEYS.KEYREL.PRED _these_q_dem_rel,
	    PHON.ONSET con ] ].

that_det_rbst := mal_det_pl_le &
 [ ORTH < "that" >,
   SYNSEM [ LKEYS.KEYREL.PRED _those_q_dem_rel,
	    PHON.ONSET con ] ].

;; Prevent use of robust n3sg inflection
less_than_v1 := v_np_ntr_le &
 [ ORTH < "<" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_less+than_a_1_rel",
            LOCAL.CAT.HEAD.--MAL3SG -,
            PHON.ONSET con ] ].

greater_than_v1 := v_np_ntr_le &
 [ ORTH < ">" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_greater+than_a_1_rel",
            LOCAL.CAT.HEAD.--MAL3SG -,
            PHON.ONSET con ] ].

;; Avoid spurious robust bare-NP, since also have mass noun variant
note_n1 := n_-_c_le &
 [ ORTH < "note" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_note_n_1_rel",
            LOCAL.CAT.HEAD.--BARE -,
            PHON.ONSET con ] ].

;; Avoid spurious bare-NP parse since this often appears as a title:
section_n1 := n_pp_c_le &
 [ ORTH < "section" >,
   SYNSEM [ LKEYS [ --COMPKEY _of_p_sel_rel,
                    KEYREL.PRED "_section_n_of_rel" ],
            LOCAL.CAT.HEAD.--BARE -,
            PHON.ONSET con ] ].

;; Spurious |of course|
course_n1 := n_pp_c-ns-of_le &
 [ ORTH < "course" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_course_n_of_rel",
            LOCAL.CAT.HEAD.--BARE -,
            PHON.ONSET con ] ].

