non_third_sg_fin_v_rbst :=
%suffix (!s !ss) (!ss !ssses) (ss sses) (!ty !ties) (ch ches) (sh shes) (x xes) (z zes)
lex_rule_infl_affixed &
[ GENRE robust,
  ND-AFF +,
  SYNSEM.LOCAL non_third_sg_fin_verb &
	[ CAT [ HEAD.--MALN3SG +,
		VAL.SUBJ < [ LOCAL.CAT.HEAD [ --BARE -,
					    MINORS.MIN nonpart_nom_rel ] ] > ]],
  RNAME mn3s ].

third_sg_fin_v_rbst := lex_rule_infl_affixed &
[ GENRE robust,
  ND-AFF -,
  ORTH #stem,
  DTR [ ORTH #stem,
	SYNSEM.LOCAL.CAT [ HEAD.--MAL3SG +,
	                   VAL.SUBJ < expressed_synsem &
				      [ LOCAL.AGR.PNG.PN 3s,
					PUNCT.RPUNCT no_punct ] > ] ],
  SYNSEM.LOCAL third_sg_fin_verb,
  RNAME m3s ].

;; Block proper nouns via MIN gen_nom_nbar_rel
plur_noun_irule_rbst := lex_rule_infl_affixed &
[ GENRE robust,
  ND-AFF -,
  ORTH #stem,
  SYNSEM.LOCAL.CAT.HEAD.--BARE +,
  DTR [ ORTH #stem,
	SYNSEM.LOCAL.CAT [ HEAD [ MINORS [ MIN gen_nom_nbar_rel,
	                                   ALTMIN impl_or_expl_q_rel ],
				  CASE nom ],
			   VAL.SPR < canonical_or_unexpressed &
				     [ --MIN def_or_demon_q_rel ] > ] ],
  SYNSEM.LOCAL plur_noun,
  RNAME mpln ].

;; For e.g. |informations|
;;
n_pl-mass_olr_rbst :=
%suffix (!s !ss) (!ss !ssses) (es eses) (ss sses) (!ty !ties) (ch ches) (sh shes) (x xes) (z zes)
lex_rule_plural_mass &
[ ND-AFF +,
  RNAME lplm ].

;; For wrong regular past inflection of irregular verbs (|buyed| for |bought|)
;;
v_pst_olr_rbst :=
%suffix (!( nevermatch)
v_pst_inflrule &
[ GENRE robust,
  ND-AFF +,
  SYNSEM.LOCAL past_or_subj_verb,
  RNAME lvptr ].

v_psp_olr_rbst :=
%suffix (!( nevermatch)
v_psp_inflrule &
[ GENRE robust,
  ND-AFF +,
  SYNSEM.LOCAL psp_verb,
  RNAME lvppr ].

v_pas_odlr_rbst := 
%suffix (!( nevermatch)
v_pas-norm_lexrule &
  [ GENRE robust,
    ND-AFF +,
    DTR.SYNSEM trans_subst &
               [ LOCAL [ CAT.VAL.COMPS [ FIRST [ LOCAL.CONT #objcont,
                                                 --SIND #objind,
                                                 NONLOC #ononloc ],
                                         REST #comps ] ],
                 LKEYS.KEYREL #keyrel ],
    SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ < [ LOCAL.CONT #objcont,
					  --SIND #objind,
					  NONLOC #ononloc ] >,
				 COMPS.REST #comps ] ],
                     CONT [ HOOK.XARG #objind ] ],
             LKEYS.KEYREL #keyrel ],
  RNAME lvpar ].

v_pas-p_odlr_rbst := 
%suffix (!( nevermatch)
prep_passive_verb_lr &
[ GENRE robust,
  ND-AFF +,
  RNAME lvper ].

v_pas-p-t_odlr_rbst := 
%suffix (!( nevermatch)
prep_passive_trans_verb_lr &
[ GENRE robust,
  ND-AFF +,
  RNAME lvpfr ].

v_pas-prt-t_odlr_rbst := 
%suffix (!( nevermatch)
prep_passive_ptcl_verb_lr &
[ GENRE robust,
  ND-AFF +,
  RNAME lvpgr ].

v_pas-dat_odlr_rbst := 
%suffix (!( nevermatch)
basic_passive_verb_lr &
  [ GENRE robust,
    ND-AFF +,
    DTR [ SYNSEM basic_ditrans_subst &
		 [ LOCAL [ CAT.VAL [ SUBJ < [ --SIND #subjind, 
					      NONLOC #snonloc ] >,
				     COMPS < [ LOCAL.CONT #objcont,
					       --SIND #objind,
					       NONLOC #ononloc ],
					     #npcomp > ] ],
		   LKEYS.KEYREL #keyrel ] ],
    SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ < [ LOCAL.CONT #objcont,
					  --SIND #objind,
					  NONLOC #ononloc ] >,
				 COMPS < #npcomp,
                                       synsem & 
                                       [ LOCAL local &
                                         [ CAT [ HEAD prep & 
                                                   [ MINORS.MIN _by_p_cm_rel ],
                                                 VAL [ SUBJ < >,
                                                       SPR *olist*,
                                                       COMPS < > ] ],
                                           CONT.HOOK.INDEX #subjind ],
                                         NONLOC #snonloc,
                                         OPT + ] > ] ],
		     CONT [ HOOK.XARG #objind ] ],
             LKEYS.KEYREL #keyrel ],
  RNAME lvdpr ].

v_pas-cp_odlr_rbst := 
%suffix (!( nevermatch)
v_pas-cp_lexrule &
  [ GENRE robust,
    ND-AFF +,
    DTR.SYNSEM cp_passivable_verb &
               [ LOCAL.CAT.VAL [ COMPS #comps,
                                 KCMP #kcmp ] ],
    SYNSEM passive_atrans_synsem &
           [ LOCAL.CAT [ VAL [ COMPS.REST #comps,
			       KCMP #kcmp ] ] ],
    RNAME lvcpr ].

v_prp_olr_rbst :=
%suffix (!( nevermatch)
v_prp_inflrule &
[ GENRE robust,
  ND-AFF +,
  SYNSEM.LOCAL prp_verb,
  RNAME lvprr ].

v_3s-fin_olr_rbst :=
%suffix (!( nevermatch)
v_3s-fin_inflrule &
[ GENRE robust,
  ND-AFF +,
  SYNSEM.LOCAL third_sg_fin_verb,
  RNAME lvsgr ].

;; Too much ambiguity
v_cp-frag_dlr := never_unify_le.

;; Only for AESW task
#|
;; Identify comma-marked subjects, etc.
w_comma-nf_plr :=
%suffix (!. !.,)
punctuation_comma_informal_rule &
 [ GENRE robust,
   RNAME lpcr ].
|#

;; Ignore |leavin'|
v_prp-nf_olr := never_unify_le.

;; For |kim is eager admire Browne|
j_vp_bse_dlr_rbst := adj_vp_bse_mal_lr &
  [ RNAME ljvb ].

;; Adjective to adverb but missing -ly suffix, as in
;; |we quick left|
j_r-i_dlr_rbst := adj_to_adv_lr &
  [ ORTH #orth,
    ND-AFF -,
    DTR [ ORTH #orth,
          SYNSEM.LOCAL.CAT [ HEAD [ MOD < synsem & [ LOCAL int_mod_local ] >,
	                            PRD + ],
			     VAL.COMPS *olist* ] ],
    SYNSEM basic_intersect_adverb_synsem &
           [ LOCAL [ CAT [ HEAD.MOD.FIRST.LOCAL.CAT.HEAD v_or_g_or_a,
			   VAL [ SUBJ < >,
			         SPR < [ LOCAL.CAT.HEAD adv ] >,
			         COMPS < >,
			         SPEC < > ] ],
		     CONT [ HCONS <! !>,
			    ICONS <! !> ] ],
	     LKEYS.KEYREL.ARG1 #index & event ],
    C-CONT.RELS <! !>,
    GENRE robust,
    RNAME ljri ].

;; Wrong use of present participle for tensed verb:
;; |He shopping yesterday.|
v_past-ing_olr_rbst :=
%suffix (* ing) (!t!v!c !t!v!c!cing) (e ing) (ee eeing) (ie ying)
v_pst_inflrule &
[ GENRE robust,
  ND-AFF +,
  SYNSEM.LOCAL past_or_subj_verb,
  RNAME lvptr ].

p_j-for_dlr_rbst := prep_informal_lr &
  [ RNAME lpjr,
    DTR.SYNSEM.LKEYS.KEYREL.CARG "4",
    GENRE robust ].

p_j-to_dlr_rbst := prep_informal_lr &
  [ RNAME lpjr,
    DTR.SYNSEM.LKEYS.KEYREL.CARG "2",
    GENRE robust ].
