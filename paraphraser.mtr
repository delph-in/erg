;;; Hey, emacs(1), this is -*- Mode: TDL; Package: LKB; -*- got it?

look+up := monotonic_mtr &
[ INPUT.RELS <! [ PRED "_look_v_up_rel", LBL #h1, 
                  ARG0 #e2, ARG1 #x3, ARG2 #x4, ARG3 #x5, ARG4 #x6 ],
                [ PRED _up_p_sel_rel, LBL #h1, ARG1 #e2, ARG2 #x4 ] !>,
  OUTPUT.RELS <! [ PRED "_find_v_1_rel", LBL #h1, 
                   ARG0 #e2, ARG1 #x3, ARG2 #x4, ARG3 #x5, ARG4 #x6 ] !> ].


;;;
;;; _fix_me_
;;; really, given what we know about the grammar, matching on the HCONS for the
;;; `bare_div' quantifier is, let's say, superfluous (to put it mildly), but to
;;; have at least one example showing off some of the transfer capabilities.
;;;
take+advantage := monotonic_mtr &
[ INPUT [ RELS <! [ PRED "_take_v_adv_rel", LBL #h1,
                    ARG0 #e2, ARG1 #x3, ARG2 #x4, ARG3 #x5 ],
                  [ PRED bare_div_q_rel, ARG0 #x4, RSTR #h6 ],
                  [ PRED _advantage_n_i_rel, LBL #h7, ARG0 #x4 ],
                  [ PRED _of_p_sel_rel, LBL #h1, ARG0 event, ARG2 #x5 ] !>,
          HCONS <! qeq & [ HARG #h6, LARG #h7 ] !> ],
  OUTPUT.RELS <! [ PRED "_benefit_v_from_rel", LBL #h1,
                    ARG0 #e2, ARG1 #x3, ARG2 #x5 ],
                  [ PRED _from_p_sel_rel, LBL #h1, 
                    ARG0 event & [ E.TENSE nontense ], ARG2 #x5 ] !> ].


