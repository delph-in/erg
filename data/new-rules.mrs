;;; take advantage of new condition code

arbitrary_quantifier_restriction_rule1 := mrs_rule &
 [ INPUT [ LISZT <! ^c20 & 
                   [ HANDEL #h1,
                     BV #x2,
                     RESTR #h3,
                     SCOPE #h5,
                     DIM #v10 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h1,#h4 !> ] !> ],
  OUTPUT [ LISZT <! ^c20 &
                   [ HANDEL #h1,
                     BV #x2,
                     RESTR #h4,
                     SCOPE #h5,
                     DIM #v10 ] !>,
           H-CONS <! !> ] ] .

arbitrary_quantifier_restriction_rule2 := mrs_rule &
 [ INPUT [ LISZT <! ^c20 & 
                   [ HANDEL #h1,
                     BV #x2,
                     RESTR #h3,
		     SCOPE #h6,
                     DIM #v10 ],
		    ^c21 &
                   [ HANDEL #h5,
                     BV #x12,
                     RESTR #h14,
                     SCOPE #h15,
                     DIM #v20 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h1,#h5,#h4 !> ] !> ],
  OUTPUT [ LISZT <! ^c20 &
                   [ HANDEL #h1,
                     BV #x2,
                     RESTR #h4,
                     SCOPE #h6,
                     DIM #v10 ],
		    ^c21 &
                   [ HANDEL #h5,
                     BV #x12,
                     RESTR #h14,
                     SCOPE #h15,
                     DIM #v20 ] !>,
           H-CONS <! !> ] ] .

dofm_rule := mrs_rule &
 [ INPUT.LISZT <! dofm_rel &
		 [ HANDEL #h1,
	           INST #i2,
		   DAY ^c20 ] !>,
  OUTPUT.LISZT <! abstr_nom_rel &
                 [ HANDEL #h1,
		   INST #i2 ],
		  ord_rel &
		 [ HANDEL #h1,
		   ARG #i2,
		   ORD ^c20 ] !> ]. 


get_somewhere_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
		   EVENT #x2,
		   ARG2 #x3,
		   ARG3 #x4 ],
		  support_rel &
		 [ HANDEL #h1,
		   EVENT #x3 ] !>,
  OUTPUT.LISZT <! _get_somewhere_rel &
                 [ HANDEL #h1,
		   EVENT #x2,
		   ARG1 #x4 ] !> ].

get_together_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _together_rel &
                 [ ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_together_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_back_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _back_adv_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_back_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_back_together_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
		  _back_adv_rel &
		 [ HANDEL #h7,
                   ARG #e3 ],
                  _together_rel &
                 [ HANDEL #h1,
		   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_together_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG1 #x3 ],
		  _back_adv_rel &
		 [ HANDEL #h1,
		   ARG #e3 ] !> ] .

get_away_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _away_adv_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_away_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_down_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _down_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_down_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_off_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _off_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_off_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_out_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _out_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_out_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_over_with_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _over_with_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_over_with_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_started_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _started_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_started_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

get_up_rule := mrs_rule &
 [ INPUT.LISZT <! _get_state_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
                   ARG3 #x3,
                   ARG2 #e4 ],          
                  support_rel &
                 [ HANDEL #h1,
                   EVENT #e4 ],
                  _up_rel &
                 [ HANDEL #h1,
                   ARG #x3 ] !>,
  OUTPUT.LISZT <!  _get_up_rel &
                   [ HANDEL #h1,
                     EVENT #e2,
                     ARG1 #x3 ] !> ] .

abstr_e_rule := mrs_rule &
 [ INPUT.LISZT <! abstr_e_rel &
                 [ HANDEL #h1,
                   EVENT #e2 ] !>,

  OUTPUT.LISZT <! abstr_rel &
                 [ HANDEL #h1,
                   EVENT #e2 ] !> ].

prop_to_prop_rule := mrs_rule &
 [ INPUT.LISZT <! adj_rel &
		 [ HANDEL #h0,
	           ARG #i1 ],
		  support_rel &
	         [ HANDEL #h2,
		   EVENT #e4 ],
                  prpstn_to_prop_rel &
                 [ HANDEL #h2,
                   PRPSTN #h0,
		   PROP #i3 ] !>,
  OUTPUT.LISZT <! abstr_apply &
                 [ HANDEL #h2,
                   PROP #i3,
                   EVENT #e4 ] !> ].

excl_okay_rule := mrs_rule &
 [ INPUT [ LISZT <! excl_rel &
		  [ HANDEL #h1,
		    EXCL 'okay ] !> ],
  OUTPUT [ LISZT <! _okay_accept_rel &
		  [ HANDEL #h1,
		    ARG event ] !> ] ].

excl_well_rule := mrs_rule &
 [ INPUT [ LISZT <! excl_rel &
		  [ HANDEL #h1,
		    EXCL 'well ] !> ],
  OUTPUT [ LISZT <! _well_rel &
		  [ HANDEL #h1,
		    ARG event ] !> ] ].

excl_but_rule := mrs_rule &
 [ INPUT.LISZT <! excl_rel &
		  [ HANDEL #h1,
                    EXCL 'but ],
		  abstr_e_rel &
		  [ HANDEL #h2,
		    EVENT #e3 ] !>,
  OUTPUT.LISZT <! _but_rel &
		  [ HANDEL #h1,
		    C-ARG event_or_index,
		    C-HANDELS *diff-list* & <! #h2 !>,
		    C-INDICES *diff-list* & <! #e3 !> ],
		  abstr_rel &
		  [ HANDEL #h2 & handle,
		    EVENT #e3 ] !> ].

excl_great_rule := mrs_rule &
 [ INPUT [ LISZT <! excl_rel &
		  [ HANDEL #h1,
		    EXCL 'great ] !> ],
  OUTPUT [ LISZT <! _great_rel &
		  [ HANDEL #h1,
		    ARG event ] !> ] ].

excl_please_rule := mrs_rule &
 [ INPUT [ LISZT <! excl_rel &
		  [ HANDEL #h1,
		    EXCL 'please ] !> ],
  OUTPUT [ LISZT <! _please_adv_rel &
		  [ HANDEL #h1,
		    ARG event ] !> ] ].

excl_fine_rule := mrs_rule &
 [ INPUT [ LISZT <! excl_rel &
		  [ HANDEL #h1,
		    EXCL 'fine ] !> ],
  OUTPUT [ LISZT <! _fine_rel &
		  [ HANDEL #h1,
		    ARG event ] !> ] ].

excl_then_rule := mrs_rule &
 [ INPUT [ LISZT <! excl_rel &
		  [ HANDEL #h1,
		    EXCL 'then ] !> ],
  OUTPUT [ LISZT <! _then_temp_rel &
		  [ HANDEL #h1,
		    ARG event ] !> ] ].

def_afternoon_rule := mrs_rule &
 [ INPUT.LISZT <! _def_afternoon_rel &
		  [ HANDEL #h1,
                    INST #i1 ] !>,
   OUTPUT.LISZT <! _afternoon_rel &
		  [ HANDEL #h1,
                    INST #i1 ] !> ].

def_morning_rule := mrs_rule &
 [ INPUT.LISZT <! _def_morning_rel &
		  [ HANDEL #h1,
                    INST #i1 ] !>,
   OUTPUT.LISZT <! _morning_rel &
		  [ HANDEL #h1,
                    INST #i1 ] !> ].

like_v_rule := mrs_rule &
 [ INPUT.LISZT <! _like_obj_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
		   ARG2 #x3,
		   ARG3 #x4 ] !>,
  OUTPUT.LISZT <! _like_rel &
                 [ HANDEL #h1,
                   EVENT #e2,
		   ARG1 #x3,
		   ARG3 #x4 ] !> ].

today_rule := mrs_rule &
 [ INPUT.LISZT <! _today_nom_rel &
                 [ HANDEL #h1,
		   INST #x1 ] !>,
  OUTPUT.LISZT <! _today_rel &
                 [ HANDEL #h1,
		   ARG #x1 ] !> ].

impossible_rule := mrs_rule &
 [ INPUT.LISZT <! _impossible2_rel &
                 [ HANDEL #h1,
		   EVENT #x2,
		   ARG3 #x3 ] !>,
  OUTPUT.LISZT <! _impossible_rel &
                 [ HANDEL #h1,
		   EVENT #x2,
		   ARG3 #x3 ] !> ].

dinner_rule := mrs_rule &
 [ INPUT.LISZT <! _dinner_time_rel &
                 [ HANDEL #h1,
		   INST #x1 ] !>,
  OUTPUT.LISZT <! _dinner_rel &
                 [ HANDEL #h1,
		   INST #x1 ] !> ].

last_rule := mrs_rule &
 [ INPUT.LISZT <! _last_adj_rel &
                 [ HANDEL #h1,
		   ARG #x1 ] !>,
  OUTPUT.LISZT <! _last_adv_rel &
                 [ HANDEL #h1,
		   INST #x1 ] !> ].

here_rule := mrs_rule &
 [ INPUT.LISZT <! _here_nom_rel &
                 [ HANDEL #h1,
		   INST #x1 ] !>,
  OUTPUT.LISZT <! _here_rel &
                 [ HANDEL #h1,
		   ARG #x1 ] !> ].

adj_noun_restriction_rule1 := mrs_rule &
 [ INPUT [ LISZT <! ^c21 &
	           [ HANDEL #h2,
		     ARG #x1 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h2 !> ] !> ],
  LCONDITION [ LISZT <! 
                   [ HANDEL #h1,
		     INST #x1 ] !>,            
               H-CONS <! [ SC-ARG #h3,
                           CANDS <! #h4,#h1 !> ] !> ],
  OUTPUT [ LISZT <! ^c21 &
	           [ HANDEL #h1,
		     ARG #x1 ] !>,
           H-CONS <! !> ] ].

prep_noun_restriction_rule1 := mrs_rule &
 [ INPUT [ LISZT <! ^c21 &
	           [ HANDEL #h2,
		     ARG #x1,
		     PREP #x5 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! handle,#h2 !> ] !> ],
  LCONDITION [ LISZT <! 
                   [ HANDEL #h1,
		     INST #x1 ] !>,
               H-CONS <! [ SC-ARG #h3,
                           CANDS <! #h4,#h1 !> ] !> ],
  OUTPUT [ LISZT <! ^c21 &
	           [ HANDEL #h1,
		     ARG #x1,
		     PREP #x5 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h4,#h1 !> ] !> ] ].

int_adj_noun_restriction_rule1 := mrs_rule &
 [ INPUT [ LISZT <! ^c21 &
	           [ HANDEL #h2,
		     ARG #x1,
		     TERM1 #h5,
		     TERM2 #h6 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h2 !> ] !> ],
  LCONDITION [ LISZT <! 
                   [ HANDEL #h1,
		     INST #x1 ] !>,
               H-CONS <! [ SC-ARG #h3,
                           CANDS <! #h4,#h1 !> ] !> ],
  OUTPUT [ LISZT <! ^c21 &
	           [ HANDEL #h1,
		     ARG #x1,
		     TERM1 #h5,
		     TERM2 #h6 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h4,#h1 !> ] !> ] ].

const_adj_noun_restriction_rule1 := mrs_rule &
 [ INPUT [ LISZT <! ^c21 &
	           [ HANDEL #h2,
		     ARG #x1,
		     CONST_VALUE ^c22 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h2 !> ] !> ],
  LCONDITION [ LISZT <! 
                   [ HANDEL #h1,
		     INST #x1 ] !>,
               H-CONS <! [ SC-ARG #h3,
                           CANDS <! #h4,#h1 !> ] !> ],
  OUTPUT [ LISZT <! ^c21 &
	           [ HANDEL #h1,
		     ARG #x1,
		     CONST_VALUE ^c22 ] !>,
           H-CONS <! [ SC-ARG #h3,
                       CANDS <! #h4,#h1 !> ] !> ] ].

id_cop_rule := mrs_rule &
 [ INPUT.LISZT <! _equal_id_rel &
                 [ HANDEL #h1,
		   EVENT #e4,
		   ARG #x2,
		   ARG3 #x3 ] !>,
  OUTPUT.LISZT <! _cop_id_rel &
		 [ HANDEL #h1,
		   EVENT #e4 ],
		  _equal_adj_rel &
                 [ HANDEL #h1,
		   ARG #x2 ],
		  _equal_adj_rel &	
                 [ HANDEL #h1,
		   ARG #x3 ] !> ].

