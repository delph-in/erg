;;; -*- Mode: tdl; Coding: utf-8; -*-
;;;
;;;  Copyright Emily M. Bender 2003-2005
;;;  All Rights Reserved.
;;;  No use or redistribution without permission.
;;;
;;;  mal-lex.tdl
;;;
;;;  mal lex entries for Arboretum project.
;;;

; Underspecified determiner for repairing bare singular
; NPs in generation.  Note the special KEY.

a_or_the_det := det_sg_nomod_le &
  [ ORTH < "a/the" >,
    SYNSEM.LKEYS.KEYREL.PRED mal_bare_div_q_rel ].

; Mal lex entry for "allow" taking a CP complement
; with gerund meaning.

allow_v_mal := mal_v_inf_cp_comp_le &
  [ ORTH < "allow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allow_v_1_rel" ].

; "I want arrive"

want_v_mal := mal_v_subj_equi_le &
  [ ORTH < "want" >,
    SYNSEM.LKEYS.KEYREL.PRED "_want_v_1_rel" ].

; Inflected forms of do

does1_neg_1_mal := mal_va_doesnt_neg_pres_le &
 [ ORTH < "don't" > ].

does1_neg_2_mal := mal_va_doesnt_neg_pres_le &
 [ ORTH < "don", "'t" > ].

does1_pos_mal := mal_va_does_le &
 [ ORTH < "do" > ].

do1_neg_1_mal := mal_va_dont_neg_pres_le &
 [ ORTH < "doesn't" > ].

do1_neg_2_mal := mal_va_dont_neg_pres_le &
 [ ORTH < "doesn", "'t" > ].

do1_pos_mal := mal_va_do_fin_le &
 [ ORTH < "does" > ].

has_aux_mal := mal_va_has_le &
 [ ORTH < "have" > ].

have_fin_aux_mal := mal_va_have_fin_le &
 [ ORTH < "has" > ].

be_th_cop_is_mal := mal_vc_there_is_le &
 [ ORTH < "is" > ].

be_th_cop_are_mal := mal_vc_there_are_le &
 [ ORTH < "are" > ].

be_c_is_mal := mal_vc_prd_is_le &
 [ ORTH < "is" > ].

be_c_are_mal := mal_vc_prd_are_le &
 [ ORTH < "are" > ].

; For extraneous determiner
an_some_mal := mal_det_div_le &
 [ ORTH < "an" >,
   SYNSEM.LKEYS.KEYREL.PRED _some_q_rel ].

a_some_mal := mal_det_div_le &
 [ ORTH < "a" >,
   SYNSEM.LKEYS.KEYREL.PRED _some_q_rel ].

they+that_mal := mal_n_deictic_pro_le &
 [ ORTH < "they/that" >,
   SYNSEM.LKEYS.ALTKEYREL.PRED _they+that_q_mal_rel ].

that_det_mal := mal_det_pl_le &
 [ ORTH < "that" >,
   SYNSEM.LKEYS.KEYREL.PRED _those_q_dem_rel ].

this_det_mal := mal_det_pl_le &
 [ ORTH < "this" >,
   SYNSEM.LKEYS.KEYREL.PRED _these_q_dem_rel ].

people_n1_mal := mal_n_plur_ppcomp_le &
 [ ORTH < "peoples" >,
   SYNSEM.LKEYS [ --COMPKEY _of_p_sel_rel,
                    KEYREL.PRED "_people_n_rel" ] ].

