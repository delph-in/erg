;;; -*- Mode: TDL; Package: DISCO -*-
;;;
;;;  Copyright (c) 1994-2004
;;;    Dan Flickinger, Rob Malouf, Emily M. Bender
;;;    see erg/licence.txt for conditions
;;;
;;;  parsenodes.tdl
;;;
;;;  Parse node definitions to support node labels in printed parse trees
;;;
;;;  Created: Dan Flickinger 15-Aug-94
;;;
;;;  $Id$

;;; AAC - for the LKB, the order of definitions in the file is significant
;;; because the definitions are tried in order until one matches.
;;; This replaces the functionality of the variable *node-labels*
;;; in the PAGE machinery



slash := meta &
  [ SYNSEM.NON-LOCAL.SLASH 1-dlist &
			   [ LIST < local_basic > ],
    META-PREFIX "/",
    META-SUFFIX "" ].

conj-s := label &
  [ SYNSEM synsem &
	   [ LOCAL [ CAT.VAL.COMPS *cons*,
                     ARG-S *cons*,
		     CONJ strict-conj &
                          [ CHEAD.LEFT.FIRST cnil ] ] ],
    INFLECTED +,
    LABEL-NAME "CONJ" ].

conj-c := label &
  [ SYNSEM synsem &
	   [ LOCAL [ CAT.VAL.COMPS *cons*,
                     ARG-S *cons*,
		     CONJ strict-conj ] ],
    INFLECTED +,
    LABEL-NAME "CONJ-C" ].

comp := label &
  [ SYNSEM.LOCAL.CAT [ HEAD comp,
		       VAL.COMPS *cons* & [ FIRST.OPT -] ],
    LABEL-NAME "COMP" ].

;; Right half of conjoined VP
vp-conj :=  label &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb,
                         VAL [ SUBJ < synsem >,
                               COMPS < > ] ],
                   CONJ real-conj ],
    INFLECTED +,
    LABEL-NAME "VP-C" ].

; Passive VPs
vpp :=  label &
  [ SYNSEM.LOCAL.CAT [ HEAD verb &
                            [ VFORM pas ],
                       VAL [ SUBJ < synsem >,
                             COMPS < > ] ],
    INFLECTED +,
    LABEL-NAME "VPP" ].

; Pres-part VPs
vp-prp :=  label &
  [ SYNSEM.LOCAL.CAT [ HEAD verb &
                            [ VFORM prp ],
                       VAL [ SUBJ < synsem & [ OPT - ] >,
                             COMPS < > ] ],
    INFLECTED +,
    LABEL-NAME "VP" ].

vplex :=  label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verb & [ AUX +],
                           VAL [ SUBJ < synsem & [ OPT - ] >,
                                 COMPS < > ] ],
                     CONJ cnil ],
             LEX + ],
    INFLECTED +,
    LABEL-NAME "VP" ].


vp :=  label &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb,
                         VAL [ SUBJ < expressed_synsem & [ OPT - ] >,
                               COMPS < > ] ],

                   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "VP" ].

vp_nonfin :=  label &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb,
                         VAL [ SUBJ < unexpressed_reg >,
                               COMPS < > ] ],

                   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "VP" ].

v := label &
  [ SYNSEM.LOCAL.CAT [ HEAD verb,
		       VAL.COMPS *cons* ],
    INFLECTED +,
    LABEL-NAME "V" ].

tagaux := label &
  [ SYNSEM.LOCAL.CAT [ HEAD tagaux,
		       VAL.COMPS *cons* ],
    INFLECTED +,
    LABEL-NAME "V" ].

s-r := label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verbal,
                           VAL [ SUBJ < >,
                                 COMPS < > ] ],
                     CONT.MSG message  ],
             ROOT + ],
    LABEL-NAME "S" ].

s-r1 := label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verbal,
                           VAL [ SUBJ < anti_synsem >,
                                 COMPS < > ] ] ],
             ROOT + ],
    LABEL-NAME "S" ].

s1 := label &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb,
                         VAL [ SUBJ *olist*,
                               SPR *olist*,
                               COMPS < > ] ],
                   CONT.MSG message ],
    INFLECTED +,
    LABEL-NAME "S" ].

s2 := label &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb,
                         VAL [ SUBJ < unexpressed >,
                               SPR *olist*,
                               COMPS < > ] ],
                   CONT.MSG message  ],
    INFLECTED +,
    LABEL-NAME "S" ].

s1-c := label &
  [ SYNSEM.LOCAL [ CAT [ HEAD comp,
                         VAL [ SUBJ *olist*,
                               SPR *olist*,
                               COMPS < > ] ],
                   CONT.MSG message ],
    INFLECTED +,
    LABEL-NAME "S-COMP" ].

s-r2 := label &
  [ SYNSEM.LOCAL.CAT [ HEAD verbal,
                       VAL [ SUBJ < >,
                             COMPS < > ] ],
    LABEL-NAME "S" ].

; For title nouns like in "professor smith"
nt := label &
  [ SYNSEM.LOCAL.CAT.HEAD adv & [ MOD < [ LOCAL.CAT.hEAD noun ] > ],
    INFLECTED +,
    LABEL-NAME "N" ].

adv-dg := label &
  [ SYNSEM.LOCAL [ CAT.HEAD adv & [ MOD < > ],
		   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "ADV-DG" ].

adv1a := label &
  [ SYNSEM.LOCAL [ CAT [ HEAD basic_adv,
                         POSTHEAD + ],
		   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "ADV-PO" ].

adv1b := label &
  [ SYNSEM.LOCAL [ CAT [ HEAD basic_adv,
                         POSTHEAD - ],
		   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "ADV-PR" ].

adv1c := label &
  [ SYNSEM.LOCAL [ CAT.HEAD basic_adv,
		   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "ADV" ].

adv2 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD root-marker,
		   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "ADV-R" ].

adv3 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD detspec,
		   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "ADV-D" ].


adv4 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD basic_adv,
		   CONJ real-conj ],
    INFLECTED +,
    LABEL-NAME "ADV-C" ].

p-n := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD < > ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P" ].

p-i := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD < [ LOCAL intersective_mod ] > ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P" ].

p-s := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD < [ LOCAL scopal_mod ] > ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P-S" ].

pp-n :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD < > ],
			VAL.COMPS < > ], 
     LABEL-NAME "PP" ].

pp-i :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD < [ LOCAL intersective_mod ] > ],
			VAL.COMPS < > ], 
     LABEL-NAME "PP" ].

pp-s :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD < [ LOCAL scopal_mod ] > ],
			VAL.COMPS < > ], 
     LABEL-NAME "PP-S" ].

n := label &
  [ SYNSEM.LOCAL.CAT [ HEAD nominal,
		       VAL [ SPR < synsem &
                                   [ OPT - ] >,
                             COMPS < > ] ],
    INFLECTED +,
    LABEL-NAME "N" ].

nc := label &
  [ SYNSEM.LOCAL.CAT [ HEAD nominal,
		       VAL [ SPR < synsem &
                                   [ OPT - ] >,
                             COMPS < canonical_synsem, ... > ] ],
    INFLECTED +,
    LABEL-NAME "N" ].

nx := label &
  [ SYNSEM.LOCAL.CAT [ HEAD nominal,
		       VAL [ SPR < synsem &
                                   [ OPT - ] >,
                             COMPS < [ OPT - ], ... > ] ],
    INFLECTED +,
    LABEL-NAME "NX" ].

adj := label &
  [ SYNSEM.LOCAL.CAT [ HEAD adj,
                       VAL.COMPS < synsem, ... > ],
    INFLECTED +,
    LABEL-NAME "ADJ" ].

adjp := label &
  [ SYNSEM.LOCAL.CAT [ HEAD adj,
                       VAL.COMPS < > ],
    INFLECTED +,
    LABEL-NAME "AP" ].

numadj := label &
  [ SYNSEM.LOCAL.CAT.HEAD intadj,
    INFLECTED +,
    LABEL-NAME "ADJ" ].

supadj := label &
  [ SYNSEM.LOCAL.CAT.HEAD superl_adj,
    INFLECTED +,
    LABEL-NAME "ADJ" ].

vpinf := label &
  [ SYNSEM.LOCAL.CAT [ HEAD comp,
		       VAL.COMPS < > ],
    LABEL-NAME "VP" ].

np-conj :=  label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD nominal,
                           VAL [ SPR *olist* ] ],
                     CONJ real-conj ],
             NON-LOCAL.QUE 0-dlist ],
    INFLECTED +,
    LABEL-NAME "NP-CJ" ].

pp-np :=  label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD modnp,
                           VAL.COMPS < > ],
                     CONJ cnil ] ],
    INFLECTED +,
    LABEL-NAME "PP-NP" ].


npc :=  label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD nominal,
                           VAL [ SPR *olist*,
				 COMPS < canonical_synsem > ] ],
                     CONJ cnil ],
             NON-LOCAL.QUE 0-dlist ],
    INFLECTED +,
    LABEL-NAME "NP-C" ].

np-t :=  label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD nominal &
                                [ KEYS.KEY temp_abstr_rel ],
                           VAL [ SPR *olist* ] ],
                     CONJ cnil ],
             NON-LOCAL.QUE 0-dlist ],
    INFLECTED +,
    LABEL-NAME "NP-T" ].

np :=  label &
  [ SYNSEM [ LOCAL [ CAT [ HEAD nominal,
                           VAL [ SPR *olist* ] ],
                     CONT.HOOK.INDEX non_expl,
                     CONJ cnil ],
             NON-LOCAL.QUE 0-dlist ],
    INFLECTED +,
    LABEL-NAME "NP" ].

npx :=  label &
  [ SYNSEM.LOCAL [ CAT.HEAD nominal,
                   CONT.HOOK.INDEX expl-ind,
                   CONJ cnil ],
    INFLECTED +,
    LABEL-NAME "NP-X" ].

npp := label &
  [ SYNSEM.LOCAL.CAT [ HEAD nominal,
		       VAL.SPR < [ LOCAL.CAT.HEAD adv ] > ],
    INFLECTED +,
    LABEL-NAME "NP" ].

np-wh :=  label &
  [ SYNSEM [ LOCAL.CAT [ HEAD nominal,
                         VAL [ SPR *olist* ] ],
             NON-LOCAL.QUE 1-dlist ],
    INFLECTED +,
    LABEL-NAME "NP-WH" ].

np-rel :=  label &
  [ SYNSEM [ LOCAL.CAT [ HEAD nominal,
                         VAL [ SPR *olist* ] ],
             NON-LOCAL.REL 1-dlist ],
    INFLECTED +,
    LABEL-NAME "NP-R" ].

det := label &
  [ SYNSEM.LOCAL.CAT.HEAD det &
			  [ MOD < > ],
    LABEL-NAME "DET" ].

ladv := label &
  [ SYNSEM.LOCAL.CAT.HEAD basic_lexadv,
    LABEL-NAME "LADV" ].

prdp :=  label &
  [ SYNSEM.LOCAL.CAT [ HEAD.PRD +,
		       VAL.COMPS < > ],
    INFLECTED +,
    LABEL-NAME "XP" ].

punct := label &
  [ SYNSEM.LOCAL.CAT.HEAD punct,
    LABEL-NAME "PNCT" ].

frg := label &
  [ SYNSEM.ROOT +,
    INFLECTED +,
    LABEL-NAME "FRG" ].

nohead :=  label &
  [ SYNSEM.LOCAL.CAT.HEAD no_head,
    INFLECTED +,
    LABEL-NAME "XP" ].

stemlabel :=  label &
  [ INFLECTED -,
    LABEL-NAME "STEM" ].

