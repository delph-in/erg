;;; -*- Mode: TDL; Package: DISCO -*-
;;;
;;;  Copyright Daniel Flickinger 1994-1999
;;;  All Rights Reserved.
;;;  No use or redistribution without permission.
;;;
;;;  parsenodes.tdl
;;;
;;;  Parse node definitions to support node labels in printed parse trees
;;;
;;;  Created: Dan Flickinger 15-Aug-94
;;;
;;;  $Id$

;;; AAC - for the LKB, the order of definitions in the file is significant
;;; because the definitions are tried in order until one matches.
;;; This replaces the functionality of the variable *node-labels*
;;; in the PAGE machinery

:begin :instance.

slash := meta &
  [ SYNSEM.NON-LOCAL.SLASH 1-dlist &
			   [ LIST < local > ],
    META-PREFIX "/",
    META-SUFFIX "" ].

;;; labels
;; "CONJ" "S" "S-R" "ADV" "ADV-R" "ADV-D" "P-N" "P-I" "P-S" "PP-N" "PP-I" "PP-S" "N" "NP" "ADJ" "VP" "V" "DET" "COMP" "NEG" "XP"

conj := label &
  [ SYNSEM lex_synsem &
	   [ LOCAL [ CAT.VAL.COMPS *cons*,
		     CONJ strict-conj ] ],
    LABEL-NAME "CONJ" ].

s1 := label &
  [ SYNSEM.LOCAL.CAT [ HEAD verb,
		       VAL [ SUBJ *olist*,
			     SPR *olist*,
			     COMPS *olist* ] ],
    LABEL-NAME "S" ].

s1-c := label &
  [ SYNSEM.LOCAL.CAT [ HEAD comp,
		       VAL [ SUBJ *olist*,
			     SPR *olist*,
			     COMPS *olist* ] ],
    LABEL-NAME "S-COMP" ].

s2 := label &
  [ SYNSEM.LOCAL.CAT [ HEAD root-marker &
			    [ MOD < > ],
		       VAL [ SUBJ < >,
			     COMPS *olist* ] ],
    LABEL-NAME "S-R" ].

adv1 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD basic_adv,
		   CONJ cnil ],
    LABEL-NAME "ADV" ].

adv2 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD root-marker,
		   CONJ cnil ],
    LABEL-NAME "ADV-R" ].

adv3 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD detspec,
		   CONJ cnil ],
    LABEL-NAME "ADV-D" ].


p-n := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD < > ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P-N" ].

p-i := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD < [ LOCAL intersective_mod ] > ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P-I" ].

p-s := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD < [ LOCAL scopal_mod ] > ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P-S" ].

pp-n :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD < > ],
			VAL.COMPS *olist* ], 
     LABEL-NAME "PP-N" ].

pp-i :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD < [ LOCAL intersective_mod ] > ],
			VAL.COMPS *olist* ], 
     LABEL-NAME "PP-I" ].

pp-s :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD < [ LOCAL scopal_mod ] > ],
			VAL.COMPS *olist* ], 
     LABEL-NAME "PP-S" ].

n := label &
  [ SYNSEM.LOCAL.CAT [ HEAD nominal & strict_type,
		       VAL.SPR < synsem &
                                 [ OPT - ] > ],
    LABEL-NAME "N" ].

#|
; Singular count nouns (avoid bare-plural rule)
n-c := label &
  [ SYNSEM.LOCAL [ CAT [ HEAD noun,
			 VAL.SPR < synsem > ],
		   CONT.INDEX [ PNG.PN 3sg,
				DIVISIBLE + ] ],
    LABEL-NAME "N-C" ].
|#

adj := label &
  [ SYNSEM.LOCAL.CAT.HEAD adj,
    LABEL-NAME "ADJ" ].

; Passive VPs
vpp :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD verb &
			     [ VFORM pas ],
			VAL [ SUBJ < synsem >,
			      COMPS *olist* ] ],
     LABEL-NAME "VPP" ].

vp :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD verb,
			VAL [ SUBJ < synsem >,
			      COMPS *olist* ] ],
     LABEL-NAME "VP" ].

v := label &
  [ SYNSEM.LOCAL.CAT [ HEAD verb & strict_type,
		       VAL.COMPS *cons* ],
    LABEL-NAME "V" ].

np :=  label &
  [ SYNSEM.LOCAL.CAT [ HEAD nominal & strict_type,
		       VAL [ SPR *olist* ] ],
    LABEL-NAME "NP" ].

det := label &
  [ SYNSEM.LOCAL.CAT.HEAD det &
			  [ MOD < > ],
    LABEL-NAME "DET" ].

comp := label &
  [ SYNSEM.LOCAL.CAT [ HEAD comp,
		       VAL.COMPS *cons* & [ FIRST.OPT -] ],
    LABEL-NAME "COMP" ].

ladv := label &
  [ SYNSEM.LOCAL.CAT.HEAD basic_lexadv,
    LABEL-NAME "LADV" ].

prdp :=  label &
  [ SYNSEM.LOCAL.CAT [ HEAD.PRD +,
		       VAL.SUBJ < synsem > ],
    LABEL-NAME "XP" ].

frg := label &
  [ ROOT +,
    LABEL-NAME "FRG" ].

nohead :=  label &
  [ SYNSEM.LOCAL.CAT.HEAD no_head,
    LABEL-NAME "XP" ].

#|
lbound := label &
  [ SYNSEM.LOCAL.CAT.HEAD punct,
    LABEL-NAME "B" ].
|#

:end :instance.

