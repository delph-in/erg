;;; -*- Mode: TDL; Package: DISCO -*-
;;;
;;;  parsenodes.tdl
;;;
;;;  Parse node definitions to support node labels in printed parse trees
;;;
;;;  Created: Dan Flickinger 15-Aug-94
;;;  Last revised: Dan Flickinger, 24-Feb-97
;;;
;;;  $Id$

:begin :instance.

slash := meta &
  [ NON-LOCAL.SLASH <! local !>,
    META-PREFIX "/",
    META-SUFFIX "" ].

s1 := label &
  [ LOCAL.CAT [ HEAD verbal,
		VALENCE [ SUBJ cancelled,
			  COMPS *olist* ] ],
    LABEL-NAME "S" ].

s2 := label &
  [ LOCAL.CAT [ HEAD root-marker,
		VALENCE [ SUBJ none,
			  COMPS *olist* ],
		MOD no-mod ],
    LABEL-NAME "S" ].

np :=  label &
  [ LOCAL.CAT [ HEAD noun,
		VALENCE [ SUBJ none,
			  SPR *olist* ] ],
    LABEL-NAME "NP" ].

n := label &
  [ LOCAL.CAT [ HEAD nominal,
		VALENCE [ SUBJ none,
			  SPR < synsem > ] ],
    LABEL-NAME "N" ].

vp :=  label &
   [ LOCAL.CAT [ HEAD verbal,
			VALENCE [ SUBJ synsem,
				  COMPS *olist* ] ],
     LABEL-NAME "VP" ].

v := label &
  [ LOCAL.CAT [ HEAD verb,
		VALENCE.COMPS *cons* ],
    LABEL-NAME "V" ].

pp :=  label &
   [ LOCAL.CAT [ HEAD prep,
		 VALENCE.COMPS *olist* ], 
     LABEL-NAME "PP" ].

p := label &
  [ LOCAL.CAT [ HEAD prep,
		VALENCE.COMPS *cons* ],
    LABEL-NAME "P" ].

det := label &
  [ LOCAL.CAT [ HEAD det,
		MOD no-mod ],
    LABEL-NAME "DET" ].

comp := label &
  [ LOCAL.CAT [ HEAD comp,
		MOD no-mod ],
    LABEL-NAME "COMP" ].

adv1 := label &
  [ LOCAL.CAT.HEAD adv,
    LABEL-NAME "ADV" ].

adv2 := label &
  [ LOCAL.CAT [ HEAD root-marker,
		VALENCE.COMPS *cons* ],
    LABEL-NAME "ADV" ].

adv3 := label &
  [ LOCAL.CAT.HEAD detspec,
    LABEL-NAME "ADV" ].

neg := label &
  [ LOCAL.CAT.HEAD neg,
    LABEL-NAME "NEG" ].

adj := label &
  [ LOCAL.CAT.HEAD adj,
    LABEL-NAME "ADJ" ].

conj := label &
  [ LOCAL.CAT [ HEAD conjh,
		VALENCE.COMPS *cons* ],
    LABEL-NAME "CONJ" ].

:end :instance.
