;;; -*- Mode: TDL; Package: DISCO -*-
;;;
;;;  parsenodes.tdl
;;;
;;;  Parse node definitions to support node labels in printed parse trees
;;;
;;;  Created: Dan Flickinger 15-Aug-94
;;;  Last revised: Dan Flickinger, 24-Feb-97
;;;
;;;  $Id$

;;; AAC - for the LKB, the order of definitions in the file is significant
;;; because the definitions are tried in order until one matches.
;;; This replaces the functionality of the variable *node-labels*
;;; in the PAGE machinery

:begin :instance.

slash := meta &
  [ SYNSEM.NON-LOCAL.SLASH 1-dlist &
			   [ LIST < local > ],
    META-PREFIX "/",
    META-SUFFIX "" ].

;;; labels
;;; "ADV" "PP" "CONJ" "NP" "S" "VP" "V" "P" "DET" "N" "ADJ" "COMP" "NEG"


adv1 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD adv,
		   CONJ cnil ],
    LABEL-NAME "ADV" ].

adv2 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD root-marker,
		   CONJ cnil ],
    LABEL-NAME "ADV-R" ].

adv3 := label &
  [ SYNSEM.LOCAL [ CAT.HEAD detspec,
		   CONJ cnil ],
    LABEL-NAME "ADV-D" ].


pp-n :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD no-mod ],
			VAL.COMPS *olist* ], 
     LABEL-NAME "PP-N" ].

pp-i :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD intersective_mod ],
			VAL.COMPS *olist* ], 
     LABEL-NAME "PP-I" ].

pp-s :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD prep &
			     [ MOD scopal_mod ],
			VAL.COMPS *olist* ], 
     LABEL-NAME "PP-S" ].

conj := label &
  [ SYNSEM.LOCAL [ CAT [ HEAD conjh,
			 VAL.COMPS *cons* ],
		   CONJ strict-conj ],
    LABEL-NAME "CONJ" ].

np :=  label &
  [ SYNSEM.LOCAL.CAT [ HEAD noun,
		       VAL [ SUBJ < >,
			     SPR *olist* ] ],
    LABEL-NAME "NP" ].


s1 := label &
  [ SYNSEM.LOCAL.CAT [ HEAD verbal & strict_head,
		       VAL [ SUBJ < >,
			     SPR *olist*,
			     COMPS *olist* ] ],
    LABEL-NAME "S" ].

s2 := label &
  [ SYNSEM.LOCAL.CAT [ HEAD root-marker &
			    [ MOD no-mod ],
		       VAL [ SUBJ < >,
			     COMPS *olist* ] ],
    LABEL-NAME "S-R" ].

v := label &
  [ SYNSEM.LOCAL.CAT [ HEAD verb & strict_head,
		       VAL.COMPS *cons* ],
    LABEL-NAME "V" ].


vp :=  label &
   [ SYNSEM.LOCAL.CAT [ HEAD verbal & strict_head,
			VAL [ SUBJ < synsem >,
			      COMPS *olist* ] ],
     LABEL-NAME "VP" ].

p-n := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD no-mod ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P-N" ].

p-i := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD intersective_mod ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P-I" ].

p-s := label &
  [ SYNSEM.LOCAL.CAT [ HEAD prep &
			    [ MOD scopal_mod ],
		       VAL.COMPS *cons* ],
    LABEL-NAME "P-S" ].

det := label &
  [ SYNSEM.LOCAL.CAT.HEAD det &
			  [ MOD no-mod ],
    LABEL-NAME "DET" ].

n := label &
  [ SYNSEM.LOCAL.CAT [ HEAD nominal,
		       VAL [ SUBJ < >,
			     SPR < synsem > ] ],
    LABEL-NAME "N" ].

adj := label &
  [ SYNSEM.LOCAL.CAT.HEAD adj,
    LABEL-NAME "ADJ" ].

comp := label &
  [ SYNSEM.LOCAL.CAT.HEAD comp,
    LABEL-NAME "COMP" ].

neg := label &
  [ SYNSEM.LOCAL.CAT.HEAD neg,
    LABEL-NAME "NEG" ].

prdp :=  label &
  [ SYNSEM.LOCAL.CAT [ HEAD.PRD +,
		       VAL.SUBJ < synsem > ],
    LABEL-NAME "XP" ].

frg := label &
  [ ROOT +,
    LABEL-NAME "FRG" ].

lbound := label &
  [ SYNSEM.LOCAL.CAT.HEAD punct,
    LABEL-NAME "B" ].

:end :instance.

