a_parens_np := never_unify_le & [].
b_parens_np := never_unify_le & [].
c_parens_np := never_unify_le & [].
d_parens_np := never_unify_le & [].
b_period_np1 := never_unify_le & [].
c_period_np1 := never_unify_le & [].
d_period_np1 := never_unify_le & [].
e_period_np1 := never_unify_le & [].
f_period_np1 := never_unify_le & [].
d_comma_np1 := never_unify_le & [].
d_period_comma_np1 := never_unify_le & [].
r_comma_np1 := never_unify_le & [].
r_period_comma_np1 := never_unify_le & [].

be_c_is_neg_1 := never_unify_le & [].
be_c_are_neg_1 := never_unify_le & [].
be_c_being := never_unify_le & [].
be_id_being := never_unify_le & [].

a_period_np1 := n_-_pn-neut_le &
 [ ORTH < "A" >,
   SYNSEM [ LKEYS.KEYREL.CARG "A",
            PHON.ONSET voc ] ].

b_lower_np1 := n_-_pn-neut_le &
 [ ORTH < "B" >,
   SYNSEM [ LKEYS.KEYREL.CARG "B",
            PHON.ONSET con ] ].

c_lower_np1 := n_-_pn-neut_le &
 [ ORTH < "C" >,
   SYNSEM [ LOCAL.AGR.PNG.PN 3s,
            LKEYS.KEYREL.CARG "C",
            PHON.ONSET con ] ].

d_lower_np1 := n_-_pn-neut_le &
 [ ORTH < "D" >,
   SYNSEM [ LKEYS.KEYREL.CARG "D",
            PHON.ONSET con ] ].

e_lower_np1 := n_-_pn-neut_le &
 [ ORTH < "E" >,
   SYNSEM [ LKEYS.KEYREL.CARG "E",
            PHON.ONSET voc ] ].

f_lower_np1 := n_-_pn-neut_le &
 [ ORTH < "F" >,
   SYNSEM [ LKEYS.KEYREL.CARG "F",
            PHON.ONSET voc ] ].

left_n1 := n_-_c-dir_le &
 [ ORTH < "left" >,
   SYNSEM [ LOCAL.CONT.HOOK.INDEX.PNG.PN 3s,
            LKEYS.KEYREL.PRED "_left_n_1_rel",
            PHON.ONSET con ] ].

of_poss := p_np_i-nm-poss_le &
 [ ORTH < "of" >,
   SYNSEM [ LOCAL.CAT.HEAD.MINORS.NORM no_rel,
            LKEYS.KEYREL.PRED _of_p_rel,
            PHON.ONSET voc ] ].

right_n1 := n_-_c-dir_le &
 [ ORTH < "right" >,
   SYNSEM [ LOCAL.CONT.HOOK.INDEX.PNG.PN 3s,
            LKEYS.KEYREL.PRED "_right_n_1_rel",
            PHON.ONSET con ] ].

row_n1 := n_pp_c-of_le &
 [ ORTH < "row" >,
   SYNSEM [ LOCAL.CONT.HOOK.INDEX.PNG.PN 3s,
            LKEYS.KEYREL.PRED "_row_n_of_rel",
            PHON.ONSET con ] ].

size_n1 := n_-_mc-ed_le &
 [ ORTH < "size" >,
   SYNSEM [ LOCAL.CONT.HOOK.INDEX.PNG.PN 3s,
            LKEYS.KEYREL.PRED "_size_n_1_rel",
            PHON.ONSET con ] ].

