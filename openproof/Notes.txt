FOL => English paraphrases

;; Test run: Compile a version of the paraphrase grammar, then call Aaron 
;; Kalb's FOL converter to MRS syntax, then inflate, add paraphrased MRSs, 
;; generate, sort uniquely, and write to a file.

;; Note: need ACE version 09.18 or higher

;; 1. Compile the MRS-inflation, paraphrase, and generator grammars
;;
cd ~/erg
ace -G openproof/inflatemrs.dat -g openproof/config-inflate.tdl
ace -G openproof/paraphrase-op.dat -g openproof/config.tdl
ace -G openproof/ergopen.dat -g ace/config-open.tdl

;; 2. To run single examples interactively, call `runfol' with at least the
;; first two arguments


;; 2a. Run one particular example interactively, using just aggregation rules:
;;
cd ~/erg/openproof; ./runfol -f "small(c)&small(b)" -r rules.agg; more /tmp/out7-12.txt

;; 2b. Run example, and apply all rules in "rules.*" except those in "no.*"
;; (here, exclude "only if" and "provided (that)" in conditionals):
;; 
cd ~/erg/openproof; ./runfol -f "small(a)-->large(b)" -r rules.all -x no.onlyif+prov; more /tmp/out7-12.txt

;; 2c. Run example, and apply all rules in "rules.*" except those in "no.*", 
;; and add those in "req.*" (here, obligatorily omit "then" in conditionals):
cd ~/erg/openproof; ./runfol -f "small(a)-->large(b)" -r rules.all -x no.optthen -a req.dropthen; more /tmp/out7-12.txt


;; 3. Batch run 7-12 set of fols
;;
cd ~/erg/openproof; for i in $(cat 7-12.txt); do \python scripts/e2e.py $i | ace -g inflatemrs.dat -f | ace -g paraphrase-op.dat -f --transfer-config rules.all | ace -g ergopen.dat -e | sort -u; echo "---ITEM---"; done > /tmp/out7-12.txt
Time: 1:40 on 2014.07.26
      1:27 on 2014.09.09

;; 7-12 set with just coordination (aggregation) rules
;;
cd ~/erg/openproof; for i in $(cat 7-12.txt); do \python scripts/e2e.py $i | ace -g inflatemrs.dat -f | ace -g paraphrase-op.dat -f --transfer-config rules.agg | ace -g ergopen.dat -e | sort -u; echo "---ITEM---"; done > /tmp/out7-12c.txt

;; 7-12 set with just pronoun rules
;;
cd ~/erg/openproof; for i in $(cat 7-12.txt); do \python scripts/e2e.py $i | ace -g inflatemrs.dat -f | ace -g paraphrase-op.dat -f --transfer-config rules.pro | ace -g ergopen.dat -e | sort -u; echo "---ITEM---"; done > /tmp/out7-12p.txt

;; Batch run the full set of FOLS used currently in LPP book:
;;
cd ~/erg/openproof; for i in $(cat fols.txt); do \python scripts/e2e.py $i | ace -g inflatemrs.dat -f | ace -g paraphrase-op.dat -f --transfer-config rules.all | ace -g ergopen.dat -e | sort -u; echo "---ITEM---"; done > /tmp/out.txt
Time: 19:45 vs. 19:00 (old)

;; To evaluate using Aaron's script, do the following
;;
cd ~/erg/openproof
python scripts/corpus_test.py 7-12.txt scripts/712goals.txt out7-12.txt
python scripts/corpus_test.py fols.txt scripts/goals.txt out.txt

Possible improvements:
 - The runfol scripts currently write output to a particular file:
   /tmp/out7-12.txt
   but presumably some non-file data-passing mechanism would be better.

