; More general contrast between native and generic le's: 
; PRED is a string for native (open-class) and a type for generics

;
; throw out generics whenever native entries are available:
; distinguished by value of +ONSET, which is con_or_voc for native
; words, and unk_onset for generics.
;
filter-generic-noun := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < n_-_mc-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-sg-noun := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < n_-_c-sg-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-dup-generic-noun := lexmap-rule &
  [ +CONTEXT < n_-_mc-unk_le & [ TOKEN.+TNT.+TAGS.FIRST "NN" ] >,
    +INPUT   < n_-_mc-unk_le & [ TOKEN.+TNT.+TAGS.FIRST "FW" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-mass-noun-2 := lexmap-rule &
  [ +CONTEXT < n_-_mc-unk_le >,
    +INPUT   < n_-_m-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-pl-noun := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < n_-_c-pl-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

; Discard plural if alternative, and FORM does not end in 's'
;
filter-generic-pl-noun-2 := lexmap-rule &
  [ +CONTEXT < n_-_mc-unk_le & [ TOKEN.+FORM "/.*!s/" ] >,
    +INPUT   < n_-_c-pl-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-name := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < n_-_pn-unk_le & [ TOKEN.+TNT.+TAGS.FIRST "NNP" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-name-2 := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < n_-_pn-unk_le & [ TOKEN.+TNT.+TAGS.FIRST "SYM" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

#|
filter-generic-pl-name := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < n_-_pn-pl-unk_le & [ TOKEN.+TNT.+TAGS.FIRST "NNPS" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].
|#

filter-genericcaps-name := lexmap-rule &
  [ +CONTEXT < n_-_pn_le >,
    +INPUT   < n_-_pn-unk_le & [ TOKEN.+TNT.+TAGS.FIRST "NP" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-2 := lexmap-rule &
  [ +CONTEXT < n_-_pn-gen_le >,
    +INPUT   < n_-_pn-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-3 := lexmap-rule &
  [ +CONTEXT < n_-_pn_le >,
    +INPUT   < n_-_pn-caps-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-4 := lexmap-rule &
  [ +CONTEXT < n_-_pn_le >,
    +INPUT   < n_-_pn-pl-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-5 := lexmap-rule &
  [ +CONTEXT < n_-_pn-city_le >,
    +INPUT   < n_-_pn-caps-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-6 := lexmap-rule &
  [ +CONTEXT < n_-_pn-msc_le >,
    +INPUT   < n_-_pn-caps-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-7 := lexmap-rule &
  [ +CONTEXT < n_-_tt-post_le >,
    +INPUT   < n_-_pn-caps-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-8 := lexmap-rule &
  [ +CONTEXT < n_-_c-dir_le >,
    +INPUT   < n_-_pn-caps-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-genericcaps-name-9 := lexmap-rule &
  [ +CONTEXT < n_-_c-month_le >,
    +INPUT   < n_-_pn-caps-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-adj := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < aj_-_i-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-adj-cmp := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < aj_-_i-cmp-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-adj-sup := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < aj_-_i-sup-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-adv := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < av_-_i-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-adv-2 := lexmap-rule &
  [ +INPUT   < av_-_i-unk_le & [ TOKEN.+FORM "/(.*[(\)].*)/" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-card := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < aj_-_i-crd-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-base := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < v_np*_bse-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-pr-3s := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < v_np*_pr-3s-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-pr-n3s := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < v_np*_pr-n3s-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-past := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < v_np*_pa-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-psp := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < v_np*_psp-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-prp := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < v_np*_prp-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-prp-2 := lexmap-rule &
  [ +INPUT   < v_np*_prp-unk_le & [ TOKEN.+FORM "/(.*[(\)/].*)/" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-pas := lexmap-rule &
  [ +CONTEXT < [ TOKEN.+ONSET con_or_voc ] >,
    +INPUT   < v_-_pas-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-generic-v-pas-2 := lexmap-rule &
  [ +INPUT   < v_-_pas-unk_le & [ TOKEN.+FORM "/(.*[(\)/].*)/" ] >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

;
; Discard generic adjective whenever a generic noun is also posited
;

;filter-adj-for-noun := lexmap-rule &
;  [ +CONTEXT < n_-_mc-unk_le >,
;    +INPUT   < aj_-_i-unk_le >,
;    +OUTPUT  < >,
;    +POSCONS "I1=C1" ].

;
; Discard generic proper name whenever mass_or_count_noun is also posited

filter-proper-for-noun := lexmap-rule &
  [ +CONTEXT < n_-_mc-unk_le >,
    +INPUT   < n_-_pn-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

filter-proper-for-noun_2 := lexmap-rule &
  [ +CONTEXT < n_-_mc-unk_le >,
    +INPUT   < n_-_pn-caps-unk_le >,
    +OUTPUT  < >,
    +POSCONS "I1=C1" ].

