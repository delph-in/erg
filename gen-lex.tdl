;;; -*- Mode: tdl; Coding: utf-8; -*-


generic_trans_verb_bse := v_np*_bse-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VB" ] > ].

generic_trans_verb_pres3sg := v_np*_pr-3s-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBZ" ] > ].

generic_trans_verb_presn3sg := v_np*_pr-n3s-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBP" ] > ].

generic_trans_verb_past := v_np*_pa-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBD" ] > ].

generic_trans_verb_psp := v_np*_psp-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBN" ] > ].

generic_trans_verb_prp := v_np*_prp-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBG" ] > ].

generic_trans_verb_pas := v_-_pas-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBN" ] > ].

generic_mass_count_noun := n_-_mc-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NN" ] > ].

generic_mass_noun := n_-_mc-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "FW" ] > ].

generic_pl_noun := n_-_c-pl-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NNS" ] > ].

genericname := n_-_pn-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NNP" ] > ].

genericname_pl := n_-_pn-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NNPS" ] > ].

generic_adj := aj_-_i-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "JJ" ] > ].

generic_adj_compar := aj_-_i-cmp-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "JJR" ] > ].

generic_adj_superl := aj_-_i-sup-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "JJS" ] > ].

generic_adverb := av_-_i-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "RB" ] > ].


; Cardinal numbers

generic_number := aj_-_i-crd-unk_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "CD" ] > ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

generic_proper_ne := n_-_pn-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS proper_namedentity ] > ].

;;
;; _fix_me_
;; as +CLASS values on tokens still stabilize, we might need to revisit these
;; guys one more time.  but why both a name and a singular count entry, where
;; the surface trigger is capitalization?  and: the current `mixed-case-proper'
;; rules do not empty out the +TNT lists, so how will the entries actually get
;; activated?                                                   (20-sep-08; oe)
;;
generic_proper_ic_ne := n_-_pn-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS [ +INITIAL -, +CASE capitalized ] ] > ].

generic_noun_ic_ne := n_-_c-sg-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS [ +INITIAL -, +CASE capitalized ] ] > ].

generic_pl_noun_ne := n_-_c-pl-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS plur_ne ] > ].

generic_date_ne := n_-_day-crd-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS date_ne ] > ].

generic_dom_ne := n_-_pn-dom-gen_le & 
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS dom_ne ] > ].

generic_year_ne := n_-_pn-yoc-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS year_ne ] > ].

generic_meas_noun_ne := n_-_meas-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS meas_ne ] > ].

generic_time_noun_ne := n_np_pn-hour-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS time_ne ] > ].

generic_card_ne := aj_-_i-crd-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS card_ne ] > ].

generic_ord_ne := aj_-_i-ord-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS ord_ne ] > ].

generic_fract_ne := aj_-_i-frct-gen_le &
  [ STEM < *top* >,
    TOKENS.+LIST < [ +CLASS frct_ne ] > ].

