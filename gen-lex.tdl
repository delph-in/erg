;;; -*- Mode: tdl; Coding: utf-8; -*-


generic_trans_verb_bse := v_np*_bse-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "VB" ].

generic_trans_verb_pres3sg := v_np*_pr-3s-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "VBZ" ].

generic_trans_verb_presn3sg := v_np*_pr-n3s-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "VBP" ].

generic_trans_verb_past := v_np*_pa-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "VBD" ].

generic_trans_verb_psp := v_np*_psp-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "VBN" ].

generic_trans_verb_prp := v_np*_prp-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "VBG" ].

generic_trans_verb_pas := v_-_pas-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "VBN" ].

generic_mass_count_noun := n_-_mc-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "NN" ].

generic_sg_noun := n_-_c-sg-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "XX" ].

generic_mass_noun := n_-_mc-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "FW" ].

generic_pl_noun := n_-_c-pl-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "NNS" ].

generic_title_noun := n_-_c-tt-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "XX" ].

genericname := n_-_pn-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "NNP" ].

genericname_pl := n_-_pn-pl-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "NNPS" ].

genericnamecaps := n_-_pn-caps-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "NP" ].

generic_symbol := n_-_pn-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "SYM" ].

generic_adj := aj_-_i-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "JJ" ].

generic_adj_compar := aj_-_i-cmp-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "JJR" ].

generic_adj_superl := aj_-_i-sup-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "JJS" ].

generic_adverb := av_-_i-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "RB" ].


; Cardinal numbers

generic_number := aj_-_i-crd-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "CD" ].

; Ordinal numbers
generic_adj_ord := aj_-_i-ord-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "XX" ].

; Times
generic_time := n_np_pn-hour-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "XX" ].

; Years
generic_year := n_-_pn-yoc-unk_le &
  [ STEM < *top* >,
    TOKEN.+TNT.+TAGS.FIRST "XX" ].
