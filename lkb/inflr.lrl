%(letter-set (!c bdfglmnprstz))
%(letter-set (!s abcdefghijklmnopqrtuvwxyz))
%(letter-set (!t bcdfghjklmnpqrstvwxz))
%(letter-set (!c bdfglmnprstz))

;;; irregular words are stored in a separate file - irregs.tab
;;; because the forms stored there are the values of affix
;;; all the rules here should have the name `affix-type'_infl_rule


plur_noun_infl_rule lex_rule_infl_affixed
%suffix (!s !ss) (!ss !ssses) (ss sses) (!ty !ties) (f ves) (tch tches) (sh shes)
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = plur_noun.


third_sg_fin_verb_infl_rule lex_rule_infl_affixed
%suffix (!s !ss) (!ss !ssses) (ss sses) (!ty !ties) (f ves) (tch tches) (sh shes)
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = third_sg_fin_verb.

past_verb_infl_rule lex_rule_infl_affixed
%suffix (* ed) (y ied) (e ed) (!c !c!ced) 
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = past_verb.

psp_verb_infl_rule lex_rule_infl_affixed
%suffix (* ed) (y ied) (e ed) (!c !c!ced) 
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = psp_verb.

subjunctive_verb_infl_rule lex_rule_infl_affixed
%suffix (* ed) (y ied) (e ed) (!c !c!ced) 
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = subjunctive_verb.

prp_verb_infl_rule lex_rule_infl_affixed
%suffix (!c !c!cing) (* ing) (e ing) (ie ying)
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = prp_verb.

er_comp_adj_infl_rule lex_rule_infl_affixed
%suffix (* er) (!c !c!cer) (y yer) (e er)
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = er_comp_adj.

est_super_adj_infl_rule lex_rule_infl_affixed
%suffix (* est) (!c !c!cest) (y yest) (e est)
< NEEDS-AFFIX > = +
< ARGS : FIRST : AFFIX > = est_super_adj.

#|

bse_verb_infl_rule lex_rule_infl_affixed
< NEEDS-AFFIX > = -
< ARGS : FIRST : AFFIX > = bse_verb.

|#

non_third_sg_fin_verb_infl_rule lex_rule_infl_affixed
< NEEDS-AFFIX > = -
< ARGS : FIRST : AFFIX > = non_third_sg_fin_verb.

sing_noun_infl_rule lex_rule_infl_affixed
< NEEDS-AFFIX > = -
< ARGS : FIRST : AFFIX > = sing_noun.

pos_adj_infl_rule lex_rule_infl_affixed
< NEEDS-AFFIX > = -
< ARGS : FIRST : AFFIX > = pos_adj.

no-affix_infl_rule lex_rule_infl_no-affix
< NEEDS-AFFIX > = -
< ARGS : FIRST : AFFIX > = no-affix.

-ly_infl_rule lex_rule_infl_affixed
< NEEDS-AFFIX > = -
< ARGS : FIRST : AFFIX > = -ly.


;;;
;;; ((equal affix "-S") '("third_sg_fin_verb" "plur_noun"))
;;; ((equal affix "-ED") '("past_verb" "psp_verb" "subjunctive_verb"))
;;; ((equal affix "-ING") '("prp_verb"))
;;; ((equal affix "-ER") '("er_comp_adj"))
;;; ((equal affix "-EST") '("est_super_adj"))
;;; ((equal affix "") '("bse_verb" "non_third_sg_fin_verb" "sing_noun" 
;;;                            "pos_adj" "no-affix"))
;;; (t (list affix))))
;;;
;;; for example - there is a type `-ly' ... Hmm


