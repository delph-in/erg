;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: LKB -*-

(time
 (progn
  (lkb-load-lisp (parent-directory) "Version.lisp" t)
  (setf *grammar-directory* (parent-directory))
  (load-lkb-preferences (this-directory) "user-prefs.lsp")
  (lkb-load-lisp (this-directory) "globals.lsp")
  (lkb-load-lisp (this-directory) "user-fns.lsp")
  (lkb-load-lisp (this-directory) "checkpaths.lsp" t)
  (lkb-load-lisp (this-directory) "patches.lsp" t)
  (load-irregular-spellings 
   (list
    (lkb-pathname (parent-directory) "irregs.tab")
    #+:arboretum
    (lkb-pathname (parent-directory) "arboretum/mal-irregs.tab")))
  (read-tdl-type-files-aux
   (list (lkb-pathname (parent-directory) "fundamentals.tdl")
         (lkb-pathname (parent-directory) "lextypes.tdl")
         (lkb-pathname (parent-directory) "syntax.tdl")
         (lkb-pathname (parent-directory) "lexrules.tdl")
         (lkb-pathname (parent-directory) "auxverbs.tdl")
         #+:arboretum
	 (lkb-pathname (parent-directory) "arboretum/mal-types.tdl")
         (lkb-pathname (this-directory) "mrsmunge.tdl")
         #+:mt
         (lkb-pathname (parent-directory) "mrs.tdl"))
   (lkb-pathname (this-directory) "settings.lsp"))
  (read-cached-leaf-types-if-available
   (list (lkb-pathname (parent-directory) "letypes.tdl")
         #+:arboretum
         (lkb-pathname (parent-directory) "arboretum/mal-letypes.tdl")))

  (if *psql-lexicon-parameters*
      (load-psql-lexicon-from-script))
  (when (not *psql-lexicon-parameters*)
    (format t "~%; PSQL lexical database unavailable")
    (read-cached-lex-if-available 
     (list
      (lkb-pathname (parent-directory) "lexicon.tdl")
      #+:robust
      (lkb-pathname (parent-directory) "robustlex.tdl")
      #+:arboretum
      (lkb-pathname (parent-directory) "arboretum/mal-lex.tdl")
      ;;   (lkb-pathname (parent-directory) "gen-lex.tdl")
      ;;   (lkb-pathname (parent-directory) "ptblex.tdl")
      )))


  (read-tdl-grammar-file-aux 
   (lkb-pathname (parent-directory) "constructions.tdl"))
  #+:arboretum
  (read-tdl-grammar-file-aux 
   (lkb-pathname (parent-directory) "arboretum/mal-constructions.tdl"))

  (read-morph-file-aux (lkb-pathname (parent-directory) "inflr.tdl"))
  #+:arboretum
  (read-morph-file-aux (lkb-pathname (parent-directory) "arboretum/mal-inflr.tdl"))
  (read-tdl-psort-file-aux 
   (lkb-pathname (parent-directory) "roots.tdl"))

  (read-tdl-lex-rule-file-aux 
   (lkb-pathname (parent-directory) "lexrinst.tdl"))
  #+:arboretum
  (read-tdl-lex-rule-file-aux 
   (lkb-pathname (parent-directory) "arboretum/mal-lexrinst.tdl"))
  (read-tdl-parse-node-file-aux 
   (lkb-pathname (parent-directory) "parse-nodes.tdl"))

  (lkb-load-lisp (this-directory) "mrs-initialization.lsp" t)

  (read-tdl-psort-file-aux (lkb-pathname (parent-directory) "idioms.tdl") 
                           :idioms)
  (expand-idioms-phrases) ;; must be called post-MRS!!!

  
  #+:arboretum  
  (lkb-load-lisp (parent-directory) "arboretum/errordesc.lsp" t)
  
  ;; if the preprocessor code is loaded (which it is by default)
  ;; load the finite state rules.  Documentation awaited
  #+:preprocessor
  (read-preprocessor (lkb-pathname (parent-directory) "preprocessor.fsr"))))

;;;
;;; when loaded into an environment including [incr tsdb()] and the Redwoods
;;; tools, also load a Maximum Entropy parse selection model
;;;
#+:tsdb
(tsdb::read-mem (lkb-pathname (parent-directory) "redwoods.mem"))

;;;
;;; finally, use the new transfer component: load any number of rule sets, each
;;; in a separate file, associated with its identifier.  
;;;
#+:mt
(lkb-load-lisp (this-directory) "mt.lsp" t)
#+:mt
(mt:read-transfer-rules 
 (list
  (lkb-pathname (parent-directory) "paraphraser.mtr"))
 "MWE Paraphraser"
 :filter nil)

