;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: LKB -*-

(time
 (progn
  (lkb-load-lisp (parent-directory) "Version.lisp" t)
  (setf *grammar-directory* (parent-directory))
  (lkb-load-lisp (this-directory) "globals.lsp")
  (lkb-load-lisp (this-directory) "user-fns.lsp")
  (load-lkb-preferences (this-directory) "user-prefs.lsp")
  (lkb-load-lisp (this-directory) "checkpaths.lsp" t)
;  (lkb-load-lisp (this-directory) "comlex.lsp" t)
  (load-irregular-spellings (lkb-pathname (parent-directory) "irregs.tab"))
  (read-tdl-type-files-aux
   (list (lkb-pathname (parent-directory) "fundamentals.tdl")
         (lkb-pathname (parent-directory) "lextypes.tdl")
         (lkb-pathname (parent-directory) "syntax.tdl")
         (lkb-pathname (parent-directory) "lexrules.tdl")
         (lkb-pathname (parent-directory) "auxverbs.tdl")
         (lkb-pathname (this-directory) "mrsmunge.tdl"))
   (lkb-pathname (this-directory) "settings.lsp"))
  (read-cached-leaf-types-if-available
   (list (lkb-pathname (parent-directory) "letypes.tdl")))

  ;;
  ;; optionally, use a lexical database (if available, expert users only); to
  ;; activate the DB set *psql-lexicon-parameters* to an association list with
  ;; appropriate  values for `:host', `:user', `:db', and `:table' (maybe also
  ;; `:encoding' and `:password' one day).
  ;;

  (if *psql-lexicon-parameters*
    (load-psql-lexicon-from-script)
    (read-cached-lex-if-available 
     (list
      (lkb-pathname (parent-directory) "lexicon.tdl")
      (lkb-pathname (parent-directory) "gen-lex.tdl")
      ;;   (lkb-pathname (parent-directory) "ptblex.tdl")
      )))

  (read-tdl-grammar-file-aux 
   (lkb-pathname (parent-directory) "constructions.tdl"))

  (read-morph-file-aux (lkb-pathname (parent-directory) "inflr.tdl"))

  (read-tdl-psort-file-aux 
   (lkb-pathname (parent-directory) "roots.tdl"))

  (read-tdl-lex-rule-file-aux 
   (lkb-pathname (parent-directory) "lexrinst.tdl"))
  (read-tdl-parse-node-file-aux 
   (lkb-pathname (parent-directory) "parse-nodes.tdl"))

  (lkb-load-lisp (this-directory) "mrs-initialization.lsp" t)
  
  ;; if the preprocessor code is loaded (which it is by default)
  ;; load the finite state rules.  Documentation awaited
  #+:preprocessor
  (read-preprocessor (lkb-pathname (parent-directory) "preprocessor.fsr"))))
