(time (let ((data-dir1 (make-pathname :directory 
                                (append *lkb-source-dir* '("data" "erg"))))
            (data-dir2 (make-pathname :directory 
                                '(:absolute "eon" "e2" "users" "aac" "grammar"))))
   (setf *current-language* 'english)
   (read-tdl-lex-file-aux (merge-pathnames
         (make-pathname :name "minilex.tdl")
         data-dir1) t)
;   (read-tdl-lex-file-aux (merge-pathnames
;         (make-pathname :name "lexicon.tdl")
;         data-dir2) t)
   (read-tdl-grammar-file-aux (merge-pathnames 
         (make-pathname :name "constructions.tdl")
         data-dir2) t)
;;; morph rule files have to be read in twice -
;;; once as a morph file and again as a lexical rules file
;;; sigh ...
   (morph-file-read-aux (merge-pathnames 
         (make-pathname :name "inflr.lrl")
         data-dir1) t)
   (read-lex-rule-file-aux (merge-pathnames 
         (make-pathname :name "inflr.lrl")
         data-dir1) t)
   (read-tdl-psort-file-aux (merge-pathnames 
         (make-pathname :name "roots.tdl")
         data-dir2))
   (read-tdl-lex-rule-file-aux (merge-pathnames 
         (make-pathname :name "lexrinst.tdl")
         data-dir2) nil)
   (read-tdl-psort-file-aux (merge-pathnames 
         (make-pathname :name "parse-nodes.tdl")
         data-dir2) t)
   nil
   ))

