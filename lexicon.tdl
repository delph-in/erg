a_det := det_sg_nomod_le &
  [ STEM < "a" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_q_rel ].

a_det_plus := det_sg_nomod_fract_le &
  [ STEM < "a" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_q_rel ].

a_few := det_part_pl_le &
  [ STEM < "a", "few" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_few_q_rel ].

a_half := adv_degree_spec_v_le &
  [ STEM < "a", "half" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_half_rel" ].

a_little := adv_degree_spec_v_le &
  [ STEM < "a", "little" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_little_very_rel" ].

a_little_2 := adv_degree_spec_m_le &
  [ STEM < "a", "little" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_little_much_rel" ].

a_little_bit := adv_degree_spec_m_le &
  [ STEM < "a", "little", "bit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_little_bit_rel" ].

a_lot := adv_degree_spec_m_le &
  [ STEM < "a", "lot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_lot_rel" ].

a_quarter := adj_minute_preh_le &
  [ STEM < "a", "quarter" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

able_a1 := adj_intrans_le &
  [ STEM < "able" >,
    SYNSEM.LKEYS.KEYREL.PRED "_able_rel" ].

able_a2 := adj_reg_equi_le &
  [ STEM < "able" >,
    SYNSEM.LKEYS.KEYREL.PRED "_able_rel" ].

abolish_v1 := v_np_trans_le &
  [ STEM < "abolish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abolish_rel" ].

about := p_le &
  [ STEM < "about" >,
    SYNSEM.LKEYS.KEYREL.PRED _about_p_rel ].

about_prtcl := p_prtcl_le &
  [ STEM < "about" >,
    SYNSEM.LKEYS.KEYREL.PRED _about_p_sel_rel ].

about_deg := adv_degree_spec_jov_le &
  [ STEM < "about" >,
    SYNSEM.LKEYS.KEYREL.PRED "_about_approx_rel" ].

about_a1 := adj_reg_equi_le &
  [ STEM < "about" >,
    SYNSEM.LKEYS.KEYREL.PRED "_about_adj_rel" ].

above_all_adv1 := adv_int_vp_post_le &
  [ STEM < "above", "all" >,
    SYNSEM.LKEYS.KEYREL.PRED "_above_all_rel" ].

above := p_reg_le &
  [ STEM < "above" >,
    SYNSEM.LKEYS.KEYREL.PRED _above_p_rel ].

abrams := n_proper_le &
  [ STEM < "abrams" >,
    SYNSEM.LKEYS.KEYREL.CARG "abrams" ].

abroad_adv := pp_le &
  [ STEM < "abroad" >,
    SYNSEM.LKEYS.KEYREL.PRED _abroad_rel ].

absence_n1 := n_ppof_le &
  [ STEM < "absence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_absence_rel" ].

absent_a1 := adj_intrans_le &
  [ STEM < "absent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_absent_rel" ].

absolute_a1 := adj_intrans_le &
  [ STEM < "absolute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_absolute_rel" ].

absolutely_adv1 := adv_vp_pre_le &
  [ STEM < "absolutely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_absolutely_scop_rel" ].

absolutely_adv2 := adv_s_pre_le &
  [ STEM < "absolutely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_absolutely_scop_rel" ].

absolutely_deg := adv_degree_spec_v_le &
  [ STEM < "absolutely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_absolutely_rel" ].

abstain_v1 := v_empty_prep_intrans_le &
  [ STEM < "abstain" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_abstain_from_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

abstain_v2 := v_unerg_le &
  [ STEM < "abstain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abstain_from_rel" ].

accept_v1 := v_np_trans_le &
  [ STEM < "accept" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accept_rel" ].

acceptable_a1 := adj_intrans_le &
  [ STEM < "acceptable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acceptable_rel" ].

acceptable_a2 := adj_reg_atrans_le &
  [ STEM < "acceptable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acceptable_rel" ].

acceptable_a3 := adj_reg_atrans_cp_le &
  [ STEM < "acceptable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acceptable_rel" ].

acceptably_a1 := adv_int_vp_le &
  [ STEM < "acceptably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acceptably_rel" ].

acceptance_n1 := n_mass_le &
  [ STEM < "acceptance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acceptance_rel" ].

accidental_a1 := adj_intrans_le &
  [ STEM < "accidental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accidental_rel" ].

accidentally_adv1 := adv_int_vp_le &
  [ STEM < "accidentally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accidentally_rel" ].

accommodation_n1 := n_mass_count_le &
  [ STEM < "accommodation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accommodation_rel" ].

accomplish_v1 := v_np_trans_le &
  [ STEM < "accomplish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accomplish_rel" ].

according_to := p_le &
  [ STEM < "according", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _according_to_rel ].

accordingly_adv1 := adv_int_vp_post_le &
  [ STEM < "accordingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accordingly_rel" ].

account_n1 := n_ppof_le &
  [ STEM < "account" >,
    SYNSEM.LKEYS.KEYREL.PRED "_account_n_rel" ].

account_n3 := n_intr_le &
  [ STEM < "acc't" >,
    SYNSEM.LKEYS.KEYREL.PRED "_account_n_rel" ].

account_n4 := n_intr_le &
  [ STEM < "acc", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED "_account_n_rel" ].

account_v1 := v_empty_prep_intrans_le &
  [ STEM < "account" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_account_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

accurate_a1 := adj_intrans_le &
  [ STEM < "accurate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accurate_rel" ].

achieve_v1 := v_np_trans_le &
  [ STEM < "achieve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_achieve_rel" ].

across := p_reg_le &
  [ STEM < "across" >,
    SYNSEM.LKEYS.KEYREL.PRED _across_p_rel ].

across_prtcl := p_prtcl_le &
  [ STEM < "across" >,
    SYNSEM.LKEYS.KEYREL.PRED _across_p_sel_rel ].

act_v1 := v_unerg_le &
  [ STEM < "act" >,
    SYNSEM.LKEYS.KEYREL.PRED "_act_v_rel" ].

activate_v1 := v_np_trans_le &
  [ STEM < "activate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_activate_rel" ].

active_a1 := adj_intrans_le &
  [ STEM < "active" >,
    SYNSEM.LKEYS.KEYREL.PRED "_active_rel" ].

activity_n1 := n_mass_count_ppof_le &
  [ STEM < "activity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_activity_rel" ].

actual_a1 := adj_intrans_le &
  [ STEM < "actual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_actual_rel" ].

actually_adv1 := adv_vp_aux_le &
  [ STEM < "actually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_actually_rel" ].

actually_adv2 := adv_s_pre_le &
  [ STEM < "actually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_actually_rel" ].

adapt_v1 := v_empty_prep_intrans_le &
  [ STEM < "adapt" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_adapt_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

adapt_v2 := v_unerg_le &
  [ STEM < "adapt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adapt_to_rel" ].

adapt_v3 := v_np_trans_le &
  [ STEM < "adapt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adapt_rel" ].

add_v1 := v_np_trans_le &
  [ STEM < "add" >,
    SYNSEM.LKEYS.KEYREL.PRED "_add_rel" ].

add_on_v1 := v_particle_np_le &
  [ STEM < "add" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_add_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

add_to_v1 := v_empty_to_trans*_le &
  [ STEM < "add" >,
    SYNSEM.LKEYS.KEYREL.PRED "_add_to_v_rel" ].

addition_n1 := n_mass_le &
  [ STEM < "addition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_addition_rel" ].

additional_a1 := adj_intrans_le &
  [ STEM < "additional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_additional_rel" ].

address_v1 := v_to*_trans_le &
  [ STEM < "address" >,
    SYNSEM.LKEYS.KEYREL.PRED "_address_v_rel" ].

admit_v1 := v_np_trans_le &
  [ STEM < "admit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_admit_rel" ].

admit_v2 := v_cp_prop_non_trans_le &
  [ STEM < "admit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_admit_rel" ].

admit_v3 := v_unerg_le &
  [ STEM < "admit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_admit_rel" ].

ado_n1 := n_mass_le &
  [ STEM < "ado" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ado_rel" ].

adoption_n1 := n_mass_le &
  [ STEM < "adoption" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adoption_rel" ].

advance_v1 := v_np_trans_le &
  [ STEM < "advance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advance_rel" ].

advance_v2 := v_ditrans_only_le &
  [ STEM < "advance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advance_amount_rel" ].

advantage_n1 := n_mass_count_le &
  [ STEM < "advantage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advantage_rel" ].

advent_n1 := n_season_pp_le &
  [ STEM < "advent" >,
    SYNSEM.LKEYS.KEYREL.CARG "advent" ].

advent_n2 := n_season_np_le &
  [ STEM < "advent" >,
    SYNSEM.LKEYS.KEYREL.CARG "advent" ].

advice_n1 := n_mass_le &
  [ STEM < "advice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advice_rel" ].

affair_n1 := n_ppof_le &
  [ STEM < "affair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_affair_rel" ].

affect_v1 := v_np_trans_le &
  [ STEM < "affect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_affect_rel" ].

afford_v1 := v_np_trans_le &
  [ STEM < "afford" >,
    SYNSEM.LKEYS.KEYREL.PRED "_afford_rel" ].

afford_v2 := v_subj_equi_le &
  [ STEM < "afford" >,
    SYNSEM.LKEYS.KEYREL.PRED "_afford_rel" ].

afraid_a1 := adj_pred_intrans_le &
  [ STEM < "afraid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_afraid_rel" ].

afraid_a2 := adj_reg_that_cp_le &
  [ STEM < "afraid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_afraid_rel" ].

after_all_adv1 := adv_int_vp_post_le &
  [ STEM < "after", "all" >,
    SYNSEM.LKEYS.KEYREL.PRED "_after_all_rel" ].

after_all_adv2 := adv_int_vp_post_le &
  [ STEM < "afterall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_after_all_rel" ].

after2 := p_subconj_le &
  [ STEM < "after" >,
    SYNSEM.LKEYS.KEYREL.PRED "_after_h_rel" ].

after_pp := pp_nmod_temp_le &
  [ STEM < "after" >,
    SYNSEM.LKEYS.KEYREL.PRED _after_p_rel ].

after_p := p_le &
  [ STEM < "after" >,
    SYNSEM.LKEYS.KEYREL.PRED _after_p_rel ].

after_prtcl := p_prtcl_le &
  [ STEM < "after" >,
    SYNSEM.LKEYS.KEYREL.PRED _after_p_sel_rel ].

afternoon_nc_n1 := n_day_part_nocomp_le &
  [ STEM < "afternoon" >,
    SYNSEM.LKEYS.KEYREL.PRED _afternoon_rel ].

afternoon_nc_pl_n1 := n_day_part_pl_nocomp_le &
  [ STEM < "afternoons" >,
    SYNSEM.LKEYS.KEYREL.PRED _afternoon_rel ].

afternoon_sg_n1 := n_day_part_sg_le &
  [ STEM < "afternoon" >,
    SYNSEM.LKEYS.KEYREL.PRED _afternoon_rel ].

afternoon_pl_n1 := n_day_part_pl_le &
  [ STEM < "afternoons" >,
    SYNSEM.LKEYS.KEYREL.PRED _afternoon_rel ].

afternoon_sg_def := n_def_day_part_sg_le &
  [ STEM < "afternoon" >,
    SYNSEM.LKEYS.KEYREL.PRED _def_afternoon_rel ].

afternoon_pl_def := n_def_day_part_pl_le &
  [ STEM < "afternoons" >,
    SYNSEM.LKEYS.KEYREL.PRED _def_afternoon_rel ].

afterward_adv1 := pp_le &
  [ STEM < "afterward" >,
    SYNSEM.LKEYS.KEYREL.PRED _afterward_rel ].

afterwards_adv1 := pp_vpmod_le &
  [ STEM < "afterwards" >,
    SYNSEM.LKEYS.KEYREL.PRED _afterwards_rel ].

again_adv1 := adv_int_vp_post_le &
  [ STEM < "again" >,
    SYNSEM.LKEYS.KEYREL.PRED "_again_rel" ].

against := p_le &
  [ STEM < "against" >,
    SYNSEM.LKEYS.KEYREL.PRED _against_p_rel ].

against_prtcl := p_prtcl_le &
  [ STEM < "against" >,
    SYNSEM.LKEYS.KEYREL.PRED _against_p_sel_rel ].

age_n1 := n_ppof_le &
  [ STEM < "age" >,
    SYNSEM.LKEYS.KEYREL.PRED "_age_rel" ].

agenda_n1 := n_ppof_le &
  [ STEM < "agenda" >,
    SYNSEM.LKEYS.KEYREL.PRED "_agenda_rel" ].

ago_p1 := pp_post_le &
  [ STEM < "ago" >,
    SYNSEM.LKEYS.KEYREL.PRED _ago_rel ].

agree_v1 := v_pp_cp_le &
  [ STEM < "agree" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_agree_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

agree_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "agree" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_agree_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

agree_v2 := v_unerg_le &
  [ STEM < "agree" >,
    SYNSEM.LKEYS.KEYREL.PRED "_agree_on_rel" ].

agree_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "agree" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_agree_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

agreeable_a1 := adj_intrans_le &
  [ STEM < "agreeable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_agreeable_rel" ].

agreed_root_pre := adv_disc_preh_le &
  [ STEM < "agreed" >,
    SYNSEM.LKEYS.KEYREL.CARG "agreed" ].

agreed_root_post := adv_disc_posth_le &
  [ STEM < "agreed" >,
    SYNSEM.LKEYS.KEYREL.CARG "agreed" ].

agreement_n1 := n_mass_count_le &
  [ STEM < "agreement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_agreement_rel" ].

ah_root := adv_disc_preh_le &
  [ STEM < "ah" >,
    SYNSEM.LKEYS.KEYREL.CARG "ah" ].

aha_root := adv_disc_preh_le &
  [ STEM < "aha" >,
    SYNSEM.LKEYS.KEYREL.CARG "aha" ].

ahead_adv := pp_le &
  [ STEM < "ahead" >,
    SYNSEM.LKEYS.KEYREL.PRED _ahead_adv_rel ].

ahead_of := p_le &
  [ STEM < "ahead", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _ahead_of_rel ].

aim_at_v1 := v_empty_prep_intrans_le &
  [ STEM < "aim" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_aim_at_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

aim_v1 := v_np_trans_le &
  [ STEM < "aim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aim_v_rel" ].

aim_v2 := v_unerg_le &
  [ STEM < "aim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aim_v_rel" ].

air_n1 := n_mass_le &
  [ STEM < "air" >,
    SYNSEM.LKEYS.KEYREL.PRED "_air_rel" ].

airplane_n1 := n_ppof_le &
  [ STEM < "airplane" >,
    SYNSEM.LKEYS.KEYREL.PRED "_airplane_rel" ].

airport_n1 := n_ppof_le &
  [ STEM < "airport" >,
    SYNSEM.LKEYS.KEYREL.PRED "_airport_rel" ].

albeit := p_subconj_le &
  [ STEM < "albeit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_albeit_rel" ].

algorithm_n1 := n_intr_le &
  [ STEM < "algorithm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_algorithm_rel" ].

alias_n1 := n_intr_le &
  [ STEM < "alias" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alias_rel" ].

alike_a1 := adj_pred_intrans_le &
  [ STEM < "alike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alike_rel" ].

all := det_part_pl_mass_le &
  [ STEM < "all" >,
    SYNSEM.LKEYS.KEYREL.PRED _all_q_rel ].

all_pn := n_part_npcomp_agr_le &
  [ STEM < "all" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _all_q_rel ].

all_adv1 := adv_vp_aux_le &
  [ STEM < "all" >,
    SYNSEM.LKEYS.KEYREL.PRED "_all_adv_rel" ].

all_over_adv1 := adv_post_le &
  [ STEM < "all", "over" >,
    SYNSEM.LKEYS.KEYREL.PRED "_all_over_rel" ].

all_deg := adv_degree_spec_div_le &
  [ STEM < "all" >,
    SYNSEM.LKEYS.KEYREL.PRED "_all_deg_rel" ].

all_det_adj := det_next_last_le &
  [ STEM < "all" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _all_adj_rel ].

allright_root_pre := adv_disc_preh_le &
  [ STEM < "all", "right" >,
    SYNSEM.LKEYS.KEYREL.CARG "all_right" ].

allright_root_post := adv_disc_posth_le &
  [ STEM < "all", "right" >,
    SYNSEM.LKEYS.KEYREL.CARG "all_right" ].

all_saints_day := n_holiday_le &
  [ STEM < "all", "saints", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "all_saints_day" ].

allright_a2 := adv_int_vp_post_le &
  [ STEM < "all", "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allright_rel" ].

allow_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "allow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_allow_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

allow_v1 := v_obj_equi_le &
  [ STEM < "allow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allow_rel" ].

allow_v2 := v_np_trans_le &
  [ STEM < "allow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allow_rel" ].

almost_adv := adv_vp_pre_le &
  [ STEM < "almost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_almost_adv_rel" ].

almost_deg := adv_degree_spec_jov_le &
  [ STEM < "almost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_almost_deg_rel" ].

almost_much_deg := adv_degree_spec_m_le &
  [ STEM < "almost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_almost_m_deg_rel" ].

alone_a1 := adj_pred_intrans_le &
  [ STEM < "alone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alone_rel" ].

alone := adv_int_vp_post_le &
  [ STEM < "alone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alone_adv_rel" ].

along := p_reg_le &
  [ STEM < "along" >,
    SYNSEM.LKEYS.KEYREL.PRED _along_p_rel ].

along_prtcl := p_prtcl_le &
  [ STEM < "along" >,
    SYNSEM.LKEYS.KEYREL.PRED _along_p_sel_rel ].

along_with := p_reg_le &
  [ STEM < "along", "with" >,
    SYNSEM.LKEYS.KEYREL.PRED _along_with_rel ].

aloud_a1 := adj_intrans_le &
  [ STEM < "aloud" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aloud_rel" ].

alphabet_n1 := n_intr_le &
  [ STEM < "alphabet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alphabet_rel" ].

already_adv1 := adv_int_vp_le &
  [ STEM < "already" >,
    SYNSEM.LKEYS.KEYREL.PRED "_already_rel" ].

alright_root_pre := adv_disc_preh_le &
  [ STEM < "alright" >,
    SYNSEM.LKEYS.KEYREL.CARG "all_right" ].

alright_root_post := adv_disc_posth_le &
  [ STEM < "alright" >,
    SYNSEM.LKEYS.KEYREL.CARG "all_right" ].

also_adv1 := adv_vp_aux_le &
  [ STEM < "also" >,
    SYNSEM.LKEYS.KEYREL.PRED "_also_rel" ].

also_adv2 := adv_s_pre_le &
  [ STEM < "also" >,
    SYNSEM.LKEYS.KEYREL.PRED "_also_rel" ].

alternate_between_v1 := v_empty_prep_intrans_le &
  [ STEM < "alternate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_alternate_between_rel",
             LKEYS.--COMPKEY _between_p_sel_rel ] ].

amount_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "amount" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_amount_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

alternate_v1 := v_np_trans_le &
  [ STEM < "alternate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alternate_v_rel" ].

alternate_v2 := v_unerg_le &
  [ STEM < "alternate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alternate_v_rel" ].

alternative_a1 := adj_intrans_le &
  [ STEM < "alternative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alternative_adj_rel" ].

alternative_n1 := n_ppcomp_le &
  [ STEM < "alternative" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_alternative_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

alternatively_adv1 := adv_int_vp_post_le &
  [ STEM < "alternatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alternatively_rel" ].

although := p_subconj_le &
  [ STEM < "although" >,
    SYNSEM.LKEYS.KEYREL.PRED "_although_rel" ].

altogether_adv1 := adv_int_vp_post_le &
  [ STEM < "altogether" >,
    SYNSEM.LKEYS.KEYREL.PRED "_altogether_rel" ].

always_adv1 := adv_int_vp_aux_le &
  [ STEM < "always" >,
    SYNSEM.LKEYS.KEYREL.PRED "_always_rel" ].

be_c_am := vc_prd_am_le &
  [ STEM < "am" > ].

be_c_am_cx := vc_prd_am_cx_le &
  [ STEM < "m" > ].

be_c_am_cx_2 := vc_prd_am_cx_le &
  [ STEM < "'m" > ].

be_id_am := vc_id_am_le &
  [ STEM < "am" > ].

be_id_am_cx := vc_id_am_cx_le &
  [ STEM < "m" > ].

be_id_am_cx_2 := vc_id_am_cx_le &
  [ STEM < "'m" > ].

am_temp := xp_am_le &
  [ STEM < "a.m." >,
    SYNSEM.LKEYS.KEYREL.PRED "_am_rel" ].

am_temp_2 := xp_am_le &
  [ STEM < "am" >,
    SYNSEM.LKEYS.KEYREL.PRED "_am_rel" ].

am_temp_3 := xp_am_le &
  [ STEM < "a", "m" >,
    SYNSEM.LKEYS.KEYREL.PRED "_am_rel" ].

am_temp_4 := xp_am_le &
  [ STEM < "a", ".", "m" >,
    SYNSEM.LKEYS.KEYREL.PRED "_am_rel" ].

am_temp_5 := xp_am_le &
  [ STEM < "a", ".", "m", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_am_rel" ].

am_temp_6 := xp_am_le &
  [ STEM < "a.m" >,
    SYNSEM.LKEYS.KEYREL.PRED "_am_rel" ].

am_temp_7 := xp_am_le &
  [ STEM < "a.m", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_am_rel" ].

amazingly_adv := adv_int_vp_le &
  [ STEM < "amazingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amazingly_rel" ].

amazingly_deg := adv_degree_spec_v_le &
  [ STEM < "amazingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amazingly_deg_rel" ].

ambience_n1 := n_intr_le &
  [ STEM < "ambience" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ambience_rel" ].

America_n1 := n_proper_le &
  [ STEM < "america" >,
    SYNSEM.LKEYS.KEYREL.CARG "America" ].

american_a1 := adj_intrans_le &
  [ STEM < "american" >,
    SYNSEM.LKEYS.KEYREL.PRED "_american_isect_rel" ].

among := p_reg_le &
  [ STEM < "among" >,
    SYNSEM.LKEYS.KEYREL.PRED _among_p_rel ].

amount_n1 := n_ppof_le &
  [ STEM < "amount" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amount_rel" ].

Amsterdam_n1 := n_proper_le &
  [ STEM < "amsterdam" >,
    SYNSEM.LKEYS.KEYREL.CARG "Amsterdam" ].

an_det := det_sg_nomod_le &
  [ STEM < "an" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_q_rel ].

an_det_plus := det_sg_nomod_fract_le &
  [ STEM < "an" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_q_rel ].

less_than_an := det_sg_some_le &
  [ STEM < "less", "than", "an" >,
    SYNSEM.LKEYS.KEYREL.PRED _less_than_a_q_rel ].

less_than_a := det_sg_some_le &
  [ STEM < "less", "than", "a" >,
    SYNSEM.LKEYS.KEYREL.PRED _less_than_a_q_rel ].

analyze_v1 := v_np_trans_le &
  [ STEM < "analyze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_analyze_rel" ].

and_conj := conj_complex_and_le &
  [ STEM < "and" > ].

and_conj_2 := conj_complex_and_both_le &
  [ STEM < "and" > ].

and_so_on_adv1 := adv_vp_post_le &
  [ STEM < "and", "so", "on" >,
    SYNSEM.LKEYS.KEYREL.PRED "_and_so_on_rel" ].

and_then_1 := conj_complex_and_then_le &
  [ STEM < "and", "then" > ].

then_conj_1 := conj_complex_then_le &
  [ STEM < "then" > ].

or_else_1 := conj_complex_or_else_le &
  [ STEM < "or", "else" > ].

except_that_1 := conj_complex_except_that_le &
  [ STEM < "except", "that" > ].

except_that_2 := conj_complex_except_that_le &
  [ STEM < "except" > ].

anew_adv1 := adv_vp_post_le &
  [ STEM < "anew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anew_rel" ].

angry_a1 := adj_trans_le &
  [ STEM < "angry" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_angry_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

anniversary_n1 := n_ppof_le &
  [ STEM < "anniversary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anniversary_rel" ].

announce_v1 := v_np_trans_le &
  [ STEM < "announce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_announce_rel" ].

announce_v2 := v_cp_non_trans_le &
  [ STEM < "announce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_announce_rel" ].

annoy_v1 := v_np_trans_le &
  [ STEM < "annoy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annoy_v_1_rel" ].

annoy_v2 := v_expl_it_subj_np_cp_le &
  [ STEM < "annoy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annoy_v_2_rel" ].

annoy_v3 := v_subj_equi_le &
  [ STEM < "annoy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annoy_v_1_rel" ].

annoyingly := adv_int_vp_post_le &
  [ STEM < "annoyingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annoyingly_rel" ].

annual_a1 := adj_intrans_le &
  [ STEM < "annual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annual_rel" ].

another := det_part_sg_le &
  [ STEM < "another" >,
    SYNSEM.LKEYS.KEYREL.PRED _another_q_rel ].

answer_n1 := n_ppcomp_le &
  [ STEM < "answer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_answer_n_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

answer_v1 := v_np*_trans_cp_le &
  [ STEM < "answer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_answer_v_rel" ].

answer_v2 := v_np*_trans_le &
  [ STEM < "answer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_answer_v_rel" ].

anxiety_n1 := n_mass_le &
  [ STEM < "anxiety" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anxiety_rel" ].

any_det := det_part_le &
  [ STEM < "any" >,
    SYNSEM.LKEYS.KEYREL.PRED _any_q_rel ].

any_deg := adv_degree_spec_nospec_le &
  [ STEM < "any" >,
    SYNSEM.LKEYS.KEYREL.PRED "_any_deg_rel" ].

anybody := n_generic_pro_le &
  [ STEM < "anybody" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

anyhow_adv1 := adv_int_vp_post_nonmob_le &
  [ STEM < "anyhow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anyhow_rel" ].

anyhow_s_adv := adv_s_pre_word_nospec_le &
  [ STEM < "anyhow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anyhow_rel" ].

anymore_adv1 := adv_int_vp_post_le &
  [ STEM < "anymore" >,
    SYNSEM.LKEYS.KEYREL.PRED _anymore_rel ].

any_more_adv1 := adv_int_vp_post_le &
  [ STEM < "any", "more" >,
    SYNSEM.LKEYS.KEYREL.PRED _anymore_rel ].

anyone := n_generic_pro_le &
  [ STEM < "anyone" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

anything := n_generic_pro_le &
  [ STEM < "anything" >,
    SYNSEM.LKEYS [ KEYREL.PRED thing_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

anyway_adv1 := adv_vp_post_le &
  [ STEM < "anyway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anyway_rel" ].

anyway_adv2 := adv_s_pre_le &
  [ STEM < "anyway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anyway_rel" ].

apart_a1 := adj_pred_intrans_le &
  [ STEM < "apart" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apart_j_rel" ].

apart_prtcl := adj_attr_intrans_prtcl_le &
  [ STEM < "apart" >,
    SYNSEM.LKEYS.KEYREL.PRED _apart_j_sel_rel ].

apart_from := p_le &
  [ STEM < "apart", "from" >,
    SYNSEM.LKEYS.KEYREL.PRED _apart_from_rel ].

aperitif_n1 := n_intr_le &
  [ STEM < "aperitif" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aperitif_rel" ].

apologize_v1 := v_double_pp*_le &
  [ STEM < "apologize" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_apologize_rel",
             LKEYS [ --COMPKEY _to_p_rel,
                     --OCOMPKEY _for_p_rel ] ] ].

apology_n1 := n_intr_le &
  [ STEM < "apology" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apology_rel" ].

apparently_adv1 := adv_vp_le &
  [ STEM < "apparently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apparently_rel" ].

apparently_adv2 := adv_s_pre_le &
  [ STEM < "apparently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apparently_rel" ].

appeal_v1 := v_oeq_pp_inf_le &
  [ STEM < "appeal" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_appeal_v_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

appear_v1 := v_pp_inf_ssr_le &
  [ STEM < "appear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appear_rel" ].

appear_v2 := v_prdp_pp_ssr_adj_le &
  [ STEM < "appear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appear_rel" ].

appearance_n1 := n_ppof_le &
  [ STEM < "appearance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appearance_rel" ].

applicant_n1 := n_intr_le &
  [ STEM < "applicant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_applicant_rel" ].

application_n1 := n_mass_count_ppof_le &
  [ STEM < "application" >,
    SYNSEM.LKEYS.KEYREL.PRED "_application_rel" ].

applied_a1 := adj_intrans_le &
  [ STEM < "applied" >,
    SYNSEM.LKEYS.KEYREL.PRED "_applied_rel" ].

apply_to_v1 := v_double_pp_le &
  [ STEM < "apply" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_apply_to_rel",
             LKEYS [ --COMPKEY _to_p_rel,
                     --OCOMPKEY _for_p_rel ] ] ].

apply_v1 := v_np_trans_le &
  [ STEM < "apply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apply_v2_rel" ].

apply_v2 := v_np_prep_trans_le &
  [ STEM < "apply" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_apply_v2_rel",
             LKEYS.--OCOMPKEY _to_p_rel ] ].

apply_v3 := v_empty_prep_intrans_le &
  [ STEM < "apply" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_apply_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

apply_v4 := v_unacc_le &
  [ STEM < "apply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apply_v_rel" ].

apply_v5 := v_empty_prep_intrans_le &
  [ STEM < "apply" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_apply_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

appoint_v1 := v_np_trans_le &
  [ STEM < "appoint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appoint_rel" ].

appointment_n1 := n_intr_le &
  [ STEM < "appointment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appointment_rel" ].

appreciate_v1 := v_np_trans_le &
  [ STEM < "appreciate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appreciate_rel" ].

approach_n1 := n_ppcomp_le &
  [ STEM < "approach" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_approach_n_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

approach_v1 := v_np*_trans_le &
  [ STEM < "approach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_approach_v_rel" ].

appropriate_a1 := adj_intrans_le &
  [ STEM < "appropriate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appropriate_rel" ].

approve_of_v1 := v_empty_prep_intrans_le &
  [ STEM < "approve" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_approve_of_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

approve_v1 := v_np_trans_le &
  [ STEM < "approve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_approve_rel" ].

approve_v2 := v_unerg_le &
  [ STEM < "approve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_approve_rel" ].

approximately := adv_degree_spec_v_le &
  [ STEM < "approximately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_approximately_rel" ].

april := n_month_le &
  [ STEM < "april" >,
    SYNSEM.LKEYS.KEYREL.CARG "apr" ].

april_abb_n1 := n_month_le &
  [ STEM < "apr" >,
    SYNSEM.LKEYS.KEYREL.CARG "apr" ].

april_2 := n_month_year_le &
  [ STEM < "april" >,
    SYNSEM.LKEYS.KEYREL.CARG "apr" ].

april_abb_n2 := n_month_year_le &
  [ STEM < "apr" >,
    SYNSEM.LKEYS.KEYREL.CARG "apr" ].

arbitrary_a1 := adj_intrans_le &
  [ STEM < "arbitrary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arbitrary_rel" ].

be_c_are := vc_prd_are_le &
  [ STEM < "are" > ].

be_c_are_cx := vc_prd_are_cx_le &
  [ STEM < "'re" > ].

be_c_are_cx_2 := vc_prd_are_cx_le &
  [ STEM < "re" > ].

be_id_are := vc_id_are_le &
  [ STEM < "are" > ].

be_id_are_cx := vc_id_are_cx_le &
  [ STEM < "'re" > ].

be_id_are_cx_2 := vc_id_are_cx_le &
  [ STEM < "re" > ].

be_th_cop_are := vc_there_are_le &
  [ STEM < "are" > ].

area_n1 := n_mass_count_ppof_le &
  [ STEM < "area" >,
    SYNSEM.LKEYS.KEYREL.PRED "_area_rel" ].

be_c_am_neg_1 := vc_prd_am_neg_le &
  [ STEM < "aren't" > ].

be_c_am_neg_2 := vc_prd_am_neg_le &
  [ STEM < "aren", "'t" > ].

aint_be_c_am_neg_1 := vc_prd_am_neg_le &
  [ STEM < "ain't" > ].

aint_be_c_am_neg_2 := vc_prd_am_neg_le &
  [ STEM < "ain", "'t" > ].

be_c_are_neg_1 := vc_prd_are_neg_le &
  [ STEM < "aren't" > ].

be_c_are_neg_2 := vc_prd_are_neg_le &
  [ STEM < "aren", "'t" > ].

aint_be_c_are_neg_1 := vc_prd_are_neg_le &
  [ STEM < "ain't" > ].

aint_be_c_are_neg_2 := vc_prd_are_neg_le &
  [ STEM < "ain", "'t" > ].

be_id_am_neg_1 := vc_id_am_neg_le &
  [ STEM < "aren't" > ].

be_id_am_neg_2 := vc_id_am_neg_le &
  [ STEM < "aren", "'t" > ].

aint_be_id_am_neg_1 := vc_id_am_neg_le &
  [ STEM < "ain't" > ].

aint_be_id_am_neg_2 := vc_id_am_neg_le &
  [ STEM < "ain", "'t" > ].

be_id_are_neg_1 := vc_id_are_neg_le &
  [ STEM < "aren't" > ].

be_id_are_neg_2 := vc_id_are_neg_le &
  [ STEM < "aren", "'t" > ].

aint_be_id_are_neg_1 := vc_id_are_neg_le &
  [ STEM < "ain't" > ].

aint_be_id_are_neg_2 := vc_id_are_neg_le &
  [ STEM < "ain", "'t" > ].

be_th_cop_are_neg_1 := vc_there_are_neg_le &
  [ STEM < "aren't" > ].

be_th_cop_are_neg_2 := vc_there_are_neg_le &
  [ STEM < "aren", "'t" > ].

aint_be_th_cop_are_neg_1 := vc_there_are_neg_le &
  [ STEM < "ain't" > ].

aint_be_th_cop_are_neg_2 := vc_there_are_neg_le &
  [ STEM < "ain", "'t" > ].

argue_about_v1 := v_empty_prep_intrans_le &
  [ STEM < "argue" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_argue_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

argue_v1 := v_cp_prop*_non_trans_le &
  [ STEM < "argue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_argue_rel" ].

arise_v1 := v_unerg_le &
  [ STEM < "arise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arise_rel" ].

around_adv := pp_no_nmod_le &
  [ STEM < "around" >,
    SYNSEM.LKEYS.KEYREL.PRED _around_p_rel ].

around := p_le &
  [ STEM < "around" >,
    SYNSEM.LKEYS.KEYREL.PRED _around_p_rel ].

around_prtcl := p_prtcl_le &
  [ STEM < "around" >,
    SYNSEM.LKEYS.KEYREL.PRED _around_p_sel_rel ].

around_deg := adv_degree_spec_le &
  [ STEM < "around" >,
    SYNSEM.LKEYS.KEYREL.PRED "_around_deg_rel" ].

arrange_v1 := v_np_trans_le &
  [ STEM < "arrange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arrange_v_rel" ].

arrange_v2 := v_empty_prep_intrans_le &
  [ STEM < "arrange" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_arrange_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

arrange_v3 := v_cp_non_trans_le &
  [ STEM < "arrange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arrange_v_rel" ].

arrange_v4 := v_cp_inf_le &
  [ STEM < "arrange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arrange_v_rel" ].

arrange_for_v1 := v_expl_pp_inf_seq_le &
  [ STEM < "arrange" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_arrange_for_thm_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

arrange_with_v1 := v_pp_inf_seq_le &
  [ STEM < "arrange" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_arrange_v_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

arrange_with_v2 := v_expl_pp_inf_seq_le &
  [ STEM < "arrange" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_arrange_v_expl_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

arrangement_n1 := n_ppof_le &
  [ STEM < "arrangement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arrangement_rel" ].

arrival_n1 := n_mass_count_ppof_le &
  [ STEM < "arrival" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arrival_rel" ].

arrive_v1 := v_unerg_le &
  [ STEM < "arrive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arrive_v_rel" ].

artificial_a1 := adj_intrans_le &
  [ STEM < "artificial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_artificial_rel" ].

artless_a1 := adj_intrans_le &
  [ STEM < "artless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_artless_rel" ].

as_p1 := p_no_nmod_nopro_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_p_rel ].

as_prtcl := p_prtcl_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_p_sel_rel ].

as_prdp_p1 := p_prdp_vp_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_p_sel_rel ].

as_prdp_p2 := p_prdp_aorp_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_p_sel_rel ].

as_follows_adv1 := adv_vp_post_le &
  [ STEM < "as", "follows" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_follows_adv_rel" ].

as_if := p_subconj_le &
  [ STEM < "as", "if" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_if_rel" ].

as_though := p_subconj_le &
  [ STEM < "as", "though" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_though_rel" ].

as_it_happens_adv1 := adv_vp_pre_le &
  [ STEM < "as", "it", "happens" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_it_happens_rel" ].

as_it_happens_adv2 := adv_s_pre_le &
  [ STEM < "as", "it", "happens" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_it_happens_rel" ].

as_of := p_le &
  [ STEM < "as", "of" >,
    SYNSEM [ LKEYS.KEYREL.PRED _as_of_rel ] ].

as_long_as_subord := p_subconj_le &
  [ STEM < "as", "long", "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_long_as_rel" ].

as_subord := p_subconj_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_subord_rel" ].

as_far_as_subord := p_subconj_le &
  [ STEM < "as", "far", "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_far_as_rel" ].

as_soon_as_subord := p_subconj_le &
  [ STEM < "as", "soon", "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_soon_as_d_rel" ].

as_well_as_conj_1 := conj_complex_as_well_as_le &
  [ STEM < "as", "well", "as" > ].

as_well_as_conj_2 := conj_complex_as_well_as_both_le &
  [ STEM < "as", "well", "as" > ].

as_well := adv_vp_post_le &
  [ STEM < "as", "well" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_well_rel" ].

as_well_adv2 := adv_vp_aux_le &
  [ STEM < "as", "well" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_well_rel" ].

as_for_p := p_le &
  [ STEM < "as", "for" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_for_rel ].

ascension_day := n_holiday_le &
  [ STEM < "ascension", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "ascension_day" ].

ash_wednesday := n_holiday_le &
  [ STEM < "ash", "wednesday" >,
    SYNSEM.LKEYS.KEYREL.CARG "ash_wednesday" ].

aside_adv := pp_le &
  [ STEM < "aside" >,
    SYNSEM.LKEYS.KEYREL.PRED _aside_rel ].

aside_prtcl := p_prtcl_le &
  [ STEM < "aside" >,
    SYNSEM.LKEYS.KEYREL.PRED _aside_p_sel_rel ].

aside_from := p_le &
  [ STEM < "aside", "from" >,
    SYNSEM.LKEYS.KEYREL.PRED _aside_from_rel ].

ask_about_v1 := v_empty_prep_trans*_le &
  [ STEM < "ask" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ask_about_rel",
             LKEYS.--OCOMPKEY _about_p_sel_rel ] ].

acquaint_with_v1 := v_np*_prep_trans_le &
  [ STEM < "acquaint" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_acquaint_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

ask_for_v1 := v_empty_prep_trans*_le &
  [ STEM < "ask" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ask_for_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

ask_v1 := v_ditrans*_only_le &
  [ STEM < "ask" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ask_rel" ].

ask_v2 := v_obj_equi_le &
  [ STEM < "ask" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ask_rel" ].

ask_v3 := v_np_trans_cp_ques_le &
  [ STEM < "ask" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ask_rel" ].

ask_v5 := v_cp_subj_le &
  [ STEM < "ask" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ask_rel" ].

asleep_a1 := adj_pred_intrans_le &
  [ STEM < "asleep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_asleep_rel" ].

assemble_v1 := v_np_trans_le &
  [ STEM < "assemble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assemble_rel" ].

assess_v1 := v_np_trans_le &
  [ STEM < "assess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assess_rel" ].

assistance_n1 := n_mass_le &
  [ STEM < "assistance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assistance_rel" ].

associate_with_v1 := v_empty_prep_trans_le &
  [ STEM < "associate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_associate_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

assume_v1 := v_cp_prop_non_trans_le &
  [ STEM < "assume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assume_rel" ].

assumption_day := n_holiday_le &
  [ STEM < "assumption", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "assumption_day" ].

assumption_n1 := n_intr_le &
  [ STEM < "assumption" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assumption_rel" ].

assure_v1 := v_ditrans_only_le &
  [ STEM < "assure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assure_rel" ].

assure_v2 := v_np_trans_le &
  [ STEM < "assure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assure_rel" ].

assure_v3 := v_np_trans_cp_prop_le &
  [ STEM < "assure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assure_rel" ].

asterisk_n1 := n_intr_le &
  [ STEM < "asterisk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_asterisk_rel" ].

astray_adv := pp_le &
  [ STEM < "astray" >,
    SYNSEM.LKEYS.KEYREL.PRED _astray_rel ].

at_all_adv1 := adv_int_vp_post_le &
  [ STEM < "at", "all" >,
    SYNSEM.LKEYS.KEYREL.PRED _at_all_rel ].

at_least_deg := adv_degree_spec_jov_le &
  [ STEM < "at", "least" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_least_rel" ].

at_least_m_deg := adv_degree_spec_m_le &
  [ STEM < "at", "least" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_least_m_deg_rel" ].

at_least_adv := adv_vp_le &
  [ STEM < "at", "least" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_least_scopal_mod_rel" ].

at := p_reg_le &
  [ STEM < "at" >,
    SYNSEM.LKEYS.KEYREL.PRED _at_p_rel ].

at_prtcl := p_prtcl_le &
  [ STEM < "at" >,
    SYNSEM.LKEYS.KEYREL.PRED _at_p_sel_rel ].

at_temp := p_temp_le &
  [ STEM < "at" >,
    SYNSEM [ LKEYS.KEYREL.PRED _at_p_temp_rel,
             LKEYS.--COMPKEY hour_or_time_rel ] ].

at_the_most_deg := adv_degree_spec_le &
  [ STEM < "at", "the", "most" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_the_most_deg_rel" ].

at_worst_deg := adv_degree_spec_le &
  [ STEM < "at", "worst" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_worst_rel" ].

at_most := adv_vp_post_le &
  [ STEM < "at", "most" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_most_scop_rel" ].

at_most_deg := adv_degree_spec_le &
  [ STEM < "at", "most" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_most_deg_rel" ].

at_the_earliest := adv_int_vp_post_le &
  [ STEM < "at", "the", "earliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_the_earliest_rel" ].

at_the_latest := adv_int_vp_post_le &
  [ STEM < "at", "the", "latest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_the_latest_rel" ].

atmosphere_n1 := n_ppof_le &
  [ STEM < "atmosphere" >,
    SYNSEM.LKEYS.KEYREL.PRED "_atmosphere_rel" ].

attempt_n1 := n_intr_le &
  [ STEM < "attempt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attempt_rel" ].

attempt_n2 := n_vpcomp_le &
  [ STEM < "attempt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attempt_rel" ].

attend_v1 := v_np*_trans_le &
  [ STEM < "attend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attend_rel" ].

attend_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "attend" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_attend_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

attendance_n1 := n_mass_le &
  [ STEM < "attendance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attendance_rel" ].

audible_a1 := adj_intrans_le &
  [ STEM < "audible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_audible_rel" ].

Augsburg_n1 := n_proper_le &
  [ STEM < "augsburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Augsburg" ].

august := n_month_le &
  [ STEM < "august" >,
    SYNSEM.LKEYS.KEYREL.CARG "aug" ].

august_abb_n1 := n_month_le &
  [ STEM < "aug" >,
    SYNSEM.LKEYS.KEYREL.CARG "aug" ].

august_2 := n_month_year_le &
  [ STEM < "august" >,
    SYNSEM.LKEYS.KEYREL.CARG "aug" ].

august_abb_n22 := n_month_year_le &
  [ STEM < "aug" >,
    SYNSEM.LKEYS.KEYREL.CARG "aug" ].

authentic_a1 := adj_intrans_le &
  [ STEM < "authentic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_authentic_rel" ].

auto_n1 := n_intr_le &
  [ STEM < "auto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_automobile_rel" ].

automobile_n1 := n_intr_le &
  [ STEM < "automobile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_automobile_rel" ].

autumn_n1 := n_season_pp_le &
  [ STEM < "autumn" >,
    SYNSEM.LKEYS.KEYREL.CARG "fall" ].

autumn_n2 := n_season_np_le &
  [ STEM < "autumn" >,
    SYNSEM.LKEYS.KEYREL.CARG "fall" ].

available_a1 := adj_attr_intrans_le &
  [ STEM < "available" >,
    SYNSEM.LKEYS.KEYREL.PRED "_available_rel" ].

available_a2 := pp_nmod_le &
  [ STEM < "available" >,
    SYNSEM.LKEYS.KEYREL.PRED _available_rel ].

avoid_v1 := v_np_trans_le &
  [ STEM < "avoid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_avoid_rel" ].

awake_a1 := adj_pred_intrans_le &
  [ STEM < "awake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awake_rel" ].

aware_a1 := adj_trans_le &
  [ STEM < "aware" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_aware_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

away_nom := n_adv_event_le &
  [ STEM < "away" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _away_p_rel ] ].

away_prtcl := pp_prtcl_le &
  [ STEM < "away" >,
    SYNSEM.LKEYS.KEYREL.PRED _away_p_sel_rel ].

awfully_deg := adv_degree_spec_v_le &
  [ STEM < "awfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awfully_rel" ].

awkward_a1 := adj_intrans_le &
  [ STEM < "awkward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awkward_rel" ].

awkwardly := adv_int_vp_le &
  [ STEM < "awkwardly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awkwardly_rel" ].

babysit_v1 := v_np_trans_le &
  [ STEM < "babysit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_babysit_rel" ].

back_particle := particle_le &
  [ STEM < "back" >,
    SYNSEM.LKEYS.KEYREL.PRED _back_p_sel_rel ].

backward_adv1 := pp_le &
  [ STEM < "backward" >,
    SYNSEM.LKEYS.KEYREL.PRED _backward_rel ].

backwards_adv1 := pp_le &
  [ STEM < "backwards" >,
    SYNSEM.LKEYS.KEYREL.PRED _backwards_rel ].

bad_a1 := adj_intrans_le &
  [ STEM < "bad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bad_rel" ].

badly_adv1 := adv_int_vp_post_le &
  [ STEM < "badly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_badly_rel" ].

balance_n1 := n_ppof_le &
  [ STEM < "balance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_balance_rel" ].

bar_n1 := n_intr_le &
  [ STEM < "bar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bar_rel" ].

bare_a1 := adj_intrans_le &
  [ STEM < "bare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bare_adj_rel" ].

barely_adv1 := adv_vp_pre_le &
  [ STEM < "barely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_barely_rel" ].

barely_deg := adv_degree_spec_le &
  [ STEM < "barely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_barely_deg_rel" ].

bargain_over_v1 := v_empty_prep_intrans_le &
  [ STEM < "bargain" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bargain_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

bargain_v1 := v_np_trans_le &
  [ STEM < "bargain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bargain_rel" ].

bargain_v2 := v_cp_non_trans_le &
  [ STEM < "bargain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bargain_rel" ].

bargain_v3 := v_unerg_le &
  [ STEM < "bargain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bargain_rel" ].

base_n1 := n_ppof_le &
  [ STEM < "base" >,
    SYNSEM.LKEYS.KEYREL.PRED "_base_rel" ].

base_v1 := v_np_prep_trans_le &
  [ STEM < "base" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_base_on_rel",
             LKEYS.--OCOMPKEY _on_p_rel ] ].

basement_n1 := n_ppof_le &
  [ STEM < "basement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basement_rel" ].

basically_adv1 := adv_vp_pre_le &
  [ STEM < "basically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basically_rel" ].

basically_adv2 := adv_s_pre_le &
  [ STEM < "basically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basically_rel" ].

basically_deg := adv_degree_spec_v_le &
  [ STEM < "basically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basically_deg_rel" ].

basis_n1 := n_ppof_le &
  [ STEM < "basis" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basis_rel" ].

battle_n1 := n_ppof_le &
  [ STEM < "battle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_battle_n_rel" ].

battle_against_v1 := v_empty_prep_intrans_le &
  [ STEM < "battle" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_battle_against_rel",
             LKEYS.--COMPKEY _against_p_sel_rel ] ].

battle_v1 := v_np*_trans_le &
  [ STEM < "battle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_battle_rel" ].

bavarian_a1 := adj_intrans_le &
  [ STEM < "bavarian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bavarian_rel" ].

be_c_be := vc_prd_be_le &
  [ STEM < "be" > ].

be_id_be := vc_id_be_le &
  [ STEM < "be" > ].

be_th_cop_be := vc_there_be_le &
  [ STEM < "be" > ].

beat_v1 := v_np_trans_le &
  [ STEM < "beat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beat_rel" ].

beautiful_a1 := adj_intrans_le &
  [ STEM < "beautiful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beautiful_adj_rel" ].

beautifully := adv_int_vp_post_le &
  [ STEM < "beautifully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beautifully_rel" ].

because := p_subconj_le &
  [ STEM < "because" >,
    SYNSEM.LKEYS.KEYREL.PRED "_because_rel" ].

cuz_subconj := p_subconj_le &
  [ STEM < "cuz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_because_rel" ].

because_of_p := p_le &
  [ STEM < "because", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _because_of_rel ].

become_v1 := v_prd_ssr_any_le &
  [ STEM < "become" >,
    SYNSEM.LKEYS.KEYREL.PRED "_become_rel" ].

become_v2 := v_np_non_trans_id_le &
  [ STEM < "become" >,
    SYNSEM.LKEYS.KEYREL.PRED "_become_id_rel" ].

be_c_been := vc_prd_been_le &
  [ STEM < "been" > ].

be_id_been := vc_id_been_le &
  [ STEM < "been" > ].

be_th_cop_been := vc_there_been_le &
  [ STEM < "been" > ].

beer_n1 := n_mass_count_le &
  [ STEM < "beer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beer_rel" ].

beetle_n1 := n_intr_le &
  [ STEM < "beetle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beetle_rel" ].

before2 := p_subconj_le &
  [ STEM < "before" >,
    SYNSEM.LKEYS.KEYREL.PRED "_before_h_rel" ].

before3 := p_temp_spr_le &
  [ STEM < "before" >,
    SYNSEM.LKEYS.KEYREL.PRED _before_p_rel ].

before_adv1 := pp_le &
  [ STEM < "before" >,
    SYNSEM.LKEYS.KEYREL.PRED _before_p_rel ].

beforehand_adv1 := pp_le &
  [ STEM < "beforehand" >,
    SYNSEM.LKEYS.KEYREL.PRED _beforehand_rel ].

begin_v1 := v_unacc_le &
  [ STEM < "begin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_begin_v_rel" ].

begin_v2 := v_np*_trans_le &
  [ STEM < "begin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_begin_v2_rel" ].

begin_v3 := v_subj_equi_le &
  [ STEM < "begin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_begin_v2_rel" ].

begin_v4 := v_subj_equi_prp_le &
  [ STEM < "begin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_begin_v2_rel" ].

beginning1 := n_ppof_le &
  [ STEM < "beginning" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beginning_rel" ].

begrudge1 := v_ditrans_only_le &
  [ STEM < "begrudge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_begrudge_rel" ].

behind := p_reg_le &
  [ STEM < "behind" >,
    SYNSEM.LKEYS.KEYREL.PRED _behind_p_rel ].

behind_prtcl := p_prtcl_le &
  [ STEM < "behind" >,
    SYNSEM.LKEYS.KEYREL.PRED _behind_p_sel_rel ].

be_c_being := vc_prd_being_le &
  [ STEM < "being" > ].

be_id_being := vc_id_being_le &
  [ STEM < "being" > ].

be_th_cop_being := vc_there_being_le &
  [ STEM < "being" > ].

belay_v1 := v_np_trans_le &
  [ STEM < "belay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_belay_rel" ].

belief_n1 := n_cpcomp_fin_le &
  [ STEM < "belief" >,
    SYNSEM.LKEYS.KEYREL.PRED "_belief_rel" ]. 

belief_n2 := n_ppcomp_le &
  [ STEM < "belief" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_belief_in_rel",
             LKEYS.--COMPKEY _in_p_rel ] ].

believe_in_v1 := v_empty_prep_intrans_le &
  [ STEM < "believe" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_believe_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

believe_v1 := v_np_trans_le &
  [ STEM < "believe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_believe_v_rel" ].

believe_v2 := v_unerg_le &
  [ STEM < "believe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_believe_v_rel" ].

believe_v3 := v_cp_prop_non_trans_le &
  [ STEM < "believe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_believe_v_rel" ].

believe_v4 := v_sor_le &
  [ STEM < "believe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_believe_v_rel" ].

belong_v1 := v_empty_prep_intrans_le &
  [ STEM < "belong" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_belong_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

belong_v2 := v_unerg_le &
  [ STEM < "belong" >,
    SYNSEM.LKEYS.KEYREL.PRED "_belong_to_rel" ].

below := p_reg_le &
  [ STEM < "below" >,
    SYNSEM.LKEYS.KEYREL.PRED _below_rel ].

benefit_v1 := v_np_trans_le &
  [ STEM < "benefit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_benefit_v_rel" ].

benefit_n1 := n_ppof_le &
  [ STEM < "benefit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_benefit_n_rel" ].

Berlin_n1 := n_proper_le &
  [ STEM < "berlin" >,
    SYNSEM.LKEYS.KEYREL.CARG "Berlin" ].

beside := p_reg_le &
  [ STEM < "beside" >,
    SYNSEM.LKEYS.KEYREL.PRED _beside_rel ].

besides_adv1 := adv_post_le &
  [ STEM < "besides" >,
    SYNSEM.LKEYS.KEYREL.PRED "_besides_adv_rel" ].

besides := p_le &
  [ STEM < "besides" >,
    SYNSEM.LKEYS.KEYREL.PRED _besides_rel ].

best_a1 := adj_superl_le &
  [ STEM < "best" >,
    SYNSEM.LKEYS.KEYREL.PRED "_good_j_rel" ].

best_a2 := adj_superl_prd_le &
  [ STEM < "the", "best" >,
    SYNSEM.LKEYS.KEYREL.PRED "_good_j_rel" ].

best_a3 := adj_superl_prd_le &
  [ STEM < "best" >,
    SYNSEM.LKEYS.KEYREL.PRED "_good_j_rel" ].

bet_v1 := v_np_np_cp_le &
  [ STEM < "bet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bet_v_rel" ].

better_a1 := adj_comp_le &
  [ STEM < "better" >,
    SYNSEM.LKEYS.KEYREL.PRED "_good_j_rel" ].

between := p_le &
  [ STEM < "between" >,
    SYNSEM.LKEYS.KEYREL.PRED _between_p_rel ].

between_prtcl := p_prtcl_le &
  [ STEM < "between" >,
    SYNSEM.LKEYS.KEYREL.PRED _between_p_sel_rel ].

beyond := p_reg_le &
  [ STEM < "beyond" >,
    SYNSEM.LKEYS.KEYREL.PRED _beyond_rel ].

Bielefeld_n1 := n_proper_le &
  [ STEM < "bielefeld" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bielefeld" ].

big_a1 := adj_intrans_le &
  [ STEM < "big" >,
    SYNSEM.LKEYS.KEYREL.PRED "_big_rel" ].

bigger_a1 := adj_comp_le &
  [ STEM < "bigger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_big_rel" ].

biggest := adj_superl_le &
  [ STEM < "biggest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_big_rel" ].

biggest_prd := adj_superl_prd_le &
  [ STEM < "the", "biggest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_big_rel" ].

Bill := n_proper_le &
  [ STEM < "bill" >,
    SYNSEM.LKEYS.KEYREL.CARG "bill" ].

bind_v1 := v_np_trans_le &
  [ STEM < "bind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bind_rel" ].

birthday_n1 := n_ppof_le &
  [ STEM < "birthday" >,
    SYNSEM.LKEYS.KEYREL.PRED "_birthday_rel" ].

bistro_n1 := n_intr_le &
  [ STEM < "bistro" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bistro_rel" ].

blame_for_v1 := v_empty_prep_trans_le &
  [ STEM < "blame" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_blame_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

blank_a1 := adj_intrans_le &
  [ STEM < "blank" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blank_rel" ].

block_n1 := n_ppof_le &
  [ STEM < "block" >,
    SYNSEM.LKEYS.KEYREL.PRED "_block_rel" ].

block_v1 := v_np_trans_le &
  [ STEM < "block" >,
    SYNSEM.LKEYS.KEYREL.PRED "_block_v_rel" ].

block_off_v1 := v_particle_np_le &
  [ STEM < "block" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_block_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

Bob := n_proper_le &
  [ STEM < "bob" >,
    SYNSEM.LKEYS.KEYREL.CARG "bob" ].

bobsled := v_unerg_le &
  [ STEM < "bobsled" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bobsled_rel" ].

Bochum_n1 := n_proper_le &
  [ STEM < "bochum" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bochum" ].

Bonn_n1 := n_proper_le &
  [ STEM < "bonn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bonn" ].

book_n1 := n_ppof_le &
  [ STEM < "book" >,
    SYNSEM.LKEYS.KEYREL.PRED "_book_n_rel" ].

book_up_v1 := v_particle_np_le &
  [ STEM < "book" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_book_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

book_solid_v1 := v_particle_np_le &
  [ STEM < "book" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_book_solid_rel",
             LKEYS.--COMPKEY _solid_j_sel_rel ] ].

book_v1 := v_ditrans_only_le &
  [ STEM < "book" >,
    SYNSEM.LKEYS.KEYREL.PRED "_book_v_rel" ].

book_v2 := v_np_trans_le &
  [ STEM < "book" >,
    SYNSEM.LKEYS.KEYREL.PRED "_book_v_rel" ].

bookcase_n1 := n_intr_le &
  [ STEM < "bookcase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bookcase_rel" ].

booked_a1 := adj_intrans_le &
  [ STEM < "booked" >,
    SYNSEM.LKEYS.KEYREL.PRED "_booked_rel" ].

born_a1 := adj_intrans_le &
  [ STEM < "born" >,
    SYNSEM.LKEYS.KEYREL.PRED "_born_rel" ].

botanical_a1 := adj_intrans_le &
  [ STEM < "botanical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_botanical_adj_rel" ].

both := det_part_pl_both_le &
  [ STEM < "both" >,
    SYNSEM.LKEYS.KEYREL.PRED _both_q_rel ].

both_pn := n_part_npcomp_noagr_le &
  [ STEM < "both" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _both_q_rel ].

both_conj := conj_atomic_both_le &
  [ STEM < "both" > ].

bother_v1 := v_np*_trans_le &
  [ STEM < "bother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bother_v_rel" ].

bother_v2 := v_expl_it_subj_np_cp_le &
  [ STEM < "bother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bother_v_2_rel" ].

bother_v3 := v_subj_equi_le &
  [ STEM < "bother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bother_v_rel" ].

bother_prp_v1 := v_subj_equi_prp_le &
  [ STEM < "bother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bother_v_rel" ].

access_v1 := v_np_trans_le &
  [ STEM < "access" >,
    SYNSEM.LKEYS.KEYREL.PRED "_access_v_rel" ].

boy_root_pre := adv_disc_preh_le &
  [ STEM < "boy" >,
    SYNSEM.LKEYS.KEYREL.CARG "boy" ].

boy_root_post := adv_disc_posth_le &
  [ STEM < "boy" >,
    SYNSEM.LKEYS.KEYREL.CARG "boy" ].

branch_n1 := n_ppof_le &
  [ STEM < "branch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_branch_rel" ].

Braunschweig_n1 := n_proper_le &
  [ STEM < "braunschweig" >,
    SYNSEM.LKEYS.KEYREL.CARG "Braunschweig" ].

brazilian_a1 := adj_intrans_le &
  [ STEM < "brazilian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brazilian_rel" ].

thai_a1 := adj_intrans_le &
  [ STEM < "thai" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thai_rel" ].

mexican_a1 := adj_intrans_le &
  [ STEM < "mexican" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mexican_isect_rel" ].

latin_american_a1 := adj_intrans_le &
  [ STEM < "latin", "american" >,
    SYNSEM.LKEYS.KEYREL.PRED "_latin_american_rel" ].

south_american_a1 := adj_intrans_le &
  [ STEM < "south", "american" >,
    SYNSEM.LKEYS.KEYREL.PRED "_south_american_rel" ].

break_n1 := n_intr_le &
  [ STEM < "break" >,
    SYNSEM.LKEYS.KEYREL.PRED "_break_n_rel" ].

break_v1 := v_np_trans_le &
  [ STEM < "break" >,
    SYNSEM.LKEYS.KEYREL.PRED "_break_cause_v_rel" ].

break_v2 := v_unacc_le &
  [ STEM < "break" >,
    SYNSEM.LKEYS.KEYREL.PRED "_break_v_rel" ].

breakfast_time_n1 := n_mealtime_le &
  [ STEM < "breakfast" >,
    SYNSEM.LKEYS.KEYREL.PRED _breakfast_time_rel ].

breakfast_n1 := n_mass_count_le &
  [ STEM < "breakfast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breakfast_rel" ].

breakfast_v1 := v_unerg_le &
  [ STEM < "breakfast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breakfast_v_rel" ].

breeze_n1 := n_intr_le &
  [ STEM < "breeze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breeze_rel" ].

Brian := n_proper_le &
  [ STEM < "brian" >,
    SYNSEM.LKEYS.KEYREL.CARG "brian" ].

brief_a1 := adj_intrans_le &
  [ STEM < "brief" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brief_rel" ].

briefly_adv1 := adv_int_vp_le &
  [ STEM < "briefly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_briefly_rel" ].

bring_forth_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_forth_rel",
             LKEYS.--COMPKEY _forth_p_sel_rel ] ].

bring_forward_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_forward_rel",
             LKEYS.--COMPKEY _forward_p_sel_rel ] ].

bring_off_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

bring_over_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

bring_to_v1 := v_np_prep_particle_only_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_to_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

bring_v1 := v_np_trans_le &
  [ STEM < "bring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bring_rel" ].

bring_v2 := v_np_prep_trans_dors_le &
  [ STEM < "bring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bring_rel" ].

bring_v3 := v_ditrans_only_le &
  [ STEM < "bring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bring_rel" ].

Brown_n1 := n_proper_le &
  [ STEM < "brown" >,
    SYNSEM.LKEYS.KEYREL.CARG "Brown" ].

browne := n_proper_le &
  [ STEM < "browne" >,
    SYNSEM.LKEYS.KEYREL.CARG "browne" ].

Brunswick_n1 := n_proper_le &
  [ STEM < "brunswick" >,
    SYNSEM.LKEYS.KEYREL.CARG "Brunswick" ].

Brussels_n1 := n_proper_le &
  [ STEM < "brussels" >,
    SYNSEM.LKEYS.KEYREL.CARG "Brussels" ].

building_n1 := n_intr_le &
  [ STEM < "building" >,
    SYNSEM.LKEYS.KEYREL.PRED "_building_rel" ].

bumblebee_n1 := n_intr_le &
  [ STEM < "bumblebee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bumblebee_rel" ].

business_n1 := n_mass_count_le &
  [ STEM < "business" >,
    SYNSEM.LKEYS.KEYREL.PRED "_business_rel" ].

busy_a1 := adj_intrans_le &
  [ STEM < "busy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_busy_adj_rel" ].

but_conj := conj_complex_but_le &
  [ STEM < "but" > ].

but_adv1 := adv_s_pre_word_nospec_le &
  [ STEM < "but" >,
    SYNSEM.LKEYS.KEYREL.PRED "_but_scop_rel" ].

but_except_p := p_nospec_nogap_le &
  [ STEM < "but" >,
    SYNSEM.LKEYS.KEYREL.PRED _but_except_rel ].

buy_v1 := v_np_trans_le &
  [ STEM < "buy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buy_rel" ].

buy_v3 := v_unerg_le &
  [ STEM < "buy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buy_rel" ].

buy_v4 := v_ditrans_only_le &
  [ STEM < "buy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buy_rel" ].

buy_v5 := v_empty_prep_trans_le &
  [ STEM < "buy" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_buy_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

by_means_of := p_le &
  [ STEM < "by", "means", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _by_means_of_rel ].

by_pass_p := p_prtcl_le &
  [ STEM < "by" >,
    SYNSEM [ LKEYS.KEYREL.PRED _by_p_cm_rel,
             LKEYS.--COMPKEY non_temp_nom_rel ] ].

by_p := p_reg_nospec_le &
  [ STEM < "by" >,
    SYNSEM.LKEYS.KEYREL.PRED _by_p_rel ].

by_prtcl := p_prtcl_le &
  [ STEM < "by" >,
    SYNSEM.LKEYS.KEYREL.PRED _by_p_sel_rel ].

by_means := p_nbar_comp_le &
  [ STEM < "by" >,
    SYNSEM.LKEYS.KEYREL.PRED _by_p_rel ].

by_temp_p := p_temp_vmod_le &
  [ STEM < "by" >,
    SYNSEM [ LKEYS.KEYREL.PRED _by_p_temp_rel,
             LKEYS.--COMPKEY temp_abstr_rel ] ].

by_the_way := adv_int_vp_le &
  [ STEM < "by", "the", "way" >,
    SYNSEM.LKEYS.KEYREL.PRED "_by_the_way_rel" ].

by_the_hour := adv_int_vp_post_le &
  [ STEM < "by", "the", "hour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_by_the_hour_rel" ].

bye_root_pre := adv_disc_preh_grt_le &
  [ STEM < "bye" >,
    SYNSEM.LKEYS.KEYREL.CARG "bye" ].

bye_root_post := adv_disc_posth_grt_le &
  [ STEM < "bye" >,
    SYNSEM.LKEYS.KEYREL.CARG "bye" ].

bye_bye_root_pre := adv_disc_preh_grt_le &
  [ STEM < "bye", "bye" >,
    SYNSEM.LKEYS.KEYREL.CARG "bye_bye" ].

bye_bye_root_post := adv_disc_posth_grt_le &
  [ STEM < "bye", "bye" >,
    SYNSEM.LKEYS.KEYREL.CARG "bye_bye" ].

cab_n1 := n_intr_le &
  [ STEM < "cab" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cab_rel" ].

cafe_n1 := n_intr_le &
  [ STEM < "cafe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cafe_rel" ].

cafeteria_n1 := n_intr_le &
  [ STEM < "cafeteria" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cafeteria_rel" ].

calculate_v1 := v_np_trans_le &
  [ STEM < "calculate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calculate_rel" ].

calculate_v2 := v_cp_non_trans_le &
  [ STEM < "calculate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calculate_rel" ].

calendar_n1 := n_ppof_le &
  [ STEM < "calendar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calendar_rel" ].

call_back_v1 := v_particle_np_le &
  [ STEM < "call" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_call_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

call_quits_v1 := v_ditrans_only_le &
  [ STEM < "call" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_call_quits_rel",
             LKEYS [ --COMPKEY pron_rel,
                     --OCOMPKEY _i_quits_rel ] ] ].

call_off_v1 := v_particle_np_le &
  [ STEM < "call" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_call_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

call_up_v1 := v_particle_np_le &
  [ STEM < "call" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_call_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

call_v1 := v_np_trans_le &
  [ STEM < "call" >,
    SYNSEM.LKEYS.KEYREL.PRED "_call_rel" ].

call_v5 := v_unerg_le &
  [ STEM < "call" >,
    SYNSEM.LKEYS.KEYREL.PRED "_call_rel" ].

call_ditrans_v1 := v_ditrans_only_le &
  [ STEM < "call" >,
    SYNSEM.LKEYS.KEYREL.PRED "_call_name_rel" ].

call_n1 := n_intr_le &
  [ STEM < "call" >,
    SYNSEM.LKEYS.KEYREL.PRED "_call_n_rel" ].

calm_a1 := adj_intrans_le &
  [ STEM < "calm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calm_rel" ].

calm_down_v1 := v_particle_np_le &
  [ STEM < "calm" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_calm_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

calm_down_v2 := v_particle_le &
  [ STEM < "calm" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_calm_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

calm_v1 := v_np_trans_le &
  [ STEM < "calm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calm_v_rel" ].

campus_n1 := n_ppof_le &
  [ STEM < "campus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_campus_rel" ].

can_aux_pos := va_modal_pos_le & 
  [ STEM < "can" >,
    SYNSEM.LKEYS.KEYREL.PRED _can_rel ].

can_aux_neg_1 := va_modal_neg_le &
  [ STEM < "can't" >,
    SYNSEM.LKEYS.KEYREL.PRED _can_rel ].

can_aux_neg_2 := va_modal_neg_le &
  [ STEM < "can", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _can_rel ].

Canaria_n1 := n_proper_le &
  [ STEM < "canaria" >,
    SYNSEM.LKEYS.KEYREL.CARG "Canaria" ].

cancel_v1 := v_np*_trans_le &
  [ STEM < "cancel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cancel_rel" ].

cancell_v1 := v_np*_trans_le &
  [ STEM < "cancell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cancel_rel" ].

Cancun_n1 := n_proper_le &
  [ STEM < "cancun" >,
    SYNSEM.LKEYS.KEYREL.CARG "Cancun" ].

cane_n1 := n_intr_le &
  [ STEM < "cane" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cane_rel" ].

can_aux_neg2 := va_modal_neg_le &
  [ STEM < "cannot" >,
    SYNSEM.LKEYS.KEYREL.PRED _can_rel ].

canteen_n1 := n_intr_le &
  [ STEM < "canteen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_canteen_rel" ].

canyon_n1 := n_intr_le &
  [ STEM < "canyon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_canyon_rel" ].

capital_a1 := adj_intrans_le &
  [ STEM < "capital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_capital_rel" ].

capital_n1 := n_ppof_le &
  [ STEM < "capital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_capital_n_rel" ].

car_n1 := n_intr_le &
  [ STEM < "car" >,
    SYNSEM.LKEYS.KEYREL.PRED "_car_n_rel" ].

card_n1 := n_intr_le &
  [ STEM < "card" >,
    SYNSEM.LKEYS.KEYREL.PRED "_card_n_rel" ].

care_n1 := n_mass_le &
  [ STEM < "care" >,
    SYNSEM.LKEYS.KEYREL.PRED "_care_n_rel" ].

care_v1 := v_unerg_le &
  [ STEM < "care" >,
    SYNSEM.LKEYS.KEYREL.PRED "_care_rel" ].

care_v2 := v_cp_non_trans_le &
  [ STEM < "care" >,
    SYNSEM.LKEYS.KEYREL.PRED "_care_rel" ].

careful_a1 := adj_intrans_le &
  [ STEM < "careful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_careful_rel" ].

carefully := adv_int_vp_le &
  [ STEM < "carefully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carefully_rel" ].

caretaker_n1 := n_ppof_le &
  [ STEM < "caretaker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_caretaker_rel" ].

carnival_n1 := n_intr_le &
  [ STEM < "carnival" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carnival_rel" ].

carnival := n_holiday_le &
  [ STEM < "carnival" >,
    SYNSEM.LKEYS.KEYREL.CARG "carnival" ].

carry_on_v1 := v_particle_np_le &
  [ STEM < "carry" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_carry_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

carry_on_v2 := v_particle_le &
  [ STEM < "carry" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_carry_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

carry_out_v1 := v_particle_np_le &
  [ STEM < "carry" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_carry_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

carry_v1 := v_np_trans_le &
  [ STEM < "carry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carry_rel" ].

carry_v2 := v_np_prep_trans_dors_le &
  [ STEM < "carry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carry_rel" ].

case_n1 := n_ppof_le &
  [ STEM < "case" >,
    SYNSEM.LKEYS.KEYREL.PRED "_case_rel" ].

casual_a1 := adj_intrans_le &
  [ STEM < "casual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_casual_rel" ].

cat_n1 := n_intr_le &
  [ STEM < "cat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cat_n_rel" ].

catch_v1 := v_np_trans_le &
  [ STEM < "catch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_catch_rel" ].

cause_v1 := v_obj_equi_le &
  [ STEM < "cause" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cause_v_rel" ].

cause_v2 := v_np_trans_le &
  [ STEM < "cause" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cause_v_rel" ].

cease_v1 := v_unacc_le &
  [ STEM < "cease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cease_v_rel" ].

cease_v3 := v_subj_equi_le &
  [ STEM < "cease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cease_v2_rel" ].

cease_v4 := v_subj_equi_prp_le &
  [ STEM < "cease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cease_v2_rel" ].

CeBIT_n1 := n_proper_le &
  [ STEM < "cebit" >,
    SYNSEM.LKEYS.KEYREL.CARG "CeBIT" ].

celebrate_v1 := v_np*_trans_le &
  [ STEM < "celebrate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_celebrate_rel" ].

center_n1 := n_ppof_le &
  [ STEM < "center" >,
    SYNSEM.LKEYS.KEYREL.PRED "_center_rel" ].

central := adj_intrans_le &
  [ STEM < "central" >,
    SYNSEM.LKEYS.KEYREL.PRED "_central_rel" ].

centrally := adv_int_vp_le &
  [ STEM < "centrally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_centrally_rel" ].

certain_a1 := adj_reg_cp_le &
  [ STEM < "certain" >,
    SYNSEM.LKEYS.KEYREL.PRED _certain_j_rel ].

certain_a2 := adj_trans_le &
  [ STEM < "certain" >,
    SYNSEM [ LKEYS.KEYREL.PRED _certain_j_rel,
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

certain_a3 := adj_reg_equi_le &
  [ STEM < "certain" >,
    SYNSEM.LKEYS.KEYREL.PRED _certain_j_rel ].

certain_a4 := adj_intrans_le &
  [ STEM < "certain" >,
    SYNSEM.LKEYS.KEYREL.PRED _certain_j_rel ].

certainly_adv1 := adv_vp_pre_le &
  [ STEM < "certainly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_certainly_rel" ].

certainly_adv2 := adv_s_pre_le &
  [ STEM < "certainly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_certainly_rel" ].

chair_n1 := n_intr_le &
  [ STEM < "chair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chair_rel" ].

chance_n1 := n_mass_count_ppof_le &
  [ STEM < "chance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chance_rel" ].

chance_n2 := n_cpcomp_fin_optthat_le &
  [ STEM < "chance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chance_c_rel" ].

change_n1 := n_mass_count_ppof_le &
  [ STEM < "change" >,
    SYNSEM.LKEYS.KEYREL.PRED "_change_n_rel" ].

change_v1 := v_np_trans_le &
  [ STEM < "change" >,
    SYNSEM.LKEYS.KEYREL.PRED "_change_v2_rel" ].

change_v2 := v_unacc_le &
  [ STEM < "change" >,
    SYNSEM.LKEYS.KEYREL.PRED "_change_v_rel" ].

change_v3 := v_np*_trans_double_pp_to*_le &
  [ STEM < "change" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_change_v2_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

chaos_n1 := n_mass_le &
  [ STEM < "chaos" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chaos_rel" ].

charge_n1 := n_intr_le &
  [ STEM < "charge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charge_n_rel" ].

charge_v1 := v_np_trans_le &
  [ STEM < "charge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charge_v_rel" ].

charge_v3 := v_ditrans_only_le &
  [ STEM < "charge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charge_v_rel" ].

charge_v4 := v_unerg_le &
  [ STEM < "charge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charge_v_rel" ].

cheap := adj_intrans_le &
  [ STEM < "cheap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheap_rel" ].

cheaper := adj_comp_le &
  [ STEM < "cheaper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheap_rel" ].

cheapest := adj_superl_le &
  [ STEM < "cheapest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheap_rel" ].

cheapest_prd := adj_superl_prd_le &
  [ STEM < "the", "cheapest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheap_rel" ].

check_out_v1 := v_particle_np_le &
  [ STEM < "check" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_check_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

check_v1 := v_np_trans_le &
  [ STEM < "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_v_rel" ].

check_v2 := v_unerg_le &
  [ STEM < "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_v_rel" ].

cheese_n1 := n_mass_le &
  [ STEM < "cheese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheese_rel" ].

chiang := n_proper_le &
  [ STEM < "chiang" >,
    SYNSEM.LKEYS.KEYREL.CARG "chiang" ].

child_n1 := n_ppof_le &
  [ STEM < "child" >,
    SYNSEM.LKEYS.KEYREL.PRED "_child_rel" ].

chinese_a1 := adj_intrans_le &
  [ STEM < "chinese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chinese_rel" ].

Chinese_n1 := n_proper_le &
  [ STEM < "chinese" >,
    SYNSEM.LKEYS.KEYREL.CARG "Chinese" ].

chinese_n2 := n_plur_le &
  [ STEM < "chinese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chinese_n_rel" ].

choice_n1 := n_mass_count_ppof_le &
  [ STEM < "choice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_choice_rel" ].

choose_v1 := v_np*_trans_le &
  [ STEM < "choose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_choose_rel" ].

choose_v2 := v_np*_prep_trans_le &
  [ STEM < "choose" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_choose_rel",
             LKEYS.--OCOMPKEY _from_p_rel ] ].

Christi_n1 := n_proper_le &
  [ STEM < "christi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Christi" ].

christian_a1 := adj_intrans_le &
  [ STEM < "christian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_christian_rel" ].

christmas_day := n_holiday_le &
  [ STEM < "christmas", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "christmas_day" ].

christmas_eve := n_holiday_le &
  [ STEM < "christmas", "eve" >,
    SYNSEM.LKEYS.KEYREL.CARG "christmas_eve" ].

christmas_n1 := n_season_pp_le &
  [ STEM < "christmas" >,
    SYNSEM.LKEYS.KEYREL.CARG "christmas" ].

christmas_n2 := n_season_np_le &
  [ STEM < "christmas" >,
    SYNSEM.LKEYS.KEYREL.CARG "christmas" ].

xmas_n1 := n_season_pp_le &
  [ STEM < "xmas" >,
    SYNSEM.LKEYS.KEYREL.CARG "christmas" ].

xmas_n2 := n_season_np_le &
  [ STEM < "xmas" >,
    SYNSEM.LKEYS.KEYREL.CARG "christmas" ].

circumstance_n1 := n_intr_le &
  [ STEM < "circumstance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circumstance_rel" ].

city_n2 := n_ppof_le &
  [ STEM < "city" >,
    SYNSEM.LKEYS.KEYREL.PRED "_city_rel" ].

claim_n1 := n_ppof_le &
  [ STEM < "claim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_claim_rel" ].

claim_v1 := v_np_trans_le &
  [ STEM < "claim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_claim_v_rel" ].

claim_v2 := v_cp_prop_non_trans_le &
  [ STEM < "claim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_claim_v_rel" ].

clarify_v1 := v_np_trans_le &
  [ STEM < "clarify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clarify_rel" ].

class_n1 := n_mass_count_le &
  [ STEM < "class" >,
    SYNSEM.LKEYS.KEYREL.PRED "_class_rel" ].

clear_a1 := adj_intrans_le &
  [ STEM < "clear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clear_adj_rel" ].

clear_a2 := adj_reg_atrans_cp_le &
  [ STEM < "clear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clear_adj_rel" ].

clear_up_v1 := v_particle_np_le &
  [ STEM < "clear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_clear_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

clearly_adv1 := adv_int_vp_le &
  [ STEM < "clearly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clearly_rel" ].

clever_a1 := adj_intrans_le &
  [ STEM < "clever" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clever_rel" ].

clock_n1 := n_intr_le &
  [ STEM < "clock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clock_rel" ].

close_a1 := adj_trans_le &
  [ STEM < "close" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_close_adj_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

close_v1 := v_np_trans_le &
  [ STEM < "close" >,
    SYNSEM.LKEYS.KEYREL.PRED "_close_cause_v_rel" ].

close_v2 := v_unacc_le &
  [ STEM < "close" >,
    SYNSEM.LKEYS.KEYREL.PRED "_close_v_rel" ].

close_to_p := p_le &
  [ STEM < "close", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _close_to_rel ].

closely := adv_int_vp_le &
  [ STEM < "closely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_close_isect_rel" ].

closer_a1 := adj_comp_trans_le &
  [ STEM < "closer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_close_adj_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

closest_a1 := adj_trans_le &
  [ STEM < "closest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_closest_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

clumsy_a1 := adj_intrans_le &
  [ STEM < "clumsy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clumsy_adj_rel" ].

co-worker_n1 := n_intr_le &
  [ STEM < "co", "worker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_co-worker_rel" ].

coach_n1 := n_ppof_le &
  [ STEM < "coach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coach_rel" ].

coach_v1 := v_np_trans_le &
  [ STEM < "coach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coach_v_rel" ].

coal_n1 := n_mass_le &
  [ STEM < "coal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coal_rel" ].

coffee_n1 := n_mass_count_le &
  [ STEM < "coffee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coffee_rel" ].

coincide_v1 := v_unerg_le &
  [ STEM < "coincide" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_coincide_rel" ] ].

coincide_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "coincide" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_coincide_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

colleague_n1 := n_intr_le &
  [ STEM < "colleague" >,
    SYNSEM.LKEYS.KEYREL.PRED "_colleague_rel" ].

collect_v1 := v_np_trans_le &
  [ STEM < "collect" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_collect_rel" ] ].

Cologne_n1 := n_proper_le &
  [ STEM < "cologne" >,
    SYNSEM.LKEYS.KEYREL.CARG "Cologne" ].

combination_n1 := n_ppof_le &
  [ STEM < "combination" >,
    SYNSEM.LKEYS.KEYREL.PRED "_combination_rel" ].

combine_v1 := v_np_trans_le &
  [ STEM < "combine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_combine_rel" ].

combine_v2 := v_np_prep_trans_le &
  [ STEM < "combine" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_combine_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

come_across_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_across_present_rel",
             LKEYS.--COMPKEY _across_p_sel_rel ] ].

come_across_v2 := v_empty_prep_intrans_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_across_rel",
             LKEYS.--COMPKEY _across_p_sel_rel ] ].

come_around_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

come_back_v1 := v_particle_pp_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_back_to_rel",
             LKEYS [ --COMPKEY _back_p_sel_rel,
                     --OCOMPKEY _to_p_rel ] ] ].

come_back_v2 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_back_to_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

come_in_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

come_over_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

come_on_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

come_together_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_together_rel",
             LKEYS.--COMPKEY _together_p_sel_rel ] ].

come_up_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

come_out_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

come_v1 := v_unerg_le &
  [ STEM < "come" >,
    SYNSEM.LKEYS.KEYREL.PRED "_come_rel" ].

comfortable_a1 := adj_intrans_le &
  [ STEM < "comfortable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comfortable_rel" ].

commit_v1 := v_np_trans_le &
  [ STEM < "commit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_commit_rel" ].

commitment_n1 := n_ppcomp_le &
  [ STEM < "commitment" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_commitment_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

committed_a1 := adj_intrans_le &
  [ STEM < "committed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_committed_rel" ].

committee_n1 := n_ppof_le &
  [ STEM < "committee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_committee_rel" ].

common_a1 := adj_intrans_le &
  [ STEM < "common" >,
    SYNSEM.LKEYS.KEYREL.PRED "_common_rel" ].

communal_a1 := adj_intrans_le &
  [ STEM < "communal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_communal_rel" ].

company_n1 := n_ppof_le &
  [ STEM < "company" >,
    SYNSEM.LKEYS.KEYREL.PRED "_company_rel" ].

compare_v1 := v_np_trans_le &
  [ STEM < "compare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compare_rel" ].

compare_with_v1 := v_empty_prep_trans_le &
  [ STEM < "compare" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_compare_with_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

comparison_n1 := n_mass_count_le &
  [ STEM < "comparison" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comparison_rel" ].

compartment_n1 := n_ppof_le &
  [ STEM < "compartment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compartment_rel" ].

competent_a1 := adj_intrans_le &
  [ STEM < "competent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_competent_rel" ].

competent_a2 := adj_reg_equi_le &
  [ STEM < "competent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_competent_rel" ].

competently_adv1 := adv_int_vp_le &
  [ STEM < "competently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_competently_rel" ].

competitor_n1 := n_ppof_le &
  [ STEM < "competitor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_competitor_rel" ].

compile_v1 := v_np_trans_le &
  [ STEM < "compile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compile_rel" ].

complete_a1 := adj_intrans_le &
  [ STEM < "complete" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complete_adj_rel" ].

complete_v1 := v_np_trans_le &
  [ STEM < "complete" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complete_v2_rel" ].

complete_v2 := v_unacc_le &
  [ STEM < "complete" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complete_v_rel" ].

completely_deg := adv_degree_spec_v_le &
  [ STEM < "completely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complete_deg_rel" ].

completely := adv_vp_le &
  [ STEM < "completely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_completely_rel" ].

complication_n1 := n_intr_le &
  [ STEM < "complication" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complication_rel" ].

comply_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "comply" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_comply_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

comply_v1 := v_unerg_le &
  [ STEM < "comply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comply_with_rel" ].

CompSci_n1 := n_proper_le &
  [ STEM < "compsci" >,
    SYNSEM.LKEYS.KEYREL.CARG "CompSci" ].

computer_n1 := n_intr_le &
  [ STEM < "computer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_computer_rel" ].

computer_science_n1 := n_mass_le &
  [ STEM < "computer", "science" >,
    SYNSEM.LKEYS.KEYREL.PRED "_computer_science_rel" ].

concern_n1 := n_mass_count_le &
  [ STEM < "concern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concern_n_rel" ].

concern_v1 := v_np_trans_le &
  [ STEM < "concern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concern_rel" ].

concerned_a1 := adj_trans_le &
  [ STEM < "concerned" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_concerned_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

concerning_p := p_le &
  [ STEM < "concerning" >,
    SYNSEM.LKEYS.KEYREL.PRED _concerning_rel ].

concise_a1 := adj_intrans_le &
  [ STEM < "concise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concise_rel" ].

conclude_v1 := v_cp_prop_non_trans_le &
  [ STEM < "conclude" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conclude_rel" ].

concrete_a1 := adj_intrans_le &
  [ STEM < "concrete" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concrete_rel" ].

conference_n1 := n_ppof_le &
  [ STEM < "conference" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conference_rel" ].

confine_v1 := v_np_trans_le &
  [ STEM < "confine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confine_rel" ].

confirm_v1 := v_np*_trans_le &
  [ STEM < "confirm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confirm_rel" ].

confirm_v2 := v_pp_cp_fin_le &
  [ STEM < "confirm" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_confirm_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

conflict_n1 := n_ppof_le &
  [ STEM < "conflict" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conflict_n_rel" ].

conflict_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "conflict" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_conflict_v_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

conflict_v1 := v_unerg_le &
  [ STEM < "conflict" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conflict_v_rel" ].

conformable_a1 := adj_intrans_le &
  [ STEM < "conformable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conformable_rel" ].

congress_n1 := n_ppof_le &
  [ STEM < "congress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_congress_rel" ].

connect_v1 := v_np_trans_le &
  [ STEM < "connect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_connect_cause_v_rel" ].

connect_v2 := v_unacc_le &
  [ STEM < "connect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_connect_v_rel" ].

connected_a1 := adj_intrans_le &
  [ STEM < "connected" >,
    SYNSEM.LKEYS.KEYREL.PRED "_connected_rel" ].

consecutive_a1 := adj_intrans_le &
  [ STEM < "consecutive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consecutive_rel" ].

consequence_n1 := n_mass_count_ppof_le &
  [ STEM < "consequence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consequence_rel" ].

consequently_adv1 := adv_vp_pre_le &
  [ STEM < "consequently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consequently_rel" ].

consequently_adv2 := adv_s_pre_le &
  [ STEM < "consequently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consequently_rel" ].

consider_v1 := v_obj_equi_le &
  [ STEM < "consider" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consider_v_rel" ].

consider_v2 := v_obj_equi_prd_le &
  [ STEM < "consider" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consider_v_rel" ].

consider_v3 := v_ditrans_only_le &
  [ STEM < "consider" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consider_v_rel" ].

consider_v4 := v_np_comp_le &
  [ STEM < "consider" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_consider_v_rel",
             LKEYS.--OCOMPKEY _as_p_sel_rel ] ].

consider_v5 := v_np_trans_le &
  [ STEM < "consider" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consider_v_rel" ].

constant_a1 := adj_intrans_le &
  [ STEM < "constant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_constant_rel" ].

constantly_adv1 := adv_int_vp_le &
  [ STEM < "constantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_constantly_rel" ].

consult_v1 := v_unerg_le &
  [ STEM < "consult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consult_rel" ].

consult_v5 := v_np_trans_le &
  [ STEM < "consult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consult_rel" ].

consultant_n1 := n_intr_le &
  [ STEM < "consultant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consultant_rel" ].

contact_n1 := n_mass_count_le &
  [ STEM < "contact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contact_n_rel" ].

contact_v1 := v_np_trans_le &
  [ STEM < "contact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contact_rel" ].

contain_v1 := v_np_trans_le &
  [ STEM < "contain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contain_rel" ].

contented_a1 := adj_intrans_le &
  [ STEM < "contented" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contented_rel" ].

contentedly := adv_int_vp_le &
  [ STEM < "contentedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contentedly_rel" ].

contingent_a1 := adj_intrans_le &
  [ STEM < "contingent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contingent_rel" ].

continue_v1 := v_unacc_le &
  [ STEM < "continue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_continue_v_rel" ].

continue_v2 := v_np_trans_le &
  [ STEM < "continue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_continue_v2_rel" ].

continue_v3 := v_subj_equi_le &
  [ STEM < "continue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_continue_v2_rel" ].

continue_v4 := v_subj_equi_prp_le &
  [ STEM < "continue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_continue_v2_rel" ].

continuous_a1 := adj_intrans_le &
  [ STEM < "continuous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_continuous_rel" ].

contrary_a1 := adj_intrans_le &
  [ STEM < "contrary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contrary_rel" ].

convenient_a1 := adj_intrans_le &
  [ STEM < "convenient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convenient_rel" ].

conveniently := adv_int_vp_le &
  [ STEM < "conveniently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conveniently_rel" ].

convention_n1 := n_intr_le &
  [ STEM < "convention" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convention_rel" ].

conversation_n1 := n_mass_count_le &
  [ STEM < "conversation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conversation_rel" ].

convince_v1 := v_obj_equi_le &
  [ STEM < "convince" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convince_rel" ].

convince_v2 := v_np_trans_cp_prop_le &
  [ STEM < "convince" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convince_rel" ].

cool_a1 := adj_intrans_le &
  [ STEM < "cool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_rel" ].

cool_a2 := adj_atrans_le &
  [ STEM < "cool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_expl_rel" ].

coordinate_v1 := v_np_trans_le &
  [ STEM < "coordinate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coordinate_rel" ].

corn_n1 := n_mass_le &
  [ STEM < "corn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_corn_rel" ].

Corpus_Christi_n1 := n_proper_le &
  [ STEM < "corpus", "christi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Corpus_Christi" ].

corpus_christi := n_holiday_le &
  [ STEM < "corpus", "christi" >,
    SYNSEM.LKEYS.KEYREL.CARG "corpus_christi" ].

correct_v1 := v_np_trans_le &
  [ STEM < "correct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_correct_rel" ].

correct_a1 := adj_intrans_le &
  [ STEM < "correct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_correct_a_rel" ].

correctly := adv_int_vp_le &
  [ STEM < "correctly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_correctly_rel" ].

correspond_v1 := v_empty_prep_intrans_le &
  [ STEM < "correspond" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_correspond_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

correspond_v2 := v_empty_prep_intrans_le &
  [ STEM < "correspond" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_correspond_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

cosy_a1 := adj_intrans_le &
  [ STEM < "cosy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cosy_rel" ].

could_aux_pos := va_modal_pos_unsp_le & 
  [ STEM < "could" >,
    SYNSEM.LKEYS.KEYREL.PRED _could_v_rel ].

could_aux_neg_1 := va_modal_neg_unsp_le &
  [ STEM < "couldn't" >,
    SYNSEM.LKEYS.KEYREL.PRED _could_v_rel ].

could_aux_neg_2 := va_modal_neg_unsp_le &
  [ STEM < "couldn", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _could_v_rel ].

count_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "count" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_count_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

counter-proposal_n1 := n_intr_le &
  [ STEM < "counter", "proposal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counter-proposal_rel" ].

counter-proposal_n2 := n_intr_le &
  [ STEM < "counter", "-", "proposal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counter-proposal_rel" ].

a_couple := det_part_pl_le &
  [ STEM < "a", "couple" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_couple_q_rel ].

course_n1 := n_ppof_le &
  [ STEM < "course" >,
    SYNSEM.LKEYS.KEYREL.PRED "_course_rel" ].

courtyard_n1 := n_ppof_le &
  [ STEM < "courtyard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_courtyard_rel" ].

Craig := n_proper_le &
  [ STEM < "craig" >,
    SYNSEM.LKEYS.KEYREL.CARG "craig" ].

crazy_a1 := adj_intrans_le &
  [ STEM < "crazy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crazy_rel" ].

create_v1 := v_np_trans_le &
  [ STEM < "create" >,
    SYNSEM.LKEYS.KEYREL.PRED "_create_rel" ].

Cristal_n1 := n_proper_le &
  [ STEM < "cristal" >,
    SYNSEM.LKEYS.KEYREL.CARG "cristal" ].

cross_v1 := v_np_trans_le &
  [ STEM < "cross" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cross_rel" ].

cross_off_v1 := v_particle_np_le &
  [ STEM < "cross" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cross_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

cry_v1 := v_unerg_le &
  [ STEM < "cry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cry_v_rel" ].

CSLI_n1 := n_proper_le &
  [ STEM < "csli" >,
    SYNSEM.LKEYS.KEYREL.CARG "CSLI" ].
 
currency_n1 := n_mass_count_ppof_le &
  [ STEM < "currency" >,
    SYNSEM.LKEYS.KEYREL.PRED "_currency_rel" ].

current_a1 := adj_intrans_le &
  [ STEM < "current" >,
    SYNSEM.LKEYS.KEYREL.PRED "_current_rel" ].

curriculum_n1 := n_intr_le &
  [ STEM < "curriculum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_curriculum_rel" ].

cut_v1 := v_np_trans_le &
  [ STEM < "cut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cut_v_rel" ].

cut_off_v1 := v_particle_np_le &
  [ STEM < "cut" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cut_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

cut_out_v1 := v_particle_np_le &
  [ STEM < "cut" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cut_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

cut_short_v1 := v_particle_np_le &
  [ STEM < "cut" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cut_short_rel",
             LKEYS.--COMPKEY _short_j_sel_rel ] ].

cut_prd := v_obj_equi_prd_adj_le &
  [ STEM < "cut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cut_v_rel"  ].

Cyert_n1 := n_proper_le &
  [ STEM < "cyert" >,
    SYNSEM.LKEYS.KEYREL.CARG "cyert" ].

Czerczinsky_n1 := n_proper_le &
  [ STEM < "czerczinsky" >,
    SYNSEM.LKEYS.KEYREL.CARG "Czerczinsky" ].

daily_adv1 := adv_int_vp_post_le &
  [ STEM < "daily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_daily_adv_rel" ].

danger_n1 := n_mass_count_le &
  [ STEM < "danger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_danger_rel" ].

dare_v1 := v_subj_equi_le &
  [ STEM < "dare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dare_rel" ].

dare_aux_pos := va_modal_pos_le & 
  [ STEM < "dare" >,
    SYNSEM.LKEYS.KEYREL.PRED _dare_aux_rel ].

dare_aux_neg_1 := va_modal_neg_le &
  [ STEM < "daren't" >,
    SYNSEM.LKEYS.KEYREL.PRED _dare_aux_rel ].

dare_aux_neg_2 := va_modal_neg_le &
  [ STEM < "daren", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _dare_aux_rel ].

Darmstadt_n1 := n_proper_le &
  [ STEM < "darmstadt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Darmstadt" ].

data_n1 := n_intr_le &
  [ STEM < "data" >,
    SYNSEM.LKEYS.KEYREL.PRED "_data_rel" ].

date_n1 := n_ppof_le &
  [ STEM < "date" >,
    SYNSEM.LKEYS.KEYREL.PRED "_date_rel" ].

datum_n1 := n_intr_le &
  [ STEM < "datum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_data_rel" ].

daughter_n1 := n_ppof_le &
  [ STEM < "daughter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_daughter_rel" ].

day_n := n_temp_ppcomp_day_le &
  [ STEM < "day" >,
    SYNSEM.LKEYS.KEYREL.PRED "_day_n_rel" ].

day-long_a1 := adj_intrans_le &
  [ STEM < "day", "long" >,
    SYNSEM.LKEYS.KEYREL.PRED "_day-long_rel" ].

daytime_n1 := n_intr_le &
  [ STEM < "daytime" >,
    SYNSEM.LKEYS.KEYREL.PRED "_daytime_n_rel" ].

deadline_n1 := n_ppof_le &
  [ STEM < "deadline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deadline_rel" ].

deal_n1 := n_intr_le &
  [ STEM < "deal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deal_n_rel" ].

deal_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "deal" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_deal_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

dear_a1 := adj_intrans_le &
  [ STEM < "dear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dear_rel" ].

december := n_month_le &
  [ STEM < "december" >,
    SYNSEM.LKEYS.KEYREL.CARG "dec" ].

december_abb_n1 := n_month_le &
  [ STEM < "dec" >,
    SYNSEM.LKEYS.KEYREL.CARG "dec" ].

december_2 := n_month_year_le &
  [ STEM < "december" >,
    SYNSEM.LKEYS.KEYREL.CARG "dec" ].

december_abb_n2 := n_month_year_le &
  [ STEM < "dec" >,
    SYNSEM.LKEYS.KEYREL.CARG "dec" ].

decide_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "decide" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_decide_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

decide_against_v1 := v_empty_prep_intrans_le &
  [ STEM < "decide" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_decide_against_rel",
             LKEYS.--COMPKEY _against_p_sel_rel ] ].

decide_v1 := v_subj_equi_le &
  [ STEM < "decide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decide_rel" ].

decide_v2 := v_unerg_le &
  [ STEM < "decide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decide_rel" ].

decidedly_adv1 := adv_vp_pre_le &
  [ STEM < "decidedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decidedly_rel" ].

decidedly_adv2 := adv_s_pre_le &
  [ STEM < "decidedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decidedly_rel" ].

decision_n1 := n_ppof_le &
  [ STEM < "decision" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decision_rel" ].

declare_v1 := v_np_trans_le &
  [ STEM < "declare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declare_rel" ].

declare_v2 := v_unerg_le &
  [ STEM < "declare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declare_rel" ].

declare_v3 := v_cp_prop_non_trans_le &
  [ STEM < "declare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declare_rel" ].

declare_v4 := v_obj_equi_le &
  [ STEM < "declare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declare_rel" ].

declare_v5 := v_obj_equi_prd_le &
  [ STEM < "declare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declare_rel" ].

declare_v6 := v_ditrans_only_le &
  [ STEM < "declare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declare_rel" ].

decline_v1 := v_np_trans_le &
  [ STEM < "decline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decline_rel" ].

decline_v2 := v_subj_equi_le &
  [ STEM < "decline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decline_rel" ].

deduction_n1 := n_intr_le &
  [ STEM < "deduction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deduction_rel" ].

deep_a1 := adj_intrans_le &
  [ STEM < "deep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deep_rel" ].

defeat_n1 := n_ppof_le &
  [ STEM < "defeat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_defeat_rel" ].

defect_n1 := n_ppof_le &
  [ STEM < "defect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_defect_rel" ].

defer_v1 := v_np_trans_le &
  [ STEM < "defer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_defer_rel" ].

definite_a1 := adj_intrans_le &
  [ STEM < "definite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_definite_rel" ].

definitely_adv1 := adv_vp_aux_le &
  [ STEM < "definitely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_definitely_rel" ].

definitely_adv2 := adv_s_pre_le &
  [ STEM < "definitely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_definitely_rel" ].

definitive_a1 := adj_intrans_le &
  [ STEM < "definitive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_definitive_rel" ].

definitively := adv_int_vp_le &
  [ STEM < "definitively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_definitively_rel" ].

degree_n1 := n_ppof_le &
  [ STEM < "degree" >,
    SYNSEM.LKEYS.KEYREL.PRED "_degree_noun_rel" ].

delay_n1 := n_mass_count_ppof_le &
  [ STEM < "delay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delay_n_rel" ].

delighted_a1 := adj_intrans_le &
  [ STEM < "delighted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delighted_rel" ].

demand_n1 := n_ppof_le &
  [ STEM < "demand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demand_n_rel" ].

demand_v1 := v_np_trans_le &
  [ STEM < "demand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demand_v_rel" ].

demand_v2 := v_cp_prop_non_trans_le &
  [ STEM < "demand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demand_v_rel" ].

denominator_n1 := n_intr_le &
  [ STEM < "denominator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_denominator_rel" ].

dentist_n1 := n_intr_le &
  [ STEM < "dentist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dentist_rel" ].

dentists_a1 := adj_compound_le &
  [ STEM < "dentist", "s" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dentist_adj_rel" ].

deny_v1 := v_np_trans_le &
  [ STEM < "deny" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deny_rel" ].

deny_v2 := v_cp_prop_non_trans_le &
  [ STEM < "deny" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deny_rel" ].

depart_v2 := v_unerg_le &
  [ STEM < "depart" >,
    SYNSEM.LKEYS.KEYREL.PRED "_depart_rel" ].

department_n1 := n_intr_le &
  [ STEM < "department" >,
    SYNSEM.LKEYS.KEYREL.PRED "_department_rel" ].

departmental_a1 := adj_intrans_le &
  [ STEM < "departmental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_departmental_rel" ].

departure_n1 := n_ppof_le &
  [ STEM < "departure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_departure_rel" ].

depend_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "depend" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_depend_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

dependent_a1 := adj_trans_le &
  [ STEM < "dependent" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_dependent_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

dependent_n1 := n_ppof_le &
  [ STEM < "dependent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dependent_n_rel" ].

desire_n1 := n_intr_le &
  [ STEM < "desire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_desire_n_rel" ].

desire_v1 := v_np_trans_le &
  [ STEM < "desire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_desire_v_rel" ].

desire_v2 := v_subj_equi_le &
  [ STEM < "desire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_desire_v_rel" ].

desire_v3 := v_cp_prop_non_trans_le &
  [ STEM < "desire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_desire_v_rel" ].

desk_n1 := n_ppof_le &
  [ STEM < "desk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_desk_rel" ].

despite := p_le &
  [ STEM < "despite" >,
    SYNSEM.LKEYS.KEYREL.PRED _despite_rel ].

detail_n1 := n_ppof_le &
  [ STEM < "detail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_detail_n_rel" ].

detailed_a1 := adj_intrans_le &
  [ STEM < "detailed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_detailed_rel" ].

determine_v1 := v_np_trans_le &
  [ STEM < "determine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_determine_rel" ].

determine_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "determine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_determine_rel" ].

deutschmark_n1 := n_intr_le &
  [ STEM < "deutschmark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deutschmark_rel" ].

deutschmark_n2 := n_intr_le &
  [ STEM < "deutsch", "mark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deutschmark_rel" ].

develop_v1 := v_np_trans_le &
  [ STEM < "develop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_develop_cause_v_rel" ].

Devito := n_proper_le &
  [ STEM < "devito" >,
    SYNSEM.LKEYS.KEYREL.CARG "devito" ].

devote_v1 := v_to_trans_le &
  [ STEM < "devote" >,
    SYNSEM.LKEYS.KEYREL.PRED "_devote_rel" ].

Dewitt_n1 := n_proper_le &
  [ STEM < "dewitt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dewitt" ].

DFKI_n1 := n_proper_le &
  [ STEM < "dfki" >,
    SYNSEM.LKEYS.KEYREL.CARG "DFKI" ].

DFKI_n2 := n_intr_named_le &
  [ STEM < "dfki" >,
    SYNSEM.LKEYS.KEYREL.CARG "DFKI" ].

dial_v1 := v_np_trans_le &
  [ STEM < "dial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dial_rel" ].

diary_n1 := n_intr_le &
  [ STEM < "diary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_diary_rel" ].

did1_neg_1 := va_do_neg_past_le &
  [ STEM < "didn't" > ].

did1_neg_2 := va_do_neg_past_le &
  [ STEM < "didn", "'t" > ].

die_v1 := v_unacc_le &
  [ STEM < "die" >,
    SYNSEM.LKEYS.KEYREL.PRED "_die_v_rel" ].

differ_from_v1 := v_empty_prep_intrans_le &
  [ STEM < "differ" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_differ_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

differ_v2 := v_unerg_le &
  [ STEM < "differ" >,
    SYNSEM.LKEYS.KEYREL.PRED "_differ_rel" ].

difference_n1 := n_intr_le &
  [ STEM < "difference" >,
    SYNSEM.LKEYS.KEYREL.PRED "_difference_rel" ].

different_a1 := adj_trans_le &
  [ STEM < "different" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_different_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

differently := adv_int_vp_post_le &
  [ STEM < "differently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_differently_rel" ].

difficult_a1 := adj_intrans_le &
  [ STEM < "difficult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_difficult_rel" ].

difficult_a2 := adj_reg_atrans_le &
  [ STEM < "difficult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_difficult_rel" ].

difficult_a3 := adj_tough_atrans_le &
  [ STEM < "difficult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_difficult_rel" ].

difficulty_n1 := n_intr_le &
  [ STEM < "difficulty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_difficulty_rel" ].

digest_v1 := v_np_trans_le &
  [ STEM < "digest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_digest_rel" ].

dine1 := v_unerg_le & 
  [ STEM < "dine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dine_rel" ].

dinner_time_n1 := n_mealtime_le &
  [ STEM < "dinner" >,
    SYNSEM.LKEYS.KEYREL.PRED _dinner_time_rel ].

dinner_n1 := n_mass_count_le &
  [ STEM < "dinner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dinner_rel" ].

direct_a1 := adj_intrans_le &
  [ STEM < "direct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_direct_rel" ].

direction_n1 := n_ppof_le &
  [ STEM < "direction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_direction_rel" ].

directive_n1 := n_intr_le &
  [ STEM < "directive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_directive_rel" ].

directly_adv1 := adv_int_vp_le &
  [ STEM < "directly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_directly_rel" ].

directly_deg := adv_degree_spec_jov_le &
  [ STEM < "directly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_directly_deg_rel" ].

directly_m_deg := adv_degree_spec_m_le &
  [ STEM < "directly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_directly_m_deg_rel" ].

director_n1 := n_ppof_le &
  [ STEM < "director" >,
    SYNSEM.LKEYS.KEYREL.PRED "_director_rel" ].

disadvantageous_a1 := adj_intrans_le &
  [ STEM < "disadvantageous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disadvantageous_rel" ].

disagree_v1 := v_unerg_le &
  [ STEM < "disagree" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disagree_rel" ].

disagree_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "disagree" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_disagree_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

disappoint_v1 := v_np_trans_le &
  [ STEM < "disappoint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disappoint_rel" ].

discontinue_v1 := v_np_trans_le &
  [ STEM < "discontinue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discontinue_rel" ].

discover_v1 := v_np_trans_le &
  [ STEM < "discover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discover_rel" ].

discover_v2 := v_unerg_le &
  [ STEM < "discover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discover_rel" ].

discover_v3 := v_cp_fin_inf_non_trans_le &
  [ STEM < "discover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discover_rel" ].

discuss_v1 := v_np_trans_le &
  [ STEM < "discuss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discuss_rel" ].

discussion_n1 := n_mass_count_le &
  [ STEM < "discussion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discussion_rel" ].

dislike_v1 := v_np_trans_le &
  [ STEM < "dislike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dislike_rel" ].

displace_v1 := v_np_trans_le &
  [ STEM < "displace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_displace_rel" ].

disposal_n1 := n_mass_count_le &
  [ STEM < "disposal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disposal_rel" ].

distance_n1 := n_mass_count_le &
  [ STEM < "distance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distance_rel" ].

distasteful_a1 := adj_intrans_le &
  [ STEM < "distasteful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distasteful_rel" ].

distract_v1 := v_np_trans_le &
  [ STEM < "distract" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distract_rel" ].

distress_n1 := n_mass_le &
  [ STEM < "distress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distress_n_rel" ].

distress_v1 := v_np_trans_le &
  [ STEM < "distress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distress_v_rel" ].

distribute_v1 := v_np_trans_le &
  [ STEM < "distribute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distribute_rel" ].

distribution_n1 := n_mass_count_le &
  [ STEM < "distribution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distribution_rel" ].

disturb_v1 := v_np_trans_le &
  [ STEM < "disturb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disturb_rel" ].

divide_v1 := v_np_trans_le &
  [ STEM < "divide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_divide_rel" ].

do2 := v_np_trans_le &
  [ STEM < "do" >,
    SYNSEM.LKEYS.KEYREL.PRED "_do_rel" ].

do_v3 := v_unerg_bse_le &
  [ STEM < "do" >,
    SYNSEM.LKEYS.KEYREL.PRED "_do_suffice_rel" ].

do_v4 := v_ditrans_only_le &
  [ STEM < "do" >,
    SYNSEM.LKEYS.KEYREL.PRED "_do_v_rel" ].

do1_pos := va_do_fin_le &
  [ STEM < "do" > ].

does1_pos := va_does_le &
  [ STEM < "does" > ].

did1_pos := va_did_le &
  [ STEM < "did" > ].

do_adv := v_adv_le &
  [ STEM < "do" >,
    SYNSEM.LKEYS.KEYREL.PRED "_do_rel" ].

do_without_v1 := v_empty_prep_intrans_le &
  [ STEM < "do" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_do_without_rel",
             LKEYS.--COMPKEY _without_p_sel_rel ] ].

doable_a1 := adj_intrans_le &
  [ STEM < "doable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doable_rel" ].

doctor_n1 := n_intr_le &
  [ STEM < "doctor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doctor_rel" ].

doctor_ttl := n_title_le &
  [ STEM < "doctor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doctor_rel" ].

doctors_a1 := adj_compound_le &
  [ STEM < "doctor", "s" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doctors_rel" ].

doctors_a1_apos := adj_intrans_le &
  [ STEM < "doctor's" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doctors_rel" ].

doctoral_a1 := adj_intrans_le &
  [ STEM < "doctoral" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doctoral_rel" ].

document_n1 := n_intr_le &
  [ STEM < "document" >,
    SYNSEM.LKEYS.KEYREL.PRED "_document_rel" ].

does1_neg_1 := va_doesnt_neg_pres_le &
  [ STEM < "doesn't" > ].

does1_neg_2 := va_doesnt_neg_pres_le &
  [ STEM < "doesn", "'t" > ].

dollar_n1 := n_intr_le &
  [ STEM < "dollar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dollar_rel" ].

domain_n1 := n_ppof_le &
  [ STEM < "domain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_domain_rel" ].

dont_1 := va_dont_imp_le &
  [ STEM < "don't" > ].

dont_2 := va_dont_imp_le &
  [ STEM < "don", "'t" > ].

dont_3 := va_dont_imp_le &
  [ STEM < "do", "not" > ].

do1_neg_1 := va_dont_neg_pres_le &
  [ STEM < "don't" > ].

do1_neg_2 := va_dont_neg_pres_le &
  [ STEM < "don", "'t" > ].

donate1 := v_to*_trans_le &
  [ STEM < "donate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_donate_rel" ].

donation_n1 := n_intr_le &
  [ STEM < "donation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_donation_rel" ].

doom_n1 := n_mass_le &
  [ STEM < "doom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doom_rel" ].

dorm_n1 := n_intr_le &
  [ STEM < "dorm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dorm_rel" ].

double_a1 := adj_intrans_le &
  [ STEM < "double" >,
    SYNSEM.LKEYS.KEYREL.PRED "_double_rel" ].

doubtless_adv1 := adv_vp_pre_le &
  [ STEM < "doubtless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doubtless_rel" ].

doubtless_adv2 := adv_s_pre_le &
  [ STEM < "doubtless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doubtless_rel" ].

down_pp := pp_le &
  [ STEM < "down" >,
    SYNSEM.LKEYS.KEYREL.PRED _down_p_rel ].

down_p := p_le &
  [ STEM < "down" >,
    SYNSEM.LKEYS.KEYREL.PRED _down_p_rel ].

down_prtcl := p_prtcl_le &
  [ STEM < "down" >,
    SYNSEM.LKEYS.KEYREL.PRED _down_p_sel_rel ].

downright_deg := adv_degree_spec_v_le &
  [ STEM < "downright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_downright_deg_rel" ].

downstroke_n1 := n_intr_le &
  [ STEM < "downstroke" >,
    SYNSEM.LKEYS.KEYREL.PRED "_downstroke_rel" ].

dr_ttl := n_title_le &
  [ STEM < "dr" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doctor_rel" ].

dr_ttl_2 := n_title_le &
  [ STEM < "dr", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_doctor_rel" ].

draft_n1 := n_ppof_le &
  [ STEM < "draft" >,
    SYNSEM.LKEYS.KEYREL.PRED "_draft_rel" ].

draw_aside_v1 := v_particle_np_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_aside_rel",
             LKEYS.--COMPKEY _aside_p_sel_rel ] ].

draw_aside_v2 := v_particle_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_aside_rel",
             LKEYS.--COMPKEY _aside_p_sel_rel ] ].

draw_away_v1 := v_particle_np_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_away_rel",
             LKEYS.--COMPKEY _away_p_sel_rel ] ].

draw_away_v2 := v_particle_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_away_rel",
             LKEYS.--COMPKEY _away_p_sel_rel ] ].

draw_back_v1 := v_particle_np_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

draw_back_v2 := v_particle_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

draw_forth_v1 := v_particle_np_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_forth_rel",
             LKEYS.--COMPKEY _forth_p_sel_rel ] ].

draw_on_v1 := v_particle_np_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

drawing_n1 := n_ppof_le &
  [ STEM < "drawing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drawing_rel" ].

Dresden_n1 := n_proper_le &
  [ STEM < "dresden" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dresden" ].

drink_n1 := n_intr_le &
  [ STEM < "drink" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drink_n_rel" ].

drink_v1 := v_np*_trans_le &
  [ STEM < "drink" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drink_v_rel" ].

drive_v1 := v_np_trans_le &
  [ STEM < "drive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drive_rel" ].

driver_n1 := n_ppof_le &
  [ STEM < "driver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_driver_rel" ].

drop_v1 := v_np_trans_le &
  [ STEM < "drop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drop_cause_v_rel" ].

drop_v2 := v_unacc_le &
  [ STEM < "drop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drop_v_rel" ].

drunk_a1 := adj_intrans_le &
  [ STEM < "drunk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drunk_rel" ].

due_a1 := adj_intrans_le &
  [ STEM < "due" >,
    SYNSEM.LKEYS.KEYREL.PRED "_due_rel" ].

due_to_p := p_le &
  [ STEM < "due", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _due_to_rel ].

dummy_a1 := adj_intrans_le &
  [ STEM < "dummy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dummy_rel" ].

duration_n1 := n_ppof_le &
  [ STEM < "duration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_duration_rel" ].

during := p_le &
  [ STEM < "during" >,
    SYNSEM.LKEYS.KEYREL.PRED _during_rel ].

Dusseldorf_n1 := n_proper_le &
  [ STEM < "dusseldorf" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dusseldorf" ].

duty_n1 := n_mass_count_le &
  [ STEM < "duty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_duty_rel" ].

each := det_part_sg_le &
  [ STEM < "each" >,
    SYNSEM.LKEYS.KEYREL.PRED _each_q_rel ].

each_other := n_recip_pro_le &
  [ STEM < "each", "other" > ].

earlier_a1 := adj_comp_le &
  [ STEM < "earlier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_early_rel" ].

earliest_a1 := adj_superl_le &
  [ STEM < "earliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_early_rel" ].

earliest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "earliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_early_rel" ].

early_a1 := adj_intrans_le &
  [ STEM < "early" >,
    SYNSEM.LKEYS.KEYREL.PRED "_early_rel" ].

early_adv := n_adv_wspec_le &
  [ STEM < "early" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED "_early_adv_rel" ] ].

earnest_a1 := adj_intrans_le &
  [ STEM < "earnest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_earnest_rel" ].

easily_adv1 := adv_int_vp_le &
  [ STEM < "easily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easily_rel" ].

easter := n_holiday_le &
  [ STEM < "easter" >,
    SYNSEM.LKEYS.KEYREL.CARG "easter" ].

easter_monday := n_holiday_le &
  [ STEM < "easter", "monday" >,
    SYNSEM.LKEYS.KEYREL.CARG "easter_monday" ].

easter_sunday := n_holiday_le &
  [ STEM < "easter", "sunday" >,
    SYNSEM.LKEYS.KEYREL.CARG "easter_sunday" ].

easter_weekend := n_holiday_le &
  [ STEM < "easter", "weekend" >,
    SYNSEM.LKEYS.KEYREL.CARG "easter_weekend" ].

easy_a1 := adj_intrans_le &
  [ STEM < "easy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easy_adj_rel" ].

easy_a2 := adj_reg_atrans_le &
  [ STEM < "easy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easy_adj_rel" ].

easy_a3 := adj_tough_atrans_le &
  [ STEM < "easy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easy_adj_rel" ].

easier_a1 := adj_comp_le &
  [ STEM < "easier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easy_adj_rel" ].

easiest := adj_superl_le &
  [ STEM < "easiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easy_adj_rel" ].

easiest_prd := adj_superl_prd_le &
  [ STEM < "the", "easiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easy_adj_rel" ].

eat1 := v_np*_trans_le &
  [ STEM < "eat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eat_rel" ].

education_n1 := n_mass_le &
  [ STEM < "education" >,
    SYNSEM.LKEYS.KEYREL.PRED "_education_rel" ].

educational_a1 := adj_intrans_le &
  [ STEM < "educational" >,
    SYNSEM.LKEYS.KEYREL.PRED "_educational_rel" ].

effect_n1 := n_ppof_le &
  [ STEM < "effect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_effect_rel" ].

efficient_a1 := adj_intrans_le &
  [ STEM < "efficient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_efficient_rel" ].

eh_root := adv_disc_posth_le &
  [ STEM < "eh" >,
    SYNSEM.LKEYS.KEYREL.CARG "eh" ].

eight := adj_bare_unspecified_card_one_le & 
  [ STEM < "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eight_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eight_hour := n_hour_le &
  [ STEM < "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eighteen := adj_bare_unspecified_card_two_le & 
  [ STEM < "eighteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

eighteenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "eighteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

eighteenth_day := n_day_of_month_le &
  [ STEM < "eighteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

eighteenth_day_num := n_day_of_month_le &
  [ STEM < "18th" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

eighteen_day_num := n_day_of_month_card_le &
  [ STEM < "18" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

eighteen_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits18ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

eighteen_day := n_day_of_month_card_le &
  [ STEM < "eighteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

eighth := adj_bare_unspecified_ord_one_le &
  [ STEM < "eighth" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eighth_day := n_day_of_month_le &
  [ STEM < "eighth" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eighth_day_num := n_day_of_month_le &
  [ STEM < "8th" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eight_day_num := n_day_of_month_card_le &
  [ STEM < "8" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eight_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits8ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eight_day := n_day_of_month_card_le &
  [ STEM < "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

eighty_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "eighty" >,
    SYNSEM.LKEYS.KEYREL.CARG "80" ].

eighty := adj_bare_unspecified_card_two_le & 
  [ STEM < "eighty" >,
    SYNSEM.LKEYS.KEYREL.CARG "80" ].

either_conj := conj_atomic_either_le &
  [ STEM < "either" > ].

either := adv_post_le &
  [ STEM < "either" >,
    SYNSEM.LKEYS.KEYREL.PRED "_either_also_rel" ].

either_det := det_part_le &
  [ STEM < "either" >,
    SYNSEM.LKEYS.KEYREL.PRED _either_q_rel ].

elect_v1 := v_subj_equi_le &
  [ STEM < "elect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elect_rel" ].

elect_v2 := v_np_trans_le &
  [ STEM < "elect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elect_rel" ].

eleven := adj_bare_unspecified_card_two_le & 
  [ STEM < "eleven" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

eleven_hour := n_hour_le &
  [ STEM < "eleven" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

eleventh := adj_bare_unspecified_ord_two_le &
  [ STEM < "eleventh" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

eleventh_day := n_day_of_month_le &
  [ STEM < "eleventh" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

eleventh_day_num := n_day_of_month_le &
  [ STEM < "11th" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

eleven_day := n_day_of_month_card_le &
  [ STEM < "eleven" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

eleven_day_ersatz := n_day_of_month_card_le &
  [ STEM < "digits11ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

eleven_day_num := n_day_of_month_card_le &
  [ STEM < "11" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

embarrassed_a1 := adj_intrans_le &
  [ STEM < "embarrassed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_embarrassed_rel" ].

emergency_n1 := n_intr_le &
  [ STEM < "emergency" >,
    SYNSEM.LKEYS.KEYREL.PRED "_emergency_rel" ].

eminent_a1 := adj_intrans_le &
  [ STEM < "eminent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eminent_rel" ].

employ_v1 := v_np_trans_le &
  [ STEM < "employ" >,
    SYNSEM.LKEYS.KEYREL.PRED "_employ_rel" ].

employee_n1 := n_ppof_le &
  [ STEM < "employee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_employee_rel" ].

employer_n1 := n_intr_le &
  [ STEM < "employer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_employer_rel" ].

emptiness_n1 := n_mass_le &
  [ STEM < "emptiness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_emptiness_rel" ].

empty_a1 := adj_intrans_le &
  [ STEM < "empty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_empty_rel" ].

enable_v1 := v_obj_equi_le &
  [ STEM < "enable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enable_rel" ].

enable_v2 := v_np_trans_le &
  [ STEM < "enable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enable_rel" ].

encourage1 := v_obj_equi_le &
  [ STEM < "encourage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_encourage_rel" ].

encourage_v1 := v_np_trans_cp_prop_le &
  [ STEM < "encourage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_encourage_rel" ].

end_n1 := n_intr_unspec_le &
  [ STEM < "end" >,
    SYNSEM.LKEYS.KEYREL.PRED "_end_n_rel" ].

end_n2 := n_ppcomp_oblig_le &
  [ STEM < "end" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_end_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

end_v1 := v_unacc_le &
  [ STEM < "end" >,
    SYNSEM.LKEYS.KEYREL.PRED "_end_v_rel" ].

end_v2 := v_np_trans_le &
  [ STEM < "end" >,
    SYNSEM.LKEYS.KEYREL.PRED "_end_cause_v_rel" ].

endorse_v1 := v_np_trans_le &
  [ STEM < "endorse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_endorse_rel" ].

engage_in_v1 := v_empty_prep_trans*_le &
  [ STEM < "engage" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_engage_in_rel",
             LKEYS.--OCOMPKEY _in_p_sel_rel ] ].

engaged_a1 := adj_intrans_le &
  [ STEM < "engaged" >,
    SYNSEM.LKEYS.KEYREL.PRED "_engaged_rel" ].

engineer_n1 := n_intr_le &
  [ STEM < "engineer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_engineer_rel" ].

english_a1 := adj_intrans_le &
  [ STEM < "english" >,
    SYNSEM.LKEYS.KEYREL.PRED "_english_rel" ].

English_n1 := n_proper_le &
  [ STEM < "english" >,
    SYNSEM.LKEYS.KEYREL.CARG "English" ].

english_n2 := n_intr_le &
  [ STEM < "english" >,
    SYNSEM.LKEYS.KEYREL.PRED "_english_n_rel" ].

enjoy_v1 := v_np_trans_le &
  [ STEM < "enjoy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enjoy_rel" ].

enjoy_v2 := v_subj_equi_prp_le &
  [ STEM < "enjoy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enjoy_rel" ].

enormous_a1 := adj_intrans_le &
  [ STEM < "enormous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enormous_rel" ].

enough_det := det_part_pl_mass_le &
  [ STEM < "enough" >,
    SYNSEM.LKEYS.KEYREL.PRED _enough_q_rel ].

enough := adv_int_vp_post_le &
  [ STEM < "enough" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enough_isect_rel" ].

entertainment_n1 := n_mass_le &
  [ STEM < "entertainment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entertainment_rel" ].

entire_a1 := adj_intrans_le &
  [ STEM < "entire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entire_rel" ].

entirely_adv1 := adv_int_vp_post_le &
  [ STEM < "entirely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entirely_adv_rel" ].

entrance_n1 := n_ppof_le &
  [ STEM < "entrance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entrance_rel" ].

entry_n1 := n_mass_count_le &
  [ STEM < "entry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entry_rel" ].

envisage_v1 := v_np_trans_le &
  [ STEM < "envisage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_envisage_rel" ].

epiphany := n_holiday_le &
  [ STEM < "epiphany" >,
    SYNSEM.LKEYS.KEYREL.CARG "epiphany" ].

equal_a1 := adj_trans_le &
  [ STEM < "equal" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_equal_adj_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

equal_v1 := v_np_trans_le &
  [ STEM < "equal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_equal_v_rel" ].

equally_deg := adv_degree_spec_v_le &
  [ STEM < "equally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_equally_deg_rel" ].

equipment_n1 := n_mass_le &
  [ STEM < "equipment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_equipment_rel" ].

er_root := adv_disc_preh_le &
  [ STEM < "er" >,
    SYNSEM.LKEYS.KEYREL.CARG "er" ].

Erfurt_n1 := n_proper_le &
  [ STEM < "erfurt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Erfurt" ].

escape_v1 := v_np*_trans_le &
  [ STEM < "escape" >,
    SYNSEM.LKEYS.KEYREL.PRED "_escape_v_rel" ].

especially_deg := adv_degree_spec_v_le &
  [ STEM < "especially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_especially_deg_rel" ].

especially := adv_vp_le &
  [ STEM < "especially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_especially_rel" ].

esquire_ttl := n_post_title_le &
  [ STEM < "esq" >,
    SYNSEM.LKEYS.KEYREL.PRED "_esquire_rel" ].

esquire_ttl_2 := n_post_title_le &
  [ STEM < "esq", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_esquire_rel" ].

essential_a1 := adj_intrans_le &
  [ STEM < "essential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_essential_rel" ].

essentially_adv1 := adv_vp_pre_le &
  [ STEM < "essentially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_essentially_rel" ].

essentially_adv2 := adv_s_pre_le &
  [ STEM < "essentially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_essentially_rel" ].

esteemed_a1 := adj_intrans_le &
  [ STEM < "esteemed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_esteemed_rel" ].

Ettlingen_n1 := n_proper_le &
  [ STEM < "ettlingen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ettlingen" ].

evaluate_v1 := v_np_trans_le &
  [ STEM < "evaluate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_evaluate_rel" ].

Eve_n1 := n_proper_le &
  [ STEM < "eve" >,
    SYNSEM.LKEYS.KEYREL.CARG "Eve" ].

even_adv1 := adv_vp_aux_le &
  [ STEM < "even" >,
    SYNSEM.LKEYS.KEYREL.PRED "_even_adv_rel" ].

even_adv2 := adv_s_pre_le &
  [ STEM < "even" >,
    SYNSEM.LKEYS.KEYREL.PRED "_even_adv_rel" ].

even_adj := adj_intrans_le &
  [ STEM < "even" >,
    SYNSEM.LKEYS.KEYREL.PRED "_even_rel" ].

evening_nc_n1 := n_day_part_nocomp_le &
  [ STEM < "evening" >,
    SYNSEM.LKEYS.KEYREL.PRED _evening_rel ].

evening_nc_pl_n1 := n_day_part_pl_nocomp_le &
  [ STEM < "evenings" >,
    SYNSEM.LKEYS.KEYREL.PRED _evening_rel ].

evening_sg_n1 := n_day_part_sg_le &
  [ STEM < "evening" >,
    SYNSEM.LKEYS.KEYREL.PRED _evening_rel ].

evening_pl_n1 := n_day_part_pl_le &
  [ STEM < "evenings" >,
    SYNSEM.LKEYS.KEYREL.PRED _evening_rel ].

evening_sg_def := n_def_day_part_sg_le &
  [ STEM < "evening" >,
    SYNSEM.LKEYS.KEYREL.PRED _def_evening_rel ].

evening_pl_def := n_def_day_part_pl_le &
  [ STEM < "evenings" >,
    SYNSEM.LKEYS.KEYREL.PRED _def_evening_rel ].

evenly_adv1 := adv_vp_le &
  [ STEM < "evenly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_evenly_rel" ].

event_n1 := n_ppof_le &
  [ STEM < "event" >,
    SYNSEM.LKEYS.KEYREL.PRED "_event_item_rel" ].

eventual_a1 := adj_intrans_le &
  [ STEM < "eventual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eventual_isect_rel" ].

eventually_adv1 := adv_int_vp_le &
  [ STEM < "eventually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eventually_isect_rel" ].

ever_adv1 := adv_vp_pre_le &
  [ STEM < "ever" >,
    SYNSEM.LKEYS.KEYREL.PRED _ever_rel ].

ever_adv2 := adv_s_pre_le &
  [ STEM < "ever" >,
    SYNSEM.LKEYS.KEYREL.PRED _ever_rel ].

every := det_sg_every_le &
  [ STEM < "every" >,
    SYNSEM.LKEYS.KEYREL.PRED _every_q_rel ].

everybody := n_generic_pro_le &
  [ STEM < "everybody" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED every_q_rel ] ].

everyone := n_generic_pro_le &
  [ STEM < "everyone" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED every_q_rel ] ].

everything := n_generic_pro_le &
  [ STEM < "everything" >,
    SYNSEM.LKEYS [ KEYREL.PRED thing_rel,
                   ALTKEYREL.PRED every_q_rel ] ].

evident_a1 := adj_intrans_le &
  [ STEM < "evident" >,
    SYNSEM.LKEYS.KEYREL.PRED "_evident_rel" ].

evidently_adv1 := adv_vp_aux_le &
  [ STEM < "evidently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_evidently_rel" ].

evidently_adv2 := adv_s_prop_pre_le &
  [ STEM < "evidently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_evidently_rel" ].

exact_a1 := adj_intrans_le &
  [ STEM < "exact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exact_rel" ].

exactly_deg := adv_degree_spec_jov_le &
  [ STEM < "exactly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exactly_deg_rel" ].

exaggerate_v1 := v_np*_trans_le &
  [ STEM < "exaggerate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exaggerate_rel" ].

exam_n1 := n_intr_le &
  [ STEM < "exam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exam_rel" ].

example_n1 := n_ppof_le &
  [ STEM < "example" >,
    SYNSEM.LKEYS.KEYREL.PRED "_example_rel" ].

exceedingly := adv_int_vp_post_le &
  [ STEM < "exceedingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exceedingly_rel" ].

excellent_a1 := adj_intrans_le &
  [ STEM < "excellent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excellent_rel" ].

except_for := p_le &
  [ STEM < "except", "for" >,
    SYNSEM.LKEYS.KEYREL.PRED _except_for_rel ].

except := p_le &
  [ STEM < "except" >,
    SYNSEM.LKEYS.KEYREL.PRED _except_rel ].

except_cp_p := p_subconj_le &
  [ STEM < "except" >,
    SYNSEM.LKEYS.KEYREL.PRED "_except_h_rel" ].

exception_n1 := n_ppcomp_le &
  [ STEM < "exception" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_exception_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

exceptionally_deg := adv_degree_spec_v_le &
  [ STEM < "exceptionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exceptionally_deg_rel" ].

exchange_v1 := v_empty_prep*_trans_le &
  [ STEM < "exchange" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_exchange_v_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

excited_a1 := adj_intrans_le &
  [ STEM < "excited" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excited_rel" ].

exclude_v1 := v_np_trans_le &
  [ STEM < "exclude" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exclude_rel" ].

exclusive_a1 := adj_intrans_le &
  [ STEM < "exclusive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exclusive_rel" ].

exclusively_adv1 := adv_int_vp_le &
  [ STEM < "exclusively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exclusively_rel" ].

excursion_n1 := n_intr_le &
  [ STEM < "excursion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excursion_rel" ].

excuse_v1 := v_np_trans_le &
  [ STEM < "excuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excuse_rel" ].

executive_n1 := n_ppof_le &
  [ STEM < "executive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_executive_n_rel" ].

exercise_n1 := n_mass_count_le &
  [ STEM < "exercise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exercise_n_rel" ].

exhaust_v1 := v_np_trans_le &
  [ STEM < "exhaust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exhaust_rel" ].

exhaustingly := adv_int_vp_post_le &
  [ STEM < "exhaustingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exhaustingly_rel" ].

exhibit_v1 := v_np_trans_le &
  [ STEM < "exhibit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exhibit_rel" ].

exhibit_v2 := v_cp_prop_non_trans_le &
  [ STEM < "exhibit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exhibit_rel" ].

exist_v1 := v_unacc_le &
  [ STEM < "exist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exist_v_rel" ].

existence_n1 := n_mass_le &
  [ STEM < "existence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_existence_rel" ].

exit_n1 := n_intr_le &
  [ STEM < "exit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exit_rel" ].

expect_v1 := v_np_trans_le &
  [ STEM < "expect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expect_rel" ].

expect_v2 := v_subj_equi_le &
  [ STEM < "expect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expect_rel" ].

expect_v3 := v_sor_le &
  [ STEM < "expect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expect_rel" ].

expect_v4 := v_unerg_le &
  [ STEM < "expect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expect_rel" ].

expel_v1 := v_np_trans_le &
  [ STEM < "expel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expel_rel" ].

expense_n1 := n_intr_le &
  [ STEM < "expense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expense_rel" ].

expensive_a1 := adj_intrans_le &
  [ STEM < "expensive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expensive_rel" ].

experience_n1 := n_mass_count_ppcomp_le &
  [ STEM < "experience" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_experience_rel",
             LKEYS.--COMPKEY _with_p_rel ] ].

experienced_a1 := adj_trans_le &
  [ STEM < "experienced" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_experienced_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

experiment_n1 := n_intr_le &
  [ STEM < "experiment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_experiment_n_rel" ].

expert_n1 := n_intr_le &
  [ STEM < "expert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expert_rel" ].

explain_v1 := v_pp_cp_fin_le &
  [ STEM < "explain" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_explain_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

explain_v2 := v_to*_trans*_le &
  [ STEM < "explain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_explain_rel" ].

explicitly_adv1 := adv_int_vp_le &
  [ STEM < "explicitly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_explicitly_rel" ].

extend_v1 := v_np_trans_le &
  [ STEM < "extend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extend_rel" ].

extended_a1 := adj_intrans_le &
  [ STEM < "extended" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extended_rel" ].

extension_n1 := n_ppof_le &
  [ STEM < "extension" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extension_rel" ].

extension_title := n_title_le &
  [ STEM < "extension" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extension_rel" ].

extensive_a1 := adj_intrans_le &
  [ STEM < "extensive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extensive_rel" ].

extensively := adv_int_vp_le &
  [ STEM < "extensively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extensively_rel" ].

extent_n1 := n_ppof_le &
  [ STEM < "extent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extent_rel" ].

external_a1 := adj_intrans_le &
  [ STEM < "external" >,
    SYNSEM.LKEYS.KEYREL.PRED "_external_rel" ].

externally := adv_int_vp_le &
  [ STEM < "externally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_externally_rel" ].

extra_a1 := adj_intrans_le &
  [ STEM < "extra" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extra_rel" ].

extreme_a1 := adj_intrans_le &
  [ STEM < "extreme" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extreme_rel" ].

extremely_deg := adv_degree_spec_v_le &
  [ STEM < "extremely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extremely_deg_rel" ].

eye_n1 := n_ppof_le &
  [ STEM < "eye" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eye_rel" ].

fabulous_a1 := adj_intrans_le &
  [ STEM < "fabulous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fabulous_rel" ].

face_n1 := n_ppof_le &
  [ STEM < "face" >,
    SYNSEM.LKEYS.KEYREL.PRED "_face_n_rel" ].

face_v1 := v_np_trans_le &
  [ STEM < "face" >,
    SYNSEM.LKEYS.KEYREL.PRED "_face_rel" ].

facility_n1 := n_intr_le &
  [ STEM < "facility" >,
    SYNSEM.LKEYS.KEYREL.PRED "_facility_rel" ].

fact_n1 := n_intr_le &
  [ STEM < "fact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fact_rel" ].

fact_n2 := n_cpcomp_fin_le &
  [ STEM < "fact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fact_c_rel" ].

factory_n1 := n_intr_le &
  [ STEM < "factory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_factory_rel" ].

fail_v1 := v_np_trans_le &
  [ STEM < "fail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fail_rel" ].

fail_v2 := v_ssr_le &
  [ STEM < "fail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fail1_rel" ].

fail_v3 := v_unerg_le &
  [ STEM < "fail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fail_rel" ].

fair_n1 := n_intr_le &
  [ STEM < "fair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fair_n_rel" ].

fair_a1 := adj_intrans_le &
  [ STEM < "fair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fair_isect_rel" ].

fairly_deg := adv_degree_spec_v_le &
  [ STEM < "fairly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fairly_rel" ].

fall_n1 := n_season_pp_le &
  [ STEM < "fall" >,
    SYNSEM.LKEYS.KEYREL.CARG "fall" ].

fall_n2 := n_season_np_le &
  [ STEM < "fall" >,
    SYNSEM.LKEYS.KEYREL.CARG "fall" ].

fall_n3 := n_intr_le &
  [ STEM < "fall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fall_n_rel" ].

fall_v1 := v_unacc_le &
  [ STEM < "fall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fall_v_rel" ].

false_a1 := adj_intrans_le &
  [ STEM < "false" >,
    SYNSEM.LKEYS.KEYREL.PRED "_false_rel" ].

family_n1 := n_ppof_le &
  [ STEM < "family" >,
    SYNSEM.LKEYS.KEYREL.PRED "_family_rel" ].

fantastic_a1 := adj_intrans_le &
  [ STEM < "fantastic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fantastic_rel" ].

fantastically := adv_int_vp_post_le &
  [ STEM < "fantastically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fantastically_rel" ].

far_a1 := adj_intrans_le &
  [ STEM < "far" >,
    SYNSEM.LKEYS.KEYREL.PRED "_far_rel" ].

farther_a1 := adj_comp_le &
  [ STEM < "farther" >,
    SYNSEM.LKEYS.KEYREL.PRED "_far_rel" ].

farthest_a1 := adj_superl_le &
  [ STEM < "farthest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_far_rel" ].

farthest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "farthest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_far_rel" ].

far := adv_int_vp_post_le &
  [ STEM < "far" >,
    SYNSEM.LKEYS.KEYREL.PRED "_far_deg_rel" ].

far_off := adv_int_vp_post_le &
  [ STEM < "far", "off" >,
    SYNSEM.LKEYS.KEYREL.PRED "_far_off_rel" ].

farm_n1 := n_intr_le &
  [ STEM < "farm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_farm_rel" ].

fast_a1 := adj_intrans_le &
  [ STEM < "fast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fast_rel" ].

fast := adv_int_vp_post_le &
  [ STEM < "fast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fast_adv_rel" ].

faster_a1 := adj_comp_le &
  [ STEM < "faster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fast_rel" ].

fastest_a1 := adj_superl_le &
  [ STEM < "fastest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fast_rel" ].

fastest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "fastest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fast_rel" ].

fat_a1 := adj_intrans_le &
  [ STEM < "fat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fat_rel" ].

father_n1 := n_ppof_le &
  [ STEM < "father" >,
    SYNSEM.LKEYS.KEYREL.PRED "_father_rel" ].

favor_n1 := n_intr_le &
  [ STEM < "favor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_favor_n_rel" ].

favorable_a1 := adj_intrans_le &
  [ STEM < "favorable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_favorable_rel" ].

favorably := adv_int_vp_le &
  [ STEM < "favorably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_favorably_rel" ].

fax_n1 := n_intr_le &
  [ STEM < "fax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fax_n_rel" ].

fax_v1 := v_ditrans_le &
  [ STEM < "fax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fax_v_rel" ].

fax_v2 := v_np_trans_le &
  [ STEM < "fax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fax_v_rel" ].

fear_n1 := n_mass_count_le &
  [ STEM < "fear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fear_rel" ].

feasible_a1 := adj_intrans_le &
  [ STEM < "feasible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feasible_rel" ].

february := n_month_le &
  [ STEM < "february" >,
    SYNSEM.LKEYS.KEYREL.CARG "feb" ].

february_abb_n1 := n_month_le &
  [ STEM < "feb" >,
    SYNSEM.LKEYS.KEYREL.CARG "feb" ].

february_2 := n_month_year_le &
  [ STEM < "february" >,
    SYNSEM.LKEYS.KEYREL.CARG "feb" ].

february_abb_n2 := n_month_year_le &
  [ STEM < "feb" >,
    SYNSEM.LKEYS.KEYREL.CARG "feb" ].

federal_a1 := adj_intrans_le &
  [ STEM < "federal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_federal_rel" ].

feel_v1 := v_np_trans_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_rel" ].

feel_v2 := v_sorb_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_rel" ].

feel_v3 := v_subj_equi_prd_adj_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_prd_rel" ].

feel_v4 := v_prdp_pp_ssr_adj_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_seem_rel" ].

feel_v5 := v_prdp_pp_ssr_prep_le &
  [ STEM < "feel" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_feel_seem_rel",
             LKEYS.--COMPKEY _like_p_rel ] ].

feel_v6 := v_expl_it_subj_like_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_seem_rel" ].

feel_v7 := v_cp_prop_non_trans_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_rel" ].

feel_v8 := v_cp_like_non_trans_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_rel" ].

Ferrari_n1 := n_proper_le &
  [ STEM < "ferrari" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ferrari" ].

festive_a1 := adj_intrans_le &
  [ STEM < "festive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_festive_rel" ].

festivities_n1 := n_plur_le &
  [ STEM < "festivities" >,
    SYNSEM.LKEYS.KEYREL.PRED "_festivities_rel" ].

fetch_v1 := v_np_trans_le &
  [ STEM < "fetch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fetch_rel" ].

few := det_part_pl_le &
  [ STEM < "few" >,
    SYNSEM.LKEYS.KEYREL.PRED _few_q_rel ].

few_a1 := adj_intrans_le &
  [ STEM < "few" >,
    SYNSEM.LKEYS.KEYREL.PRED "_few_adj_rel" ].

fewer_a1 := adj_comp_le &
  [ STEM < "fewer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_few_adj_rel" ].

fewest_a1 := adj_superl_le &
  [ STEM < "fewest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_few_adj_rel" ].

fewest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "fewest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_few_adj_rel" ].

field_n1 := n_ppof_le &
  [ STEM < "field" >,
    SYNSEM.LKEYS.KEYREL.PRED "_field_rel" ].

fifteen := adj_bare_unspecified_card_two_le & 
  [ STEM < "fifteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

fifteenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "fifteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

fifteenth_day := n_day_of_month_le &
  [ STEM < "fifteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

fifteenth_day_num := n_day_of_month_le &
  [ STEM < "15th" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

fifteen_day := n_day_of_month_card_le &
  [ STEM < "fifteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

fifteen_day_ersatz := n_day_of_month_card_le &
  [ STEM < "digits15ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

fifteen_day_num := n_day_of_month_card_le &
  [ STEM < "15" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

fifth := adj_bare_unspecified_ord_one_le &
  [ STEM < "fifth" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

fifth_day := n_day_of_month_le &
  [ STEM < "fifth" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

five_day := n_day_of_month_card_le &
  [ STEM < "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

five_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits5ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

five_day_num := n_day_of_month_card_le &
  [ STEM < "5" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

fifth_day_num := n_day_of_month_le &
  [ STEM < "5th" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

fiftieth := adj_bare_unspecified_ord_two_le &
  [ STEM < "fiftieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "50" ].

fifty_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "fifty" >,
    SYNSEM.LKEYS.KEYREL.CARG "50" ].

fifty := adj_bare_unspecified_card_two_le & 
  [ STEM < "fifty" >,
    SYNSEM.LKEYS.KEYREL.CARG "50" ].

figure_n1 := n_ppof_le &
  [ STEM < "figure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_figure_n_rel" ].

figure_v3 := v_cp_non_trans_le &
  [ STEM < "figure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_figure_v_rel" ].

figure_out_v1 := v_particle_np_le &
  [ STEM < "figure" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_figure_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

figure_out_v2 := v_particle_cp_le &
  [ STEM < "figure" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_figure_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

fill_v1 := v_np_trans_le &
  [ STEM < "fill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fill_rel" ].

fill_v2 := v_particle_np_le &
  [ STEM < "fill" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fill_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

final_a1 := adj_intrans_le &
  [ STEM < "final" >,
    SYNSEM.LKEYS.KEYREL.PRED "_final_rel" ].

finally_adv1 := adv_int_vp_le &
  [ STEM < "finally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finally_rel" ].

find_out_v1 := v_particle_pp_le &
  [ STEM < "find" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_find_out_rel",
             LKEYS [ --COMPKEY _out_p_sel_rel,
                     --OCOMPKEY _about_p_rel ] ] ].

find_out_v2 := v_particle_cp_le &
  [ STEM < "find" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_find_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

find_out_v3 := v_particle_np_le &
  [ STEM < "find" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_find_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

find_out_v4 := v_particle_le &
  [ STEM < "find" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_find_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

find_v1 := v_np_trans_le &
  [ STEM < "find" >,
    SYNSEM.LKEYS.KEYREL.PRED "_find_v_rel" ].

find_v2 := v_ditrans_only_le &
  [ STEM < "find" >,
    SYNSEM.LKEYS.KEYREL.PRED "_find_v_rel" ].

find_v3 := v_cp_only_prop_non_trans_le &
  [ STEM < "find" >,
    SYNSEM.LKEYS.KEYREL.PRED "_find_v_rel" ].

fine_root_pre := adv_disc_preh_le &
  [ STEM < "fine" >,
    SYNSEM.LKEYS.KEYREL.CARG "fine" ].

fine_a1 := adv_int_vp_post_le &
  [ STEM < "fine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fine_adv_rel" ].

fine_adj := adj_intrans_le &
  [ STEM < "fine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fine_rel" ].

finer_a1 := adj_comp_le &
  [ STEM < "finer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fine_rel" ].

finest_a1 := adj_superl_le &
  [ STEM < "finest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fine_rel" ].

finest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "finest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fine_rel" ].

finish_v1 := v_np_trans_le &
  [ STEM < "finish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finish_rel" ].

finish_v2 := v_particle_np_le &
  [ STEM < "finish" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_finish_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

finish_v3 := v_subj_equi_prp_le &
  [ STEM < "finish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finish_rel" ].

finished_a1 := adj_intrans_le &
  [ STEM < "finished" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finished_rel" ].

finite_a1 := adj_intrans_le &
  [ STEM < "finite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finite_rel" ].

fire_v1 := v_np_trans_le &
  [ STEM < "fire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fire_v_rel" ].

fire_v2 := v_particle_np_le &
  [ STEM < "fire" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fire_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

firm_n1 := n_intr_le &
  [ STEM < "firm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_firm_rel" ].

firm_a1 := adj_intrans_le &
  [ STEM < "firm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_firm_a_rel" ].

first_day := n_day_of_month_le &
  [ STEM < "first" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

one_day := n_day_of_month_card_le &
  [ STEM < "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

one_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits1ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

one_day_num := n_day_of_month_card_le &
  [ STEM < "1" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

first_day_num := n_day_of_month_le &
  [ STEM < "1st" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

first_thing_adv1 := adv_int_vp_post_le &
  [ STEM < "first", "thing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_thing_rel" ].

first_of_may := n_holiday_le &
  [ STEM < "the", "first", "of", "may" >,
    SYNSEM.LKEYS.KEYREL.CARG "first_of_may" ].

firstly_adv1 := adv_vp_pre_le &
  [ STEM < "firstly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_firstly_rel" ].

firstly_adv2 := adv_s_pre_le &
  [ STEM < "firstly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_firstly_rel" ].

fish_n1 := n_intr_le &
  [ STEM < "fish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fish_n_rel" ].

fish_v1 := v_unerg_le &
  [ STEM < "fish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fish_v_rel" ].

fist_n1 := n_intr_le &
  [ STEM < "fist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fist_rel" ].

fit_a1 := adj_intrans_le &
  [ STEM < "fit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fit_adj_rel" ].

fit_in_v1 := v_particle_np_le &
  [ STEM < "fit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fit_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

fit_in_with_v1 := v_particle_pp_le &
  [ STEM < "fit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fit_in_rel",
             LKEYS [ --COMPKEY _in_p_sel_rel,
                     --OCOMPKEY _with_p_rel ] ] ].

fit_in_v2 := v_particle_le &
  [ STEM < "fit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fit_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

fit_v1 := v_unacc_le &
  [ STEM < "fit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fit_v_rel" ].

fit_v2 := v_np_trans_le &
  [ STEM < "fit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fit_v2_rel" ].

five := adj_bare_unspecified_card_one_le & 
  [ STEM < "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

five_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

five_hour := n_hour_le &
  [ STEM < "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

fix_v1 := v_np_trans_le &
  [ STEM < "fix" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fix_rel" ].

flat_a1 := adj_intrans_le &
  [ STEM < "flat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flat_rel" ].

flatly_adv1 := adv_int_vp_le &
  [ STEM < "flatly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flatly_rel" ].

Flex_n1 := n_proper_le &
  [ STEM < "flex" >,
    SYNSEM.LKEYS.KEYREL.CARG "Flex" ].

flexible_a1 := adj_intrans_le &
  [ STEM < "flexible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flexible_rel" ].

flexibly := adv_int_vp_le &
  [ STEM < "flexibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flexibly_rel" ].

flight_n1 := n_intr_le &
  [ STEM < "flight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flight_rel" ].

floor_n1 := n_ppof_le &
  [ STEM < "floor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_floor_rel" ].

fly_v1 := v_unerg_le &
  [ STEM < "fly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fly_rel" ].

fly_n1 := n_intr_le &
  [ STEM < "fly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fly_n_rel" ].

fly_off_v1 := v_particle_le &
  [ STEM < "fly" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fly_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

focus_v1 := v_empty_prep_intrans_le &
  [ STEM < "focus" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_focus_v_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

focus_v2 := v_unerg_le &
  [ STEM < "focus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_focus_v_rel" ].

follow_around_v1 := v_particle_np_le &
  [ STEM < "follow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_follow_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

follow_up_v1 := v_particle_pp_le &
  [ STEM < "follow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_follow_up_rel",
             LKEYS [ --COMPKEY _up_p_sel_rel,
                     --OCOMPKEY _on_p_rel ] ] ].

follow_up_v2 := v_particle_np_le &
  [ STEM < "follow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_follow_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

follow_up_v3 := v_particle_le &
  [ STEM < "follow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_follow_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

follow_v1 := v_np*_trans_le &
  [ STEM < "follow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_follow_rel" ].

fond_a1 := adj_trans_le &
  [ STEM < "fond" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fond_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

food_n1 := n_mass_count_le &
  [ STEM < "food" >,
    SYNSEM.LKEYS.KEYREL.PRED "_food_rel" ].

fool_n1 := n_intr_le &
  [ STEM < "fool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fool_n_rel" ].

for := p_le &
  [ STEM < "for" >,
    SYNSEM.LKEYS.KEYREL.PRED _for_p_rel ].

for_prtcl := p_prtcl_le &
  [ STEM < "for" >,
    SYNSEM.LKEYS.KEYREL.PRED _for_p_sel_rel ].

for_c := comp_for_le &
  [ STEM < "for" > ].

for_example_root_pre := adv_disc_preh_le &
  [ STEM < "for", "example" >,
    SYNSEM.LKEYS.KEYREL.CARG "for_example" ].

for_example_root_post := adv_disc_posth_le &
  [ STEM < "for", "example" >,
    SYNSEM.LKEYS.KEYREL.CARG "for_example" ].

for_once_adv1 := adv_int_vp_post_le &
  [ STEM < "for", "once" >,
    SYNSEM.LKEYS.KEYREL.PRED "_for_once_rel" ].

for_the_time_being_adv := adv_int_vp_post_le &
  [ STEM < "for", "the", "time", "being" >,
    SYNSEM.LKEYS.KEYREL.PRED "_for_the_time_being_rel" ].

for_lack_of_p := p_le &
  [ STEM < "for", "lack", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _for_lack_of_rel ].

for_example_a1 := adv_int_vp_post_le &
  [ STEM < "for", "example" >,
    SYNSEM.LKEYS.KEYREL.PRED "_for_example_rel" ].

for_free_a1 := adv_int_vp_post_le &
  [ STEM < "for", "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_for_free_rel" ].

foregoing_a1 := adj_intrans_le &
  [ STEM < "foregoing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foregoing_rel" ].

foreign_a1 := adj_intrans_le &
  [ STEM < "foreign" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foreign_rel" ].

foremost_a1 := adj_intrans_le &
  [ STEM < "foremost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foremost_rel" ].

forestall_v1 := v_np_trans_le &
  [ STEM < "forestall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forestall_rel" ].

forget_v1 := v_np_trans_le &
  [ STEM < "forget" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forget_rel" ].

forget_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "forget" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forget_rel" ].

forget_v3 := v_unerg_le &
  [ STEM < "forget" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forget_rel" ].

forget_v4 := v_subj_equi_le &
  [ STEM < "forget" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forget_rel" ].

forget_about_v := v_empty_prep_intrans_le &
  [ STEM < "forget" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_forget_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

form_v1 := v_np_trans_le &
  [ STEM < "form" >,
    SYNSEM.LKEYS.KEYREL.PRED "_form_cause_v_rel" ].

form_v2 := v_unacc_le &
  [ STEM < "form" >,
    SYNSEM.LKEYS.KEYREL.PRED "_form_v_rel" ].

formality_n1 := n_intr_le &
  [ STEM < "formality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_formality_rel" ].

former_a1 := adj_intrans_le &
  [ STEM < "former" >,
    SYNSEM.LKEYS.KEYREL.PRED "_former_rel" ].

formerly_adv1 := adv_vp_pre_le &
  [ STEM < "formerly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_formerly_rel" ].

formerly_adv2 := adv_s_pre_le &
  [ STEM < "formerly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_formerly_rel" ].

forth_adv := pp_le &
  [ STEM < "forth" >,
    SYNSEM.LKEYS.KEYREL.PRED _forth_p_rel ].

forth_prtcl := pp_prtcl_le &
  [ STEM < "forth" >,
    SYNSEM.LKEYS.KEYREL.PRED _forth_p_sel_rel ].

forthcoming_a1 := adj_intrans_le &
  [ STEM < "forthcoming" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forthcoming_rel" ].

fortieth := adj_bare_unspecified_ord_two_le &
  [ STEM < "fortieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "40" ].

fortnight_n1 := n_intr_temp_nd_le &
  [ STEM < "fortnight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fortnight_rel" ].

fortnightly_adv1 := adv_int_vp_post_le &
  [ STEM < "fortnightly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fortnightly_rel" ].

fortunate_a1 := adj_intrans_le &
  [ STEM < "fortunate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fortunate_rel" ].

fortunately_adv1 := adv_int_vp_le &
  [ STEM < "fortunately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fortunately_rel" ].

fortune_n1 := n_intr_le &
  [ STEM < "fortune" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fortune_rel" ].

forty_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "forty" >,
    SYNSEM.LKEYS.KEYREL.CARG "40" ].

forty := adj_bare_unspecified_card_two_le & 
  [ STEM < "forty" >,
    SYNSEM.LKEYS.KEYREL.CARG "40" ].

forward_adv := pp_le &
  [ STEM < "forward" >,
    SYNSEM.LKEYS.KEYREL.PRED _forward_p_rel ].

forward_prtcl := p_prtcl_le &
  [ STEM < "forward" >,
    SYNSEM.LKEYS.KEYREL.PRED _forward_p_sel_rel ].

forwards_adv1 := adv_int_vp_post_le &
  [ STEM < "forwards" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forwards_rel" ].

foundation_n1 := n_ppof_le &
  [ STEM < "foundation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foundation_rel" ].

four := adj_bare_unspecified_card_one_le & 
  [ STEM < "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

four_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

four_hour := n_hour_le &
  [ STEM < "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

fourteen := adj_bare_unspecified_card_two_le & 
  [ STEM < "fourteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

fourteenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "fourteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

fourteenth_day := n_day_of_month_le &
  [ STEM < "fourteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

fourteen_day := n_day_of_month_card_le &
  [ STEM < "fourteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

fourteen_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits14ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

fourteen_day_num := n_day_of_month_card_le &
  [ STEM < "14" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

fourteenth_day_num := n_day_of_month_le &
  [ STEM < "14th" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

fourth := adj_bare_unspecified_ord_one_le &
  [ STEM < "fourth" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

fourth_day := n_day_of_month_le &
  [ STEM < "fourth" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

four_day := n_day_of_month_card_le &
  [ STEM < "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

four_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits4ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

four_day_num := n_day_of_month_card_le &
  [ STEM < "4" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

fourth_day_num := n_day_of_month_le &
  [ STEM < "4th" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

framework_n1 := n_ppof_le &
  [ STEM < "framework" >,
    SYNSEM.LKEYS.KEYREL.PRED "_framework_rel" ].

France_n1 := n_proper_le &
  [ STEM < "france" >,
    SYNSEM.LKEYS.KEYREL.CARG "France" ].

frank_a1 := adj_intrans_le &
  [ STEM < "frank" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frank_rel" ].

Frankfurt_n1 := n_proper_le &
  [ STEM < "frankfurt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Frankfurt" ].

free_a1 := adj_intrans_le &
  [ STEM < "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_free_rel" ].

free_a2 := adj_reg_equi_le &
  [ STEM < "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_free_rel" ].

free_v1 := v_np_trans_le &
  [ STEM < "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_free_v_rel" ].

free_v2 := v_particle_np_le &
  [ STEM < "free" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_free_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

freely := adv_int_vp_le &
  [ STEM < "freely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_freely_rel" ].

french_a1 := adj_intrans_le &
  [ STEM < "french" >,
    SYNSEM.LKEYS.KEYREL.PRED "_french_rel" ].

frequent_a1 := adj_intrans_le &
  [ STEM < "frequent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frequent_isect_rel" ].

frequently_adv1 := adv_vp_le &
  [ STEM < "frequently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frequently_rel" ].

fresh_a1 := adj_intrans_le &
  [ STEM < "fresh" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fresh_rel" ].

freshly_adv1 := adv_int_vp_post_le &
  [ STEM < "freshly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_freshly_rel" ].

friday_n1 := n_day_of_week_le &
  [ STEM < "friday" >,
    SYNSEM.LKEYS.KEYREL.CARG "fri" ].

friday_n2 := n_day_of_week_le &
  [ STEM < "fri" >,
    SYNSEM.LKEYS.KEYREL.CARG "fri" ].

friend_n1 := n_ppof_le &
  [ STEM < "friend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_friend_rel" ].

friendly_a1 := adj_intrans_le &
  [ STEM < "friendly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_friendly_rel" ].

friendship_n1 := n_mass_le &
  [ STEM < "friendship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_friendship_rel" ].

fright_n1 := n_mass_le &
  [ STEM < "fright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fright_rel" ].

from := p_reg_le &
  [ STEM < "from" >,
    SYNSEM.LKEYS.KEYREL.PRED _from_p_rel ].

from_prtcl := p_prtcl_le &
  [ STEM < "from" >,
    SYNSEM.LKEYS.KEYREL.PRED _from_p_sel_rel ].

from_ppcomp := p_ppcomp_le &
  [ STEM < "from" >,
    SYNSEM.LKEYS.KEYREL.PRED _from_p_rel ].

from_to_temp := p_ditrans_from_to_le &
  [ STEM < "from" >,
    SYNSEM [ LKEYS.KEYREL.PRED _from_p_to_rel,
             LKEYS [ --COMPKEY temp_abstr_rel,
                     --OCOMPKEY abstr_until_rel ] ] ].

from_to_nontemp := p_ditrans_from_to_le &
  [ STEM < "from" >,
    SYNSEM [ LKEYS.KEYREL.PRED _from_p_to_rel,
             LKEYS [ --COMPKEY norm_nom_rel,
                     --OCOMPKEY _to_p_rel ] ] ].

from_time_on := p_ditrans_le &
  [ STEM < "from" >,
    SYNSEM [ LKEYS.KEYREL.PRED _from_time_on_rel,
             LKEYS [ --COMPKEY temp_abstr_rel,
                     --OCOMPKEY _on_p_sel_rel ] ] ].

fruit_n1 := n_mass_count_le &
  [ STEM < "fruit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fruit_rel" ].

frustration_n1 := n_mass_count_le &
  [ STEM < "frustration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frustration_rel" ].

full_a1 := adj_intrans_le &
  [ STEM < "full" >,
    SYNSEM.LKEYS.KEYREL.PRED "_full_rel" ].

fully_adv1 := adv_int_vp_le &
  [ STEM < "fully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fully_rel" ].

funny_a1 := adj_intrans_le &
  [ STEM < "funny" >,
    SYNSEM.LKEYS.KEYREL.PRED "_funny_rel" ].

further_a1 := adj_intrans_le &
  [ STEM < "further" >,
    SYNSEM.LKEYS.KEYREL.PRED "_further_rel" ].

further := adv_comp_vp_le &
  [ STEM < "further" >,
    SYNSEM.LKEYS.KEYREL.PRED "_far_deg_rel" ].

furthermore_root_pre := adv_disc_preh_le &
  [ STEM < "furthermore" >,
    SYNSEM.LKEYS.KEYREL.CARG "furthermore" ].

furthermore_root_post := adv_disc_posth_le &
  [ STEM < "furthermore" >,
    SYNSEM.LKEYS.KEYREL.CARG "furthermore" ].

future_a1 := adj_intrans_le &
  [ STEM < "future" >,
    SYNSEM.LKEYS.KEYREL.PRED "_future_isect_rel" ].

future_n1 := n_ppof_le &
  [ STEM < "future" >,
    SYNSEM.LKEYS.KEYREL.PRED "_future_rel" ].

gain_v1 := v_np_trans_le &
  [ STEM < "gain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gain_v_rel" ].

game_n1 := n_intr_le &
  [ STEM < "game" >,
    SYNSEM.LKEYS.KEYREL.PRED "_game_rel" ].

gap_n1 := n_intr_le &
  [ STEM < "gap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gap_rel" ].

garage_n1 := n_intr_le &
  [ STEM < "garage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_garage_rel" ].

garden_n1 := n_intr_le &
  [ STEM < "garden" >,
    SYNSEM.LKEYS.KEYREL.PRED "_garden_n_rel" ].

gate_n1 := n_intr_le &
  [ STEM < "gate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gate_rel" ].

gather_v1 := v_unerg_le &
  [ STEM < "gather" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gather_coll_rel" ].

gather_v2 := v_np_trans_le &
  [ STEM < "gather" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gather_rel" ].

gathering_n1 := n_ppof_le &
  [ STEM < "gathering" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gathering_rel" ].

generally_adv1 := adv_vp_pre_le &
  [ STEM < "generally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_generally_rel" ].

generally_adv2 := adv_s_pre_le &
  [ STEM < "generally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_generally_rel" ].

gentleman_n1 := n_intr_le &
  [ STEM < "gentleman" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gentleman_rel" ].

genuine_a1 := adj_intrans_le &
  [ STEM < "genuine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_genuine_rel" ].

german_a1 := adj_intrans_le &
  [ STEM < "german" >,
    SYNSEM.LKEYS.KEYREL.PRED "_german_rel" ].

German_n1 := n_proper_le &
  [ STEM < "german" >,
    SYNSEM.LKEYS.KEYREL.CARG "German" ].

Germany_n1 := n_proper_le &
  [ STEM < "germany" >,
    SYNSEM.LKEYS.KEYREL.CARG "Germany" ].

get_back_v1 := v_particle_pp_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_back_rel",
             LKEYS [ --COMPKEY _back_p_sel_rel,
                     --OCOMPKEY _to_p_rel ] ] ].

get_back_v2 := v_particle_np_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

get_down_v2 := v_particle_np_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

get_down_to_v1 := v_particle_empty_pp_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_down_to_rel",
             LKEYS [ --COMPKEY _down_p_sel_rel,
                     --OCOMPKEY _to_p_sel_rel ] ] ].

get_hold_v1 := v_empty_prep_nbar_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_hold_rel",
             LKEYS [ --COMPKEY _hold_n_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

get_ahold_v1 := v_empty_prep_nbar_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_hold_rel",
             LKEYS [ --COMPKEY _ahold_n_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

get_off_v2 := v_particle_np_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

get_out_v2 := v_particle_np_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

get_in_v1 := v_particle_np_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

get_v1 := v_ditrans_only_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_rel",
             LKEYS.--OCOMPKEY non_temp_nom_rel ] ].

get_v2 := v_np_non_trans_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_rel",
             LKEYS.--COMPKEY non_temp_nom_rel ] ].

get_v3 := v_np_trans_double_pp*_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

get_prd_v1 := v_subj_equi_prd_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_state_rel" ] ].

get_prd_v2 := v_obj_equi_non_trans_prd_le &
  [ STEM < "get" >,
    SYNSEM.LKEYS.KEYREL.PRED "_get_state_rel" ].

get_through_v1 := v_particle_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

get_to_v1 := v_ssr_le &
  [ STEM < "get" >,
    SYNSEM.LKEYS.KEYREL.PRED "_get_to_rel" ].

get_to_v2 := v_obj_equi_le &
  [ STEM < "get" >,
    SYNSEM.LKEYS.KEYREL.PRED "_get_cause_rel" ].

get_up_v1 := v_particle_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

give_v1 := v_ditrans_only_le &
  [ STEM < "give" >,
    SYNSEM.LKEYS.KEYREL.PRED "_give_rel" ].

give_v2 := v_np_trans_le &
  [ STEM < "give" >,
    SYNSEM.LKEYS.KEYREL.PRED "_give_rel" ].

give_v3 := v_empty_to_trans_le &
  [ STEM < "give" >,
    SYNSEM.LKEYS.KEYREL.PRED "_give_rel" ].

glad_a1 := adj_reg_equi_le &
  [ STEM < "glad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_glad_rel" ].

glad_a2 := adj_reg_cp_le &
  [ STEM < "glad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_glad_rel" ].

glad_a3 := adj_intrans_le &
  [ STEM < "glad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_glad_rel" ].

gladly_adv1 := adv_int_vp_le &
  [ STEM < "gladly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gladly_rel" ].

glass_n1 := n_ppof_le &
  [ STEM < "glass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_glass_rel" ].

go_along_with_v1 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_along_rel",
             LKEYS.--COMPKEY _along_p_sel_rel ] ].

go_on_v1 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

go_out_v1 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

go_over_v1 := v_empty_prep_intrans_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

go_through_v1 := v_empty_prep_intrans_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

go_through_v2 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

go_v1 := v_unerg_le &
  [ STEM < "go" >,
    SYNSEM.LKEYS.KEYREL.PRED "_go_rel" ].

go_v2 := v_subj_equi_prp_le &
  [ STEM < "go" >,
    SYNSEM.LKEYS.KEYREL.PRED "_go_ing_rel" ].

go_along_v1 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_along_rel",
             LKEYS.--COMPKEY _along_p_sel_rel ] ].

go_away_v1 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_away_rel",
             LKEYS.--COMPKEY _away_p_sel_rel ] ].

go_off_v1 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

go_state_v1 := v_subj_equi_prd_adj_le &
  [ STEM < "go" >,
    SYNSEM.LKEYS.KEYREL.PRED "_go_state_rel" ].

go_bse_vp_v1 := v_subj_equi_bse_go_le & 
  [ STEM < "go" >,
    SYNSEM.LKEYS.KEYREL.PRED "_go_state_rel" ].

goal_n1 := n_ppof_le &
  [ STEM < "goal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_goal_rel" ].

god_root_pre := adv_disc_preh_le &
  [ STEM < "god" >,
    SYNSEM.LKEYS.KEYREL.CARG "god" ].

god_root_post := adv_disc_posth_le &
  [ STEM < "god" >,
    SYNSEM.LKEYS.KEYREL.CARG "god" ].

going_by := p_le &
  [ STEM < "going", "by" >,
    SYNSEM.LKEYS.KEYREL.PRED _going_by_rel ].

going_to_v1 := va_quasimodal_le &
  [ STEM < "going" >,
    SYNSEM.LKEYS.KEYREL.PRED _going_to_rel ].

gonna_v1 := va_quasimodal_bse_le &
  [ STEM < "gonna" >,
    SYNSEM.LKEYS.KEYREL.PRED _going_to_rel ].

golden_a1 := adj_intrans_le &
  [ STEM < "golden" >,
    SYNSEM.LKEYS.KEYREL.PRED "_golden_rel" ].

good_a1 := adj_trans_oblig_le &
  [ STEM < "good" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_good_j_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

good_a2 := adj_trans_le &
  [ STEM < "good" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_good_j_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

good_root := adv_disc_preh_le &
  [ STEM < "good" >,
    SYNSEM.LKEYS.KEYREL.CARG "good" ].

no_good_a1 := adj_intrans_le &
  [ STEM < "no", "good" >,
    SYNSEM.LKEYS.KEYREL.PRED "_no_good_j_rel" ].

good_friday := n_holiday_le &
  [ STEM < "good", "friday" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_friday" ].

good_heavens_pre := adv_disc_preh_le &
  [ STEM < "good", "heavens" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_heavens" ].

good_heavens_post := adv_disc_posth_le &
  [ STEM < "good", "heavens" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_heavens" ].

goodbye_n1 := n_intr_le &
  [ STEM < "goodbye" >,
    SYNSEM.LKEYS.KEYREL.PRED "_goodbye_n_rel" ].

goods_n1 := n_plur_le &
  [ STEM < "goods" >,
    SYNSEM.LKEYS.KEYREL.PRED "_goods_rel" ].

goose_n1 := n_mass_count_le &
  [ STEM < "goose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_goose_n_rel" ].

gosh_root_pre := adv_disc_preh_le &
  [ STEM < "gosh" >,
    SYNSEM.LKEYS.KEYREL.CARG "gosh" ].

gosh_root_post := adv_disc_posth_le &
  [ STEM < "gosh" >,
    SYNSEM.LKEYS.KEYREL.CARG "gosh" ].

goodness_root := adv_disc_preh_le &
  [ STEM < "goodness" >,
    SYNSEM.LKEYS.KEYREL.CARG "goodness" ].

my_goodness_root := adv_disc_preh_le &
  [ STEM < "my", "goodness" >,
    SYNSEM.LKEYS.KEYREL.CARG "my_goodness" ].

my_god_root := adv_disc_preh_le &
  [ STEM < "my", "god" >,
    SYNSEM.LKEYS.KEYREL.CARG "my_god" ].

got_poss := v_poss_got_le &
  [ STEM < "got" >,
    SYNSEM.LKEYS.KEYREL.PRED "_have_rel" ].

got_poss_prd := v_poss_got_prd_le &
  [ STEM < "got" >,
    SYNSEM.LKEYS.KEYREL.PRED "_have_prd_rel" ].

got_to_v1 := va_quasimodal_psp_le &
  [ STEM < "got" >,
    SYNSEM.LKEYS.KEYREL.PRED _got_to_rel ].

government_n1 := n_ppof_le &
  [ STEM < "government" >,
    SYNSEM.LKEYS.KEYREL.PRED "_government_rel" ].

grab_v1 := v_np_trans_le &
  [ STEM < "grab" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grab_rel" ].

Gran_n1 := n_proper_le &
  [ STEM < "gran" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gran" ].

Grand_Canyon := n_intr_named_le &
  [ STEM < "grand", "canyon" >,
    SYNSEM.LKEYS.KEYREL.CARG "grand_canyon" ].

grandmother_n1 := n_ppof_le &
  [ STEM < "grandmother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grandmother_rel" ].

grandma_n1 := n_ppof_le &
  [ STEM < "grandma" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grandma_rel" ].

grandfather_n1 := n_ppof_le &
  [ STEM < "grandfather" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grandfather_rel" ].

grandpa_n1 := n_ppof_le &
  [ STEM < "grandpa" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grandpa_rel" ].

grasp_v1 := v_np_trans_le &
  [ STEM < "grasp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grasp_v_rel" ].

grasp_v2 := v_cp_non_trans_le &
  [ STEM < "grasp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grasp_v_rel" ].

gratis_adv1 := adv_int_vp_post_le &
  [ STEM < "gratis" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gratis_rel" ].

gratuitously_adv1 := adv_int_vp_le &
  [ STEM < "gratuitously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gratuitously_rel" ].

grave_a1 := adj_intrans_le &
  [ STEM < "grave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grave_rel" ].

great_root_pre := adv_disc_preh_le &
  [ STEM < "great" >,
    SYNSEM.LKEYS.KEYREL.CARG "great" ].

great_root_post := adv_disc_posth_le &
  [ STEM < "great" >,
    SYNSEM.LKEYS.KEYREL.CARG "great" ].

great_a1 := adv_int_vp_post_le &
  [ STEM < "great" >,
    SYNSEM.LKEYS.KEYREL.PRED "_great_adv_rel" ].

great_adj := adj_intrans_le &
  [ STEM < "great" >,
    SYNSEM.LKEYS.KEYREL.PRED "_great_rel" ].

greatly_adv1 := adv_int_vp_le &
  [ STEM < "greatly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_greatly_rel" ].

greek_a1 := adj_intrans_le &
  [ STEM < "greek" >,
    SYNSEM.LKEYS.KEYREL.PRED "_greek_rel" ].

Greek_n1 := n_proper_le &
  [ STEM < "greek" >,
    SYNSEM.LKEYS.KEYREL.CARG "Greek" ].

Greece_n1 := n_proper_le &
  [ STEM < "greece" >,
    SYNSEM.LKEYS.KEYREL.CARG "Greece" ].

greet_v1 := v_np_trans_le &
  [ STEM < "greet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_greet_rel" ].

greeting_n1 := n_intr_le &
  [ STEM < "greeting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_greeting_rel" ].

Grossheim_n1 := n_proper_le &
  [ STEM < "grossheim" >,
    SYNSEM.LKEYS.KEYREL.CARG "Grossheim" ].

ground_a1 := adj_intrans_le &
  [ STEM < "ground" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ground_adj_rel" ].

ground_n1 := n_mass_count_le &
  [ STEM < "ground" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ground_n_rel" ].

group_n1 := n_ppof_le &
  [ STEM < "group" >,
    SYNSEM.LKEYS.KEYREL.PRED "_group_n_rel" ].

grow_v1 := v_np_trans_le &
  [ STEM < "grow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grow_cause_v_rel" ].

grow_v2 := v_unacc_le &
  [ STEM < "grow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grow_v_rel" ].

guess_v1 := v_unerg_le &
  [ STEM < "guess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guess_rel" ].

guess_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "guess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guess_rel" ].

gun_n1 := n_intr_le &
  [ STEM < "gun" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gun_rel" ].

guy_n1 := n_intr_le &
  [ STEM < "guy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guy_rel" ].

ha_root_pre := adv_disc_preh_le &
  [ STEM < "ha" >,
    SYNSEM.LKEYS.KEYREL.CARG "ha" ].

ha_root_post := adv_disc_posth_le &
  [ STEM < "ha" >,
    SYNSEM.LKEYS.KEYREL.CARG "ha" ].

ha_ha_root_pre := adv_disc_preh_le &
  [ STEM < "ha", "ha" >,
    SYNSEM.LKEYS.KEYREL.CARG "ha_ha" ].

ha_ha_root_post := adv_disc_posth_le &
  [ STEM < "ha", "ha" >,
    SYNSEM.LKEYS.KEYREL.CARG "ha_ha" ].

had_aux := va_had_le &
  [ STEM < "had" > ].

had_aux_cx := va_had_cx_le &
  [ STEM < "d" > ].

had_aux_cx_2 := va_had_cx_le &
  [ STEM < "'d" > ].

had_aux_subj := va_had_subj_le &
  [ STEM < "had" > ].

hadnt_aux_1 := va_had_neg_le &
  [ STEM < "hadn't" > ].

hadnt_aux_2 := va_had_neg_le &
  [ STEM < "hadn", "'t" > ].

hadnt_aux_subj_1 := va_had_subj_neg_le &
  [ STEM < "hadn't" > ].

hadnt_aux_subj_2 := va_had_subj_neg_le &
  [ STEM < "hadn", "'t" > ].

hairdresser_n1 := n_intr_le &
  [ STEM < "hairdresser" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hairdresser_rel" ].

half_pn1 := n_part_ppof_agr_le &
  [ STEM < "half" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _half_q_rel ].

half_pn2 := n_part_nocomp_le &
  [ STEM < "half" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _half_q_rel ].

half_pn3 := n_part_npcomp_agr_le &
  [ STEM < "half" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _half_q_rel ].

half_n1 := n_ppof_unsp_le &
  [ STEM < "half" >,
    SYNSEM.LKEYS.KEYREL.PRED "_half_n_rel" ].

half_hour := adj_minute_preh_le &
  [ STEM < "half" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

half-way_a1 := adj_intrans_le &
  [ STEM < "half", "way" >,
    SYNSEM.LKEYS.KEYREL.PRED "_half-way_rel" ].

hall_n2 := n_intr_le &
  [ STEM < "hall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hall_rel" ].

Hamburg_n1 := n_proper_le &
  [ STEM < "hamburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hamburg" ].

hammer_v1 := v_np_trans_le &
  [ STEM < "hammer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hammer_rel" ].

hammer_out_v1 := v_particle_np_le &
  [ STEM < "hammer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hammer_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

hand_in_v1 := v_particle_np_le &
  [ STEM < "hand" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hand_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

hand_n1 := n_intr_le &
  [ STEM < "hand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hand_n_rel" ].

hand_v1 := v_ditrans_only_le &
  [ STEM < "hand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hand_v_rel" ].

hand_v2 := v_empty_to_trans_le &
  [ STEM < "hand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hand_v_rel" ].

handle_n1 := n_ppof_le &
  [ STEM < "handle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handle_rel" ].

handle_v1 := v_np_trans_le &
  [ STEM < "handle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handle_v_rel" ].

handsome_a1 := adj_intrans_le &
  [ STEM < "handsome" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handsome_rel" ].

hang_on_root_pre := adv_disc_preh_le &
  [ STEM < "hang", "on" >,
    SYNSEM.LKEYS.KEYREL.CARG "hang_on" ].

Hannover_n1 := n_proper_le &
  [ STEM < "hannover" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hannover" ].

Hanover_n1 := n_proper_le &
  [ STEM < "hanover" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hanover" ].

happen_v1 := v_unacc_le &
  [ STEM < "happen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happen_v_rel" ].

happen_v2 := v_ssr_le &
  [ STEM < "happen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happen_v2_rel" ].

happen_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "happen" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_happen_v2_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

hard_a1 := adj_intrans_le &
  [ STEM < "hard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hard_adj_rel" ].

hard_a2 := adj_reg_atrans_le &
  [ STEM < "hard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hard_adj_rel" ].

hard_a3 := adj_tough_atrans_le &
  [ STEM < "hard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hard_adj_rel" ].

hard_a4 := adj_trans_oblig_le &
  [ STEM < "hard" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hard_adj_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

harder := adj_comp_le &
  [ STEM < "harder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hard_adj_rel" ].

hardly_adv1 := adv_vp_pre_le &
  [ STEM < "hardly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hardly_rel" ].

hardly_adv2 := adv_s_pre_le &
  [ STEM < "hardly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hardly_rel" ].

has_aux := va_has_le &
  [ STEM < "has" > ].

has_aux_cx := va_has_cx_le &
  [ STEM < "s" > ].

has_aux_cx_2 := va_has_cx_le &
  [ STEM < "'s" > ].

hasnt_aux_1 := va_has_neg_le &
  [ STEM < "hasn't" > ].

hasnt_aux_2 := va_has_neg_le &
  [ STEM < "hasn", "'t" > ].

aint_sg_have_aux_1 := va_has_neg_le &
  [ STEM < "ain't" > ].

aint_sg_have_aux_2 := va_has_neg_le &
  [ STEM < "ain", "'t" > ].

hat_n1 := n_intr_le &
  [ STEM < "hat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hat_rel" ].

hate_v1 := v_np_trans_le &
  [ STEM < "hate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hate_rel" ].

hate_v2 := v_subj_equi_le &
  [ STEM < "hate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hate_eq_rel" ].

hate_v3 := v_subj_equi_prp_le &
  [ STEM < "hate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hate_eq_rel" ].

have_off_v1 := v_particle_np_le &
  [ STEM < "have" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_have_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

have_to_do_with_v1 := v_prep_intrans_le &
  [ STEM < "have" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_have_regarding_rel",
             LKEYS.--COMPKEY _to_do_with_rel ] ].

have-poss := v_poss_le &
  [ STEM < "have" >,
    SYNSEM.LKEYS.KEYREL.PRED "_have_rel" ].

have-prd := v_obj_equi_non_trans_prd_le &
  [ STEM < "have" >,
    SYNSEM.LKEYS.KEYREL.PRED "_have_prd_rel"  ].

have-prd_imper := v_obj_equi_non_trans_prd_imper_le &
  [ STEM < "have" >,
    SYNSEM.LKEYS.KEYREL.PRED "_have_prd_rel"  ].

have_to1 := v_ssr_le &
  [ STEM < "have" >,
    SYNSEM.LKEYS.KEYREL.PRED "_have_to_rel" ].

have_fin_aux := va_have_fin_le &
  [ STEM < "have" > ].

have_fin_aux_cx := va_have_fin_cx_le &
  [ STEM < "ve" > ].

have_fin_aux_cx_2 := va_have_fin_cx_le &
  [ STEM < "'ve" > ].

have_bse_aux := va_have_bse_le &
  [ STEM < "have" > ].

have_bse_aux_cx_1 := va_have_bse_cx_le &
  [ STEM < "ve" > ].

have_bse_aux_cx_2 := va_have_bse_cx_le &
  [ STEM < "'ve" > ].

have_fin_aux_neg_1 := va_have_fin_neg_le &
  [ STEM < "haven't" > ].

have_fin_aux_neg_2 := va_have_fin_neg_le &
  [ STEM < "haven", "'t" > ].

have_aux_prp := va_have_prespart_le &
  [ STEM < "having" > ].

aint_pl_have_aux_1 := va_have_fin_neg_le &
  [ STEM < "ain't" > ].

aint_pl_have_aux_2 := va_have_fin_neg_le &
  [ STEM < "ain", "'t" > ].

he := n_pers_pro_he_le &
  [ STEM < "he" > ].

head_n1 := n_ppof_le &
  [ STEM < "head" >,
    SYNSEM.LKEYS.KEYREL.PRED "_head_rel" ].

head_v1 := v_prep_intrans_unsp_le &
  [ STEM < "head" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_head_dir_rel",
             LKEYS.--COMPKEY dir_rel ] ].

head_v2 := v_np_trans_le &
  [ STEM < "head" >,
    SYNSEM.LKEYS.KEYREL.PRED "_head_v_rel" ].

hear_about_v1 := v_empty_prep_intrans_le &
  [ STEM < "hear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hear_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

hear_from_v1 := v_empty_prep_intrans_le &
  [ STEM < "hear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hear_from_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

hear_of_v1 := v_empty_prep_intrans_le &
  [ STEM < "hear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hear_of_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

hear_v1 := v_np_trans_le &
  [ STEM < "hear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hear_rel" ].

hear_v2 := v_cp_non_trans_le &
  [ STEM < "hear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hear_rel" ].

hear_v3 := v_sorb_le &
  [ STEM < "hear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hear_rel" ].

hear_v4 := v_unerg_le &
  [ STEM < "hear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hear_rel" ].

heard_v3 := v_sorb_pass_le &
  [ STEM < "heard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hear_rel" ].

hearty_a1 := adj_intrans_le &
  [ STEM < "hearty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hearty_rel" ].

heavy_a1 := adj_intrans_le &
  [ STEM < "heavy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heavy_rel" ].

heavier_a1 := adj_comp_le &
  [ STEM < "heavier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heavy_rel" ].

heaviest_a1 := adj_superl_le &
  [ STEM < "heaviest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heavy_rel" ].

heaviest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "heaviest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heavy_rel" ].

hectic_a1 := adj_intrans_le &
  [ STEM < "hectic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hectic_rel" ].

Heidelberg_n1 := n_proper_le &
  [ STEM < "heidelberg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Heidelberg" ].

hello_root_pre := adv_disc_preh_grt_le &
  [ STEM < "hello" >,
    SYNSEM.LKEYS.KEYREL.CARG "hello" ].

hello_root_post := adv_disc_posth_grt_le &
  [ STEM < "hello" >,
    SYNSEM.LKEYS.KEYREL.CARG "hello" ].

howdy_root_pre := adv_disc_preh_grt_le &
  [ STEM < "howdy" >,
    SYNSEM.LKEYS.KEYREL.CARG "howdy" ].

howdy_root_post := adv_disc_posth_grt_le &
  [ STEM < "howdy" >,
    SYNSEM.LKEYS.KEYREL.CARG "howdy" ].

Helman := n_proper_le &
  [ STEM < "helman" >,
    SYNSEM.LKEYS.KEYREL.CARG "helman" ].

Helwig := n_proper_le &
  [ STEM < "helwig" >,
    SYNSEM.LKEYS.KEYREL.CARG "helwig" ].

help_v1 := v_np*_trans_le &
  [ STEM < "help" >,
    SYNSEM.LKEYS.KEYREL.PRED "_help_rel" ].

help_v2 := v_subj_equi_le &
  [ STEM < "help" >,
    SYNSEM.LKEYS.KEYREL.PRED "_help_to_rel" ].

help_v4 := v_obj_equi_bse_le &
  [ STEM < "help" >,
    SYNSEM.LKEYS.KEYREL.PRED "_help_to_rel" ].

help_v5 := v_subj_equi_bse_le &
  [ STEM < "help" >,
    SYNSEM.LKEYS.KEYREL.PRED "_help_to_rel" ].

helped_v4 := v_sorb_pass_le &
  [ STEM < "helped" >,
    SYNSEM.LKEYS.KEYREL.PRED "_help_to_rel" ].

hence_adv1 := adv_vp_pre_le &
  [ STEM < "hence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hence_rel" ].

hence_adv2 := adv_s_pre_le &
  [ STEM < "hence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hence_rel" ].

her_poss := det_poss_her_le &
  [ STEM < "her" > ].

her := n_pers_pro_her_le &
  [ STEM < "her" > ].

here_nom := n_adv_pl_le &
  [ STEM < "here" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _here_j_rel  ] ].

herewith_adv1 := adv_int_vp_post_le &
  [ STEM < "herewith" >,
    SYNSEM.LKEYS.KEYREL.PRED "_herewith_rel" ].

hers := n_poss_pro_hers_le &
  [ STEM < "hers" > ].

herself := n_refl_pro_herself_le &
  [ STEM < "herself" > ].

hey_root_pre := adv_disc_preh_le &
  [ STEM < "hey" >,
    SYNSEM.LKEYS.KEYREL.CARG "hey" ].

hey_root_post := adv_disc_posth_le &
  [ STEM < "hey" >,
    SYNSEM.LKEYS.KEYREL.CARG "hey" ].

hi_root_pre := adv_disc_preh_grt_le &
  [ STEM < "hi" >,
    SYNSEM.LKEYS.KEYREL.CARG "hi" ].

hi_root_post := adv_disc_posth_grt_le &
  [ STEM < "hi" >,
    SYNSEM.LKEYS.KEYREL.CARG "hi" ].

high_a1 := adj_intrans_le &
  [ STEM < "high" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_rel" ].

higher_a1 := adj_comp_le &
  [ STEM < "higher" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_rel" ].

Highlander_n1 := n_intr_named_le &
  [ STEM < "highlander" >,
    SYNSEM.LKEYS.KEYREL.CARG "Highlander" ].

highly_deg := adv_degree_spec_v_le &
  [ STEM < "highly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_deg_rel" ].

hill_n1 := n_intr_le &
  [ STEM < "hill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hill_rel" ].

him := n_pers_pro_him_le &
  [ STEM < "him" > ].

himself := n_refl_pro_himself_le &
  [ STEM < "himself" > ].

hire_v1 := v_np_trans_le &
  [ STEM < "hire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hire_v_rel" ].

his_poss := det_poss_his_le &
  [ STEM < "his" > ].

his := n_poss_pro_his_le &
  [ STEM < "his" > ].

hit_v1 := v_np_trans_le &
  [ STEM < "hit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hit_v_rel" ].

hither_adv1 := pp_le &
  [ STEM < "hither" >,
    SYNSEM.LKEYS.KEYREL.PRED _hither_rel ].

hitherto_deg := adv_degree_spec_le &
  [ STEM < "hitherto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hitherto_deg_rel" ].

hm_root_pre := adv_disc_preh_le &
  [ STEM < "hm" >,
    SYNSEM.LKEYS.KEYREL.CARG "hm" ].

hmm_root_pre := adv_disc_preh_le &
  [ STEM < "hmm" >,
    SYNSEM.LKEYS.KEYREL.CARG "hmm" ].

hold_n1 := n_mass_count_ppof_le &
  [ STEM < "hold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hold_n_rel" ].

hold_v1 := v_np_trans_le &
  [ STEM < "hold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hold_v_rel" ].

ahold_n1 := n_intr_nospr_le &
  [ STEM < "ahold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ahold_n_rel" ].

ahold_n2 := n_intr_nospr_le &
  [ STEM < "a", "hold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ahold_n_rel" ].

Holger_n1 := n_proper_le &
  [ STEM < "holger" >,
    SYNSEM.LKEYS.KEYREL.CARG "Holger" ].

holiday_n1 := n_intr_temp_d_le &
  [ STEM < "holiday" >,
    SYNSEM.LKEYS.KEYREL.PRED "_holiday_rel" ].

holy_a1 := adj_intrans_le &
  [ STEM < "holy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_holy_rel" ].

holy_saturday := n_holiday_le &
  [ STEM < "holy", "saturday" >,
    SYNSEM.LKEYS.KEYREL.CARG "holy_saturday" ].

holy_week := n_holiday_le &
  [ STEM < "holy", "week" >,
    SYNSEM.LKEYS.KEYREL.CARG "holy_week" ].

home_adv := n_adv_event_le &
  [ STEM < "home" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _home_p_rel ] ].

home_n1 := n_mass_count_unspec_le &
  [ STEM < "home" >,
    SYNSEM.LKEYS.KEYREL.PRED "_home_rel" ].

homework_n1 := n_mass_le &
  [ STEM < "homework" >,
    SYNSEM.LKEYS.KEYREL.PRED "_homework_rel" ].

honest_a1 := adj_intrans_le &
  [ STEM < "honest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_honest_rel" ].

honestly_adv1 := adv_vp_pre_le &
  [ STEM < "honestly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_honestly_rel" ].

honestly_adv2 := adv_s_pre_le &
  [ STEM < "honestly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_honestly_rel" ].

Honolulu_n1 := n_proper_le &
  [ STEM < "honolulu" >,
    SYNSEM.LKEYS.KEYREL.CARG "Honolulu" ].

hook_v1 := v_np_trans_le &
  [ STEM < "hook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hook_v_rel" ].

hook_up_v1 := v_particle_le &
  [ STEM < "hook" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hook_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

hook_up_v2 := v_particle_np_le &
  [ STEM < "hook" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hook_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

hope_n1 := n_mass_count_le &
  [ STEM < "hope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hope_rel" ].

hope_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "hope" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hope_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

hope_v1 := v_cp_prop_non_trans_le &
  [ STEM < "hope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hope_v_rel" ].

hope_v2 := v_subj_equi_le &
  [ STEM < "hope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hope_v_rel" ].

hopefully_adv1 := adv_int_vp_le &
  [ STEM < "hopefully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hopefully_rel" ].

horoscope_n1 := n_intr_le &
  [ STEM < "horoscope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horoscope_rel" ].

hot_a1 := adj_intrans_le &
  [ STEM < "hot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_rel" ].

hot_a2 := adj_atrans_le &
  [ STEM < "hot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_expl_rel" ].

hotel_n1 := n_intr_le &
  [ STEM < "hotel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hotel_rel" ].

hotel_n2 := n_npcomp_le &
  [ STEM < "hotel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hotel_rel" ].

hour_n1 := n_temp_ppcomp_hour_le &
  [ STEM < "hour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hour_rel" ].

hourly_adv1 := adv_int_vp_post_le &
  [ STEM < "hourly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hourly_adv_rel" ].

hourly_a1 := adj_intrans_le &
  [ STEM < "hourly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hourly_rel" ].

hours_long_a1 := adj_intrans_le &
  [ STEM < "hours", "long" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hours_long_rel" ].

house_n1 := n_intr_le &
  [ STEM < "house" >,
    SYNSEM.LKEYS.KEYREL.PRED "_house_rel" ].

how_many := det_part_pl_wh_le &
  [ STEM < "how", "many" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED number_rel ].

how_adv := pp_wh_le &
  [ STEM < "how" >,
    SYNSEM.LKEYS [ KEYREL.PRED unspec_manner_rel,
                   ALTKEYREL.PRED "_way_n_rel" ] ].

how_deg := adv_wh_degree_spec_le &
  [ STEM < "how" > ].

how_adj := adj_wh_le &
  [ STEM < "how" > ].

how_about := comp_how_about_n_or_p_le &
  [ STEM < "how", "about" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

how_bout := comp_how_about_n_or_p_le &
  [ STEM < "how", "'bout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

how_about_vp := comp_how_about_vp_le &
  [ STEM < "how", "about" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

how_bout_vp := comp_how_about_vp_le &
  [ STEM < "how", "'bout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

how_about_s := comp_how_about_s_le &
  [ STEM < "how", "about" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

how_bout_s := comp_how_about_s_le &
  [ STEM < "how", "'bout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

how_much := det_part_ms_wh_le &
  [ STEM < "how", "much" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED quantity_rel ].

how_you_doing_root_pre := adv_disc_preh_grt_le &
  [ STEM < "how", "you", "doing" >,
    SYNSEM.LKEYS.KEYREL.CARG "how_you_doing" ].

how_you_doing_root_post := adv_disc_posth_grt_le &
  [ STEM < "how", "you", "doing" >,
    SYNSEM.LKEYS.KEYREL.CARG "how_you_doing" ].

however := adv_vp_le &
  [ STEM < "however" >,
    SYNSEM.LKEYS.KEYREL.PRED "_however_rel" ].

however2 := adv_s_pre_le &
  [ STEM < "however" >,
    SYNSEM.LKEYS.KEYREL.PRED "_however_rel" ].

humor_v1 := v_np_trans_le &
  [ STEM < "humor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_humor_v_rel" ].

hundred := adj_bare_specified_card_hundred_le & 
  [ STEM < "hundred" >,
    SYNSEM.LKEYS.KEYREL.CARG "100" ].

hundred_comps := adj_complemented_specified_card_hundred_le & 
  [ STEM < "hundred" >,
    SYNSEM.LKEYS.KEYREL.CARG "100" ].

hungry_a1 := adj_intrans_le &
  [ STEM < "hungry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hungry_rel" ].

hunt_up_v1 := v_particle_np_le &
  [ STEM < "hunt" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hunt_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

husband_n1 := n_ppof_le &
  [ STEM < "husband" >,
    SYNSEM.LKEYS.KEYREL.PRED "_husband_rel" ].

Hutsell := n_proper_le &
  [ STEM < "hutsell" >,
    SYNSEM.LKEYS.KEYREL.CARG "hutsell" ].

hyphen_n1 := n_intr_le &
  [ STEM < "hyphen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hyphen_rel" ].

hyphenated_a1 := adj_intrans_le &
  [ STEM < "hyphenated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hyphenated_rel" ].

i := n_pers_pro_i_le &
  [ STEM < "i" > ].

Ian := n_proper_le &
  [ STEM < "ian" >,
    SYNSEM.LKEYS.KEYREL.CARG "ian" ].

ICPHS_n1 :=  n_proper_le &
  [ STEM < "icphs" >,
    SYNSEM.LKEYS.KEYREL.CARG "ICPHS" ].

idea_n1 := n_ppof_le &
  [ STEM < "idea" >,
    SYNSEM.LKEYS.KEYREL.PRED "_idea_rel" ].

idea_n2 := n_cpcomp_fin_optthat_le &
  [ STEM < "idea" >,
    SYNSEM.LKEYS.KEYREL.PRED "_idea_n_h_rel" ].

ideal_a1 := adj_intrans_le &
  [ STEM < "ideal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ideal_adj_rel" ].

ideal_n1 := n_intr_le &
  [ STEM < "ideal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ideal_rel" ].

;if_subconj_indic := p_subconj_if_indic_le &
;  [ STEM < "if" >,
;    SYNSEM.LKEYS.KEYREL.PRED "_if_c_then_rel" ].

;if_subconj_subjnct := p_subconj_if_subjnct_le &
;  [ STEM < "if" >,
;    SYNSEM.LKEYS.KEYREL.PRED "_if_c_then_rel" ].

if_subconj_unspec := p_subconj_if_unspec_le &
  [ STEM < "if" >,
    SYNSEM.LKEYS.KEYREL.PRED "_if_c_then_rel" ].

if_c_indic := comp_if_indic_le &
  [ STEM < "if" > ].

if_c_subjnct := comp_if_subjnct_le &
  [ STEM < "if" > ].

if_necessary_adv1 := adv_vp_le &
  [ STEM < "if", "necessary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_if_necessary_rel" ].

ignore_v1 := v_np_trans_le &
  [ STEM < "ignore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ignore_rel" ].

ill_a1 := adj_intrans_le &
  [ STEM < "ill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ill_rel" ].

imagine_v1 := v_np_trans_le &
  [ STEM < "imagine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imagine_rel" ].

imagine_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "imagine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imagine_rel" ].

imagine_v3 := v_unerg_le &
  [ STEM < "imagine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imagine_rel" ].

immediate_a1 := adj_intrans_le &
  [ STEM < "immediate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_immediate_isect_rel" ].

immediately_adv1 := adv_int_vp_le &
  [ STEM < "immediately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_immediately_rel" ].

imminent_a1 := adj_intrans_le &
  [ STEM < "imminent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imminent_rel" ].

impending_a1 := adj_intrans_le &
  [ STEM < "impending" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impending_rel" ].

important_a1 := adj_intrans_le &
  [ STEM < "important" >,
    SYNSEM.LKEYS.KEYREL.PRED "_important_rel" ].

important_a2 := adj_reg_atrans_le &
  [ STEM < "important" >,
    SYNSEM.LKEYS.KEYREL.PRED "_important_rel" ].

important_a3 := adj_reg_atrans_cp_le &
  [ STEM < "important" >,
    SYNSEM.LKEYS.KEYREL.PRED "_important_rel" ].

important_a4 := adj_tough_atrans_le &
  [ STEM < "important" >,
    SYNSEM.LKEYS.KEYREL.PRED "_important_rel" ].

importantly := adv_int_vp_le &
  [ STEM < "importantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_importantly_rel" ].

impossible_a1 := adj_intrans_le &
  [ STEM < "impossible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impossible_rel" ].

impossible_a2 := adj_reg_atrans_le &
  [ STEM < "impossible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impossible_rel" ].

impossible_a3 := adj_reg_atrans_cp_le &
  [ STEM < "impossible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impossible_rel" ].

impossible_a4 := adj_tough_atrans_le &
  [ STEM < "impossible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impossible_rel" ].

impossibly_adv1 := adv_vp_post_le &
  [ STEM < "impossibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impossibly_rel" ].

impression_n1 := n_ppof_le &
  [ STEM < "impression" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impression_rel" ].

improbably_adv1 := adv_vp_post_le &
  [ STEM < "improbably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_improbably_rel" ].

in_accordance_with := p_le &
  [ STEM < "in", "accordance", "with" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_accordance_with_rel ].

in_addition_to := p_le &
  [ STEM < "in", "addition", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_addition_to_rel ].

in_back_of := p_le &
  [ STEM < "in", "back", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_back_of_rel ].

in_between := p_le &
  [ STEM < "in", "between" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_between_rel ].

in_case := p_subconj_le &
  [ STEM < "in", "case" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_case_rel" ].

just_in_case := p_subconj_le &
  [ STEM < "just", "in", "case" >,
    SYNSEM.LKEYS.KEYREL.PRED "_just_in_case_rel" ].

in_front_of := p_le &
  [ STEM < "in", "front", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_front_of_rel ].

in_general_adv1 := adv_int_vp_post_le &
  [ STEM < "in", "general" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_general_rel" ].

in_lieu_of := p_le &
  [ STEM < "in", "lieu", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_lieu_of_rel ].

in_advance_adv1 := adv_int_vp_post_le &
  [ STEM < "in", "advance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_advance_rel" ].

in := p_reg_le &
  [ STEM < "in" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_p_rel ].

in_prtcl := p_prtcl_le &
  [ STEM < "in" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_p_sel_rel ].

in_order_to := p_subconj_inf_le &
  [ STEM < "in", "order", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_order_to_rel" ].

in_temp := p_temp_le &
  [ STEM < "in" >,
    SYNSEM [ LKEYS.KEYREL.PRED _in_p_temp_rel,
             LKEYS.--COMPKEY non_day_or_deg_rel ] ].

in_principle_adv1 := adv_int_vp_post_le &
  [ STEM < "in", "principle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_principle_rel" ].

in_question := pp_idiom_prd_le &
  [ STEM < "in", "question" >,
    SYNSEM.LKEYS [ KEYREL.PRED _in_p_rel,
                   ALTKEYREL.PRED "_question_topic_rel" ] ].

in_mind := pp_idiom_prd_le &
  [ STEM < "in", "mind" >,
    SYNSEM.LKEYS [ KEYREL.PRED _in_p_rel,
                   ALTKEYREL.PRED "_mind_n_rel" ] ].

in_spite_of := p_le &
  [ STEM < "in", "spite", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_spite_of_rel ].

in_the_course_of := p_le &
  [ STEM < "in", "the", "course", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_the_course_of_rel ].

in_so_far_as_subord := p_subconj_le &
  [ STEM < "in", "so", "far", "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_so_far_as_rel" ].

in_vain_adv1 := adv_int_vp_post_le &
  [ STEM < "in", "vain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_vain_rel" ].

include_v1 := v_np_trans_le &
  [ STEM < "include" >,
    SYNSEM.LKEYS.KEYREL.PRED "_include_rel" ].

include_v2 := v_np_prep_trans_le &
  [ STEM < "include" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_include_rel",
             LKEYS.--OCOMPKEY _in_p_rel ] ].

inclusive_a1 := adj_intrans_le &
  [ STEM < "inclusive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inclusive_adj_rel" ].

inclusively_adv1 := adv_int_vp_post_le &
  [ STEM < "inclusively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inclusively_rel" ].

inconvenient_a1 := adj_intrans_le &
  [ STEM < "inconvenient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inconvenient_rel" ].

incredible_a1 := adj_intrans_le &
  [ STEM < "incredible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incredible_rel" ].

incredible_a2 := adj_reg_atrans_cp_le &
  [ STEM < "incredible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incredible_rel" ].

incredibly := adv_int_vp_post_le &
  [ STEM < "incredibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incredibly_rel" ].

indeed_root_pre := adv_disc_preh_le &
  [ STEM < "indeed" >,
    SYNSEM.LKEYS.KEYREL.CARG "indeed" ].

indefinite_a1 := adj_intrans_le &
  [ STEM < "indefinite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indefinite_rel" ].

independent_a1 := adj_intrans_le &
  [ STEM < "independent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_independent_rel" ].

individual_a1 := adj_intrans_le &
  [ STEM < "individual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_individual_adj_rel" ].

individual_n1 := n_ppof_le &
  [ STEM < "individual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_individual_rel" ].

individually := adv_int_vp_post_le &
  [ STEM < "individually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_individually_rel" ].

Indonesia_n1 := n_proper_le &
  [ STEM < "indonesia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Indonesia" ].

indonesian_a1 := adj_intrans_le &
  [ STEM < "indonesian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indonesian_rel" ].

indoor_a1 := adj_intrans_le &
  [ STEM < "indoor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indoor_rel" ].

indulge_v1 := v_np*_trans_le &
  [ STEM < "indulge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indulge_rel" ].

indulge_v2 := v_empty_prep_intrans_le &
  [ STEM < "indulge" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_indulge_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

industrialized_a1 := adj_intrans_le &
  [ STEM < "industrialized" >,
    SYNSEM.LKEYS.KEYREL.PRED "_industrialized_rel" ].

inferior_a1 := adj_intrans_le &
  [ STEM < "inferior" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inferior_rel" ].

inform_v1 := v_np_trans_cp_le &
  [ STEM < "inform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inform_v_rel" ].

inform_v2 := v_np_trans_le &
  [ STEM < "inform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inform_v_rel" ].

inform_v3 := v_empty_prep_trans_le &
  [ STEM < "inform" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_inform_v_rel",
             LKEYS.--OCOMPKEY _of_p_sel_rel ] ].

inform_v4 := v_unerg_le &
  [ STEM < "inform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inform_v_rel" ].

inform_v5 := v_obj_equi_le &
  [ STEM < "inform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inform_v_rel" ].

informal_a1 := adj_intrans_le &
  [ STEM < "informal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_informal_rel" ].

informally := adv_int_vp_le &
  [ STEM < "informally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_informally_rel" ].

information_n1 := n_mass_ppcomp_le &
  [ STEM < "information" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_information_rel",
             LKEYS.--COMPKEY _on_p_rel ] ].

information_n2 := n_mass_ppcomp_oblig_le &
  [ STEM < "information" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_information_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

information_n3 := n_mass_ppcomp_oblig_le &
  [ STEM < "information" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_information_rel",
             LKEYS.--COMPKEY _on_p_rel ] ].

inside_adv1 :=  n_adv_np_le &
  [ STEM < "inside" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _inside_prep_rel ] ]. 

insignificant_a1 := adj_intrans_le &
  [ STEM < "insignificant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insignificant_rel" ].

insist_v1 := v_cp_prop*_non_trans_le &
  [ STEM < "insist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insist_rel" ].

insist_v2 := v_empty_prep_intrans_le &
  [ STEM < "insist" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_insist_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

insist_v3 := v_cp_subj_le &
  [ STEM < "insist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insist_rel" ].

insist_v4 := v_unerg_le &
  [ STEM < "insist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insist_on_rel" ].

instance_n1 := n_ppof_le &
  [ STEM < "instance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instance_rel" ].

instant_a1 := adj_intrans_le &
  [ STEM < "instant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instant_rel" ].

instead_adv1 := adv_int_vp_post_le &
  [ STEM < "instead" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instead_rel" ].

institute_n1 := n_ppof_le &
  [ STEM < "institute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_institute_rel" ].

instruct_v1 := v_obj_equi_le &
  [ STEM < "instruct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instruct_rel" ].

instrument_n1 := n_ppof_le &
  [ STEM < "instrument" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instrument_rel" ].

intend_v1 := v_subj_equi_le &
  [ STEM < "intend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intend_v_subjeq_rel" ].

intend_v2 := v_obj_equi_le &
  [ STEM < "intend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intend_v_objeq_rel" ].

intensive_a1 := adj_intrans_le &
  [ STEM < "intensive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intensive_rel" ].

intensively := adv_int_vp_le &
  [ STEM < "intensively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intensively_rel" ].

Interact_n1 := n_proper_le &
  [ STEM < "interact" >,
    SYNSEM.LKEYS.KEYREL.CARG "Interact" ].

Intercity_n1 := n_intr_named_le &
  [ STEM < "intercity" >,
    SYNSEM.LKEYS.KEYREL.CARG "Intercity" ].

interest_in_v1 := v_empty_prep_non_trans_le &
  [ STEM < "interest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_interest_v_rel",
             LKEYS.--OCOMPKEY _in_p_sel_rel ] ].

interested_a1 := adj_trans_oblig_le &
  [ STEM < "interested" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_interested_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

interested_a2 := adj_intrans_le &
  [ STEM < "interested" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interested_rel" ].

interfere_v1 := v_unerg_le &
  [ STEM < "interfere" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interfere_rel" ].

interfere_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "interfere" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_interfere_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

interfere_in_v1 := v_empty_prep_intrans_le &
  [ STEM < "interfere" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_interfere_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

international_a1 := adj_intrans_le &
  [ STEM < "international" >,
    SYNSEM.LKEYS.KEYREL.PRED "_international_rel" ].

internationally := adv_int_vp_le &
  [ STEM < "internationally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_internationally_rel" ].

interrogate_v1 := v_np_trans_le &
  [ STEM < "interrogate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interrogate_rel" ].

interrupt_v1 := v_np*_trans_le &
  [ STEM < "interrupt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interrupt_rel" ].

interval_n1 := n_intr_le &
  [ STEM < "interval" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interval_rel" ].

intervention_n1 := n_mass_le &
  [ STEM < "intervention" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intervention_rel" ].

interview_v1 := v_np*_trans_le &
  [ STEM < "interview" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interview_v_rel" ].

interview_n1 := n_intr_le &
  [ STEM < "interview" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interview_rel" ].

into := p_le &
  [ STEM < "into" >,
    SYNSEM.LKEYS.KEYREL.PRED _into_p_rel ].

into_prtcl := p_prtcl_le &
  [ STEM < "into" >,
    SYNSEM.LKEYS.KEYREL.PRED _into_p_sel_rel ].

introduce_v1 := v_empty_prep*_trans_le &
  [ STEM < "introduce" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_introduce_to_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

introduction_n1 := n_ppcomp_le &
  [ STEM < "introduction" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_introduction_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

invest_v1 := v_np_trans_le &
  [ STEM < "invest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invest_rel" ].

invest_v2 := v_np_prep_trans_le &
  [ STEM < "invest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_invest_rel",
             LKEYS.--OCOMPKEY _in_p_rel ] ].

invite_v1 := v_empty_prep*_trans_le &
  [ STEM < "invite" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_invite_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

invite_v2 := v_obj_equi_le &
  [ STEM < "invite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invite_to_rel" ].

involve_v1 := v_np_trans_le &
  [ STEM < "involve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_involve_rel" ].

be_c_is := vc_prd_is_le &
  [ STEM < "is" > ].

be_c_is_cx := vc_prd_is_cx_le &
  [ STEM < "s" > ].

be_c_is_cx_2 := vc_prd_is_cx_le &
  [ STEM < "'s" > ].

be_id_is := vc_id_is_le &
  [ STEM < "is" > ].

be_id_is_cx := vc_id_is_cx_le &
  [ STEM < "s" > ].

be_id_is_cx_2 := vc_id_is_cx_le &
  [ STEM < "'s" > ].

be_th_cop_is := vc_there_is_le &
  [ STEM < "is" > ].

be_th_cop_is_cx := vc_there_s_cx_le &
  [ STEM < "s" > ].

be_th_cop_is_cx_2 := vc_there_s_cx_le &
  [ STEM < "'s" > ].

island_n1 := n_intr_le &
  [ STEM < "island" >,
    SYNSEM.LKEYS.KEYREL.PRED "_island_rel" ].

be_c_is_neg_1 := vc_prd_is_neg_le &
  [ STEM < "isn't" > ].

be_c_is_neg_2 := vc_prd_is_neg_le &
  [ STEM < "isn", "'t" > ].

aint_be_c_is_neg_1 := vc_prd_is_neg_le &
  [ STEM < "ain't" > ].

aint_be_c_is_neg_2 := vc_prd_is_neg_le &
  [ STEM < "ain", "'t" > ].

be_id_is_neg_1 := vc_id_is_neg_le &
  [ STEM < "isn't" > ].

be_id_is_neg_2 := vc_id_is_neg_le &
  [ STEM < "isn", "'t" > ].

aint_be_id_is_neg_1 := vc_id_is_neg_le &
  [ STEM < "ain't" > ].

aint_be_id_is_neg_2 := vc_id_is_neg_le &
  [ STEM < "ain", "'t" > ].

be_th_cop_is_neg_1 := vc_there_is_neg_le &
  [ STEM < "isn't" > ].

be_th_cop_is_neg_2 := vc_there_is_neg_le &
  [ STEM < "isn", "'t" > ].

aint_be_th_cop_is_neg_1 := vc_there_is_neg_le &
  [ STEM < "ain't" > ].

aint_be_th_cop_is_neg_2 := vc_there_is_neg_le &
  [ STEM < "ain", "'t" > ].

isolated_a1 := adj_intrans_le &
  [ STEM < "isolated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_isolated_rel" ].

issue_n1 := n_intr_le &
  [ STEM < "issue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_issue_n_rel" ].

it := n_expl_it_le &
  [ STEM < "it" > ].

it2 := n_pers_pro_it_le &
  [ STEM < "it" > ].

italian_a1 := adj_intrans_le &
  [ STEM < "italian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_italian_rel" ].

Italian_n1 := n_proper_le &
  [ STEM < "italian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Italian" ].

Italy_n1 := n_proper_le &
  [ STEM < "italy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Italy" ].

its_poss := det_poss_its_le &
  [ STEM < "its" > ].

its := n_poss_pro_its_le &
  [ STEM < "its" > ].

itself := n_refl_pro_itself_le &
  [ STEM < "itself" > ].

Jaguar_n1 := n_intr_named_le &
  [ STEM < "jaguar" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jaguar" ].

jam_n1 := n_mass_le &
  [ STEM < "jam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jam_n_rel" ].

jam_v1 := v_np_prep_trans_dors_le &
  [ STEM < "jam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jam_v_rel" ].

jam_up_v1 := v_particle_np_le &
  [ STEM < "jam" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_jam_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

janitor_n1 := n_ppof_le &
  [ STEM < "janitor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_janitor_rel" ].

january := n_month_le &
  [ STEM < "january" >,
    SYNSEM.LKEYS.KEYREL.CARG "jan" ].

january_abb_n1 := n_month_le &
  [ STEM < "jan" >,
    SYNSEM.LKEYS.KEYREL.CARG "jan" ].

january_2 := n_month_year_le &
  [ STEM < "january" >,
    SYNSEM.LKEYS.KEYREL.CARG "jan" ].

january_abb_n2 := n_month_year_le &
  [ STEM < "jan" >,
    SYNSEM.LKEYS.KEYREL.CARG "jan" ].

japanese_a1 := adj_intrans_le &
  [ STEM < "japanese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_japanese_adj_rel" ].

Japanese_n1 := n_proper_le &
  [ STEM < "japanese" >,
    SYNSEM.LKEYS.KEYREL.CARG "Japanese" ].

Japanese_n2 := n_plur_le &
  [ STEM < "japanese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_japanese_n_rel" ].

job_n1 := n_intr_le &
  [ STEM < "job" >,
    SYNSEM.LKEYS.KEYREL.PRED "_job_rel" ].

Jochen_n1 := n_proper_le &
  [ STEM < "jochen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jochen" ].

John := n_proper_le &
  [ STEM < "john" >,
    SYNSEM.LKEYS.KEYREL.CARG "john" ].

Joan := n_proper_le &
  [ STEM < "joan" >,
    SYNSEM.LKEYS.KEYREL.CARG "joan" ].

join_v1 := v_np*_trans_le &
  [ STEM < "join" >,
    SYNSEM.LKEYS.KEYREL.PRED "_join_rel" ].

joint_a1 := adj_intrans_le &
  [ STEM < "joint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_joint_rel" ].

jointly_adv1 := adv_int_vp_le &
  [ STEM < "jointly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jointly_rel" ].

journey_n1 := n_ppcomp_le &
  [ STEM < "journey" >,
    SYNSEM.LKEYS.KEYREL.PRED "_journey_rel" ].

juggle_v1 := v_np*_trans_le &
  [ STEM < "juggle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_juggle_rel" ].

july := n_month_le &
  [ STEM < "july" >,
    SYNSEM.LKEYS.KEYREL.CARG "jul" ].

july_abb_n1 := n_month_le &
  [ STEM < "jul" >,
    SYNSEM.LKEYS.KEYREL.CARG "jul" ].

july_2 := n_month_year_le &
  [ STEM < "july" >,
    SYNSEM.LKEYS.KEYREL.CARG "jul" ].

july_abb_n2 := n_month_year_le &
  [ STEM < "jul" >,
    SYNSEM.LKEYS.KEYREL.CARG "jul" ].

june := n_month_le &
  [ STEM < "june" >,
    SYNSEM.LKEYS.KEYREL.CARG "jun" ].

june_abb_n1 := n_month_le &
  [ STEM < "jun" >,
    SYNSEM.LKEYS.KEYREL.CARG "jun" ].

june_2 := n_month_year_le &
  [ STEM < "june" >,
    SYNSEM.LKEYS.KEYREL.CARG "jun" ].

june_abb_n2 := n_month_year_le &
  [ STEM < "jun" >,
    SYNSEM.LKEYS.KEYREL.CARG "jun" ].

Juneau_n1 := n_proper_le &
  [ STEM < "juneau" >,
    SYNSEM.LKEYS.KEYREL.CARG "Juneau" ].

just_adv1 := adv_vp_aux_le &
  [ STEM < "just" >,
    SYNSEM.LKEYS.KEYREL.PRED "_just_scop_rel" ].

just_deg := adv_degree_spec_jov_le &
  [ STEM < "just" >,
    SYNSEM.LKEYS.KEYREL.PRED "_just_deg_rel" ].

just_m_deg := adv_degree_spec_m_le &
  [ STEM < "just" >,
    SYNSEM.LKEYS.KEYREL.PRED "_just_m_deg_rel" ].

just_like := p_le &
  [ STEM < "just", "like" >,
    SYNSEM.LKEYS.KEYREL.PRED _just_like_rel ].

Kaefer-Plex_n1 := n_proper_le &
  [ STEM < "kaefer", "plex" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kaefer-Plex" ].

Karlsruhe_n1 := n_proper_le &
  [ STEM < "karlsruhe" >,
    SYNSEM.LKEYS.KEYREL.CARG "Karlsruhe" ].

Kassel_n1 := n_proper_le &
  [ STEM < "kassel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kassel" ].

keen_a1 := adj_intrans_le &
  [ STEM < "keen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_keen_rel" ].

keep_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "keep" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_keep_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

keep-prd := v_subj_equi_prd_le &
  [ STEM < "keep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_keep_v_prd_rel" ].

keep-prd_v2 := v_obj_equi_prd_le &
  [ STEM < "keep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_keep_v_prd_rel" ].

keep_v1 := v_np_trans_le &
  [ STEM < "keep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_keep_unspec_rel" ].

keep_v2 := v_particle_prp_le &
  [ STEM < "keep" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_keep_v_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

keep_v3 := v_subj_equi_prp_le &
  [ STEM < "keep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_keep_v_on_rel" ].

Kennywood_n1 := n_proper_le &
  [ STEM < "kennywood" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kennywood" ].

Kenya_n1 := n_proper_le &
  [ STEM < "kenya" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kenya" ].

key_n1 := n_ppcomp_le &
  [ STEM < "key" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_key_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

kid_n1 := n_intr_le &
  [ STEM < "kid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kid_n_rel" ].

kid_v1 := v_unerg_le &
  [ STEM < "kid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kid_v_rel" ].

Kiel_n1 := n_proper_le &
  [ STEM < "kiel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kiel" ].

Kim := n_proper_le &
  [ STEM < "kim" >,
    SYNSEM.LKEYS.KEYREL.CARG "kim" ].

kind_a1 := adj_intrans_le &
  [ STEM < "kind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kind_adj_rel" ].

Klein_n1 := n_proper_le &
  [ STEM < "klein" >,
    SYNSEM.LKEYS.KEYREL.CARG "Klein" ].

knotty_a1 := adj_intrans_le &
  [ STEM < "knotty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_knotty_rel" ].

know_v1 := v_np_trans_le &
  [ STEM < "know" >,
    SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ].

know_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "know" >,
    SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ].

know_v3 := v_subj_equi_le &
  [ STEM < "know" >,
    SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ].

know_v4 := v_sor_le &
  [ STEM < "know" >,
    SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ].

know_v5 := v_unerg_le &
  [ STEM < "know" >,
    SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ].

know_about_v1 := v_empty_prep_intrans_le &
  [ STEM < "know" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_know_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

Koepp_n1 := n_proper_le &
  [ STEM < "koepp" >,
    SYNSEM.LKEYS.KEYREL.CARG "Koepp" ].

Korn_n1 := n_proper_le &
  [ STEM < "korn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Korn" ].

Kroepke := n_proper_le &
  [ STEM < "kroepke" >,
    SYNSEM.LKEYS.KEYREL.CARG "kroepke" ].

lab_n1 := n_intr_le &
  [ STEM < "lab" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lab_rel" ].

laboratory_n1 := n_intr_le &
  [ STEM < "laboratory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laboratory_rel" ].

lack_v1 := v_np_trans_le &
  [ STEM < "lack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lack_rel" ].

lad_n1 := n_intr_le &
  [ STEM < "lad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lad_rel" ].

Lagemann_n1 := n_proper_le &
  [ STEM < "lagemann" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lagemann" ].

lake_n1 := n_intr_le &
  [ STEM < "lake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lake_rel" ].

Landesbank_n1 := n_proper_le &
  [ STEM < "landesbank" >,
    SYNSEM.LKEYS.KEYREL.CARG "Landesbank" ].

Lange_n1 := n_proper_le &
  [ STEM < "lange" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lange" ].

large_a1 := adj_intrans_le &
  [ STEM < "large" >,
    SYNSEM.LKEYS.KEYREL.PRED "_large_rel" ].

largely := adv_int_vp_le &
  [ STEM < "largely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_largely_rel" ].

larger_a1 := adj_comp_le &
  [ STEM < "larger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_large_rel" ].

largest_a1 := adj_superl_le &
  [ STEM < "largest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_large_rel" ].

largest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "largest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_large_rel" ].

last_adv1 := adv_int_vp_post_nonmob_le &
  [ STEM < "last" >,
    SYNSEM.LKEYS.KEYREL.PRED "_last_adv_rel" ].

last_adv2 := adv_int_vp_pre_le &
  [ STEM < "last" >,
    SYNSEM.LKEYS.KEYREL.PRED "_last_adv_rel" ].

last_v1 := v_unacc_le &
  [ STEM < "last" >,
    SYNSEM.LKEYS.KEYREL.PRED "_last_v_rel" ].

last_a1 := adj_intrans_notb_le &
  [ STEM < "last" >,
    SYNSEM.LKEYS.KEYREL.PRED "_last_adj_rel" ].

last_det := det_next_last_le &
  [ STEM < "last" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _last_adj_rel ].

late_a1 := adj_attr_intrans_le &
  [ STEM < "late" >,
    SYNSEM.LKEYS.KEYREL.PRED "_late_rel" ].

late_a2 := adj_trans_oblig_le &
  [ STEM < "late" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_late_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

later_a1 := adj_comp_le &
  [ STEM < "later" >,
    SYNSEM.LKEYS.KEYREL.PRED "_late_rel" ].

latest_a1 := adj_superl_le &
  [ STEM < "latest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_late_rel" ].

latest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "latest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_late_rel" ].

laugh_n1 := n_intr_le &
  [ STEM < "laugh" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laugh_n_rel" ].

laugh_v1 := v_unerg_le &
  [ STEM < "laugh" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laugh_v_rel" ].

laundry_n1 := n_mass_count_le &
  [ STEM < "laundry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laundry_rel" ].

Lavergne_n1 := n_proper_le &
  [ STEM < "lavergne" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lavergne" ].

lay_v1 := v_np_prep_trans_dors_le &
  [ STEM< "lay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lay_rel" ].

lay_down_v1 := v_particle_le &
  [ STEM < "lay" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lay_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

lay_off_v1 := v_particle_np_le &
  [ STEM < "lay" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lay_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

lead_v1 := v_np_trans_le &
  [ STEM < "lead" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lead_v_rel" ].

leadership_n1 := n_mass_le &
  [ STEM < "leadership" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leadership_rel" ].

learn_v1 := v_np_trans_le &
  [ STEM < "learn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_learn_rel" ].

learn_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "learn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_learn_rel" ].

learn_v3 := v_unerg_le &
  [ STEM < "learn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_learn_rel" ].

learn_v4 := v_subj_equi_le &
  [ STEM < "learn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_learn_rel" ].

least_a1 := adj_intrans_le &
  [ STEM < "least" >,
    SYNSEM.LKEYS.KEYREL.PRED "_least_isect_rel" ].

least_s1 := adv_comparison_spec_le &
  [ STEM < "least" >,
    SYNSEM.LKEYS.KEYREL.PRED comp_least_rel ].

least_deg := adv_degree_spec_tt_le &
  [ STEM < "least" >,
    SYNSEM.LKEYS.KEYREL.PRED "_least_deg_rel" ].

;least_adj := adj_most_least_le &
;  [ STEM < "least" >,
;    SYNSEM.LKEYS.KEYREL.PRED "_least_adj_rel" ].

leave_behind_v1 := v_particle_np_le &
  [ STEM < "leave" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_leave_behind_rel",
             LKEYS.--COMPKEY _behind_p_sel_rel ] ].

leave_out_v1 := v_particle_np_le &
  [ STEM < "leave" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_leave_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

leave_to_v1 := v_expl_pp_inf_oeq_le &
  [ STEM < "leave" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_leave_v_2_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

leave_v1 := v_unerg_le &
  [ STEM < "leave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leave_rel" ].

leave_v2 := v_np_trans_le &
  [ STEM < "leave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leave_rel" ].

leave_v3 := v_np_prep_trans_dors_le &
  [ STEM < "leave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leave_rel" ].

leave_v4 := v_ditrans_le &
  [ STEM < "leave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leave_rel" ].

lecture_n1 := n_intr_le &
  [ STEM < "lecture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lecture_rel" ].

Lee := n_proper_le &
  [ STEM < "lee" >,
    SYNSEM.LKEYS.KEYREL.CARG "lee" ].

leeway_n1 := n_mass_le &
  [ STEM < "leeway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leeway_rel" ].

left_over_a1 := adj_irreg_attr_le &
  [ STEM < "left", "over" >,
    SYNSEM.LKEYS.KEYREL.PRED "_left_over_rel" ].

left_over_a2 := adj_irreg_pred_intrans_le &
  [ STEM < "left", "over" >,
    SYNSEM.LKEYS.KEYREL.PRED "_left_over_rel" ].

legitimate_a1 := adj_intrans_le &
  [ STEM < "legitimate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_legitimate_rel" ].

Leipzig_n1 := n_proper_le &
  [ STEM < "leipzig" >,
    SYNSEM.LKEYS.KEYREL.CARG "Leipzig" ].

leisure_n1 := n_mass_le &
  [ STEM < "leisure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leisure_rel" ].

length_n1 := n_ppof_le &
  [ STEM < "length" >,
    SYNSEM.LKEYS.KEYREL.PRED "_length_rel" ].

lent_n1 := n_season_pp_le &
  [ STEM < "lent" >,
    SYNSEM.LKEYS.KEYREL.CARG "lent" ].

lent_n2 := n_season_np_le &
  [ STEM < "lent" >,
    SYNSEM.LKEYS.KEYREL.CARG "lent" ].

less_a1 := adv_comparison_spec_le &
  [ STEM < "less" >,
    SYNSEM.LKEYS.KEYREL.PRED comp_less_rel ].

less_than_deg := adv_degree_spec_le &
  [ STEM < "less", "than" >,
    SYNSEM.LKEYS.KEYREL.PRED "_less_than_rel" ].

no_less_than_deg := adv_degree_spec_le &
  [ STEM < "no", "less", "than" >,
    SYNSEM.LKEYS.KEYREL.PRED "_no_less_than_rel" ].

less_q := det_part_pl_mass_noagr_le &
  [ STEM < "less" >,
    SYNSEM.LKEYS.KEYREL.PRED _less_q_rel ].

less_deg := more_degree_spec_le &
  [ STEM < "less" >,
    SYNSEM.LKEYS.KEYREL.PRED "_less_deg_rel" ].

less_deg_nc := comp_degree_spec_nc_le &
  [ STEM < "less" >,
    SYNSEM.LKEYS.KEYREL.PRED "_less_deg_rel" ].

let_v1 := v_sorb_le &
  [ STEM < "let" >,
    SYNSEM.LKEYS.KEYREL.PRED "_let_rel" ].

let_v2 := v_np_non_trans_le &
  [ STEM < "let" >,
    SYNSEM.LKEYS.KEYREL.PRED "_let_rel" ].

lets_1 := va_lets_imp_le &
  [ STEM < "let's" > ].

lets_2 := va_lets_imp_le &
  [ STEM < "let", "s" > ].

lets_3 := va_lets_imp_le &
  [ STEM < "let", "'s" > ].

letter_n1 := n_ppof_le &
  [ STEM < "letter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_letter_rel" ].

level_a1 := adj_intrans_le &
  [ STEM < "level" >,
    SYNSEM.LKEYS.KEYREL.PRED "_level_adj_rel" ].

level_n1 := n_ppof_le &
  [ STEM < "level" >,
    SYNSEM.LKEYS.KEYREL.PRED "_level_n_rel" ].

level_v1 := v_np_trans_le &
  [ STEM < "level" >,
    SYNSEM.LKEYS.KEYREL.PRED "_level_v_rel" ].

library_n1 := n_ppof_le &
  [ STEM < "library" >,
    SYNSEM.LKEYS.KEYREL.PRED "_library_rel" ].

lie_v1 := v_unerg_le &
  [ STEM < "lie" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lie_rel" ].

life_n1 := n_mass_count_ppof_le &
  [ STEM < "life" >,
    SYNSEM.LKEYS.KEYREL.PRED "_life_rel" ].

death_n1 := n_mass_count_ppof_le &
  [ STEM < "death" >,
    SYNSEM.LKEYS.KEYREL.PRED "_death_rel" ].

lift_v1 := v_np_trans_le &
  [ STEM < "lift" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lift_rel" ].

lift_away_v1 := v_particle_np_le &
  [ STEM < "lift" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lift_away_rel",
             LKEYS.--COMPKEY _away_p_sel_rel ] ].

light_a1 := adj_intrans_le &
  [ STEM < "light" >,
    SYNSEM.LKEYS.KEYREL.PRED "_light_adj_rel" ].

lighter_a1 := adj_comp_le &
  [ STEM < "lighter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_light_adj_rel" ].

lightest_a1 := adj_superl_le &
  [ STEM < "lightest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_light_adj_rel" ].

lightest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "lightest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_light_adj_rel" ].

lightly := adv_int_vp_le &
  [ STEM < "lightly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lightly_rel" ].

like_p := p_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED _like_p_rel ].

like_p_2 := p_subconj_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_preph_rel" ].

like_v1 := v_np_trans_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_v_rel" ].

like_v2 := v_subj_equi_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_eq_rel" ].

like_v3 := v_subj_equi_prp_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_eq_rel" ].

like_v4 := v_sor_non_trans_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_eq_rel" ].

like_back_v1 := v_particle_np_le &
  [ STEM < "like" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_like_v_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

like_prd_v1 := v_obj_equi_non_trans_prd_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_eq_rel"  ].

like_c := comp_like_le &
  [ STEM < "like" > ].

as_if_c := comp_like_le &
  [ STEM < "as", "if" > ].

as_though_c := comp_like_le &
  [ STEM < "as", "though" > ].

likely_a1 := adj_intrans_le &
  [ STEM < "likely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_likely_rel" ].

likely_a2 := adj_reg_atrans_le &
  [ STEM < "likely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_likely_rel" ].

likewise_adv1 := adv_int_vp_post_le &
  [ STEM < "likewise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_likewise_a_rel" ].

limit_n1 := n_ppof_le &
  [ STEM < "limit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_limit_n_rel" ].

limit_v1 := v_np_trans_le &
  [ STEM < "limit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_limit_v_rel" ].

limit_v2 := v_empty_prep_trans_le &
  [ STEM < "limit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_limit_v_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

limited_a1 := adj_intrans_le &
  [ STEM < "limited" >,
    SYNSEM.LKEYS.KEYREL.PRED "_limited_rel" ].

Linda_n1 := n_proper_le &
  [ STEM < "linda" >,
    SYNSEM.LKEYS.KEYREL.CARG "Linda" ].

Lindau_n1 := n_proper_le &
  [ STEM < "lindau" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lindau" ].

line_n1 := n_ppof_le &
  [ STEM < "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_line_rel" ].

linguistics_n1 := n_mass_le &
  [ STEM < "linguistics" >,
    SYNSEM.LKEYS.KEYREL.PRED "_linguistics_rel" ].

Lisa_n1 := n_proper_le &
  [ STEM < "lisa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lisa" ].

list_n1 := n_ppof_le &
  [ STEM < "list" >,
    SYNSEM.LKEYS.KEYREL.PRED "_list_n_rel" ].

list_v1 := v_np_trans_le &
  [ STEM < "list" >,
    SYNSEM.LKEYS.KEYREL.PRED "_list_v_rel" ].

listen_to := v_empty_prep_intrans_le &
  [ STEM < "listen" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_listen_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

listen_v2 := v_unerg_le &
  [ STEM < "listen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_listen_to_rel" ].

little_a1 := adj_intrans_le &
  [ STEM < "little" >,
    SYNSEM.LKEYS.KEYREL.PRED "_little_rel" ].

littler_a1 := adj_comp_le &
  [ STEM < "littler" >,
    SYNSEM.LKEYS.KEYREL.PRED "_little_rel" ].

littlest_a1 := adj_superl_le &
  [ STEM < "littlest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_little_rel" ].

littlest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "littlest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_little_rel" ].

little_det := det_part_ms_noagr_le &
  [ STEM < "little" >,
    SYNSEM.LKEYS.KEYREL.PRED _little_q_rel ].

live_v1 := v_unerg_le &
  [ STEM < "live" >,
    SYNSEM.LKEYS.KEYREL.PRED "_live_rel" ].

load_v1 := v_np_trans_le &
  [ STEM < "load" >,
    SYNSEM.LKEYS.KEYREL.PRED "_load_v_rel" ].

load_v2 := v_np_prep_trans_le &
  [ STEM < "load" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_load_v_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

loathe_v1 := v_np_trans_le &
  [ STEM < "loathe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loathe_rel" ].

lobby_n1 := n_ppof_le &
  [ STEM < "lobby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lobby_rel" ].

lobster_n1 := n_mass_count_le &
  [ STEM < "lobster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lobster_rel" ].

locality_n1 := n_intr_le &
  [ STEM < "locality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_locality_rel" ].

locate_v1 := v_np_trans_le &
  [ STEM < "locate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_locate_rel" ].

location_n1 := n_ppof_le &
  [ STEM < "location" >,
    SYNSEM.LKEYS.KEYREL.PRED "_location_rel" ].

lock_v1 := v_np_trans_le &
  [ STEM < "lock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lock_v_rel" ].

loccumer_hof := n_intr_named_le &
  [ STEM < "loccumer", "hof" >,
    SYNSEM.LKEYS.KEYREL.CARG "loccumer_hof" ].

long_a1 := adj_intrans_le &
  [ STEM < "long" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_rel" ].

long := adv_int_vp_post_le &
  [ STEM < "long" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_adv_rel" ].

long_run_a1 := adj_intrans_le &
  [ STEM < "long", "run" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_run_adj_rel" ].

long_term_a1 := adj_intrans_le &
  [ STEM < "long", "term" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_term_rel" ].

longer_a1 := adj_comp_le &
  [ STEM < "longer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_rel" ].

longest_a1 := adj_superl_le &
  [ STEM < "longest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_rel" ].

longest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "longest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_rel" ].

look_after_v1 := v_empty_prep_intrans_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_after_rel",
             LKEYS.--COMPKEY _after_p_sel_rel ] ].

look_around_v1 := v_particle_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

look_at_v1 := v_empty_prep_intrans_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_at_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

look_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

look_forward_to_v1 := v_particle_empty_pp_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_forward_to_rel",
             LKEYS [ --COMPKEY _forward_p_sel_rel,
                     --OCOMPKEY _to_p_sel_rel ] ] ].

look_back_at_v1 := v_particle_empty_pp_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_back_at_rel",
             LKEYS [ --COMPKEY _back_p_sel_rel,
                     --OCOMPKEY _at_p_sel_rel ] ] ].

look_into_v1 := v_empty_prep_intrans_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_into_rel",
             LKEYS.--COMPKEY _into_p_sel_rel ] ].

look_n1 := n_ppcomp_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_n_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

look_seem_v1 := v_prdp_pp_ssr_adj_le &
  [ STEM < "look" >,
    SYNSEM.LKEYS.KEYREL.PRED "_look_seem_rel" ].

look_seem_v2 := v_expl_it_subj_like_le &
  [ STEM < "look" >,
    SYNSEM.LKEYS.KEYREL.PRED "_look_seem_rel" ].

look_up_to_v1 := v_particle_pp_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_up_to_rel",
             LKEYS [ --COMPKEY _up_p_sel_rel,
                     --OCOMPKEY _to_p_rel ] ] ].

look_up_v1 := v_particle_np_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

look_over_v1 := v_particle_np_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

lord_root_pre := adv_disc_preh_le &
  [ STEM < "lord" >,
    SYNSEM.LKEYS.KEYREL.CARG "lord" ].

lord_root_post := adv_disc_posth_le &
  [ STEM < "lord" >,
    SYNSEM.LKEYS.KEYREL.CARG "lord" ].

lose_by_v1 := v_empty_prep_intrans_le &
  [ STEM < "lose" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lose_by_rel",
             LKEYS.--COMPKEY _by_p_sel_rel ] ].

lose_v1 := v_unerg_le &
  [ STEM < "lose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lose_i_rel" ].

lose_v3 := v_np_trans_le &
  [ STEM < "lose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lose_rel" ].

lost_a1 := adj_intrans_le &
  [ STEM < "lost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lost_rel" ].

loud_a1 := adj_intrans_le &
  [ STEM < "loud" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loud_adj_rel" ].

loudly_adv1 := adv_int_vp_le &
  [ STEM < "loudly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loudly_rel" ].

lounge_n1 := n_intr_le &
  [ STEM < "lounge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lounge_rel" ].

love_v1 := v_np_trans_le &
  [ STEM < "love" >,
    SYNSEM.LKEYS.KEYREL.PRED "_love_v_rel" ].

love_v2 := v_subj_equi_le &
  [ STEM < "love" >,
    SYNSEM.LKEYS.KEYREL.PRED "_love_to_rel" ].

love_v3 := v_subj_equi_prp_le &
  [ STEM < "love" >,
    SYNSEM.LKEYS.KEYREL.PRED "_love_to_rel" ].

low_a1 := adj_trans_le &
  [ STEM < "low" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_low_adj_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

low := adv_int_vp_post_le &
  [ STEM < "low" >,
    SYNSEM.LKEYS.KEYREL.PRED "_low_adv_rel" ].

lower_a1 := adj_comp_le &
  [ STEM < "lower" >,
    SYNSEM.LKEYS.KEYREL.PRED "_low_adj_rel" ].

lowest_a1 := adj_superl_le &
  [ STEM < "lowest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_low_adj_rel" ].

lowest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "lowest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_low_adj_rel" ].

lower_a2 := adj_intrans_le &
  [ STEM < "lower" >,
    SYNSEM.LKEYS.KEYREL.PRED "_low_adj_rel" ].

lower_v1 := v_np_trans_le &
  [ STEM < "lower" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lower_cause_v_rel" ].

lower_v2 := v_unacc_le &
  [ STEM < "lower" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lower_v_rel" ].

lucid_a1 := adj_intrans_le &
  [ STEM < "lucid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lucid_rel" ].

luck_n1 := n_mass_le &
  [ STEM < "luck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_luck_rel" ].

luckily_adv1 := adv_int_vp_post_le &
  [ STEM < "luckily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_luckily_rel" ].

Ludwigshafen_n1 := n_proper_le &
  [ STEM < "ludwigshafen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ludwigshafen" ].

Luebeck_n1 := n_proper_le &
  [ STEM < "luebeck" >,
    SYNSEM.LKEYS.KEYREL.CARG "Luebeck" ].

lunch_n1 := n_mass_count_le &
  [ STEM < "lunch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lunch_rel" ].

lunch_n2 := n_mealtime_le &
  [ STEM < "lunch" >,
    SYNSEM.LKEYS.KEYREL.PRED _lunchtime_rel ].

lunch_v1 := v_unerg_le &
  [ STEM < "lunch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lunch_v_rel" ].

maam_root_pre := adv_disc_preh_le &
  [ STEM < "maam" >,
    SYNSEM.LKEYS.KEYREL.CARG "maam" ].

maam_root_post := adv_disc_posth_le &
  [ STEM < "maam" >,
    SYNSEM.LKEYS.KEYREL.CARG "maam" ].

machine_n1 := n_intr_le &
  [ STEM < "machine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_machine_rel" ].

mad_a1 := adj_intrans_le &
  [ STEM < "mad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mad_rel" ].

maddening_a1 := adj_intrans_le &
  [ STEM < "maddening" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maddening_rel" ].

magazine_n1 := n_intr_le &
  [ STEM < "magazine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_magazine_rel" ].

main_a1 := adj_intrans_le &
  [ STEM < "main" >,
    SYNSEM.LKEYS.KEYREL.PRED "_main_rel" ].

mainly := adv_int_vp_le &
  [ STEM < "mainly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mainly_rel" ].

Mainz_n1 := n_proper_le &
  [ STEM < "mainz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mainz" ].

major_a1 := adj_intrans_le &
  [ STEM < "major" >,
    SYNSEM.LKEYS.KEYREL.PRED "_major_rel" ].

Majorca_n1 := n_proper_le &
  [ STEM < "majorca" >,
    SYNSEM.LKEYS.KEYREL.CARG "Majorca" ].

majority_n1 := n_ppof_le &
  [ STEM < "majority" >,
    SYNSEM.LKEYS.KEYREL.PRED "_majority_rel" ].

make_note_of_v1 := v_empty_prep_trans_le &
  [ STEM < "make" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_make_a_note_of_rel",
             LKEYS [ --COMPKEY _note_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

make_over_v1 := v_np_prep_particle_only_le &
  [ STEM < "make" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_make_over_rel",
             LKEYS.--OCOMPKEY _over_p_sel_rel ] ].

make_v2 := v_sorb_le &
  [ STEM < "make" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_rel" ].

made_v2 := v_sorb_pass_le &
  [ STEM < "made" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_rel" ].

make_v1 := v_np_trans_le &
  [ STEM < "make" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_rel" ].

make_v3 := v_ditrans_only_le &
  [ STEM < "make" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_ditr_rel" ].

make_v4 := v_obj_equi_prd_le &
  [ STEM < "make" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_rel" ].

maladroit_a1 := adj_intrans_le &
  [ STEM < "maladroit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maladroit_rel" ].

Mallorca_n1 := n_proper_le &
  [ STEM < "mallorca" >,
    SYNSEM.LKEYS.KEYREL.CARG "Majorca" ].

man1 := n_intr_le &
  [ STEM < "man" >,
    SYNSEM.LKEYS.KEYREL.PRED "_man_rel" ].

manage_v1 := v_np_trans_le &
  [ STEM < "manage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manage_rel" ].

manage_v2 := v_subj_equi_le &
  [ STEM < "manage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manage_rel" ].

management_n1 := n_mass_le &
  [ STEM < "management" >,
    SYNSEM.LKEYS.KEYREL.PRED "_management_rel" ].

manager_n1 := n_ppof_le &
  [ STEM < "manager" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manager_rel" ].

manner_n1 := n_intr_le &
  [ STEM < "manner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manner_rel" ].

Mannheim_n1 := n_proper_le &
  [ STEM < "mannheim" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mannheim" ].

many := det_part_pl_many_le &
  [ STEM < "many" >,
    SYNSEM.LKEYS.KEYREL.PRED _many_q_rel ].

map_n1 := n_intr_le &
  [ STEM < "map" >,
    SYNSEM.LKEYS.KEYREL.PRED "_map_n_rel" ].

map_v1 := v_np_trans_le &
  [ STEM < "map" >,
    SYNSEM.LKEYS.KEYREL.PRED "_map_v_rel" ].

map_v2 := v_np_prep_trans_le &
  [ STEM < "map" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_map_v_rel",
             LKEYS.--OCOMPKEY _to_p_rel ] ].

march := n_month_le &
  [ STEM < "march" >,
    SYNSEM.LKEYS.KEYREL.CARG "mar" ].

march_abb_n1 := n_month_le &
  [ STEM < "mar" >,
    SYNSEM.LKEYS.KEYREL.CARG "mar" ].

march_2 := n_month_year_le &
  [ STEM < "march" >,
    SYNSEM.LKEYS.KEYREL.CARG "mar" ].

march_abb_n2 := n_month_year_le &
  [ STEM < "mar" >,
    SYNSEM.LKEYS.KEYREL.CARG "mar" ].

mardi_gras := n_holiday_le &
  [ STEM < "mardi", "gras" >,
    SYNSEM.LKEYS.KEYREL.CARG "mardi_gras" ].

Maredo_n1 := n_proper_le &
  [ STEM < "maredo" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maredo" ].

Marienplatz_n1 := n_proper_le &
  [ STEM < "marienplatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Marienplatz" ].

mark_v1 := v_np_trans_le &
  [ STEM < "mark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mark_v_rel" ].

mark_down_v1 := v_particle_np_le &
  [ STEM < "mark" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mark_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

Marriott_n1 := n_intr_named_le &
  [ STEM < "marriott" >,
    SYNSEM.LKEYS.KEYREL.CARG "Marriott" ].

marvelously := adv_int_vp_post_le &
  [ STEM < "marvelously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_marvelously_rel" ].

marvelous_a1 := adj_intrans_le &
  [ STEM < "marvelous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_marvelous_rel" ].

Mary := n_proper_le &
  [ STEM < "mary" >,
    SYNSEM.LKEYS.KEYREL.CARG "mary" ].

match_up_v1 := v_particle_le &
  [ STEM < "match" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_match_coll_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

match_up_v2 := v_particle_np_le &
  [ STEM < "match" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_match_v2_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

match_v1 := v_np_trans_le &
  [ STEM < "match" >,
    SYNSEM.LKEYS.KEYREL.PRED "_match_v2_rel" ].

match_v2 := v_unacc_le &
  [ STEM < "match" >,
    SYNSEM.LKEYS.KEYREL.PRED "_match_v_rel" ].

match_v3 := v_empty_prep_intrans_le &
  [ STEM < "match" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_match_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

material_n1 := n_mass_count_le &
  [ STEM < "material" >,
    SYNSEM.LKEYS.KEYREL.PRED "_material_rel" ].

Matt := n_proper_le &
  [ STEM < "matt" >,
    SYNSEM.LKEYS.KEYREL.CARG "matt" ].

matter_n1 := n_intr_le &
  [ STEM < "matter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_matter_n_rel" ].

matter_v1 := v_unacc_le &
  [ STEM < "matter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_matter_v_rel" ].

mattress_n1 := n_intr_le &
  [ STEM < "mattress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mattress_rel" ].

Maxim_n1 := n_proper_le &
  [ STEM < "maxim" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maxim" ].

maximally_adv1 := adv_int_vp_post_le &
  [ STEM < "maximally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maximally_rel" ].

maximum_adv1 := pp_le &
  [ STEM < "maximum" >,
    SYNSEM.LKEYS.KEYREL.PRED _maximum_adv_rel ].

maximum_a1 := adj_intrans_le &
  [ STEM < "maximum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maximum_rel" ].

may := n_month_le &
  [ STEM < "may" >,
    SYNSEM.LKEYS.KEYREL.CARG "may" ].

may_2 := n_month_year_le &
  [ STEM < "may" >,
    SYNSEM.LKEYS.KEYREL.CARG "may" ].

may_aux_pos := va_modal_pos_le & 
  [ STEM < "may" >,
    SYNSEM.LKEYS.KEYREL.PRED _may_rel ].

maybe_adv1 := adv_s_pre_word_nospec_le &
  [ STEM < "maybe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maybe_rel" ].

me := n_pers_pro_me_le &
  [ STEM < "me" > ].

meal_n1 := n_intr_le &
  [ STEM < "meal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meal_rel" ].

mean_a1 := adj_intrans_le &
  [ STEM < "mean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mean_isect_rel" ].

mean_v1 := v_np_trans_le &
  [ STEM < "mean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mean_v_rel" ].

mean_v2 := v_cp_prop_non_trans_le &
  [ STEM < "mean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mean_v_rel" ].

mean_v3 := v_unerg_le &
  [ STEM < "mean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mean_v_rel" ].

mean_v4 := v_subj_equi_le &
  [ STEM < "mean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mean_v_rel" ].

mean_v5 := v_sor_non_trans_le &
  [ STEM < "mean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mean_v_rel" ].

mean_v6 := v_prep_intrans_event_le &
  [ STEM < "mean" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mean_v_rel",
             LKEYS.--COMPKEY loc_abstr_rel ] ].

means_n1 := n_ppof_le &
  [ STEM < "means" >,
    SYNSEM.LKEYS.KEYREL.PRED "_means_rel" ].

meantime_n1 := n_intr_le &
  [ STEM < "meantime" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meantime_rel" ].

meanwhile_adv1 := adv_int_vp_post_le &
  [ STEM < "meanwhile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meanwhile_rel" ].

meet_v1 := v_unerg_le &
  [ STEM < "meet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meet_v_rel" ].

meet_v2 := v_np_trans_le &
  [ STEM < "meet" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_meet_v_2_rel",
             LKEYS.--COMPKEY non_temp_nom_rel ] ].

meet_up_v1 := v_particle_le &
  [ STEM < "meet" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_meet_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

meeting_n1 := n_ppof_unsp_reg_le &
  [ STEM < "meeting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meeting_rel" ].

Meldau_n1 := n_proper_le &
  [ STEM < "meldau" >,
    SYNSEM.LKEYS.KEYREL.CARG "Meldau" ].

member_n1 := n_ppof_le &
  [ STEM < "member" >,
    SYNSEM.LKEYS.KEYREL.PRED "_member_rel" ].

memorial_day := n_holiday_le &
  [ STEM < "memorial", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "memorial_day" ].

memory_n1 := n_mass_count_ppof_le &
  [ STEM < "memory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_memory_rel" ].

mensa_n1 := n_intr_le &
  [ STEM < "mensa" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mensa_rel" ].

mention_v1 := v_np_trans_le &
  [ STEM < "mention" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mention_rel" ].

mention_v2 := v_cp_non_trans_le &
  [ STEM < "mention" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mention_rel" ].

mention_v3 := v_prep_intrans_event_le &
  [ STEM < "mention" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mention_rel",
             LKEYS.--COMPKEY loc_abstr_rel ] ].

menu_n1 := n_intr_le &
  [ STEM < "menu" >,
    SYNSEM.LKEYS.KEYREL.PRED "_menu_rel" ].

Mercedes_n1 := n_intr_named_le &
  [ STEM < "mercedes" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mercedes" ].

Mercedes_Benz_n1 := n_intr_named_le &
  [ STEM < "mercedes", "benz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mercedes_Benz" ].

merely_adv1 := adv_vp_aux_le &
  [ STEM < "merely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_merely_rel" ].

merry_a1 := adj_intrans_le &
  [ STEM < "merry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_merry_rel" ].

metaphysical_a1 := adj_intrans_le &
  [ STEM < "metaphysical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_metaphysical_rel" ].

metaphysically := adv_int_vp_le &
  [ STEM < "metaphysically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_metaphysically_rel" ].

Microsoft_n1 := n_proper_le &
  [ STEM < "microsoft" >,
    SYNSEM.LKEYS.KEYREL.CARG "Microsoft" ].

midday := n_hour_le &
  [ STEM < "midday" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

middle_a1 := adj_intrans_le &
  [ STEM < "middle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_middle_isect_rel" ].

middle_n1 := n_ppof_le &
  [ STEM < "middle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_middle_n_rel" ].

midnight := n_hour_le &
  [ STEM < "midnight" >,
    SYNSEM.LKEYS.KEYREL.CARG "0" ].

midst_n1 := n_ppof_le &
  [ STEM < "midst" >,
    SYNSEM.LKEYS.KEYREL.PRED "_midst_rel" ].

might_aux_pos := va_modal_subj_pos_le & 
  [ STEM < "might" >,
    SYNSEM.LKEYS.KEYREL.PRED _might_rel ].

might_aux_neg_1 := va_modal_subj_neg_le &
  [ STEM < "mightn't" >,
    SYNSEM.LKEYS.KEYREL.PRED _might_rel ].

might_aux_neg_2 := va_modal_subj_neg_le &
  [ STEM < "mightn", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _might_rel ].

milk_v1 := v_np_trans_le &
  [ STEM < "milk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_milk_v_rel" ].

million := adj_bare_specified_card_million_le & 
  [ STEM < "million" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000" ].

million_comps := adj_complemented_specified_card_million_le & 
  [ STEM < "million" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000" ].

mind_v1 := v_np*_trans_le &
  [ STEM < "mind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mind_rel" ].

mind_v2 := v_cp_only_non_trans_le &
  [ STEM < "mind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mind_rel" ].

mine := n_poss_pro_mine_le &
  [ STEM < "mine" > ].

ministry_n1 := n_ppof_le &
  [ STEM < "ministry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ministry_rel" ].

minor_a1 := adj_intrans_le &
  [ STEM < "minor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minor_isect_rel" ].

minute_n1 := n_temp_ppcomp_minute_le &
  [ STEM < "minute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minute_n_rel" ].

miraculous_a1 := adj_intrans_le &
  [ STEM < "miraculous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_miraculous_rel" ].

misery_n1 := n_mass_le &
  [ STEM < "misery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_misery_rel" ].

misplace_v1 := v_np_trans_le &
  [ STEM < "misplace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_misplace_rel" ].

mispronounce_v1 := v_np_trans_le &
  [ STEM < "mispronounce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mispronounce_rel" ].

misread_v1 := v_np_trans_le &
  [ STEM < "misread" >,
    SYNSEM.LKEYS.KEYREL.PRED "_misread_rel" ].

miss_title := n_title_unsp_le &
  [ STEM < "miss" >,
    SYNSEM.LKEYS.KEYREL.CARG "ms" ].

miss_out_v1 := v_particle_np_le &
  [ STEM < "miss" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_miss_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

miss_v1 := v_np_trans_le &
  [ STEM < "miss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_miss_rel" ].

missus := n_title_unsp_le &
  [ STEM < "missus" >,
    SYNSEM.LKEYS.KEYREL.CARG "mrs" ].

mistake_n1 := n_intr_le &
  [ STEM < "mistake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mistake_rel" ].

mistake_v1 := v_empty_prep_trans*_le &
  [ STEM < "mistake" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mistake_v_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

mistaken_a1 := adj_intrans_le &
  [ STEM < "mistaken" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mistaken_rel" ].

mister := n_title_unsp_le &
  [ STEM < "mister" >,
    SYNSEM.LKEYS.KEYREL.CARG "mr" ].

misunderstand_v1 := v_np*_trans_le &
  [ STEM < "misunderstand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_misunderstand_rel" ].

misunderstanding_n1 := n_intr_le &
  [ STEM < "misunderstanding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_misunderstanding_rel" ].

mode_n1 := n_intr_le &
  [ STEM < "mode" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mode_rel" ].

modify_v1 := v_np_trans_le &
  [ STEM < "modify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_modify_rel" ].

Moecki_n1 := n_proper_le &
  [ STEM < "moecki" >,
    SYNSEM.LKEYS.KEYREL.CARG "Moecki" ].

moment_n1 := n_intr_temp_h_le &
  [ STEM < "moment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moment_rel" ].

Monaco_n1 := n_proper_le &
  [ STEM < "monaco" >,
    SYNSEM.LKEYS.KEYREL.CARG "Monaco" ].

monday_n1 := n_day_of_week_le &
  [ STEM < "monday" >,
    SYNSEM.LKEYS.KEYREL.CARG "mon" ].

monday_n2 := n_day_of_week_le &
  [ STEM < "mon" >,
    SYNSEM.LKEYS.KEYREL.CARG "mon" ].

money_n1 := n_mass_le &
  [ STEM < "money" >,
    SYNSEM.LKEYS.KEYREL.PRED "_money_rel" ].

month_n1 := n_ppcomp_le &
  [ STEM < "month" >,
    SYNSEM.LKEYS.KEYREL.PRED "_month_rel" ].

monthly_adv1 := adv_int_vp_post_le &
  [ STEM < "monthly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_monthly_adv_rel" ].

monthly_a1 := adj_intrans_le &
  [ STEM < "monthly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_monthly_rel" ].

mood_n1 := n_intr_le &
  [ STEM < "mood" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mood_n_rel" ].

more_deg := more_degree_spec_le &
  [ STEM < "more" >,
    SYNSEM.LKEYS.KEYREL.PRED "_more_deg_rel" ].

more_deg_nc := comp_degree_spec_nc_le &
  [ STEM < "more" >,
    SYNSEM.LKEYS.KEYREL.PRED "_more_deg_rel" ].

more := det_part_pl_mass_le &
  [ STEM < "more" >,
    SYNSEM.LKEYS.KEYREL.PRED _more_q_rel ].

more_a1 := adv_comparison_spec_le &
  [ STEM < "more" >,
    SYNSEM.LKEYS.KEYREL.PRED more_sc_adv_rel ].

more_or_less_adv1 := adv_int_vp_post_le &
  [ STEM < "more", "or", "less" >,
    SYNSEM.LKEYS.KEYREL.PRED "_more_or_less_rel" ].

more_than_deg := adv_degree_spec_le &
  [ STEM < "more", "than" >,
    SYNSEM.LKEYS.KEYREL.PRED "_more_than_rel" ].

no_more_than := adv_degree_spec_le &
  [ STEM < "no", "more", "than" >,
    SYNSEM.LKEYS.KEYREL.PRED "_no_more_than_rel" ].

moreover_root_pre := adv_disc_preh_le &
  [ STEM < "moreover" >,
    SYNSEM.LKEYS.KEYREL.CARG "moreover" ].

moreover_root_post := adv_disc_posth_le &
  [ STEM < "moreover" >,
    SYNSEM.LKEYS.KEYREL.CARG "moreover" ].

morning_nc_n1 := n_day_part_nocomp_le &
  [ STEM < "morning" >,
    SYNSEM.LKEYS.KEYREL.PRED _morning_n_rel ].

morning_nc_pl_n1 := n_day_part_pl_nocomp_le &
  [ STEM < "mornings" >,
    SYNSEM.LKEYS.KEYREL.PRED _morning_n_rel ].

morning_sg_n1 := n_day_part_sg_le &
  [ STEM < "morning" >,
    SYNSEM.LKEYS.KEYREL.PRED _morning_n_rel ].

morning_pl_n1 := n_day_part_pl_le &
  [ STEM < "mornings" >,
    SYNSEM.LKEYS.KEYREL.PRED _morning_n_rel ].

morning_sg_def := n_def_day_part_sg_le &
  [ STEM < "morning" >,
    SYNSEM.LKEYS.KEYREL.PRED _morning_n_def_rel ].

morning_pl_def := n_def_day_part_pl_le &
  [ STEM < "mornings" >,
    SYNSEM.LKEYS.KEYREL.PRED _morning_n_def_rel ].

most := det_part_pl_mass_le &
  [ STEM < "most" >,
    SYNSEM.LKEYS.KEYREL.PRED _most_q_rel ].

most_a1 := adv_comparison_spec_le &
  [ STEM < "most" >,
    SYNSEM.LKEYS.KEYREL.PRED comp_most_rel].

most_deg := adv_degree_spec_tt_le &
  [ STEM < "most" >,
    SYNSEM.LKEYS.KEYREL.PRED "_most_deg_rel" ].

mostly_adv1 := adv_int_vp_le &
  [ STEM < "mostly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mostly_rel" ].

mother_n1 := n_ppof_le &
  [ STEM < "mother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mother_rel" ].

mothers_day := n_holiday_le &
  [ STEM < "mother", "s", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "mothers_day" ].

mothers_day_2 := n_holiday_le &
  [ STEM < "mother's", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "mothers_day" ].

motivated_a1 := adj_intrans_le &
  [ STEM < "motivated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_motivated_rel" ].

motive_n1 := n_intr_le &
  [ STEM < "motive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_motive_rel" ].

motor_n1 := n_intr_le &
  [ STEM < "motor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_motor_rel" ].

motto_n1 := n_intr_le &
  [ STEM < "motto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_motto_rel" ].

mount_v1 := v_np_trans_le &
  [ STEM < "mount" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mount_v_rel" ].

mountain_n1 := n_intr_le &
  [ STEM < "mountain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mountain_rel" ].

move_v1 := v_unacc_le &
  [ STEM < "move" >,
    SYNSEM.LKEYS.KEYREL.PRED "_move_v_rel" ].

move_v2 := v_np*_trans_double_pp*_le &
  [ STEM < "move" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_move_cause_v_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

move_v3 := v_np_trans_le &
  [ STEM < "move" >,
    SYNSEM.LKEYS.KEYREL.PRED "_move_cause_v_rel" ].

move_on_v1 := v_particle_le &
  [ STEM < "move" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_move_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

move_up_v1 := v_particle_le &
  [ STEM < "move" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_move_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

move_out_v1 := v_particle_le &
  [ STEM < "move" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_move_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

move_out_v2 := v_particle_np_le &
  [ STEM < "move" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_move_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

move_in_v1 := v_particle_le &
  [ STEM < "move" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_move_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

move_in_v2 := v_particle_np_le &
  [ STEM < "move" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_move_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

mr_title := n_title_unsp_le &
  [ STEM < "mr" >,
    SYNSEM.LKEYS.KEYREL.CARG "mr" ].

mr_title_2 := n_title_unsp_le &
  [ STEM < "mr", "." >,
    SYNSEM.LKEYS.KEYREL.CARG "mr" ].

prof_title := n_title_le &
  [ STEM < "professor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_professor_rel" ].

mrs_title := n_title_unsp_le &
  [ STEM < "mrs" >,
    SYNSEM.LKEYS.KEYREL.CARG "mrs" ].

mrs_title_2 := n_title_unsp_le &
  [ STEM < "mrs", "." >,
    SYNSEM.LKEYS.KEYREL.CARG "mrs" ].

ms_title := n_title_unsp_le &
  [ STEM < "ms" >,
    SYNSEM.LKEYS.KEYREL.CARG "ms" ].

ms_title_2 := n_title_unsp_le &
  [ STEM < "ms", "." >,
    SYNSEM.LKEYS.KEYREL.CARG "ms" ].

much := adv_degree_spec_m_le &
  [ STEM < "much" >,
    SYNSEM.LKEYS.KEYREL.PRED "_much_deg_rel" ].

much_det := det_part_ms_much_le &
  [ STEM < "much" >,
    SYNSEM.LKEYS.KEYREL.PRED _much_q_rel ].

Mueller_n1 := n_proper_le &
  [ STEM < "mueller" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mueller" ].

Muenster_n1 := n_proper_le &
  [ STEM < "muenster" >,
    SYNSEM.LKEYS.KEYREL.CARG "Muenster" ].

mug_n1 := n_intr_le &
  [ STEM < "mug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mug_rel" ].

Munich_n1 := n_proper_le &
  [ STEM < "munich" >,
    SYNSEM.LKEYS.KEYREL.CARG "Munich" ].

musical_n1 := n_intr_le &
  [ STEM < "musical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_musical_n_rel" ].

must_aux_pos := va_modal_pos_le & 
  [ STEM < "must" >,
    SYNSEM.LKEYS.KEYREL.PRED _must_rel ].

must_aux_neg_1 := va_modal_neg_le &
  [ STEM < "mustn't" >,
    SYNSEM.LKEYS.KEYREL.PRED _must_rel ].

must_aux_neg_2 := va_modal_neg_le &
  [ STEM < "mustn", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _must_rel ].

mutual_a1 := adj_intrans_le &
  [ STEM < "mutual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mutual_rel" ].

my := det_poss_my_le &
  [ STEM < "my" > ].

myself := n_refl_pro_myself_le &
  [ STEM < "myself" > ].

name_n1 := n_ppof_le &
 [ STEM < "name" >,
    SYNSEM.LKEYS.KEYREL.PRED "_name_rel" ].

name_v1 := v_np_trans_le &
  [ STEM < "name" >,
    SYNSEM.LKEYS.KEYREL.PRED "_name_v_rel" ].

namely_adv1 := adv_post_le &
  [ STEM < "namely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_namely_rel" ].

narrow_a1 := adj_intrans_le &
  [ STEM < "narrow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_narrow_rel" ].

nasty_a1 := adj_intrans_le &
  [ STEM < "nasty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nasty_rel" ].

national_a1 := adj_intrans_le &
  [ STEM < "national" >,
    SYNSEM.LKEYS.KEYREL.PRED "_national_rel" ].

natural_a1 := adj_intrans_le &
  [ STEM < "natural" >,
    SYNSEM.LKEYS.KEYREL.PRED "_natural_rel" ].

naturally_adv1 := adv_vp_pre_le &
  [ STEM < "naturally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_naturally_rel" ].

naturally_adv2 := adv_s_pre_le &
  [ STEM < "naturally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_naturally_rel" ].

near_a1 := adj_trans_le &
  [ STEM < "near" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_near_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

nearer_a1 := adj_comp_trans_le &
  [ STEM < "nearer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_near_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

nearest_a1 := adj_trans_le &
  [ STEM < "nearest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_near_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

near := p_reg_le &
  [ STEM < "near" >,
    SYNSEM.LKEYS.KEYREL.PRED _near_p_rel ].

nearby_adv1 := pp_le &
  [ STEM < "nearby" >,
    SYNSEM.LKEYS.KEYREL.PRED _nearby_rel ].

nearby_a1 := adj_intrans_le &
  [ STEM < "nearby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nearby_adj_rel" ].

nearly_adv1 := adv_vp_pre_le &
  [ STEM < "nearly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nearly_rel" ].

nearly_adv2 := adv_s_pre_le &
  [ STEM < "nearly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nearly_rel" ].

nearly_deg := adv_degree_spec_jov_le &
  [ STEM < "nearly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nearly_deg_rel" ].

neat_adj := adj_intrans_le &
  [ STEM < "neat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neat_rel" ].

necessarily := adv_le &
  [ STEM < "necessarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_necessarily_rel" ].

necessary_a1 := adj_intrans_le &
  [ STEM < "necessary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_necessary_rel" ].

necessary_a2 := adj_reg_atrans_le &
  [ STEM < "necessary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_necessary_rel" ].

necessary_a3 := adj_reg_atrans_cp_le &
  [ STEM < "necessary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_necessary_rel" ].

necessity_n1 := n_mass_count_le &
  [ STEM < "necessity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_necessity_rel" ].

need_v1 := v_np_trans_le &
  [ STEM < "need" >,
    SYNSEM.LKEYS.KEYREL.PRED "_need_rel" ].

need_v2 := v_subj_equi_le &
  [ STEM < "need" >,
    SYNSEM.LKEYS.KEYREL.PRED "_need_rel" ].

need_v3 := v_sor_non_trans_le &
  [ STEM < "need" >,
    SYNSEM.LKEYS.KEYREL.PRED "_need_rel" ].

need-prd := v_obj_equi_non_trans_prd_le &
  [ STEM < "need" >,
    SYNSEM.LKEYS.KEYREL.PRED "_need_pred_rel"  ].

need_aux_neg_1 := va_modal_neg_le &
  [ STEM < "needn't" >,
    SYNSEM.LKEYS.KEYREL.PRED _need_aux_rel ].

need_aux_neg_2 := va_modal_neg_le &
  [ STEM < "needn", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _need_aux_rel ].

negotiate_v1 := v_empty_prep_intrans_le &
  [ STEM < "negotiate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_negotiate_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

negotiate_v2 := v_unerg_le &
  [ STEM < "negotiate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negotiate_rel" ].

neither_conj := conj_atomic_neither_le &
  [ STEM < "neither" > ].

neither_det := det_part_sg_le &
  [ STEM < "neither" >,
    SYNSEM.LKEYS.KEYREL.PRED _neither_q_rel ].

Nelson := n_proper_le &
  [ STEM < "nelson" >,
    SYNSEM.LKEYS.KEYREL.CARG "nelson" ].

network_n1 := n_intr_le &
  [ STEM < "network" >,
    SYNSEM.LKEYS.KEYREL.PRED "_network_rel" ].

Neuperlach_n1 := n_proper_le &
  [ STEM < "neuperlach" >,
    SYNSEM.LKEYS.KEYREL.CARG "Neuperlach" ].

neutral_a1 := adj_intrans_le &
  [ STEM < "neutral" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neutral_rel" ].

neutrally := adv_int_vp_le &
  [ STEM < "neutrally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neutrally_rel" ].

never_adv1 := adv_vp_pre_le &
  [ STEM < "never" >,
    SYNSEM.LKEYS.KEYREL.PRED "_never_rel" ].

nevertheless_adv1 := adv_vp_pre_le &
  [ STEM < "nevertheless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nevertheless_rel" ].

nevertheless_adv2 := adv_s_pre_le &
  [ STEM < "nevertheless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nevertheless_rel" ].

new_a1 := adj_intrans_le &
  [ STEM < "new" >,
    SYNSEM.LKEYS.KEYREL.PRED "_new_rel" ].

newer_a1 := adj_comp_le &
  [ STEM < "newer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_new_rel" ].

newest_a1 := adj_superl_le &
  [ STEM < "newest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_new_rel" ].

newest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "newest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_new_rel" ].

new_years_day := n_holiday_le &
  [ STEM < "new", "year", "s", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_day" ].

new_years_day_apos := n_holiday_le &
  [ STEM < "new", "year's", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_day" ].

new_years_day_2 := n_holiday_le &
  [ STEM < "new", "years", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_day" ].

new_years_day_3 := n_holiday_le &
  [ STEM < "new", "year", "s" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_day" ].

new_years_day_3_apos := n_holiday_le &
  [ STEM < "new", "year's" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_day" ].

new_years_eve := n_holiday_le &
  [ STEM < "new", "year", "s", "eve" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_eve" ].

new_years_eve_apos := n_holiday_le &
  [ STEM < "new", "year's", "eve" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_eve" ].

new_years_eve_2 := n_holiday_le &
  [ STEM < "new", "years", "eve" >,
    SYNSEM.LKEYS.KEYREL.CARG "new_years_eve" ].

newly := adv_int_vp_le &
  [ STEM < "newly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_newly_rel" ].

news_n1 := n_mass_le &
  [ STEM < "news" >,
    SYNSEM.LKEYS.KEYREL.PRED "_news_rel" ].

next_a1 := adj_intrans_le &
  [ STEM < "next" >,
    SYNSEM.LKEYS.KEYREL.PRED _next_rel ].

next_det := det_next_last_le &
  [ STEM < "next" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _next_rel ].

next_to := p_le &
  [ STEM < "next", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _next_to_rel ].

nice_a1 := adj_intrans_le &
  [ STEM < "nice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nice_rel" ].

nice_a2 := adj_reg_atrans_le &
  [ STEM < "nice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nice_rel" ].

nicely_adv1 := adv_int_vp_post_le &
  [ STEM < "nicely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nicely_rel" ].

nicer := adj_comp_le &
  [ STEM < "nicer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nice_rel" ].

nicest_a1 := adj_superl_le &
  [ STEM < "nicest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nice_rel" ].

nicest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "nicest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nice_rel" ].

night_nc_n1 := n_day_part_nocomp_le &
  [ STEM < "night" >,
    SYNSEM.LKEYS.KEYREL.PRED _night_rel ].

night_nc_pl_n1 := n_day_part_pl_nocomp_le &
  [ STEM < "nights" >,
    SYNSEM.LKEYS.KEYREL.PRED _night_rel ].

night_sg_n1 := n_day_part_sg_le &
  [ STEM < "night" >,
    SYNSEM.LKEYS.KEYREL.PRED _night_rel ].

night_pl_n1 := n_day_part_pl_le &
  [ STEM < "nights" >,
    SYNSEM.LKEYS.KEYREL.PRED _night_rel ].

night_sg_def := n_def_day_part_sg_le &
  [ STEM < "night" >,
    SYNSEM.LKEYS.KEYREL.PRED _def_night_rel ].

night_pl_def := n_def_day_part_pl_le &
  [ STEM < "nights" >,
    SYNSEM.LKEYS.KEYREL.PRED _def_night_rel ].

night_time := n_mealtime_le &
  [ STEM < "night" >,
    SYNSEM.LKEYS.KEYREL.PRED _night_time_rel ].

Nikolaus_n1 := n_proper_le &
  [ STEM < "nikolaus" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nikolaus" ].

nine := adj_bare_unspecified_card_one_le & 
  [ STEM < "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

nine_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

nine_hour := n_hour_le &
  [ STEM < "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

nineteen := adj_bare_unspecified_card_two_le & 
  [ STEM < "nineteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

nineteen_eightyfour := n_year_le &
  [ STEM < "nineteen", "eighty", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "1984" ].

nineteen_eightyfour_2 := n_year_le &
  [ STEM < "1984" >,
    SYNSEM.LKEYS.KEYREL.CARG "1984" ].

nineteen_eightyfive := n_year_le &
  [ STEM < "nineteen", "eighty", "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "1985" ].

nineteen_eightyfive_2 := n_year_le &
  [ STEM < "1985" >,
    SYNSEM.LKEYS.KEYREL.CARG "1985" ].

nineteen_eightysix := n_year_le &
  [ STEM < "nineteen", "eighty", "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "1986" ].

nineteen_eightysix_2 := n_year_le &
  [ STEM < "1986" >,
    SYNSEM.LKEYS.KEYREL.CARG "1986" ].

nineteen_eightyseven := n_year_le &
  [ STEM < "nineteen", "eighty", "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "1987" ].

nineteen_eightyseven_2 := n_year_le &
  [ STEM < "1987" >,
    SYNSEM.LKEYS.KEYREL.CARG "1987" ].

nineteen_eightyeight := n_year_le &
  [ STEM < "nineteen", "eighty", "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "1988" ].

nineteen_eightyeight_2 := n_year_le &
  [ STEM < "1988" >,
    SYNSEM.LKEYS.KEYREL.CARG "1988" ].

nineteen_eightynine := n_year_le &
  [ STEM < "nineteen", "eighty", "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "1989" ].

nineteen_eightynine_2 := n_year_le &
  [ STEM < "1989" >,
    SYNSEM.LKEYS.KEYREL.CARG "1989" ].

nineteen_ninety := n_year_le &
  [ STEM < "nineteen", "ninety" >,
    SYNSEM.LKEYS.KEYREL.CARG "1990" ].

nineteen_ninety_2 := n_year_le &
  [ STEM < "1990" >,
    SYNSEM.LKEYS.KEYREL.CARG "1990" ].

nineteen_ninetyone := n_year_le &
  [ STEM < "nineteen", "ninety", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "1991" ].

nineteen_ninetyone_2 := n_year_le &
  [ STEM < "1991" >,
    SYNSEM.LKEYS.KEYREL.CARG "1991" ].

nineteen_ninetytwo := n_year_le &
  [ STEM < "nineteen", "ninety", "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "1992" ].

nineteen_ninetytwo_2 := n_year_le &
  [ STEM < "1992" >,
    SYNSEM.LKEYS.KEYREL.CARG "1992" ].

nineteen_ninetythree := n_year_le &
  [ STEM < "nineteen", "ninety", "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "1993" ].

nineteen_ninetythree_2 := n_year_le &
  [ STEM < "1993" >,
    SYNSEM.LKEYS.KEYREL.CARG "1993" ].

nineteen_ninetyfour := n_year_le &
  [ STEM < "nineteen", "ninety", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "1994" ].

nineteen_ninetyfour_2 := n_year_le &
  [ STEM < "1994" >,
    SYNSEM.LKEYS.KEYREL.CARG "1994" ].

nineteen_ninetyfive := n_year_le &
  [ STEM < "nineteen", "ninety", "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "1995" ].

nineteen_ninetyfive_2 := n_year_le &
  [ STEM < "1995" >,
    SYNSEM.LKEYS.KEYREL.CARG "1995" ].

nineteen_ninetysix := n_year_le &
  [ STEM < "nineteen", "ninety", "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "1996" ].

nineteen_ninetysix_2 := n_year_le &
  [ STEM < "1996" >,
    SYNSEM.LKEYS.KEYREL.CARG "1996" ].

nineteen_ninetyseven := n_year_le &
  [ STEM < "nineteen", "ninety", "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "1997" ].

nineteen_ninetyseven_2 := n_year_le &
  [ STEM < "1997" >,
    SYNSEM.LKEYS.KEYREL.CARG "1997" ].

nineteen_ninetyeight := n_year_le &
  [ STEM < "nineteen", "ninety", "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "1998" ].

nineteen_ninetyeight_2 := n_year_le &
  [ STEM < "1998" >,
    SYNSEM.LKEYS.KEYREL.CARG "1998" ].

nineteen_ninetynine := n_year_le &
  [ STEM < "nineteen", "ninety", "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "1999" ].

nineteen_ninetynine_2 := n_year_le &
  [ STEM < "1999" >,
    SYNSEM.LKEYS.KEYREL.CARG "1999" ].

nineteen_twentynine := n_year_le &
  [ STEM < "nineteen", "twenty", "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "1929" ].

nineteen_twentynine_2 := n_year_le &
  [ STEM < "1929" >,
    SYNSEM.LKEYS.KEYREL.CARG "1929" ].

nineteen_fiftythree := n_year_le &
  [ STEM < "nineteen", "fifty", "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "1953" ].

nineteen_fiftythree_2 := n_year_le &
  [ STEM < "1953" >,
    SYNSEM.LKEYS.KEYREL.CARG "1953" ].

nineteen_sixtysix := n_year_le &
  [ STEM < "nineteen", "sixty", "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "1966" ].

nineteen_sixtysix_2 := n_year_le &
  [ STEM < "1966" >,
    SYNSEM.LKEYS.KEYREL.CARG "1966" ].

nineteen_sixtyeight := n_year_le &
  [ STEM < "nineteen", "sixty", "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "1968" ].

nineteen_sixtyeight_2 := n_year_le &
  [ STEM < "1968" >,
    SYNSEM.LKEYS.KEYREL.CARG "1968" ].

nineteenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "nineteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

nineteenth_day := n_day_of_month_le &
  [ STEM < "nineteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

nineteen_day := n_day_of_month_card_le &
  [ STEM < "nineteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

nineteen_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits19ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

nineteen_day_num := n_day_of_month_card_le &
  [ STEM < "19" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

nineteenth_day_num := n_day_of_month_le &
  [ STEM < "19th" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

ninety_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "ninety" >,
    SYNSEM.LKEYS.KEYREL.CARG "90" ].

ninety := adj_bare_unspecified_card_two_le & 
  [ STEM < "ninety" >,
    SYNSEM.LKEYS.KEYREL.CARG "90" ].

ninetyfive_year := n_year_le &
  [ STEM < "ninety", "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "1995" ].

ninetyfour_year := n_year_le &
  [ STEM < "ninety", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "1994" ].

ninetyeight_year := n_year_le &
  [ STEM < "ninety", "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "1998" ].

ninetynine_year := n_year_le &
  [ STEM < "ninety", "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "1999" ].

ninetysix_year := n_year_le &
  [ STEM < "ninety", "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "1996" ].

ninetyseven_year := n_year_le &
  [ STEM < "ninety", "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "1997" ].

ninetythree_year := n_year_le &
  [ STEM < "ninety", "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "1993" ].

ninth := adj_bare_unspecified_ord_one_le &
  [ STEM < "ninth" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

ninth_day := n_day_of_month_le &
  [ STEM < "ninth" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

nine_day := n_day_of_month_card_le &
  [ STEM < "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

nine_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits9ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

nine_day_num := n_day_of_month_card_le &
  [ STEM < "9" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

ninth_day_num := n_day_of_month_le &
  [ STEM < "9th" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

no_det := det_no_le &
  [ STEM < "no" >,
    SYNSEM.LKEYS.KEYREL.PRED _no_q_rel ].

no_disc_root := adv_disc_preh_le &
  [ STEM < "no" >,
    SYNSEM.LKEYS.KEYREL.CARG "no" ].

no_one := n_generic_pro_le &
  [ STEM < "no", "one" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED _no_q_rel ] ].

noble_a1 := adj_intrans_le &
  [ STEM < "noble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_noble_rel" ].

nobody := n_generic_pro_le &
  [ STEM < "nobody" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED no_q_rel ] ].

noise_n1 := n_mass_count_le &
  [ STEM < "noise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_noise_rel" ].

noisily := adv_int_vp_le &
  [ STEM < "noisily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_noisily_rel" ].

noisy_a1 := adj_intrans_le &
  [ STEM < "noisy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_noisy_rel" ].

none_pn1 := n_part_ppof_noagr_le &
  [ STEM < "none" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED no_q_rel ].

none_pn2 := n_part_nocomp_le &
  [ STEM < "none" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED no_q_rel ].

neither_one_pn1 := n_part_ppof_noagr_le &
  [ STEM < "neither", "one" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _neither_q_rel ].

neither_one_pn2 := n_part_nocomp_le &
  [ STEM < "neither", "one" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _neither_q_rel ].

nonsense_n1 := n_mass_le &
  [ STEM < "nonsense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonsense_rel" ].

noon := n_hour_le &
  [ STEM < "noon" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

noontime := n_hour_le &
  [ STEM < "noontime" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

nope_disc_root_pre := adv_disc_preh_le &
  [ STEM < "nope" >,
    SYNSEM.LKEYS.KEYREL.CARG "nope" ].

nope_disc_root_post := adv_disc_posth_le &
  [ STEM < "nope" >,
    SYNSEM.LKEYS.KEYREL.CARG "nope" ].

nor_conj := conj_complex_nor_le &
  [ STEM < "nor" > ].

nor_conj_2 := conj_complex_nor_neither_le &
  [ STEM < "nor" > ].

normal_a1 := adj_intrans_le &
  [ STEM < "normal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_normal_rel" ].

normally_adv1 := adv_vp_pre_le &
  [ STEM < "normally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_normally_rel" ].

normally_adv2 := adv_s_pre_le &
  [ STEM < "normally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_normally_rel" ].

normally_vdeg := adv_degree_spec_v_le &
  [ STEM < "normally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_normally_vdeg_rel" ].

normally_mdeg := adv_degree_spec_m_le &
  [ STEM < "normally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_normally_mdeg_rel" ].

North_Pole_n1 := n_intr_named_le &
  [ STEM < "north", "pole" >,
    SYNSEM.LKEYS.KEYREL.CARG "North_Pole" ].

not := adv_not_le &
  [ STEM < "not" > ].

note_down_v1 := v_particle_np_le &
  [ STEM < "note" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_note_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

note_n1 := n_ppof_le &
  [ STEM < "note" >,
    SYNSEM.LKEYS.KEYREL.PRED "_note_rel" ].

note_v1 := v_np_trans_le &
  [ STEM < "note" >,
    SYNSEM.LKEYS.KEYREL.PRED "_note_v_rel" ].

nothing := n_generic_pro_le &
  [ STEM < "nothing" >,
    SYNSEM.LKEYS [ KEYREL.PRED thing_rel,
                   ALTKEYREL.PRED no_q_rel ] ].

notice_v1 := v_np_trans_le &
  [ STEM < "notice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notice_rel" ].

notice_v2 := v_cp_non_trans_le &
  [ STEM < "notice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notice_rel" ].

notice_v3 := v_unerg_le &
  [ STEM < "notice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notice_rel" ].

notice_v4 := v_sorb_le &
  [ STEM < "notice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notice_rel" ].

november := n_month_le &
  [ STEM < "november" >,
    SYNSEM.LKEYS.KEYREL.CARG "nov" ].

november_abb_n1 := n_month_le &
  [ STEM < "nov" >,
    SYNSEM.LKEYS.KEYREL.CARG "nov" ].

november_2 := n_month_year_le &
  [ STEM < "november" >,
    SYNSEM.LKEYS.KEYREL.CARG "nov" ].

november_abb_n2 := n_month_year_le &
  [ STEM < "nov" >,
    SYNSEM.LKEYS.KEYREL.CARG "nov" ].

now_adv := n_adv_tm_le &
  [ STEM < "now" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _now_j_rel ] ].
			       
now_aux_adv := adv_int_vp_aux_now_le &
  [ STEM < "now" > ].
                        
now_disc_pre := adv_disc_preh_le &
  [ STEM < "now" >,
    SYNSEM.LKEYS.KEYREL.CARG "now" ].

number_n1 := n_ppof_unsp_reg_le &
  [ STEM < "number" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb_n1 := n_ppof_nocmpnd_le &
  [ STEM < "no" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb_n2 := n_ppof_nocmpnd_le &
  [ STEM < "num" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb_n3 := n_ppof_nocmpnd_le &
  [ STEM < "num", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb_n4 := n_ppof_nocmpnd_le &
  [ STEM < "no", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_char_n1 := n_ppof_nocmpnd_le &
  [ STEM < "#" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

Nuremberg_n1 := n_proper_le &
  [ STEM < "nuremberg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nuremberg" ].

oclock := adj_minute_posth_le &
  [ STEM < "o'clock" >,
    SYNSEM.LKEYS.KEYREL.CARG "00" ].

oclock_2 := adj_minute_posth_le &
  [ STEM < "o", "clock" >,
    SYNSEM.LKEYS.KEYREL.CARG "00" ].

object_n1 := n_intr_le &
  [ STEM < "object" >,
    SYNSEM.LKEYS.KEYREL.PRED "_object_n_rel" ].

object_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "object" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_object_v_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

object_v1 := v_unerg_le &
  [ STEM < "object" >,
    SYNSEM.LKEYS.KEYREL.PRED "_object_v_rel" ].

objection_n1 := n_intr_le &
  [ STEM < "objection" >,
    SYNSEM.LKEYS.KEYREL.PRED "_objection_rel" ].

obligation_n1 := n_intr_le &
  [ STEM < "obligation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obligation_rel" ].

obligatory_a1 := adj_intrans_le &
  [ STEM < "obligatory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obligatory_rel" ].

oblige_v1 := v_np*_trans_le &
  [ STEM < "oblige" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oblige_tr_rel" ].

oblige_v2 := v_obj_equi_le &
  [ STEM < "oblige" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oblige_rel" ].

obliged_a1 := adj_intrans_le &
  [ STEM < "obliged" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obliged_rel" ].

observe_v1 := v_np_trans_le &
  [ STEM < "observe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_observe_rel" ].

observe_v2 := v_cp_non_trans_le &
  [ STEM < "observe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_observe_rel" ].

observe_v3 := v_sorb_le &
  [ STEM < "observe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_observe_rel" ].

observed_v3 := v_sorb_pass_le &
  [ STEM < "observed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_observe_rel" ].

obvious_a1 := adj_intrans_le &
  [ STEM < "obvious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obvious_j_rel" ].

obvious_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "obvious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obvious_j_rel" ].

obviously_adv1 := adv_vp_pre_le &
  [ STEM < "obviously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obviously_rel" ].

obviously_adv2 := adv_s_pre_le &
  [ STEM < "obviously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obviously_rel" ].

occasion_n1 := n_intr_le &
  [ STEM < "occasion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_occasion_rel" ].

occasionally_adv1 := adv_int_vp_le &
  [ STEM < "occasionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_occasionally_rel" ].

occupied_a1 := adj_intrans_le &
  [ STEM < "occupied" >,
    SYNSEM.LKEYS.KEYREL.PRED "_occupied_rel" ].

occupy_v2 := v_np_trans_le &
  [ STEM < "occupy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_occupy_rel" ].

occur_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "occur" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_occur_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

occur_v1 := v_unerg_le &
  [ STEM < "occur" >,
    SYNSEM.LKEYS.KEYREL.PRED "_occur_to_rel" ].

october := n_month_le &
  [ STEM < "october" >,
    SYNSEM.LKEYS.KEYREL.CARG "oct" ].

october_abb_n1 := n_month_le &
  [ STEM < "oct" >,
    SYNSEM.LKEYS.KEYREL.CARG "oct" ].

october_2 := n_month_year_le &
  [ STEM < "october" >,
    SYNSEM.LKEYS.KEYREL.CARG "oct" ].

october_abb_n2 := n_month_year_le &
  [ STEM < "oct" >,
    SYNSEM.LKEYS.KEYREL.CARG "oct" ].

possessive_of := p_poss_of_le &
  [ STEM < "of" > ].

of_p := p_nospec_le &
  [ STEM < "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _of_p_rel ].

of_prtcl := p_prtcl_le &
  [ STEM < "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _of_p_sel_rel ].

of_nbar_p := p_nbar_comp_nomod_le &
  [ STEM < "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _of_p_nbar_rel ].

of_course_root := adv_s_le &
  [ STEM < "of", "course" >,
    SYNSEM.LKEYS.KEYREL.PRED "_of_course_rel" ].

of_course_a1 := adv_vp_post_le &
  [ STEM < "of", "course" >,
    SYNSEM.LKEYS.KEYREL.PRED "_of_course_rel" ].

off := p_reg_le &
  [ STEM < "off" >,
    SYNSEM.LKEYS.KEYREL.PRED _off_p_rel ].

off_prtcl := p_prtcl_le &
  [ STEM < "off" >,
    SYNSEM.LKEYS.KEYREL.PRED _off_p_sel_rel ].

off_adv := pp_le &
  [ STEM < "off" >,
    SYNSEM.LKEYS.KEYREL.PRED _off_p_rel ].

offer_n1 := n_intr_le &
  [ STEM < "offer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offer_n_rel" ].

offer_v1 := v_ditrans_only_le &
  [ STEM < "offer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offer_v_rel" ].

offer_v2 := v_empty_to_trans_le &
  [ STEM < "offer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offer_v_rel" ].

offer_v3 := v_np_trans_le &
  [ STEM < "offer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offer_v_rel" ].

offer_v4 := v_subj_equi_le &
  [ STEM < "offer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offer_v_rel" ].

office1 := n_intr_le &
  [ STEM < "office" >,
    SYNSEM.LKEYS.KEYREL.PRED "_office_rel" ].

official_a1 := adj_intrans_le &
  [ STEM < "official" >,
    SYNSEM.LKEYS.KEYREL.PRED "_official_rel" ].

officially := adv_int_vp_le &
  [ STEM < "officially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_officially_rel" ].

often_adv1 := adv_int_vp_aux_le &
  [ STEM < "often" >,
    SYNSEM.LKEYS.KEYREL.PRED "_often_rel" ].

often_adv2 := adv_int_vp_post_le &
  [ STEM < "often" >,
    SYNSEM.LKEYS.KEYREL.PRED "_often_rel" ].

oh_root_pre := adv_disc_preh_le &
  [ STEM < "oh" >,
    SYNSEM.LKEYS.KEYREL.CARG "oh" ].

oh_root_post := adv_disc_posth_le &
  [ STEM < "oh" >,
    SYNSEM.LKEYS.KEYREL.CARG "oh" ].

oh_dear_root_pre := adv_disc_preh_le &
  [ STEM < "oh", "dear" >,
    SYNSEM.LKEYS.KEYREL.CARG "oh_dear" ].

oh_dear_root_post := adv_disc_posth_le &
  [ STEM < "oh", "dear" >,
    SYNSEM.LKEYS.KEYREL.CARG "oh_dear" ].

oil_n1 := n_mass_count_le &
  [ STEM < "oil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oil_n_rel" ].

ok_a1 := adj_intrans_le &
  [ STEM < "ok" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_accept_rel" ].

ok_s_adv := adv_s_pre_word_nospec_le &
  [ STEM < "ok" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_adv_rel" ].

okay_a1 := adj_intrans_le &
  [ STEM < "okay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_accept_rel" ].

okay_a2 := adj_reg_atrans_le &
  [ STEM < "okay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_accept_rel" ].

okay_a3 := adj_reg_atrans_cp_le &
  [ STEM < "okay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_accept_rel" ].

okay_s_adv := adv_s_pre_word_nospec_le &
  [ STEM < "okay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_adv_rel" ].

okay_adv := adv_int_vp_post_nonmob_le &
  [ STEM < "okay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_adv_rel" ].

old_a1 := adj_intrans_le &
  [ STEM < "old" >,
    SYNSEM.LKEYS.KEYREL.PRED "_old_j_rel" ].

older := adj_comp_le &
  [ STEM < "older" >,
    SYNSEM.LKEYS.KEYREL.PRED "_old_j_rel" ].

olympic_a1 := adj_intrans_le &
  [ STEM < "olympic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_olympic_rel" ].

on := p_reg_le &
  [ STEM < "on" >,
    SYNSEM.LKEYS.KEYREL.PRED _on_p_rel ].

on_prtcl := p_prtcl_le &
  [ STEM < "on" >,
    SYNSEM.LKEYS.KEYREL.PRED _on_p_sel_rel ].

on_day := p_temp_le &
  [ STEM < "on" >,
    SYNSEM [ LKEYS.KEYREL.PRED _on_p_temp_rel,
             LKEYS.--COMPKEY day_rel ] ].

on_the_basis_of := p_le &
  [ STEM < "on", "the", "basis", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _on_the_basis_of_rel ].

on_the_other_hand_root_pre := adv_disc_preh_le &
  [ STEM < "on", "the", "other", "hand" >,
    SYNSEM.LKEYS.KEYREL.CARG "on_the_other_hand" ].

on_the_other_hand_root_post := adv_disc_posth_le &
  [ STEM < "on", "the", "other", "hand" >,
    SYNSEM.LKEYS.KEYREL.CARG "on_the_other_hand" ].

on_the_part_of := p_le &
  [ STEM < "on", "the", "part", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _on_the_part_of_rel ].

once_adv1 := adv_int_vp_post_le &
  [ STEM < "once" >,
    SYNSEM.LKEYS.KEYREL.PRED "_once_rel" ].

once_conj := p_subconj_le &
  [ STEM < "once" >,
    SYNSEM.LKEYS.KEYREL.PRED "_once_subord_rel" ].

once_again := adv_int_vp_post_le &
  [ STEM < "once", "again" >,
    SYNSEM.LKEYS.KEYREL.PRED "_once_again_rel" ].

one_pro := n_pers_pro_one_le &
  [ STEM < "one" > ].

one_n1 := n_ppof_one_le &
  [ STEM < "one" >,
    SYNSEM.LKEYS.KEYREL.PRED "_one_n_rel" ].

one_hour := n_hour_le &
  [ STEM < "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

one_determiner := det_one_le &
  [ STEM < "one" > ].

one_num_determiner := det_one_le &
  [ STEM < "1" > ].

one_adj := adj_one_nonprd_le & 
  [ STEM < "one" > ].

a_one_adj := adj_one_prd_le & 
  [ STEM < "a" > ].

an_one_adj := adj_one_prd_le & 
  [ STEM < "an" > ].

less_than_a_one_adj := adj_one_prd_le & 
  [ STEM < "less", "than", "a" > ].

one_another := n_pers_pro_one_another_le &
  [ STEM < "one", "another" > ].

only_adv1 := adv_vp_aux_le &
  [ STEM < "only" >,
    SYNSEM.LKEYS.KEYREL.PRED "_only_rel" ].

only_adv2 := adv_s_pre_le &
  [ STEM < "only" >,
    SYNSEM.LKEYS.KEYREL.PRED "_only_rel" ].

only_adv3 := adv_vp_post_le &
  [ STEM < "only" >,
    SYNSEM.LKEYS.KEYREL.PRED "_only_rel" ].

only_deg := adv_degree_spec_jo_le &
  [ STEM < "only" >,
    SYNSEM.LKEYS.KEYREL.PRED "_only_deg_rel" ].

only_a1 := adj_attr_intrans_le &
  [ STEM < "only" >,
    SYNSEM.LKEYS.KEYREL.PRED "_only_i_rel" ].

onto := p_le &
  [ STEM < "onto" >,
    SYNSEM.LKEYS.KEYREL.PRED _onto_p_rel ].

oops_root_pre := adv_disc_preh_le &
  [ STEM < "oops" >,
    SYNSEM.LKEYS.KEYREL.CARG "oops" ].

oops_root_post := adv_disc_posth_le &
  [ STEM < "oops" >,
    SYNSEM.LKEYS.KEYREL.CARG "oops" ].

open_a1 := adj_intrans_le &
  [ STEM < "open" >,
    SYNSEM.LKEYS.KEYREL.PRED "_open_j_rel" ].

open_prtcl := adj_prtcl_le &
  [ STEM < "open" >,
    SYNSEM.LKEYS.KEYREL.PRED _open_j_sel_rel ].

open_v1 := v_np_trans_le &
  [ STEM < "open" >,
    SYNSEM.LKEYS.KEYREL.PRED "_open_cause_v_rel" ].

open_v2 := v_unacc_le &
  [ STEM < "open" >,
    SYNSEM.LKEYS.KEYREL.PRED "_open_v_rel" ].

open_ended_a1 := adj_irreg_attr_le &
  [ STEM < "open", "ended" >,
    SYNSEM.LKEYS.KEYREL.PRED "_open_ended_rel" ].

open_ended_a2 := adj_irreg_pred_intrans_le &
  [ STEM < "open", "ended" >,
    SYNSEM.LKEYS.KEYREL.PRED "_open_ended_rel" ].

opening_n1 := n_intr_le &
  [ STEM < "opening" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opening_n_rel" ].

operate_v1 := v_unerg_le &
  [ STEM < "operate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_operate_rel" ].

operate_v2 := v_np_trans_le &
  [ STEM < "operate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_operate_rel" ].

operation_n1 := n_intr_le &
  [ STEM < "operation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_operation_rel" ].

opinion_n1 := n_intr_le &
  [ STEM < "opinion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opinion_rel" ].

opportune_a1 := adj_intrans_le &
  [ STEM < "opportune" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opportune_rel" ].

opportunely := adv_int_vp_post_le &
  [ STEM < "opportunely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opportunely_rel" ].

opportunity_n1 := n_intr_le &
  [ STEM < "opportunity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opportunity_rel" ].

opposite_a1 := adj_intrans_le &
  [ STEM < "opposite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opposite_adj_rel" ].

opposite_n1 := n_intr_le &
  [ STEM < "opposite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opposite_n_rel" ].

opposition_n1 := n_mass_le &
  [ STEM < "opposition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opposition_rel" ].

optimal_a1 := adj_intrans_le &
  [ STEM < "optimal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optimal_rel" ].

optimally := adv_int_vp_le &
  [ STEM < "optimally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optimally_rel" ].

option_n1 := n_intr_le &
  [ STEM < "option" >,
    SYNSEM.LKEYS.KEYREL.PRED "_option_rel" ].

or_conj_1 := conj_complex_or_le &
  [ STEM < "or" > ].

or_conj_2 := conj_complex_or_either_le &
  [ STEM < "or" > ].

order_v1 := v_np_trans_le &
  [ STEM < "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_v_rel" ].

order_v2 := v_unerg_le &
  [ STEM < "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_v_rel" ].

order_v4 := v_ditrans_only_le &
  [ STEM < "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_v_rel" ].

ordinary_a1 := adj_intrans_le &
  [ STEM < "ordinary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ordinary_rel" ].

organization_n1 := n_intr_le &
  [ STEM < "organization" >,
    SYNSEM.LKEYS.KEYREL.PRED "_organization_rel" ].

organizational_a1 := adj_intrans_le &
  [ STEM < "organizational" >,
    SYNSEM.LKEYS.KEYREL.PRED "_organizational_rel" ].

organize_v1 := v_np_trans_le &
  [ STEM < "organize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_organize_rel" ].

original_a1 := adj_intrans_le &
  [ STEM < "original" >,
    SYNSEM.LKEYS.KEYREL.PRED "_original_rel" ].

originally_adv1 := adv_int_vp_le &
  [ STEM < "originally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_originally_rel" ].

Osnabrueck_n1 := n_proper_le &
  [ STEM < "osnabrueck" >,
    SYNSEM.LKEYS.KEYREL.CARG "Osnabrueck" ].

other_a1 := adj_intrans_le &
  [ STEM < "other" >,
    SYNSEM.LKEYS.KEYREL.PRED "_other_rel" ].

otherwise_adv1 := adv_int_vp_le &
  [ STEM < "otherwise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_otherwise_rel" ].

otherwise_root_pre := adv_disc_preh_le &
  [ STEM < "otherwise" >,
    SYNSEM.LKEYS.KEYREL.CARG "otherwise" ].

otherwise_root_post := adv_disc_posth_le &
  [ STEM < "otherwise" >,
    SYNSEM.LKEYS.KEYREL.CARG "otherwise" ].

ouch_root_pre := adv_disc_preh_le &
  [ STEM < "ouch" >,
    SYNSEM.LKEYS.KEYREL.CARG "ouch" ].

ouch_root_post := adv_disc_posth_le &
  [ STEM < "ouch" >,
    SYNSEM.LKEYS.KEYREL.CARG "ouch" ].

ought_aux_pos := va_ought_pos_le & 
  [ STEM < "ought" >,
    SYNSEM.LKEYS.KEYREL.PRED _ought_rel ].

ought_aux_neg_1 := va_ought_neg_le &
  [ STEM < "oughtn't" >,
    SYNSEM.LKEYS.KEYREL.PRED _ought_rel ].

ought_aux_neg_2 := va_ought_neg_le &
  [ STEM < "oughtn", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _ought_rel ].

our := det_poss_our_le &
  [ STEM < "our" > ].

ours := n_poss_pro_ours_le &
  [ STEM < "ours" > ].

ourselves := n_refl_pro_ourselves_le &
  [ STEM < "ourselves" > ].

out_p := p_reg_le &
  [ STEM < "out" >,
    SYNSEM.LKEYS.KEYREL.PRED _out_p_rel ].

out_particle := p_reg_le &
  [ STEM < "out" >,
    SYNSEM.LKEYS.KEYREL.PRED _out_p_sel_rel ].

opposite := p_nomod_le &
  [ STEM < "opposite" >,
    SYNSEM.LKEYS.KEYREL.PRED _opposite_rel ].

outright := adv_vp_le &
  [ STEM < "outright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outright_adv_rel" ].

outright_deg := adv_degree_spec_v_le &
  [ STEM < "outright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outright_deg_rel" ].

outright_a1 := adj_intrans_le &
  [ STEM < "outright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outright_rel" ].

outside_a1 := adj_intrans_le &
  [ STEM < "outside" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outside_adj_rel" ].

outside_n1 := n_ppof_le &
  [ STEM < "outside" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outside_n_rel" ].

outside_adv1 :=  n_adv_np_le &
  [ STEM < "outside" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _outside_prep_rel ] ].

outside_of_adv1 :=  n_adv_np_le &
  [ STEM < "outside", "of" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _outside_prep_rel ] ].

outstanding_a1 := adj_intrans_le &
  [ STEM < "outstanding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outstanding_rel" ].

over := p_le &
  [ STEM < "over" >,
    SYNSEM.LKEYS.KEYREL.PRED _over_p_rel ].

over_prtcl := p_prtcl_le &
  [ STEM < "over" >,
    SYNSEM.LKEYS.KEYREL.PRED _over_p_sel_rel ].

over_with_a1 := adj_irreg_pred_intrans_prd_le &
  [ STEM < "over", "with" >,
    SYNSEM.LKEYS.KEYREL.PRED "_over_with_rel" ].

over_a1 := adj_pred_intrans_le &
  [ STEM < "over" >,
    SYNSEM.LKEYS.KEYREL.PRED "_over_adj_rel" ].

overhear_v1 := v_np_trans_le &
  [ STEM < "overhear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overhear_rel" ].

overhear_v2 := v_cp_non_trans_le &
  [ STEM < "overhear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overhear_rel" ].

overhear_v3 := v_sorb_le &
  [ STEM < "overhear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overhear_rel" ].

overheard_v3 := v_sorb_pass_le &
  [ STEM < "overheard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overhear_rel" ].

overlap_v1 := v_empty_prep_intrans_le &
  [ STEM < "overlap" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_overlap_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

overlap_v2 := v_unerg_le &
  [ STEM < "overlap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overlap_rel" ].

overlook_v1 := v_np_trans_le &
  [ STEM < "overlook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overlook_rel" ].

owe_v1 := v_ditrans_le &
  [ STEM < "owe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_owe_v_rel" ].

own_v1 := v_np_trans_le &
  [ STEM < "own" >,
    SYNSEM.LKEYS.KEYREL.PRED "_own_v_rel" ].

pack_v1 := v_np*_trans_le &
  [ STEM < "pack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pack_v_rel" ].

packed_a1 := adj_intrans_le &
  [ STEM < "packed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_packed_rel" ].

Paloalto := n_proper_le &
  [ STEM < "palo", "alto" >,
    SYNSEM.LKEYS.KEYREL.CARG "palo_alto" ].

paper_n1 := n_intr_le &
  [ STEM < "paper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_paper_rel" ].

pardon_v1 := v_np_trans_le &
  [ STEM < "pardon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pardon_v_rel" ].

parent_n1 := n_ppof_le &
  [ STEM < "parent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_parent_rel" ].

Paris_n1 := n_proper_le &
  [ STEM < "paris" >,
    SYNSEM.LKEYS.KEYREL.CARG "Paris" ].

parish_n1 := n_intr_le &
  [ STEM < "parish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_parish_rel" ].

parking_n1 := n_mass_le &
  [ STEM < "parking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_parking_rel" ].

part_n1 := n_mass_count_ppof_le &
  [ STEM < "part" >,
    SYNSEM.LKEYS.KEYREL.PRED "_part_rel" ].

partially_adv1 := adv_vp_pre_le &
  [ STEM < "partially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_partially_rel" ].

partially_adv2 := adv_s_pre_le &
  [ STEM < "partially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_partially_rel" ].

participant_n1 := n_ppof_le &
  [ STEM < "participant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_participant_rel" ].

participate_in_v1 := v_empty_prep_intrans_le &
  [ STEM < "participate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_participate_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

participate_v1 := v_unerg_le &
  [ STEM < "participate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_participate_in_rel" ].

particular_a1 := adj_intrans_le &
  [ STEM < "particular" >,
    SYNSEM.LKEYS.KEYREL.PRED "_particular_rel" ].

particularly_adv1 := adv_vp_pre_le &
  [ STEM < "particularly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_particularly_rel" ].

particularly_adv2 := adv_s_pre_le &
  [ STEM < "particularly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_particularly_rel" ].

partly_deg := adv_degree_spec_v_le &
  [ STEM < "partly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_partly_deg_rel" ].

partly_adv1 := adv_int_vp_le &
  [ STEM < "partly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_partly_rel" ].

partner_n1 := n_intr_le &
  [ STEM < "partner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_partner_rel" ].

party_n1 := n_intr_le &
  [ STEM < "party" >,
    SYNSEM.LKEYS.KEYREL.PRED "_party_n_rel" ].

pass_on_v1 := v_particle_np_le &
  [ STEM < "pass" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pass_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

pass_v1 := v_np_trans_le &
  [ STEM < "pass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pass_rel"  ].

pass_v2 := v_unerg_le &
  [ STEM < "pass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pass_rel"  ].

Pat := n_proper_le &
  [ STEM < "pat" >,
    SYNSEM.LKEYS.KEYREL.CARG "pat" ].

patch_n1 := n_intr_le &
  [ STEM < "patch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_patch_rel" ].

path_n1 := n_intr_le &
  [ STEM < "path" >,
    SYNSEM.LKEYS.KEYREL.PRED "_path_rel" ].

patience_n1 := n_mass_le &
  [ STEM < "patience" >,
    SYNSEM.LKEYS.KEYREL.PRED "_patience_rel" ].

pause_n1 := n_intr_le &
  [ STEM < "pause" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pause_n_rel" ].

pause_v1 := v_unerg_le &
  [ STEM < "pause" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pause_v_rel" ].

pavilion_n1 := n_intr_le &
  [ STEM < "pavilion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pavilion_rel" ].

pay_v1 := v_np*_trans_le &
  [ STEM < "pay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pay_rel" ].

pay_v2 := v_empty_prep_intrans_le &
  [ STEM < "pay" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pay_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

pay_v3 := v_empty_prep_trans_le &
  [ STEM < "pay" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pay_for_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

pay_v4 := v_ditrans_le &
  [ STEM < "pay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pay_rel" ].

pay_with_for_v1 := v_double_pp_empty_pp_le &
  [ STEM < "pay" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pay_for_rel",
             LKEYS [ --COMPKEY _with_p_rel,
                     --OCOMPKEY _for_p_sel_rel ] ] ].

peaceful_a1 := adj_intrans_le &
  [ STEM < "peaceful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peaceful_rel" ].

peculiar_a1 := adj_intrans_le &
  [ STEM < "peculiar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peculiar_rel" ].

peer_v1 := v_prep_intrans_unsp_le &
  [ STEM < "peer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_peer_v_rel",
             LKEYS.--COMPKEY dir_rel ] ].

pen_n1 := n_intr_le &
  [ STEM < "pen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pen_rel" ].

pencil_v1 := v_np_trans_le &
  [ STEM < "pencil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pencil_v_rel" ].

pencil_in_v1 := v_particle_np_le &
  [ STEM < "pencil" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pencil_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

pending_a1 := adj_intrans_le &
  [ STEM < "pending" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pending_rel" ].

pension_n1 := n_intr_le &
  [ STEM < "pension" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pension_rel" ].

people_n1 := n_plur_ppcomp_le &
  [ STEM < "people" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_people_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

per_p := p_nbar_comp_nmod_le &
  [ STEM < "per" >,
    SYNSEM.LKEYS.KEYREL.PRED _per_rel ].

perfect_a1 := adj_intrans_le &
  [ STEM < "perfect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perfect_adj_rel" ].

perfectly_adv1 := adv_post_le &
  [ STEM < "perfectly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perfectly_rel" ].

perfectly_deg := adv_degree_spec_v_le &
  [ STEM < "perfectly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perfectly_deg_rel" ].

performance_n1 := n_intr_le &
  [ STEM < "performance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_performance_rel" ].

perhaps_adv1 := adv_vp_post_le &
  [ STEM < "perhaps" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perhaps_rel" ].

perhaps_adv2 := adv_s_pre_word_nospec_le &
  [ STEM < "perhaps" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perhaps_rel" ].

period_n1 := n_ppof_le &
  [ STEM < "period" >,
    SYNSEM.LKEYS.KEYREL.PRED "_period_rel" ].

permanent_a1 := adj_intrans_le &
  [ STEM < "permanent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_permanent_rel" ].

permeate_into_v1 := v_empty_prep_intrans_le &
  [ STEM < "permeate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_permeate_into_rel",
             LKEYS.--COMPKEY _into_p_sel_rel ] ].

permeate_v1 := v_np_trans_le &
  [ STEM < "permeate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_permeate_rel" ].

permit_v1 := v_obj_equi_le &
  [ STEM < "permit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_permit_v_rel" ].

person_n1 := n_intr_le &
  [ STEM < "person" >,
    SYNSEM.LKEYS.KEYREL.PRED "_person_rel" ].

personal_a1 := adj_intrans_le &
  [ STEM < "personal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_personal_rel" ].

personally_adv1 := adv_int_vp_le &
  [ STEM < "personally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_personally_rel" ].

persuade_v1 := v_obj_equi_le &
  [ STEM < "persuade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_persuade_rel" ].

persuade_v2 := v_np_trans_cp_prop_le &
  [ STEM < "persuade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_persuade_rel" ].

Petz_n1 := n_proper_le &
  [ STEM < "petz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Petz" ].

Pfaff_n1 := n_proper_le &
  [ STEM < "pfaff" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pfaff" ].

phd_n1 := n_intr_le &
  [ STEM < "phd" >,
    SYNSEM.LKEYS.KEYREL.PRED "_phd_rel" ].

pheasant_n1 := n_intr_le &
  [ STEM < "pheasant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pheasant_rel" ].

phone_n1 := n_intr_le &
  [ STEM < "phone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_phone_rel" ].

photo_n1 := n_intr_le &
  [ STEM < "photo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_photograph_rel" ].

photocopier_n1 := n_intr_le &
  [ STEM < "photocopier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_photocopier_rel" ].

photograph_n1 := n_intr_le &
  [ STEM < "photograph" >,
    SYNSEM.LKEYS.KEYREL.PRED "_photograph_rel" ].

piano_n1 := n_intr_le &
  [ STEM < "piano" >,
    SYNSEM.LKEYS.KEYREL.PRED "_piano_rel" ].

pick_v1 := v_np_trans_le &
  [ STEM < "pick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pick_v_rel" ].

pick_up_v1 := v_particle_np_le &
  [ STEM < "pick" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pick_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

piece_n1 := n_ppof_le &
  [ STEM < "piece" >,
    SYNSEM.LKEYS.KEYREL.PRED "_piece_rel" ].

pig_n1 := n_intr_le &
  [ STEM < "pig" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pig_rel" ].

Pillau_n1 := n_proper_le &
  [ STEM < "pillau" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pillau" ].

Pittsburgh_n1 := n_proper_le &
  [ STEM < "pittsburgh" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pittsburgh" ].

pity_n1 := n_intr_le &
  [ STEM < "pity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pity_n_rel" ].

place_n1 := n_ppof_place_le &
  [ STEM < "place" >,
    SYNSEM.LKEYS.KEYREL.PRED "_place_rel" ].

place_i_n1 := n_mass_le &
  [ STEM < "place" >,
    SYNSEM.LKEYS.KEYREL.PRED _i_place_rel ].

plain_a1 := adj_intrans_le &
  [ STEM < "plain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plain_adj_rel" ].

plainly_adv1 := adv_int_vp_le &
  [ STEM < "plainly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plainly_adj_rel" ].

plan_n1 := n_intr_le &
  [ STEM < "plan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plan_n_rel" ].

plan_on_v2 := v_empty_prep_intrans_le &
  [ STEM < "plan" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_plan_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

plan_v1 := v_np*_trans_le &
  [ STEM < "plan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plan_v_rel" ].

plan_v2 := v_subj_equi_le &
  [ STEM < "plan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plan_v_rel" ].

plane_n1 := n_ppof_le &
  [ STEM < "plane" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plane_rel" ].

planning_n1 := n_intr_le &
  [ STEM < "planning" >,
    SYNSEM.LKEYS.KEYREL.PRED "_planning_rel" ].

platform_n1 := n_ppof_le &
  [ STEM < "platform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_platform_rel" ].

Plauen_n1 := n_proper_le &
  [ STEM < "plauen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Plauen" ].

play_n1 := n_intr_le &
  [ STEM < "play" >,
    SYNSEM.LKEYS.KEYREL.PRED "_play_n_rel" ].

play_v1 := v_np*_trans_le &
  [ STEM < "play" >,
    SYNSEM.LKEYS.KEYREL.PRED "_play_v_rel" ].

pleasant_a1 := adj_intrans_le &
  [ STEM < "pleasant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pleasant_rel" ].

pleasantly := adv_int_vp_le &
  [ STEM < "pleasantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pleasantly_rel" ].

please_adv := adv_s_post_word_nospec_le &
  [ STEM < "please" >,
    SYNSEM.LKEYS.KEYREL.PRED "_please_adv_rel" ].

please_abb_adv := adv_s_post_word_nospec_le &
  [ STEM < "pls" >,
    SYNSEM.LKEYS.KEYREL.PRED "_please_adv_rel" ].

please_v1 := v_np_trans_le &
  [ STEM < "please" >,
    SYNSEM.LKEYS.KEYREL.PRED "_please_rel" ].

pleased_a1 := adj_intrans_le &
  [ STEM < "pleased" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pleased_rel" ].

pleasure_n1 := n_ppof_le &
  [ STEM < "pleasure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pleasure_rel" ].

plus_conj := conj_complex_plus_le &
  [ STEM < "plus" > ].

pm_temp := xp_pm_le &
  [ STEM < "p.m." >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

pm_temp_2 := xp_pm_le &
  [ STEM < "pm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

pm_temp_3 := xp_pm_le &
  [ STEM < "p", "m" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

pm_temp_4 := xp_pm_le &
  [ STEM < "p", ".", "m" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

pm_temp_5 := xp_pm_le &
  [ STEM < "p", ".", "m", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

pm_temp_6 := xp_pm_le &
  [ STEM < "p.m" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

pm_temp_7 := xp_pm_le &
  [ STEM < "p.m", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

point_n1 := n_ppof_le &
  [ STEM < "point" >,
    SYNSEM.LKEYS.KEYREL.PRED "_point_rel" ].

pointless_a1 := adj_intrans_le &
  [ STEM < "pointless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pointless_rel" ].

pool_n1 := n_ppof_le &
  [ STEM < "pool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pool_rel" ].

poor_a1 := adj_intrans_le &
  [ STEM < "poor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_poor_rel" ].

portable_a1 := adj_intrans_le &
  [ STEM < "portable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_portable_rel" ].

position_n1 := n_ppof_le &
  [ STEM < "position" >,
    SYNSEM.LKEYS.KEYREL.PRED "_position_n_rel" ].

positive_a1 := adj_intrans_le &
  [ STEM < "positive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_positive_rel" ].

possibility_n1 := n_ppof_le &
  [ STEM < "possibility" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possibility_rel" ].

possibility_n2 := n_cpcomp_fin_optthat_le &
  [ STEM < "possibility" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possibility_h_rel" ].

possible_a1 := adj_intrans_le &
  [ STEM < "possible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possible_rel" ].

possible_a2 := adj_reg_atrans_le &
  [ STEM < "possible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possible_rel" ].

possible_a3 := adj_reg_atrans_cp_le &
  [ STEM < "possible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possible_rel" ].

possibly_adv1 := adv_vp_pre_le &
  [ STEM < "possibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possibly_rel" ].

possibly_adv2 := adv_s_pre_le &
  [ STEM < "possibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possibly_rel" ].

post-meeting_a1 := adj_intrans_le &
  [ STEM < "post", "meeting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_post-meeting_rel" ].

post-mortem_n1 := n_intr_le &
  [ STEM < "post", "mortem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_postmortem_rel" ].

post-trip_a1 := adj_intrans_le &
  [ STEM < "post", "trip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_post_trip_rel" ].

poster_n1 := n_ppof_le &
  [ STEM < "poster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_poster_rel" ].

posterior_a1 := adj_intrans_le &
  [ STEM < "posterior" >,
    SYNSEM.LKEYS.KEYREL.PRED "_posterior_rel" ].

postpone_v1 := v_np_trans_le &
  [ STEM < "postpone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_postpone_rel" ].

potential_a1 := adj_intrans_le &
  [ STEM < "potential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_potential_rel" ].

pound_n1 := n_ppof_le &
  [ STEM < "pound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pound_rel" ].

pour_v1 := v_np_trans_le &
  [ STEM < "pour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pour_rel" ].

pour_down_v1 := v_particle_le &
  [ STEM < "pour" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pour_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

power_n1 := n_mass_count_le &
  [ STEM < "power" >,
    SYNSEM.LKEYS.KEYREL.PRED "_power_rel" ].

practicable_a1 := adj_intrans_le &
  [ STEM < "practicable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_practicable_rel" ].

practical_a1 := adj_intrans_le &
  [ STEM < "practical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_practical_rel" ].

practically_adv1 := adv_vp_pre_le &
  [ STEM < "practically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_practically_rel" ].

practically_adv2 := adv_s_pre_le &
  [ STEM < "practically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_practically_rel" ].

practice_n1 := n_ppof_le &
  [ STEM < "practice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_practice_rel" ].

practice_upon_v1 := v_empty_prep_intrans_le &
  [ STEM < "practice" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_practice_upon_rel",
             LKEYS.--COMPKEY _upon_p_sel_rel ] ].

practice_v1 := v_np*_trans_le &
  [ STEM < "practice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_practice_v_rel" ].

practise_upon_v1 := v_empty_prep_intrans_le &
  [ STEM < "practise" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_practice_upon_rel",
             LKEYS.--COMPKEY _upon_p_sel_rel ] ].

practise_v1 := v_np*_trans_le &
  [ STEM < "practise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_practice_v_rel" ].

prayer_n1 := n_mass_count_le &
  [ STEM < "prayer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prayer_rel" ].

precautionarily := adv_int_vp_le &
  [ STEM < "precautionarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precautionarily_rel" ].

precautionary_a1 := adj_intrans_le &
  [ STEM < "precautionary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precautionary_rel" ].

precise_a1 := adj_intrans_le &
  [ STEM < "precise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precise_rel" ].

precisely := adv_int_vp_le &
  [ STEM < "precisely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precisely_adv_rel" ].

precisely_deg := adv_degree_spec_v_le &
  [ STEM < "precisely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precisely_rel" ].

prefer_v1 := v_np_trans_le &
  [ STEM < "prefer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prefer_rel" ].

prefer_v2 := v_expl_obj_cp_le &
  [ STEM < "prefer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prefer_expl_rel" ].

prefer_v3 := v_subj_equi_le &
  [ STEM < "prefer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prefer_rel" ].

prefer_v4 := v_prep_intrans_event_le &
  [ STEM < "prefer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_prefer_loc_rel",
             LKEYS.--COMPKEY loc_abstr_rel ] ].

prefer_v5 := v_cp_subj_le &
  [ STEM < "prefer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prefer_rel" ].

preferable_a1 := adj_intrans_le &
  [ STEM < "preferable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preferable_rel" ].

preferably_adv1 := adv_vp_pre_le &
  [ STEM < "preferably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preferably_rel" ].

preferably_adv2 := adv_s_pre_le &
  [ STEM < "preferably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preferably_rel" ].

preferably_deg := adv_degree_spec_v_le &
  [ STEM < "preferably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preferably_deg_rel" ].

preference_n1 := n_ppcomp_le &
  [ STEM < "preference" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_preference_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

preliminarily := adv_int_vp_le &
  [ STEM < "preliminarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preliminarily_rel" ].

preliminary_a1 := adj_intrans_le &
  [ STEM < "preliminary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preliminary_rel" ].

preparation_n1 := n_mass_count_le &
  [ STEM < "preparation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preparation_rel" ].

preparatory_a1 := adj_intrans_le &
  [ STEM < "preparatory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preparatory_rel" ].

prepare_v1 := v_np*_trans_le &
  [ STEM < "prepare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prepare_rel" ].

prepare_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "prepare" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_prepare_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

prepare_v2 := v_subj_equi_le &
  [ STEM < "prepare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prepare_rel" ].

prepare_v3 := v_ditrans_only_le &
  [ STEM < "prepare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prepare_rel" ].

prepared_a1 := adj_intrans_le &
  [ STEM < "prepared" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prepared_rel" ].

prepared_a2 := adj_reg_equi_le &
  [ STEM < "prepared" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prepared_rel" ].

presence_n1 := n_ppof_le &
  [ STEM < "presence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presence_rel" ].

present_a1 := adj_intrans_le &
  [ STEM < "present" >,
    SYNSEM.LKEYS.KEYREL.PRED "_present_adj_rel" ].

present_n1 := n_ppof_le &
  [ STEM < "present" >,
    SYNSEM.LKEYS.KEYREL.PRED "_present_n_rel" ].

present_v1 := v_to*_trans_le &
  [ STEM < "present" >,
    SYNSEM.LKEYS.KEYREL.PRED "_present_v_rel" ].

present_with_v1 := v_empty_prep_trans_le &
  [ STEM < "present" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_present_with_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

presentation_n1 := n_ppof_le &
  [ STEM < "presentation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presentation_rel" ].

presently := adv_int_vp_le &
  [ STEM < "presently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presently_rel" ].

press_v1 := v_np_trans_le &
  [ STEM < "press" >,
    SYNSEM.LKEYS.KEYREL.PRED "_press_v_rel" ].

press_n1 := n_intr_le &
  [ STEM < "press" >,
    SYNSEM.LKEYS.KEYREL.PRED "_press_rel" ].

pressure_n1 := n_mass_le &
  [ STEM < "pressure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pressure_rel" ].

presume_v1 := v_cp_prop_non_trans_le &
  [ STEM < "presume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presume_rel" ].

presume_v2 := v_unerg_le &
  [ STEM < "presume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presume_rel" ].

pretty_deg := adv_degree_spec_v_le &
  [ STEM < "pretty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretty_rel" ].

prevent_v1 := v_np_trans_le &
  [ STEM < "prevent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prevent_rel" ].

previous_a1 := adj_intrans_le &
  [ STEM < "previous" >,
    SYNSEM.LKEYS.KEYREL.PRED _previous_rel ].

previous_to_p1 := p_le &
  [ STEM < "previous", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _previous_to_rel ].

previously_adv1 := adv_int_vp_le &
  [ STEM < "previously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_previously_rel" ].

price_n1 := n_mass_count_ppof_le &
  [ STEM < "price" >,
    SYNSEM.LKEYS.KEYREL.PRED "_price_rel" ].

principal_a1 := adj_intrans_le &
  [ STEM < "principal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_principal_rel" ].

principally_adv1 := adv_vp_pre_le &
  [ STEM < "principally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_principally_rel" ].

principally_adv2 := adv_s_pre_le &
  [ STEM < "principally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_principally_rel" ].

principle_n1 := n_ppof_le &
  [ STEM < "principle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_principle_rel" ].

prior_to := p_le &
  [ STEM < "prior", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _prior_to_rel ].

private_a1 := adj_intrans_le &
  [ STEM < "private" >,
    SYNSEM.LKEYS.KEYREL.PRED "_private_rel" ].

privately_adv1 := adv_int_vp_post_le &
  [ STEM < "privately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_privately_rel" ].

probable_a1 := adj_intrans_le &
  [ STEM < "probable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_probable_rel" ].

probably_adv1 := adv_vp_aux_le &
  [ STEM < "probably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_probably_r_rel" ].

probably_adv2 := adv_s_pre_le &
  [ STEM < "probably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_probably_r_rel" ].

problem_n1 := n_ppof_le &
  [ STEM < "problem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_problem_rel" ].

problematic_a1 := adj_intrans_le &
  [ STEM < "problematic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_problematic_rel" ].

problematically := adv_int_vp_post_le &
  [ STEM < "problematically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_problematically_rel" ].

proceed_v1 := v_unerg_le &
  [ STEM < "proceed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_proceed_rel" ].

proceed_v2 := v_subj_equi_le &
  [ STEM < "proceed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_proceed_rel" ].

proceed_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "proceed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_proceed_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

produce_v1 := v_np_trans_le &
  [ STEM < "produce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_produce_rel" ].

product_n1 := n_ppof_le &
  [ STEM < "product" >,
    SYNSEM.LKEYS.KEYREL.PRED "_product_rel" ].

professor_n1 := n_ppof_le &
  [ STEM < "professor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_professor_rel" ].

program_n1 := n_ppof_le &
  [ STEM < "program" >,
    SYNSEM.LKEYS.KEYREL.PRED "_program_n_rel" ].

programmer_n1 := n_ppof_le &
  [ STEM < "programmer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_programmer_rel" ].

project_n1 := n_ppof_le &
  [ STEM < "project" >,
    SYNSEM.LKEYS.KEYREL.PRED "_project_n_rel" ].

prominent_a1 := adj_intrans_le &
  [ STEM < "prominent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prominent_rel" ].

promise_v1 := v_anom_equi_le &
  [ STEM < "promise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promise_v_rel" ].

pronounce_v1 := v_np_trans_le &
  [ STEM < "pronounce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pronounce_rel" ].

proper_a1 := adj_intrans_le &
  [ STEM < "proper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_proper_rel" ].

properly_adv1 := adv_int_vp_le &
  [ STEM < "properly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_properly_rel" ].

proposal_n1 := n_ppof_le &
  [ STEM < "proposal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_proposal_rel" ].

propose_v1 := v_np_trans_le &
  [ STEM < "propose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_propose_rel" ].

propose_v2 := v_cp_prop_non_trans_le &
  [ STEM < "propose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_propose_rel" ].

propose_v3 := v_unerg_le &
  [ STEM < "propose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_propose_rel" ].

protection_n1 := n_mass_ppcomp_le &
  [ STEM < "protection" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_protection_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

protestant_n1 := n_intr_le &
  [ STEM < "protestant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_protestant_rel" ].

prove_v1 := v_np_trans_le &
  [ STEM < "prove" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prove_rel" ].

prove_v2 := v_cp_non_trans_le &
  [ STEM < "prove" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prove_rel" ].

prove_v3 := v_unerg_le &
  [ STEM < "prove" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prove_rel" ].

provide_v1 := v_np_trans_le &
  [ STEM < "provide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_provide_rel" ].

provide_v2 := v_ditrans_le &
  [ STEM < "provide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_provide_rel" ].

provided_subord := p_subconj_le &
  [ STEM < "provided" >,
    SYNSEM.LKEYS.KEYREL.PRED "_provided_rel" ].

provided_that_subord := p_subconj_le &
  [ STEM < "provided", "that" >,
    SYNSEM.LKEYS.KEYREL.PRED "_provided_rel" ].

providing_subord := p_subconj_le &
  [ STEM < "providing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_providing_rel" ].

providing_that_subord := p_subconj_le &
  [ STEM < "providing", "that" >,
    SYNSEM.LKEYS.KEYREL.PRED "_providing_rel" ].

public_a1 := adj_intrans_le &
  [ STEM < "public" >,
    SYNSEM.LKEYS.KEYREL.PRED "_public_adj_rel" ].

publish_v1 := v_np_trans_le &
  [ STEM < "publish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_publish_rel" ].

pull_v1 := v_np*_trans_le &
  [ STEM < "pull" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pull_rel" ].

pull_v2 := v_np_prep_trans_dors_le &
  [ STEM < "pull" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pull_rel" ].

punctual_a1 := adj_intrans_le &
  [ STEM < "punctual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_punctual_adj_rel" ].

pure_a1 := adj_intrans_le &
  [ STEM < "pure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pure_adj_rel" ].

purely := adv_vp_post_le &
  [ STEM < "purely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_purely_rel" ].

purpose_n1 := n_ppof_le &
  [ STEM < "purpose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_purpose_rel" ].

push_v1 := v_np_trans_le &
  [ STEM < "push" >,
    SYNSEM.LKEYS.KEYREL.PRED "_push_v_rel" ].

push_v2 := v_np_prep_trans_dors_le &
  [ STEM < "push" >,
    SYNSEM.LKEYS.KEYREL.PRED "_push_v_rel" ].

put_by_v1 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_by_rel",
             LKEYS.--COMPKEY _by_p_sel_rel ] ].

put_down_v1 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

put_in_v1 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

put_off_v1 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

put_through_v1 := v_particle_np_pp_to_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

put_through_v2 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

put_v1 := v_np_prep_trans_dors_le &
  [ STEM < "put" >,
    SYNSEM.LKEYS.KEYREL.PRED "_put_v_rel" ].

quantity_n1 := n_ppof_le &
  [ STEM < "quantity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quantity_rel" ].

quarter_n1 := n_ppof_le &
  [ STEM < "quarter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quarter_rel" ].

quarter_n2 := adj_minute_preh_le &
  [ STEM < "quarter" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

quasi_adv1 := adv_vp_pre_le &
  [ STEM < "quasi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quasi_rel" ].

quasi_adv2 := adv_s_pre_le &
  [ STEM < "quasi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quasi_rel" ].

question_n1 := n_ppcomp_le &
  [ STEM < "question" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_question_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

questionable_a1 := adj_intrans_le &
  [ STEM < "questionable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_questionable_rel" ].

quick_a1 := adj_intrans_le &
  [ STEM < "quick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quick_rel" ].

quicker_a1 := adj_comp_le &
  [ STEM < "quicker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quick_rel" ].

quickest_a1 := adj_superl_le &
  [ STEM < "quickest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quick_rel" ].

quickest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "quickest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quick_rel" ].

quickly_adv1 := adv_int_vp_le &
  [ STEM < "quickly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quickly_rel" ].

quick_adv1 := adv_int_vp_le &
  [ STEM < "quick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quickly_rel" ].

quiet_a1 := adj_intrans_le &
  [ STEM < "quiet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quiet_rel" ].

quieter_a1 := adj_comp_le &
  [ STEM < "quieter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quiet_rel" ].

quietest_a1 := adj_superl_le &
  [ STEM < "quietest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quiet_rel" ].

quietest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "quietest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quiet_rel" ].

quietly := adv_int_vp_le &
  [ STEM < "quietly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quietly_rel" ].

quit_v1 := v_np*_trans_le &
  [ STEM < "quit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quit_rel" ].

quit-prd := v_subj_equi_prp_le &
  [ STEM < "quit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quit_prd_rel" ].

quite_deg := adv_degree_spec_v_le &
  [ STEM < "quite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quite_rel" ].

quits_n1 := n_mass_le &
  [ STEM < "quits" >,
    SYNSEM.LKEYS.KEYREL.PRED _i_quits_rel ].

rain_v1 := v_atrans_le &
  [ STEM < "rain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rain_v_rel" ].

raise_v1 := v_np_trans_le &
  [ STEM < "raise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_raise_v_rel" ].

range_n1 := n_ppof_le &
 [ STEM < "range" >,
   SYNSEM.LKEYS.KEYREL.PRED "_range_rel" ].

rapid_a1 := adj_intrans_le &
  [ STEM < "rapid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rapid_rel" ].

rapidly := adv_int_vp_le &
  [ STEM < "rapidly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rapidly_rel" ].

rare_a1 := adj_intrans_le &
  [ STEM < "rare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rare_rel" ].

rarely_adv1 := adv_int_vp_le &
  [ STEM < "rarely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rarely_rel" ].

rash_a1 := adj_intrans_le &
  [ STEM < "rash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rash_rel" ].

rate_n1 := n_ppof_le &
  [ STEM < "rate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rate_n_rel" ].

rather_deg := adv_degree_spec_v_le &
  [ STEM < "rather" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rather_rel" ].

reach_out_v1 := v_particle_le &
  [ STEM < "reach" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reach_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

reach_v1 := v_np_trans_le &
  [ STEM < "reach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reach_rel" ].

read_v1 := v_np*_trans_le &
  [ STEM < "read" >,
    SYNSEM.LKEYS.KEYREL.PRED "_read_rel" ].

readily := adv_int_vp_le &
  [ STEM < "readily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_readily_rel" ].

ready_a1 := adj_intrans_le &
  [ STEM < "ready" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ready_rel" ].

ready_a2 := adj_reg_equi_le &
  [ STEM < "ready" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ready_rel" ].

real_adv := adv_degree_spec_v_le &
  [ STEM < "real" >,
    SYNSEM.LKEYS.KEYREL.PRED "_real_deg_rel" ].

real_a1 := adj_intrans_le &
  [ STEM < "real" >,
    SYNSEM.LKEYS.KEYREL.PRED "_real_adj_rel" ].

realize_v1 := v_np*_trans_le &
  [ STEM < "realize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_realize_rel" ].

realize_v2 := v_cp_prop_non_trans_le &
  [ STEM < "realize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_realize_rel" ].

really_deg := adv_degree_spec_v_le &
  [ STEM < "really" >,
    SYNSEM.LKEYS.KEYREL.PRED "_really_deg_rel" ].

really_adv1 := adv_vp_aux_le &
  [ STEM < "really" >,
    SYNSEM.LKEYS.KEYREL.PRED "_really_rel" ].

really_adv2 := adv_s_pre_le &
  [ STEM < "really" >,
    SYNSEM.LKEYS.KEYREL.PRED "_really_rel" ].

rearrange_v1 := v_np_trans_le &
  [ STEM < "rearrange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rearrange_rel" ].

reason_n1 := n_mass_count_ppfor_le &
  [ STEM < "reason" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reason_n_rel" ].

reason_n2 := n_cpcomp_fin_le &
  [ STEM < "reason" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reason_c_rel" ].

reasonable_a1 := adj_intrans_le &
  [ STEM < "reasonable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reasonable_rel" ].

reasonable_a2 := adj_reg_atrans_le &
  [ STEM < "reasonable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reasonable_rel" ].

reasonable_a3 := adj_reg_atrans_cp_le &
  [ STEM < "reasonable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reasonable_rel" ].

reasonableness_n1 := n_mass_le &
  [ STEM < "reasonableness" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reasonableness_rel" ].

reasonably := adv_int_vp_le &
  [ STEM < "reasonably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reasonably_rel" ].

rebel_n1 := n_intr_le &
  [ STEM < "rebel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rebel_rel" ].

rebel_v1 := v_np*_trans_le &
  [ STEM < "rebel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rebel_v_rel" ].

rebel_v2 := v_np*_prep_trans_le &
  [ STEM < "rebel" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rebel_v_rel",
             LKEYS.--OCOMPKEY _against_p_rel ] ].

recap_v1 := v_np*_trans_le &
  [ STEM < "recap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recap_rel" ].

recapitulate_v1 := v_np*_trans_le &
  [ STEM < "recapitulate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recapitulate_rel" ].

receive_v1 := v_np_trans_le &
  [ STEM < "receive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_receive_rel" ].

recently_adv1 := adv_int_vp_le &
  [ STEM < "recently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recently_rel" ].

receptive_a1 := adj_intrans_le &
  [ STEM < "receptive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_receptive_rel" ].

reckon_v1 := v_cp_prop*_non_trans_le &
  [ STEM < "reckon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reckon_rel" ].

reckon_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "reckon" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reckon_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

recommendable_a1 := adj_intrans_le &
  [ STEM < "recommendable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recommendable_rel" ].

recommendation_n1 := n_ppof_le &
  [ STEM < "recommendation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recommendation_rel" ].

reconcile_with_v1 := v_empty_prep_trans*_le &
  [ STEM < "reconcile" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reconcile_with_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

reconsider_v1 := v_np*_trans_le &
  [ STEM < "reconsider" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reconsider_rel" ].

record_v1 := v_np*_trans_le &
  [ STEM < "record" >,
    SYNSEM.LKEYS.KEYREL.PRED "_record_rel" ].

recover_v1 := v_unerg_le &
  [ STEM < "recover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recover_v_rel" ].

recover_v2 := v_np_trans_le &
  [ STEM < "recover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recover_v_rel" ].

recuperate_v1 := v_empty_prep_intrans_le &
  [ STEM < "recuperate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_recuperate_from_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

recuperate_v2 := v_unerg_le &
  [ STEM < "recuperate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recuperate_from_rel" ].

red1 := adj_intrans_le &
  [ STEM < "red" >,
    SYNSEM.LKEYS.KEYREL.PRED "_red_rel" ].

redo := v_np_trans_le &
  [ STEM < "redo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_redo_rel" ].

Redoute_n1 := n_proper_le &
  [ STEM < "redoute" >,
    SYNSEM.LKEYS.KEYREL.CARG "Redoute" ].

reduce_v1 := v_np_trans_le &
  [ STEM < "reduce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reduce_rel" ].

reduction_n1 := n_ppof_le &
  [ STEM < "reduction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reduction_rel" ].

reference_n1 := n_intr_le &
  [ STEM < "reference" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reference_rel" ].

reformation_day := n_holiday_le &
  [ STEM < "reformation", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "reformation_day" ].

refresh_v1 := v_np_trans_le &
  [ STEM < "refresh" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refresh_rel" ].

refuse_v1 := v_np_trans_le &
  [ STEM < "refuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refuse_rel" ].

refuse_v2 := v_subj_equi_le &
  [ STEM < "refuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refuse_rel" ].

regard_v1 := v_np_comp_le &
  [ STEM < "regard" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_regard_v_rel",
             LKEYS.--OCOMPKEY _as_p_sel_rel ] ].

regard_v2 := v_np_trans_le &
  [ STEM < "regard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regard_v_rel" ].

regarding_p := p_le &
  [ STEM < "regarding" >,
    SYNSEM.LKEYS.KEYREL.PRED _regarding_rel ].

regards_n1 := n_plur_le &
  [ STEM < "regards" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regards_rel" ].

regeneration_n1 := n_mass_le &
  [ STEM < "regeneration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regeneration_rel" ].

region_n1 := n_ppof_le &
  [ STEM < "region" >,
    SYNSEM.LKEYS.KEYREL.PRED "_region_rel" ].

regret_v1 := v_np_trans_le &
  [ STEM < "regret" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regret_rel" ].

regret_v2 := v_cp_prop_non_trans_le &
  [ STEM < "regret" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regret_rel" ].

regular_a1 := adj_intrans_le &
  [ STEM < "regular" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regular_rel" ].

regularity_n1 := n_mass_count_le &
  [ STEM < "regularity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regularity_rel" ].

regularly_adv1 := adv_int_vp_le &
  [ STEM < "regularly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regularly_rel" ].

reject_v1 := v_np_trans_le &
  [ STEM < "reject" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reject_rel" ].

relation_n1 := n_ppof_le &
  [ STEM < "relation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relation_rel" ].

relationship_n1 := n_ppof_le &
  [ STEM < "relationship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relationship_rel" ].

relative_a1 := adj_intrans_le &
  [ STEM < "relative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relative_rel" ].

relatively_deg := adv_degree_spec_v_le &
  [ STEM < "relatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relatively_deg_rel" ].

relax_v1 := v_unerg_le &
  [ STEM < "relax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relax_rel" ].

relaxed_a1 := adj_intrans_le &
  [ STEM < "relaxed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relaxed_rel" ].

relevant_a1 := adj_intrans_le &
  [ STEM < "relevant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relevant_rel" ].

reliable_a1 := adj_intrans_le &
  [ STEM < "reliable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reliable_rel" ].

relieve_v1 := v_np_trans_le &
  [ STEM < "relieve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relieve_rel" ].

religious_a1 := adj_intrans_le &
  [ STEM < "religious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_religious_rel" ].

religiously := adv_int_vp_le &
  [ STEM < "religiously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_religiously_rel" ].

reluctant_a1 := adj_intrans_le &
  [ STEM < "reluctant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reluctant_rel" ].

reluctant_a2 := adj_reg_equi_le &
  [ STEM < "reluctant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reluctant_rel" ].

reluctantly_adv1 := adv_int_vp_le &
  [ STEM < "reluctantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reluctantly_rel" ].

rely_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "rely" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rely_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

remain_v1 := v_subj_equi_prd_adj_le &
  [ STEM < "remain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remain_v2_rel" ].

remain_v2 := v_unacc_le &
  [ STEM < "remain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remain_v_rel" ].

remember_v1 := v_np_trans_le &
  [ STEM < "remember" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remember_v_rel" ].

remember_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "remember" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remember_v_rel" ].

remember_v3 := v_unerg_le &
  [ STEM < "remember" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remember_v_rel" ].

remember_v4 := v_subj_equi_le &
  [ STEM < "remember" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remember_v_rel" ].

remind_v1 := v_empty_prep_trans_le &
  [ STEM < "remind" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_remind_of_rel",
             LKEYS.--OCOMPKEY _of_p_sel_rel ] ].

remove_v1 := v_np_trans_le &
  [ STEM < "remove" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remove_rel" ].

rendezvous_n1 := n_ppof_le &
  [ STEM < "rendezvous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rendezvous_rel" ].

renew_v1 := v_np_trans_le &
  [ STEM < "renew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_renew_rel" ].

repeat_v1 := v_np_trans_le &
  [ STEM < "repeat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repeat_rel" ].

repentance_n1 := n_mass_le &
  [ STEM < "repentance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repentance_rel" ].

replace_v1 := v_np_trans_le &
  [ STEM < "replace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_replace_rel" ].

reply_v1 := v_pp_cp_le &
  [ STEM < "reply" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reply_v_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

reply_v2 := v_unerg_le &
  [ STEM < "reply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reply_v_rel" ].

report_n1 := n_ppof_le &
  [ STEM < "report" >,
    SYNSEM.LKEYS.KEYREL.PRED "_report_rel" ].

report_v2 := v_np_trans_le &
  [ STEM < "report" >,
    SYNSEM.LKEYS.KEYREL.PRED "_report_v_rel" ].

report_v3 := v_cp_prop_non_trans_le &
  [ STEM < "report" >,
    SYNSEM.LKEYS.KEYREL.PRED "_report_v_rel" ].

report_v4 := v_obj_equi_prd_le &
  [ STEM < "report" >,
    SYNSEM.LKEYS.KEYREL.PRED "_report_v_rel" ].

reporter_n1 := n_ppof_le &
  [ STEM < "reporter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reporter_rel" ].

repugnant_a1 := adj_intrans_le &
  [ STEM < "repugnant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repugnant_rel" ].

request_n1 := n_ppof_le &
  [ STEM < "request" >,
    SYNSEM.LKEYS.KEYREL.PRED "_request_n_rel" ].

request_n2 := n_ppcomp_le &
  [ STEM < "request" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_request_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

request_n3 := n_cpcomp_bse_le &
  [ STEM < "request" >,
    SYNSEM.LKEYS.KEYREL.PRED "_request_nh_rel" ]. 

request_v1 := v_np_trans_le &
  [ STEM < "request" >,
    SYNSEM.LKEYS.KEYREL.PRED "_request_v_rel" ].

require_v1 := v_np_trans_le &
  [ STEM < "require" >,
    SYNSEM.LKEYS.KEYREL.PRED "_require_rel" ].

require_v2 := v_obj_equi_le &
  [ STEM < "require" >,
    SYNSEM.LKEYS.KEYREL.PRED "_require_rel" ].

reschedule_v1 := v_np_trans_le &
  [ STEM < "reschedule" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reschedule_rel" ].

reschedule_v2 := v_empty_prep_trans_le &
  [ STEM < "reschedule" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reschedule_for_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

reservation_n1 := n_ppof_le &
  [ STEM < "reservation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reservation_rel" ].

reserve_v1 := v_np_trans_le &
  [ STEM < "reserve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reserve_rel" ].

resolutely_adv1 := adv_vp_le &
  [ STEM < "resolutely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resolutely_rel" ].

resort_v1 := v_empty_prep_intrans_le &
  [ STEM < "resort" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_resort_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

respect_v1 := v_np_trans_le &
  [ STEM < "respect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_respect_v_rel" ].

respectively_adv1 := adv_vp_post_le &
  [ STEM < "respectively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_respectively_rel" ].

responsible_a1 := adj_intrans_le &
  [ STEM < "responsible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_responsible_rel" ].

rest_n1 := n_intr_unspec_le &
  [ STEM < "rest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rest_n_rel" ].

rest_n2 := n_ppcomp_oblig_unspec_le &
  [ STEM < "rest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rest_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

rest_v1 := v_unerg_le &
  [ STEM < "rest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rest_rel" ].

rest_v2 := v_np_trans_le &
  [ STEM < "rest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rest_cause_rel" ].

rest_up_v1 := v_particle_le &
  [ STEM < "rest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rest_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

restaurant_n1 := n_intr_le &
  [ STEM < "restaurant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_restaurant_rel" ].

restrict_v1 := v_empty_prep_trans_le &
  [ STEM < "restrict" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_restrict_to_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

restrict_v2 := v_np_trans_le &
  [ STEM < "restrict" >,
    SYNSEM.LKEYS.KEYREL.PRED "_restrict_rel" ].

restricted_a1 := adj_intrans_le &
  [ STEM < "restricted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_restricted_rel" ].

restriction_n1 := n_ppof_le &
  [ STEM < "restriction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_restriction_rel" ].

result_n1 := n_ppof_le &
  [ STEM < "result" >,
    SYNSEM.LKEYS.KEYREL.PRED "_result_n_rel" ].

return_v1 := v_unerg_le &
  [ STEM < "return" >,
    SYNSEM.LKEYS.KEYREL.PRED "_return_v_rel" ].

reverse_a1 := adj_intrans_le &
  [ STEM < "reverse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reverse_adj_rel" ].

revert_v1 := v_np_trans_le &
  [ STEM < "revert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revert_rel" ].

review_v1 := v_np_trans_le &
  [ STEM < "review" >,
    SYNSEM.LKEYS.KEYREL.PRED "_review_v_rel" ].

revise_v1 := v_np_trans_le &
  [ STEM < "revise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revise_rel" ].

revive_v1 := v_unacc_le &
  [ STEM < "revive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revive_v_rel" ].

revive_v2 := v_np_trans_le &
  [ STEM < "revive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revive_cause_v_rel" ].

revolve_v1 := v_prep*_intrans_le &
  [ STEM < "revolve" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_revolve_rel",
             LKEYS.--COMPKEY _around_p_rel ] ].

rhetoric_n1 := n_mass_le &
  [ STEM < "rhetoric" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rhetoric_rel" ].

Rhineland_n1 := n_proper_le &
  [ STEM < "rhineland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rhineland" ].

rhythm_n1 := n_mass_count_ppof_le &
  [ STEM < "rhythm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rhythm_rel" ].

rice1 := n_mass_le &
  [ STEM < "rice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rice_rel" ].

rid_a1 := adj_trans_le &
  [ STEM < "rid" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rid_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

ride_n1 := n_intr_le &
  [ STEM < "ride" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ride_rel" ].

ride_v1 := v_np_trans_le &
  [ STEM < "ride" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ride_v_rel" ].

ridiculous_a1 := adj_intrans_le &
  [ STEM < "ridiculous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ridiculous_rel" ].

ridiculously := adv_int_vp_post_le &
  [ STEM < "ridiculously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ridiculously_rel" ].

right_a1 := adj_intrans_le &
  [ STEM < "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_right_rel" ].

right_adv1 := adv_vp_post_le &
  [ STEM < "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_right_focus_rel" ].

right_adv2 := adv_s_pre_le &
  [ STEM < "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_right_focus_rel" ].

right_deg := adv_degree_spec_jov_le &
  [ STEM < "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_right_deg_rel" ].

right_m_deg := adv_degree_spec_m_le &
  [ STEM < "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_right_m_deg_rel" ].

right_away_adv1 := pp_vpmod_le &
  [ STEM < "right", "away" >,
    SYNSEM.LKEYS.KEYREL.PRED _right_away_rel ].

rigid_a1 := adj_intrans_le &
  [ STEM < "rigid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rigid_rel" ].

ring_v1 := v_particle_np_le &
  [ STEM < "ring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ring_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

rise_n1 := n_ppof_le &
  [ STEM < "rise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rise_n_rel" ].

rise_v2 := v_unacc_le &
  [ STEM < "rise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rise_v_rel" ].

road_n1 := n_ppof_le &
  [ STEM < "road" >,
    SYNSEM.LKEYS.KEYREL.PRED "_road_rel" ].

roger_root_pre := adv_disc_preh_le &
  [ STEM < "roger" >,
    SYNSEM.LKEYS.KEYREL.CARG "roger" ].

roger_root_post := adv_disc_posth_le &
  [ STEM < "roger" >,
    SYNSEM.LKEYS.KEYREL.CARG "roger" ].

roll_n1 := n_ppof_le &
  [ STEM < "roll" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roll_n_rel" ].

roll_v1 := v_unacc_le &
  [ STEM < "roll" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roll_v_rel" ].

roll_v2 := v_np_trans_le &
  [ STEM < "roll" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roll_cause_v_rel" ].

romantic_a1 := adj_intrans_le &
  [ STEM < "romantic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_romantic_rel" ].

room_n1 := n_mass_count_ppof_le &
  [ STEM < "room" >,
    SYNSEM.LKEYS.KEYREL.PRED "_room_rel" ].

Rostock_n1 := n_proper_le &
  [ STEM < "rostock" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rostock" ].

rotate_v1 := v_unacc_le &
  [ STEM < "rotate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rotate_v_rel" ].

rotate_v2 := v_np_trans_le &
  [ STEM < "rotate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rotate_cause_v_rel" ].

roughly_adv := adv_degree_spec_v_le &
  [ STEM < "roughly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rough_deg_rel" ].

round_a1 := adj_intrans_le &
  [ STEM < "round" >,
    SYNSEM.LKEYS.KEYREL.PRED "_round_adj_rel" ].

roundabout_a1 := adj_intrans_le &
  [ STEM < "roundabout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roundabout_adj_rel" ].

roundabout_n1 := n_intr_le &
  [ STEM < "roundabout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roundabout_rel" ].

route_n1 := n_ppof_le &
  [ STEM < "route" >,
    SYNSEM.LKEYS.KEYREL.PRED "_route_rel" ].

routine_a1 := adj_intrans_le &
  [ STEM < "routine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_routine_adj_rel" ].

routine_n1 := n_ppof_le &
  [ STEM < "routine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_routine_n_rel" ].

row_n1 := n_ppof_le &
  [ STEM < "row" >,
    SYNSEM.LKEYS.KEYREL.PRED "_row_n_rel" ].

rubbish_root_pre := adv_disc_preh_le &
  [ STEM < "rubbish" >,
    SYNSEM.LKEYS.KEYREL.CARG "rubbish" ].

rubbish_root_post := adv_disc_posth_le &
  [ STEM < "rubbish" >,
    SYNSEM.LKEYS.KEYREL.CARG "rubbish" ].

rule_out_v1 := v_particle_np_le &
  [ STEM < "rule" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rule_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

rule_v1 := v_np*_trans_le &
  [ STEM < "rule" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rule_v_rel" ].

run_into_v1 := v_empty_prep_intrans_le &
  [ STEM < "run" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_run_into_rel",
             LKEYS.--COMPKEY _into_p_sel_rel ] ].

run_n1 := n_ppof_le &
  [ STEM < "run" >,
    SYNSEM.LKEYS.KEYREL.PRED "_run_n_rel" ].

run_v2 := v_np_trans_le &
  [ STEM < "run" >,
    SYNSEM.LKEYS.KEYREL.PRED "_run_operate_rel" ].

run_v3 := v_unerg_le &
  [ STEM < "run" >,
    SYNSEM.LKEYS.KEYREL.PRED "_run_operate_rel" ].

run_back_v2 := v_particle_le &
  [ STEM < "run" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_run_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

run_off_v1 := v_particle_np_le &
  [ STEM < "run" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_run_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

run_out_v1 := v_particle_pp_le &
  [ STEM < "run" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_run_out_rel",
             LKEYS [ --COMPKEY _out_p_sel_rel,
                     --OCOMPKEY _of_p_rel ] ] ].

run_out_v2 := v_particle_le &
  [ STEM < "run" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_run_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

run_prd_v1 := v_subj_equi_prd_adj_le &
  [ STEM < "run" >,
    SYNSEM.LKEYS.KEYREL.PRED "_run_prd_rel" ].

rush_v1 := v_ditrans_le &
  [ STEM < "rush" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rush_v_rel" ].

rush_v2 := v_np*_trans_le &
  [ STEM < "rush" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rush_v_rel" ].

apostrophe_s_lex := n_poss_clitic_lex_le &
  [ STEM < "s" > ].

apostrophe_s_phr := n_poss_clitic_phr_le &
  [ STEM < "s" > ].

apostrophe_s_2_lex := n_poss_clitic_lex_le &
  [ STEM < "'s" > ].

apostrophe_s_2_phr := n_poss_clitic_phr_le &
  [ STEM < "'s" > ].

apostrophe_s_3_lex := n_poss_clitic_lex_le &
  [ STEM < "'" > ].

apostrophe_s_3_phr := n_poss_clitic_phr_le &
  [ STEM < "'" > ].

Saarbruecken_n1 := n_proper_le &
  [ STEM < "saarbruecken" >,
    SYNSEM.LKEYS.KEYREL.CARG "Saarbruecken" ].

sacrifice_n1 := n_mass_count_le &
  [ STEM < "sacrifice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sacrifice_rel" ].

sad_a1 := adj_intrans_le &
  [ STEM < "sad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sad_rel" ].

sadly_adv1 := adv_vp_le &
  [ STEM < "sadly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sadly_rel" ].

sadly_adv2 := adv_s_pre_le &
  [ STEM < "sadly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sadly_rel" ].

safe_a1 := adj_intrans_le &
  [ STEM < "safe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_safe_adj_rel" ].

safer_a1 := adj_comp_le &
  [ STEM < "safer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_safe_adj_rel" ].

safety_n1 := n_mass_le &
  [ STEM < "safety" >,
    SYNSEM.LKEYS.KEYREL.PRED "_safety_rel" ].

sail_v1 := v_unerg_le &
  [ STEM < "sail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sail_v_rel" ].

salad_n1 := n_mass_count_le &
  [ STEM < "salad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_salad_rel" ].

sales_a1 := adj_intrans_le &
  [ STEM < "sales" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sales_rel" ].

same_a1 := adj_attr_intrans_le &
  [ STEM < "same" >,
    SYNSEM.LKEYS.KEYREL.PRED "_same_rel" ].

Sandy := n_proper_le &
  [ STEM < "sandy" >,
    SYNSEM.LKEYS.KEYREL.CARG "sandy" ].

sanity_n1 := n_mass_le &
  [ STEM < "sanity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sanity_rel" ].

Sara := n_proper_fem_le &
  [ STEM < "sara" >,
    SYNSEM.LKEYS.KEYREL.CARG "sara" ].

satisfy_v1 := v_np_trans_le &
  [ STEM < "satisfy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_satisfy_rel" ].

saturday_n1 := n_day_of_week_le &
  [ STEM < "saturday" >,
    SYNSEM.LKEYS.KEYREL.CARG "sat" ].

saturday_n2 := n_day_of_week_le &
  [ STEM < "sat" >,
    SYNSEM.LKEYS.KEYREL.CARG "sat" ].

sauna_n1 := n_ppof_le &
  [ STEM < "sauna" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sauna_rel" ].

sausage_n1 := n_mass_count_le &
  [ STEM < "sausage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sausage_rel" ].

save_v1 := v_np_trans_le &
  [ STEM < "save" >,
    SYNSEM.LKEYS.KEYREL.PRED "_save_rel" ].

say_v1 := v_np*_trans_le &
  [ STEM < "say" >,
    SYNSEM.LKEYS.KEYREL.PRED "_say_rel" ].

say_v2 := v_pp_cp_le &
  [ STEM < "say" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_say_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

say_v3 := v_prep_intrans_event_le &
  [ STEM < "say" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_say_loc_rel",
             LKEYS.--COMPKEY loc_abstr_rel ] ].

say_approx := adv_degree_spec_le &
  [ STEM < "say" >,
    SYNSEM.LKEYS.KEYREL.PRED "_say_approx_rel" ].

scarce_a1 := adj_intrans_le &
  [ STEM < "scarce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scarce_rel" ].

scarcely_adv1 := adv_vp_pre_le &
  [ STEM < "scarcely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scarcely_rel" ].

scarcely_adv2 := adv_s_pre_le &
  [ STEM < "scarcely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scarcely_rel" ].

scare_v1 := v_np_trans_le &
  [ STEM < "scare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scare_rel" ].

schedule_n1 := n_ppof_le &
  [ STEM < "schedule" >,
    SYNSEM.LKEYS.KEYREL.PRED "_schedule_n_rel" ].

schedule_v1 := v_np_trans_le &
  [ STEM < "schedule" >,
    SYNSEM.LKEYS.KEYREL.PRED "_schedule_rel" ].

schedule_in_v1 := v_particle_np_le &
  [ STEM < "schedule" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_schedule_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

schedulewise_adv1 := adv_int_vp_post_le &
  [ STEM < "schedulewise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_schedulewise_rel" ].

Scheytt_n1 := n_proper_le &
  [ STEM < "scheytt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Scheytt" ].

Schmidt_n1 := n_proper_le &
  [ STEM < "schmidt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Schmidt" ].

Schmidtke_n1 := n_proper_le &
  [ STEM < "schmidtke" >,
    SYNSEM.LKEYS.KEYREL.CARG "Schmidtke" ].

school_n1 := n_mass_count_le &
  [ STEM < "school" >,
    SYNSEM.LKEYS.KEYREL.PRED "_school_rel" ].

Schwerin_n1 := n_proper_le &
  [ STEM < "schwerin" >,
    SYNSEM.LKEYS.KEYREL.CARG "Schwerin" ].

science_n1 := n_mass_count_le &
  [ STEM < "science" >,
    SYNSEM.LKEYS.KEYREL.PRED "_science_rel" ].

scope_n1 := n_ppof_le &
  [ STEM < "scope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scope_rel" ].

Scott := n_proper_le &
  [ STEM < "scott" >,
    SYNSEM.LKEYS.KEYREL.CARG "scott" ].

scratch_v1 := v_particle_np_le &
  [ STEM < "scratch" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_scratch_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

screen_n1 := n_ppof_le &
  [ STEM < "screen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_screen_n_rel" ].

screen_v1 := v_np_trans_le &
  [ STEM < "screen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_screen_v_rel" ].

screw_v1 := v_np_trans_le &
  [ STEM < "screw" >,
    SYNSEM.LKEYS.KEYREL.PRED "_screw_rel" ].

scrupulous_a1 := adj_intrans_le &
  [ STEM < "scrupulous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scrupulous_rel" ].

scribble_v1 := v_np*_trans_le &
  [ STEM < "scribble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scribble_rel" ].

scribble_down_v1 := v_particle_np_le &
  [ STEM < "scribble" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_scribble_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

sea_n1 := n_ppof_le &
  [ STEM < "sea" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sea_rel" ].

season_n1 := n_intr_temp_ssn_le &
  [ STEM < "season" >,
    SYNSEM.LKEYS.KEYREL.CARG "season" ].

second_day := n_day_of_month_le &
  [ STEM < "second" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

two_day := n_day_of_month_card_le &
  [ STEM < "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

two_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits2ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

two_day_num := n_day_of_month_card_le &
  [ STEM < "2" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

second_day_num := n_day_of_month_le &
  [ STEM < "2nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

secondly_root_pre := adv_disc_preh_le &
  [ STEM < "secondly" >,
    SYNSEM.LKEYS.KEYREL.CARG "secondly" ].

secondly_root_post := adv_disc_posth_le &
  [ STEM < "secondly" >,
    SYNSEM.LKEYS.KEYREL.CARG "secondly" ].

secretary_n1 := n_ppof_le &
  [ STEM < "secretary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_secretary_rel" ].

secure_a1 := adj_intrans_le &
  [ STEM < "secure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_secure_rel" ].

security_n1 := n_mass_le &
  [ STEM < "security" >,
    SYNSEM.LKEYS.KEYREL.PRED "_security_rel" ].

see_about_v1 := v_empty_prep_intrans_le &
  [ STEM < "see" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_see_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

see_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "see" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_see_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

see_v1 := v_np_trans_le &
  [ STEM < "see" >,
    SYNSEM.LKEYS.KEYREL.PRED "_see_rel" ].

see_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "see" >,
    SYNSEM.LKEYS.KEYREL.PRED "_see_understand_rel" ].

see_v3 := v_unerg_le &
  [ STEM < "see" >,
    SYNSEM.LKEYS.KEYREL.PRED "_see_understand_rel" ].

see_v5 := v_np_comp_le &
  [ STEM < "see" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_see_consider_rel",
             LKEYS.--OCOMPKEY _as_p_sel_rel ] ].

seem1 := v_pp_inf_ssr_le &
  [ STEM < "seem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seem_v_rel" ].

seem2 := v_prdp_pp_ssr_a_or_p_le &
  [ STEM < "seem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seem_v_rel" ].

seem_v3 := v_expl_it_subj_pp_cp_le &
  [ STEM < "seem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seem_v_rel" ].

seem_v4 := v_expl_it_subj_like_le &
  [ STEM < "seem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seem_v_rel" ].

seem_v5 := v_cp_like_non_trans_le &
  [ STEM < "seem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seem_v_nx_rel" ].

segregate_v1 := v_np_trans_le &
  [ STEM < "segregate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_segregate_rel" ].

seize_v1 := v_np_trans_le &
  [ STEM < "seize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seize_rel" ].

seldom_adv1 := adv_int_vp_le &
  [ STEM < "seldom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seldom_rel" ].

select_v1 := v_np*_trans_le &
  [ STEM < "select" >,
    SYNSEM.LKEYS.KEYREL.PRED "_select_rel" ].

selection_n1 := n_ppof_le &
  [ STEM < "selection" >,
    SYNSEM.LKEYS.KEYREL.PRED "_selection_rel" ].

self-assured_a1 := adj_intrans_le &
  [ STEM < "self", "assured" >,
    SYNSEM.LKEYS.KEYREL.PRED "_self-assured_rel" ].

sell_v1 := v_ditrans_only_le &
  [ STEM < "sell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sell_rel" ].

sell_v2 := v_empty_to_trans_le &
  [ STEM < "sell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sell_rel" ].

seminar_n1 := n_ppof_le &
  [ STEM < "seminar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seminar_rel" ].

send_v1 := v_np_trans_le &
  [ STEM < "send" >,
    SYNSEM.LKEYS.KEYREL.PRED "_send_rel" ].

send_v2 := v_ditrans_only_le &
  [ STEM < "send" >,
    SYNSEM.LKEYS.KEYREL.PRED "_send_rel" ].

send_v3 := v_empty_to_trans_le &
  [ STEM < "send" >,
    SYNSEM.LKEYS.KEYREL.PRED "_send_rel" ].

send_v5 := v_unerg_le &
  [ STEM < "send" >,
    SYNSEM.LKEYS.KEYREL.PRED "_send_rel" ].

send_v6 := v_obj_equi_le &
  [ STEM < "send" >,
    SYNSEM.LKEYS.KEYREL.PRED "_send_rel" ].

send_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "send" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_send_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

send_to_v1 := v_prep_intrans_le &
  [ STEM < "send" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_send_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

senior_a1 := adj_intrans_le &
  [ STEM < "senior" >,
    SYNSEM.LKEYS.KEYREL.PRED "_senior_rel" ].

sense_n1 := n_mass_count_ppof_le &
  [ STEM < "sense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sense_rel" ].

sense_v1 := v_np_trans_le &
  [ STEM < "sense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sense_v_rel" ].

sense_v2 := v_cp_prop_non_trans_le &
  [ STEM < "sense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sense_v_rel" ].

sensible_a1 := adj_intrans_le &
  [ STEM < "sensible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sensible_rel" ].

separate_a1 := adj_trans_le &
  [ STEM < "separate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_separate_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

separately_adv1 := adv_int_vp_post_le &
  [ STEM < "separately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_separately_rel" ].

september := n_month_le &
  [ STEM < "september" >,
    SYNSEM.LKEYS.KEYREL.CARG "sep" ].

september_abb_n1 := n_month_le &
  [ STEM < "sept" >,
    SYNSEM.LKEYS.KEYREL.CARG "sep" ].

september_2 := n_month_year_le &
  [ STEM < "september" >,
    SYNSEM.LKEYS.KEYREL.CARG "sep" ].

september_abb_n2 := n_month_year_le &
  [ STEM < "sept" >,
    SYNSEM.LKEYS.KEYREL.CARG "sep" ].

september_abb_n3 := n_month_year_le &
  [ STEM < "sep" >,
    SYNSEM.LKEYS.KEYREL.CARG "sep" ].

september_abb_n4 := n_month_le &
  [ STEM < "sep" >,
    SYNSEM.LKEYS.KEYREL.CARG "sep" ].

series_n1 := n_ppof_le &
  [ STEM < "series" >,
    SYNSEM.LKEYS.KEYREL.PRED "_series_n_rel" ].

serious_a1 := adj_intrans_le &
  [ STEM < "serious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_serious_rel" ].

seriously_adv := adv_degree_spec_v_le &
  [ STEM < "seriously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seriously_adv_rel" ].

seriously_adv1 := adv_int_vp_le &
  [ STEM < "seriously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seriously_rel" ].

serve_v1 := v_np*_trans_le &
  [ STEM < "serve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_serve_rel" ].

session_n1 := n_ppof_le &
  [ STEM < "session" >,
    SYNSEM.LKEYS.KEYREL.PRED "_session_rel" ].

set_apart_v1 := v_particle_np_le &
  [ STEM < "set" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_set_apart_rel",
             LKEYS.--COMPKEY _apart_j_sel_rel ] ].

set_off_v1 := v_particle_np_le &
  [ STEM < "set" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_set_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

set_off_v2 := v_particle_le &
  [ STEM < "set" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_set_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

set_up_v1 := v_particle_np_le &
  [ STEM < "set" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_set_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

set_up_v2 := v_particle_le &
  [ STEM < "set" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_set_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

set_v1 := v_np_prep_trans_dors_le &
  [ STEM < "set" >,
    SYNSEM.LKEYS.KEYREL.PRED "_set_rel" ].

set_v2 := v_np_trans_le &
  [ STEM < "set" >,
    SYNSEM.LKEYS.KEYREL.PRED "_set_rel" ].

set_a1 := adj_intrans_le &
  [ STEM < "set" >,
    SYNSEM.LKEYS.KEYREL.PRED "_set_adj_rel" ].

settle_v1 := v_np*_trans_le &
  [ STEM < "settle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_settle_rel" ].

seven := adj_bare_unspecified_card_one_le & 
  [ STEM < "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seven_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seven_hour := n_hour_le &
  [ STEM < "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seventeen := adj_bare_unspecified_card_two_le & 
  [ STEM < "seventeen" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

seventeenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "seventeenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

seventeenth_day := n_day_of_month_le &
  [ STEM < "seventeenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

seventeen_day := n_day_of_month_card_le &
  [ STEM < "seventeen" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

seventeen_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits17ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

seventeen_day_num := n_day_of_month_card_le &
  [ STEM < "17" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

seventeenth_day_num := n_day_of_month_le &
  [ STEM < "17th" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

seventh := adj_bare_unspecified_ord_one_le &
  [ STEM < "seventh" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seventh_day := n_day_of_month_le &
  [ STEM < "seventh" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seven_day := n_day_of_month_card_le &
  [ STEM < "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seven_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits7ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seven_day_num := n_day_of_month_card_le &
  [ STEM < "7" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seventh_day_num := n_day_of_month_le &
  [ STEM < "7th" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

seventy_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "seventy" >,
    SYNSEM.LKEYS.KEYREL.CARG "70" ].

seventy := adj_bare_unspecified_card_two_le & 
  [ STEM < "seventy" >,
    SYNSEM.LKEYS.KEYREL.CARG "70" ].

sever_v1 := v_np_trans_le &
  [ STEM < "sever" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sever_rel" ].

several := det_part_pl_le &
  [ STEM < "several" >,
    SYNSEM.LKEYS.KEYREL.PRED _several_q_rel ].

shall_aux_pos := va_will_pos_le &
  [ STEM < "shall" >,
    SYNSEM.LKEYS.KEYREL.PRED _shall_rel ].

sharp_a1 := adj_intrans_le &
  [ STEM < "sharp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sharp_rel" ].

sharply := adv_int_vp_le &
  [ STEM < "sharply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sharply_rel" ].

she := n_pers_pro_she_le &
  [ STEM < "she" > ].

sheet_n1 := n_ppof_le &
  [ STEM < "sheet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sheet_rel" ].

Sheraton_n1 := n_intr_named_le &
  [ STEM < "sheraton" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sheraton" ].

Shetland_n1 := n_proper_le &
  [ STEM < "shetland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Shetland" ].

shift_v1 := v_unerg_le &
  [ STEM < "shift" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shift_v_rel" ].

shift_v2 := v_np_trans_le &
  [ STEM < "shift" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shift_v_rel" ].

shit_root_pre := adv_disc_preh_le &
  [ STEM < "shit" >,
    SYNSEM.LKEYS.KEYREL.CARG "shit" ].

shit_root_post := adv_disc_posth_le &
  [ STEM < "shit" >,
    SYNSEM.LKEYS.KEYREL.CARG "shit" ].

shoot_v1 := v_np_trans_le &
  [ STEM < "shoot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shoot_rel" ].

shoot_v2 := v_unerg_le &
  [ STEM < "shoot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shoot_rel" ].

shoot_down_v1 := v_particle_np_le &
  [ STEM < "shoot" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_shoot_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

shop_n1 := n_ppof_le &
  [ STEM < "shop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shop_n_rel" ].

shop_v1 := v_unerg_le &
  [ STEM < "shop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shop_buy_rel" ].

shop_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "shop" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_shop_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

short_a1 := adj_intrans_le &
  [ STEM < "short" >,
    SYNSEM.LKEYS.KEYREL.PRED "_short_j_rel" ].

short_prtcl := adj_prtcl_le &
  [ STEM < "short" >,
    SYNSEM.LKEYS.KEYREL.PRED _short_j_sel_rel ].

short_term_a1 := adj_intrans_le &
  [ STEM < "short", "term" >,
    SYNSEM.LKEYS.KEYREL.PRED "_short_term_rel" ].

shorten_v1 := v_np_trans_le &
  [ STEM < "shorten" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shorten_rel" ].

shortly_adv1 := adv_int_vp_post_le &
  [ STEM < "shortly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shortly_rel" ].

should_aux_pos := va_modal_subj_pos_le & 
  [ STEM < "should" >,
    SYNSEM.LKEYS.KEYREL.PRED _should_rel ].

should_aux_neg_1 := va_modal_subj_neg_le &
  [ STEM < "shouldn't" >,
    SYNSEM.LKEYS.KEYREL.PRED _should_rel ].

should_aux_neg_2 := va_modal_subj_neg_le &
  [ STEM < "shouldn", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _should_rel ].

show_n1 := n_ppof_le &
  [ STEM < "show" >,
    SYNSEM.LKEYS.KEYREL.PRED "_show_n_rel" ].

show_v1 := v_ditrans_le &
  [ STEM < "show" >,
    SYNSEM.LKEYS.KEYREL.PRED "_show_v_rel" ].

show_v2 := v_np_trans_le &
  [ STEM < "show" >,
    SYNSEM.LKEYS.KEYREL.PRED "_show_v_rel" ].

show_v3 := v_np*_trans_cp_le &
  [ STEM < "show" >,
    SYNSEM.LKEYS.KEYREL.PRED "_show_v_rel" ].

show_v4 := v_obj_equi_prd_adj_le &
  [ STEM < "show" >,
    SYNSEM.LKEYS.KEYREL.PRED "_show_v_rel" ].

show_v5 := v_unerg_le &
  [ STEM < "show" >,
    SYNSEM.LKEYS.KEYREL.PRED "_show_v_rel" ].

show_v6 := v_subj_equi_prd_adj_le &
  [ STEM < "show" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_show_v_rel" ] ].

show_up_v1 := v_particle_le &
  [ STEM < "show" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_show_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

shrimp_n1 := n_ppof_le &
  [ STEM < "shrimp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shrimp_rel" ].

shrove_tuesday := n_holiday_le &
  [ STEM < "shrove", "tuesday" >,
    SYNSEM.LKEYS.KEYREL.CARG "shrove_tuesday" ].

shut_v1 := v_np_trans_le &
  [ STEM < "shut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shut_rel" ].

side_n1 := n_ppof_le &
  [ STEM < "side" >,
    SYNSEM.LKEYS.KEYREL.PRED "_side_rel" ].

Siemens_n1 := n_proper_le &
  [ STEM < "siemens" >,
    SYNSEM.LKEYS.KEYREL.CARG "Siemens" ].

sift_v1 := v_np_trans_le &
  [ STEM < "sift" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sift_rel" ].

sight_n1 := n_ppof_le &
  [ STEM < "sight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sight_rel" ].

sign_n1 := n_ppof_le &
  [ STEM < "sign" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sign_rel" ].

silence_n1 := n_mass_le &
  [ STEM < "silence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_silence_rel" ].

silent_a1 := adj_intrans_le &
  [ STEM < "silent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_silent_rel" ].

silly_a1 := adj_intrans_le &
  [ STEM < "silly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_silly_rel" ].

silvester := n_holiday_le &
  [ STEM < "silvester" >,
    SYNSEM.LKEYS.KEYREL.CARG "silvester" ].

similar_to_a1 := adj_trans_le &
  [ STEM < "similar" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_similar_adj_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

similarly := adv_int_vp_le &
  [ STEM < "similarly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_similarly_rel" ].

simple_a1 := adj_intrans_le &
  [ STEM < "simple" >,
    SYNSEM.LKEYS.KEYREL.PRED "_simple_rel" ].

simply_adv1 := adv_int_vp_le &
  [ STEM < "simply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_simply_rel" ].

since_subord := p_subconj_le &
  [ STEM < "since" >,
    SYNSEM.LKEYS.KEYREL.PRED "_since_subord_rel" ].

since := p_le &
  [ STEM < "since" >,
    SYNSEM.LKEYS.KEYREL.PRED _since_rel ].

sincere_a1 := adj_intrans_le &
  [ STEM < "sincere" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sincere_rel" ].

single_a1 := adj_intrans_le &
  [ STEM < "single" >,
    SYNSEM.LKEYS.KEYREL.PRED "_single_isect_rel" ].

single_n1 := n_intr_le &
  [ STEM < "single" >,
    SYNSEM.LKEYS.KEYREL.PRED "_single_n_rel" ].

sit_down_v1 := v_particle_le &
  [ STEM < "sit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sit_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

sit_v1 := v_unacc_le &
  [ STEM < "sit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sit_v_rel" ].

site_n1 := n_ppof_le &
  [ STEM < "site" >,
    SYNSEM.LKEYS.KEYREL.PRED "_site_rel" ].

situate_v1 := v_np_trans_le &
  [ STEM < "situate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_situate_rel" ].

situation_n1 := n_ppof_le &
  [ STEM < "situation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_situation_rel" ].

six := adj_bare_unspecified_card_one_le & 
  [ STEM < "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

six_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

six_hour := n_hour_le &
  [ STEM < "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

sixteen := adj_bare_unspecified_card_two_le & 
  [ STEM < "sixteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

sixteenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "sixteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

sixteenth_day := n_day_of_month_le &
  [ STEM < "sixteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

sixteen_day := n_day_of_month_card_le &
  [ STEM < "sixteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

sixteen_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits16ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

sixteen_day_num := n_day_of_month_card_le &
  [ STEM < "16" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

sixteenth_day_num := n_day_of_month_le &
  [ STEM < "16th" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

sixth := adj_bare_unspecified_ord_one_le &
  [ STEM < "sixth" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

sixth_day := n_day_of_month_le &
  [ STEM < "sixth" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

six_day := n_day_of_month_card_le &
  [ STEM < "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

six_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits6ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

six_day_num := n_day_of_month_card_le &
  [ STEM < "6" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

sixth_day_num := n_day_of_month_le &
  [ STEM < "6th" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

sixty_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "sixty" >,
    SYNSEM.LKEYS.KEYREL.CARG "60" ].

sixty := adj_bare_unspecified_card_two_le & 
  [ STEM < "sixty" >,
    SYNSEM.LKEYS.KEYREL.CARG "60" ].

ski_v1 := v_unerg_le &
  [ STEM < "ski" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ski_v_rel" ].

skip_v1 := v_np_trans_le &
  [ STEM < "skip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_skip_rel" ].

skip_over_v1 := v_empty_prep_intrans_le &
  [ STEM < "skip" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_skip_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

sleep_v1 := v_unerg_le &
  [ STEM < "sleep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sleep_rel" ].

sleep_in_v1 := v_particle_le &
  [ STEM < "sleep" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sleep_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

slide_n1 := n_ppof_le &
  [ STEM < "slide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slide_n_rel" ].

slight_a1 := adj_intrans_le &
  [ STEM < "slight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slight_adj_rel" ].

slightly := adv_int_vp_le &
  [ STEM < "slightly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slightly_rel" ].

slot_n1 := n_ppof_le &
  [ STEM < "slot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slot_rel" ].

slow_a1 := adj_intrans_le &
  [ STEM < "slow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slow_rel" ].

slower_a1 := adj_comp_le &
  [ STEM < "slower" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slow_rel" ].

slow_down_v1 := v_particle_np_le &
  [ STEM < "slow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_slow_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

slowly_adv1 := adv_int_vp_le &
  [ STEM < "slowly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slowly_rel" ].

small_a1 := adj_intrans_le &
  [ STEM < "small" >,
    SYNSEM.LKEYS.KEYREL.PRED "_small_rel" ].

smaller_a1 := adj_comp_le &
  [ STEM < "smaller" >,
    SYNSEM.LKEYS.KEYREL.PRED "_small_rel" ].

smallest_a1 := adj_superl_le &
  [ STEM < "smallest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_small_rel" ].

smallest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "smallest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_small_rel" ].

smile_n1 := n_ppof_le &
  [ STEM < "smile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smile_n_rel" ].

smile_v1 := v_unerg_le &
  [ STEM < "smile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smile_v_rel" ].

Smith := n_proper_le &
  [ STEM < "smith" >,
    SYNSEM.LKEYS.KEYREL.CARG "smith" ].

smoothly_adv1 := adv_int_vp_le &
  [ STEM < "smoothly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smoothly_rel" ].

snack_n1 := n_ppof_le &
  [ STEM < "snack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_snack_rel" ].

so_deg := adv_degree_spec_v_le &
  [ STEM < "so" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_rel" ].

so_conj := conj_complex_so_le &
  [ STEM < "so" > ].

so_that := p_subconj_le &
  [ STEM < "so", "that" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_that_rel" ].

so_that_dadv := p_subconj_dadv_le &
  [ STEM < "so" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_that_rel" ].

so_far_adv1 := adv_int_vp_le &
  [ STEM < "so", "far" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_far_rel" ].

so_to_speak_adv1 := adv_vp_post_le &
  [ STEM < "so", "to", "speak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_to_speak_rel" ].

social_a1 := adj_intrans_le &
  [ STEM < "social" >,
    SYNSEM.LKEYS.KEYREL.PRED "_social_rel" ].

software_n1 := n_mass_le &
  [ STEM < "software" >,
    SYNSEM.LKEYS.KEYREL.PRED "_software_rel" ].

solely_adv1 := adv_vp_pre_le &
  [ STEM < "solely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solely_rel" ].

solely_adv2 := adv_s_pre_le &
  [ STEM < "solely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solely_rel" ].

solid_a1 := adj_intrans_le &
  [ STEM < "solid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solid_j_rel" ].

solid_prtcl := adj_prtcl_le &
  [ STEM < "solid" >,
    SYNSEM.LKEYS.KEYREL.PRED _solid_j_sel_rel ].

solidly := adv_int_vp_le &
  [ STEM < "solidly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solidly_rel" ].

solution_n1 := n_ppof_le &
  [ STEM < "solution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solution_rel" ].

solve_v1 := v_np_trans_le &
  [ STEM < "solve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solve_rel" ].

some := det_part_div_le &
  [ STEM < "some" >,
    SYNSEM.LKEYS.KEYREL.PRED _some_q_rel ].

some_indiv := det_nondiv_le &
  [ STEM < "some" >,
    SYNSEM.LKEYS.KEYREL.PRED _some_q_indiv_rel ].

somebody := n_generic_pro_le &
  [ STEM < "somebody" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

somehow_adv1 := adv_vp_le &
  [ STEM < "somehow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_somehow_rel" ].

someone := n_generic_pro_le &
  [ STEM < "someone" >,
    SYNSEM.LKEYS [ KEYREL.PRED person_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

something := n_generic_pro_le &
  [ STEM < "something" >,
    SYNSEM.LKEYS [ KEYREL.PRED thing_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

sometimes_adv1 := adv_int_vp_le &
  [ STEM < "sometimes" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sometimes_rel" ].

somewhat_adv := adv_degree_spec_v_le &
  [ STEM < "somewhat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_somewhat_adv_rel" ].

son_n1 := n_ppof_le &
  [ STEM < "son" >,
    SYNSEM.LKEYS.KEYREL.PRED "_son_rel" ].

sonorous_a1 := adj_intrans_le &
  [ STEM < "sonorous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sonorous_rel" ].

soon_adv1 := adv_int_vp_le &
  [ STEM < "soon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soon_rel" ].

sorry_a1 := adj_trans_le &
  [ STEM < "sorry" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sorry_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

sorry_a2 := adj_reg_that_cp_le &
  [ STEM < "sorry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sorry_rel" ].

sorry_a3 := adj_reg_equi_le &
  [ STEM < "sorry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sorry_rel" ].

sort_n1 := n_ppcomp_le &
  [ STEM < "sort" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sort_n_rel",
             LKEYS.--COMPKEY _of_p_nbar_rel ] ].

sorry_root_pre := adv_disc_preh_le &
  [ STEM < "sorry" >,
    SYNSEM.LKEYS.KEYREL.CARG "sorry" ].

sorry_root_post := adv_disc_posth_le &
  [ STEM < "sorry" >,
    SYNSEM.LKEYS.KEYREL.CARG "sorry" ].

sort_v1 := v_np_trans_le &
  [ STEM < "sort" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sort_v_rel" ].

sort_out_v1 := v_particle_np_le &
  [ STEM < "sort" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sort_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

sort_of_deg := adv_degree_spec_v_le &
  [ STEM < "sort", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sort_of_deg_rel" ].

sound_n1 := n_mass_count_ppof_le &
  [ STEM < "sound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sound_rel" ].

sound_v1 := v_prdp_pp_ssr_adj_le &
  [ STEM < "sound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sound_seem_rel" ].

sound_v2 := v_prdp_pp_ssr_prep_le &
  [ STEM < "sound" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sound_seem_rel",
             LKEYS.--COMPKEY _like_p_rel ] ].

sound_v3 := v_expl_it_subj_like_le &
  [ STEM < "sound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sound_seem_rel" ].

source_n1 := n_ppof_le &
  [ STEM < "source" >,
    SYNSEM.LKEYS.KEYREL.PRED "_source_rel" ].

space_n1 := n_mass_count_ppof_le &
  [ STEM < "space" >,
    SYNSEM.LKEYS.KEYREL.PRED "_space_rel" ].

spare_a1 := adj_intrans_le &
  [ STEM < "spare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spare_adj_rel" ].

speak_v1 := v_np*_trans_le &
  [ STEM < "speak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_speak_rel" ].

speak_v2 := v_np*_prep_trans_le &
  [ STEM < "speak" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_speak_rel",
             LKEYS.--OCOMPKEY _to_p_rel ] ].

speak_v3 := v_double_pp_le &
  [ STEM < "speak" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_speak_rel",
             LKEYS [ --COMPKEY _to_p_rel,
                     --OCOMPKEY _about_p_rel ] ] ].

special_a1 := adj_intrans_le &
  [ STEM < "special" >,
    SYNSEM.LKEYS.KEYREL.PRED "_special_rel" ].

specially := adv_int_vp_le &
  [ STEM < "specially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_specially_rel" ].

specific_a1 := adj_intrans_le &
  [ STEM < "specific" >,
    SYNSEM.LKEYS.KEYREL.PRED "_specific_rel" ].

specifically_adv1 := adv_int_vp_le &
  [ STEM < "specifically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_specifically_rel" ].

spell_v1 := v_np_trans_le &
  [ STEM < "spell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spell_rel" ].

spell_out_v1 := v_particle_np_le &
  [ STEM < "spell" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_spell_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

spend_v1 := v_np_trans_le &
  [ STEM < "spend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spend_rel" ].

spend_v2 := v_np_prep_trans_le &
  [ STEM < "spend" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_spend_rel",
             LKEYS.--OCOMPKEY _on_p_rel ] ].

splendid_a1 := adj_intrans_le &
  [ STEM < "splendid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_splendid_rel" ].

splendidly := adv_int_vp_post_le &
  [ STEM < "splendidly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_splendidly_rel" ].

spontaneously_adv1 := adv_int_vp_le &
  [ STEM < "spontaneously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spontaneously_rel" ].

sports_n1 := n_mass_le &
  [ STEM < "sports" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sports_rel" ].

spread_v1 := v_np*_trans_le & 
  [ STEM < "spread" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spread_rel" ].

spread_n1 := n_ppof_le &
  [ STEM < "spread" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spread_n_rel" ].

spring_n1 := n_season_pp_le &
  [ STEM < "spring" >,
    SYNSEM.LKEYS.KEYREL.CARG "spring" ].

spring_n2 := n_season_np_le &
  [ STEM < "spring" >,
    SYNSEM.LKEYS.KEYREL.CARG "spring" ].

spring_n3 := n_intr_le &
  [ STEM < "spring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spring_n_rel" ].

spring_v1 := v_unerg_le &
  [ STEM < "spring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spring_v_rel" ].

squeeze_v1 := v_np_trans_le &
  [ STEM < "squeeze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_squeeze_v_rel" ].

squeeze_in_v1 := v_particle_np_le &
  [ STEM < "squeeze" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_squeeze_v_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

squeeze_in_v2 := v_particle_le &
  [ STEM < "squeeze" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_squeeze_v_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

st_nicholas_day := n_holiday_le &
  [ STEM < "st", "nicholas", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "st_nicholas_day" ].

st_nicholas_day_2 := n_holiday_le &
  [ STEM < "st", ".", "nicholas", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "st_nicholas_day" ].

staff_n1 := n_ppof_le &
  [ STEM < "staff" >,
    SYNSEM.LKEYS.KEYREL.PRED "_staff_n_rel" ].

staff_n2 := n_plur_ppcomp_le &
  [ STEM < "staff" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_staff_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

stage_n1 := n_ppof_le &
  [ STEM < "stage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stage_rel" ].

stake_n1 := n_ppof_le &
  [ STEM < "stake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stake_n_rel" ].

stand1 := v_unerg_le &
  [ STEM < "stand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stand_rel" ].

stand_up_v1 := v_particle_np_le &
  [ STEM < "stand" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stand_up_c_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

stand_up_v2 := v_particle_le &
  [ STEM < "stand" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stand_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

stand_n1 := n_ppof_le &
  [ STEM < "stand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stand_n_rel" ].

SU := n_proper_le &
  [ STEM < "stanford", "university" >,
    SYNSEM.LKEYS.KEYREL.CARG "stanford_univ" ].

star_n1 := n_ppof_le &
  [ STEM < "star" >,
    SYNSEM.LKEYS.KEYREL.PRED "_star_rel" ].

start_v1 := v_unerg_le &
  [ STEM < "start" >,
    SYNSEM.LKEYS.KEYREL.PRED "_start_rel" ].

start_v2 := v_np_trans_le &
  [ STEM < "start" >,
    SYNSEM.LKEYS.KEYREL.PRED "_start_cause_rel" ].

start_v3 := v_subj_equi_le &
  [ STEM < "start" >,
    SYNSEM.LKEYS.KEYREL.PRED "_start_to_rel" ].

start_v4 := v_subj_equi_prp_le &
  [ STEM < "start" >,
    SYNSEM.LKEYS.KEYREL.PRED "_start_to_rel" ].

start_out_v1 := v_particle_le &
  [ STEM < "start" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_start_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

start_over_v1 := v_particle_np_le &
  [ STEM < "start" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_start_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

start_with_v1 := v_prep_intrans_le &
  [ STEM < "start" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_start_rel",
             LKEYS.--COMPKEY _with_p_rel ] ].

start_n1 := n_ppof_le &
  [ STEM < "start" >,
    SYNSEM.LKEYS.KEYREL.PRED "_start_n_rel" ].

state_n1 := n_ppof_le &
  [ STEM < "state" >,
    SYNSEM.LKEYS.KEYREL.PRED "_state_n_rel" ].

state_v1 := v_np_trans_le &
  [ STEM < "state" >,
    SYNSEM.LKEYS.KEYREL.PRED "_state_v_rel" ].

state_v2 := v_cp_non_trans_le &
  [ STEM < "state" >,
    SYNSEM.LKEYS.KEYREL.PRED "_state_v_rel" ].

state_a1 := adj_intrans_le &
  [ STEM < "state" >,
    SYNSEM.LKEYS.KEYREL.PRED "_state_adj_rel" ].

statement_n1 := n_ppof_le &
  [ STEM < "statement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_statement_rel" ].

station_n1 := n_ppof_le &
  [ STEM < "station" >,
    SYNSEM.LKEYS.KEYREL.PRED "_station_n_rel" ].

stationary_a1 := adj_intrans_le &
  [ STEM < "stationary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stationary_rel" ].

stay_n1 := n_ppof_le &
  [ STEM < "stay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stay_n_rel" ].

stay_v2 := v_unerg_le &
  [ STEM < "stay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stay_rel" ].

steady_a1 := adj_intrans_le &
  [ STEM < "steady" >,
    SYNSEM.LKEYS.KEYREL.PRED "_steady_rel" ].

step_n1 := n_ppof_le &
  [ STEM < "step" >,
    SYNSEM.LKEYS.KEYREL.PRED "_step_rel" ].

step_v1 := v_prep_intrans_unsp_le &
  [ STEM < "step" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_step_v_rel",
             LKEYS.--COMPKEY dir_rel ] ].

stern_a1 := adj_intrans_le &
  [ STEM < "stern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stern_rel" ].

stick_v1 := v_empty_prep_intrans_le &
  [ STEM < "stick" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stick_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

stick_v2 := v_np_prep_trans_dors_le &
  [ STEM < "stick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stick_v_rel" ].

still_adv1 := adv_int_vp_aux_le &
  [ STEM < "still" >,
    SYNSEM.LKEYS.KEYREL.PRED "_still_rel" ].

still_adv2 := adv_s_pre_le &
  [ STEM < "still" >,
    SYNSEM.LKEYS.KEYREL.PRED "_still_rel" ].

Stockholm_n1 := n_proper_le &
  [ STEM < "stockholm" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stockholm" ].

stop_v1 := v_unerg_le &
  [ STEM < "stop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stop_v_rel" ].

stop_v2 := v_np_trans_le &
  [ STEM < "stop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stop_rel" ].

stop-prd := v_subj_equi_prp_le &
  [ STEM < "stop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stop_prd_rel" ].

stop_by_v1 := v_particle_le &
  [ STEM < "stop" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stop_by_rel",
             LKEYS.--COMPKEY _by_p_sel_rel ] ].

story_n1 := n_ppof_le &
  [ STEM < "story" >,
    SYNSEM.LKEYS.KEYREL.PRED "_story_rel" ].

straight_a1 := adj_intrans_le &
  [ STEM < "straight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_straight_rel" ].

straight_deg := adv_degree_spec_jov_le &
  [ STEM < "straight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_straight_deg_rel" ].

straight_m_deg := adv_degree_spec_m_le &
  [ STEM < "straight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_straight_m_deg_rel" ].

straightforward_a1 := adj_intrans_le &
  [ STEM < "straightforward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_straightforward_rel" ].

strange_a1 := adj_intrans_le &
  [ STEM < "strange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strange_rel" ].

strangely := adv_int_vp_le &
  [ STEM < "strangely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strangely_rel" ].

Strassburg_n1 := n_proper_le &
  [ STEM < "strassburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Strassburg" ].

strategy_n1 := n_ppof_le &
  [ STEM < "strategy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strategy_rel" ].

street_n1 := n_ppof_le &
  [ STEM < "street" >,
    SYNSEM.LKEYS.KEYREL.PRED "_street_rel" ].

strength_n1 := n_mass_count_le &
  [ STEM < "strength" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strength_rel" ].

stress_n1 := n_mass_count_le &
  [ STEM < "stress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stress_rel" ].

stress_v1 := v_np_trans_le &
  [ STEM < "stress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stress_v_rel" ].

stress_v2 := v_cp_prop_non_trans_le &
  [ STEM < "stress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stress_v_rel" ].

stressful_a1 := adj_intrans_le &
  [ STEM < "stressful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stressful_rel" ].

stressfully := adv_int_vp_le &
  [ STEM < "stressfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stressfully_rel" ].

stretch_n1 := n_ppof_le &
  [ STEM < "stretch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stretch_n_rel" ].

stretch_v1 := v_np*_trans_le &
  [ STEM < "stretch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stretch_v_rel" ].

strict_a1 := adj_intrans_le &
  [ STEM < "strict" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strict_rel" ].

strictly_adv1 := adv_vp_pre_le &
  [ STEM < "strictly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strictly_rel" ].

strictly_adv2 := adv_s_pre_le &
  [ STEM < "strictly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strictly_rel" ].

strictly_speaking_adv1 := adv_vp_post_le &
  [ STEM < "strictly", "speaking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strictly_speaking_rel" ].

strictly_speaking_adv2 := adv_s_pre_le &
  [ STEM < "strictly", "speaking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strictly_speaking_rel" ].

strike_v1 := v_np_obj_comp_le &
  [ STEM < "strike" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_strike_v_rel",
             LKEYS.--OCOMPKEY _as_p_sel_rel ] ].

strike_v2 := v_np_trans_le &
  [ STEM < "strike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strike_v_rel" ].

strong_a1 := adj_intrans_le &
  [ STEM < "strong" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strong_rel" ].

strongly_adv1 := adv_int_vp_le &
  [ STEM < "strongly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strongly_rel" ].

structure_n1 := n_ppof_le &
  [ STEM < "structure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_structure_n_rel" ].

structure_v1 := v_np_trans_le &
  [ STEM < "structure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_structure_v_rel" ].

stuck_a1 := adj_intrans_le &
  [ STEM < "stuck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stuck_rel" ].

student_n1 := n_ppof_le &
  [ STEM < "student" >,
    SYNSEM.LKEYS.KEYREL.PRED "_student_rel" ].

study_n1 := n_ppof_le &
  [ STEM < "study" >,
    SYNSEM.LKEYS.KEYREL.PRED "_study_n_rel" ].

study_v1 := v_np*_trans_le &
  [ STEM < "study" >,
    SYNSEM.LKEYS.KEYREL.PRED "_study_v_rel" ].

stuff_n1 := n_mass_le &
  [ STEM < "stuff" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stuff_n_rel" ].

stumble_v1 := v_unerg_le &
  [ STEM < "stumble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stumble_rel" ].

stupid_a1 := adj_intrans_le &
  [ STEM < "stupid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stupid_rel" ].

stupidly := adv_int_vp_le &
  [ STEM < "stupidly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stupidly_rel" ].

Stuttgart_n1 := n_proper_le &
  [ STEM < "stuttgart" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stuttgart" ].

style_n1 := n_mass_count_le &
  [ STEM < "style" >,
    SYNSEM.LKEYS.KEYREL.PRED "_style_n_rel" ].

subject_n1 := n_ppof_le &
  [ STEM < "subject" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subject_rel" ].

submission_n1 := n_intr_le &
  [ STEM < "submission" >,
    SYNSEM.LKEYS.KEYREL.PRED "_submission_rel" ].

submit_v1 := v_np_trans_le &
  [ STEM < "submit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_submit_rel" ].

subsequent_a1 := adj_intrans_le &
  [ STEM < "subsequent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subsequent_rel" ].

subway_n2 := n_ppof_le &
  [ STEM < "subway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subway_rel" ].

succeed_v2 := v_empty_prep_intrans_le &
  [ STEM < "succeed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_succeed_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

succeed_v1 := v_unerg_le &
  [ STEM < "succeed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_succeed_rel" ].

success_n1 := n_mass_count_le &
  [ STEM < "success" >,
    SYNSEM.LKEYS.KEYREL.PRED "_success_rel" ].

successful_a1 := adj_intrans_le &
  [ STEM < "successful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_successful_rel" ].

succession_n1 := n_ppof_le &
  [ STEM < "succession" >,
    SYNSEM.LKEYS.KEYREL.PRED "_succession_rel" ].

successive_a1 := adj_intrans_le &
  [ STEM < "successive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_successive_rel" ].

successively := adv_int_vp_le &
  [ STEM < "successively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_successively_rel" ].

such_deg := adv_degree_spec_v_le &
  [ STEM < "such" >,
    SYNSEM.LKEYS.KEYREL.PRED "_such_deg_rel" ].

such := det_part_pl_mass_unsp_le &
  [ STEM < "such" >,
    SYNSEM.LKEYS.KEYREL.PRED _such_q_rel ].

such_as_p1 := p_subconj_le &
  [ STEM < "such", "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_such_as_h_rel" ].

such_as_p2 := p_reg_le &
  [ STEM < "such", "as" >,
    SYNSEM.LKEYS.KEYREL.PRED _such_as_rel ].

such_that := p_subconj_le &
  [ STEM < "such", "that" >,
    SYNSEM.LKEYS.KEYREL.PRED "_such_that_rel" ].

suck_v1 := v_unacc_le &
  [ STEM < "suck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suck_v_rel" ].

suck_v2 := v_np_trans_le &
  [ STEM < "suck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suck_v2_rel" ].

sucker_n1 := n_ppcomp_le &
  [ STEM < "sucker" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sucker_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

sudden_a1 := adj_intrans_le &
  [ STEM < "sudden" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sudden_rel" ].

suddenly_adv1 := adv_int_vp_le &
  [ STEM < "suddenly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suddenly_rel" ].

Sudniz_n1 := n_proper_le &
  [ STEM < "sudniz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sudniz" ].

suffice_v1 := v_unerg_le &
  [ STEM < "suffice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suffice_rel" ].

suffice_v2 := v_atrans_inf_le &
  [ STEM < "suffice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suffice_rel" ].

sufficient_a1 := adj_trans_le &
  [ STEM < "sufficient" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sufficient_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

sufficiently_adv := adv_degree_spec_v_le &
  [ STEM < "sufficiently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sufficiently_deg_rel" ].

sufficiently := adv_int_vp_post_le &
  [ STEM < "sufficiently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sufficiently_for_rel" ].

suggest_v1 := v_to*_trans_le &
  [ STEM < "suggest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suggest_rel" ].

suggest_v2 := v_prep_intrans_event_le &
  [ STEM < "suggest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_suggest_rel",
             LKEYS.--COMPKEY loc_abstr_rel ] ].

suggest_v3 := v_pp_cp_le &
  [ STEM < "suggest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_suggest_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

suggestion_n1 := n_ppof_le &
  [ STEM < "suggestion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suggestion_rel" ].

suit_v1 := v_np_trans_le &
  [ STEM < "suit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suit_rel" ].

suitability_n1 := n_ppof_le &
  [ STEM < "suitability" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suitability_rel" ].

suitable_a1 := adj_intrans_le &
  [ STEM < "suitable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suitable_rel" ].

suitably := adv_int_vp_le &
  [ STEM < "suitably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suitably_rel" ].

sum_n1 := n_ppof_le &
  [ STEM < "sum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sum_rel" ].

sum_up_v1 := v_particle_np_le &
  [ STEM < "sum" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sum_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

sum_up_v2 := v_particle_le &
  [ STEM < "sum" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sum_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

summarize_v1 := v_np*_trans_le &
  [ STEM < "summarize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_summarize_rel" ].

summer_n1 := n_season_pp_le &
  [ STEM < "summer" >,
    SYNSEM.LKEYS.KEYREL.CARG "summer" ].

summer_n2 := n_season_np_le &
  [ STEM < "summer" >,
    SYNSEM.LKEYS.KEYREL.CARG "summer" ].

summon_v1 := v_to*_trans_le &
  [ STEM < "summon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_summon_rel" ].

sunday_n1 := n_day_of_week_le &
  [ STEM < "sunday" >,
    SYNSEM.LKEYS.KEYREL.CARG "sun" ].

sunday_n2 := n_day_of_week_le &
  [ STEM < "sun" >,
    SYNSEM.LKEYS.KEYREL.CARG "sun" ].

sunny_a1 := adj_intrans_le &
  [ STEM < "sunny" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_rel" ].

sunny_a2 := adj_atrans_le &
  [ STEM < "sunny" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_expl_rel" ].

super_a1 := adj_intrans_le &
  [ STEM < "super" >,
    SYNSEM.LKEYS.KEYREL.PRED "_super_rel" ].

superbly_adv1 := adv_vp_post_le &
  [ STEM < "superbly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_superbly_rel" ].

superior_a1 := adj_intrans_le &
  [ STEM < "superior" >,
    SYNSEM.LKEYS.KEYREL.PRED "_superior_rel" ].

superstitious_a1 := adj_intrans_le &
  [ STEM < "superstitious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_superstitious_rel" ].

superstitiously := adv_int_vp_le &
  [ STEM < "superstitiously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_superstitiously_rel" ].

supper_n1 := n_ppof_le &
  [ STEM < "supper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supper_rel" ].

supper_time_n1 := n_mealtime_le &
  [ STEM < "supper" >,
    SYNSEM.LKEYS.KEYREL.PRED _supper_time_rel ].

suppose_v1 := v_cp_prop*_non_trans_le &
  [ STEM < "suppose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suppose_rel" ].

suppose_v2 := v_cp_prop_raise_key_le &
  [ STEM < "suppose" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED "_suppose_rel" ].

supposed_a1 := adj_attr_intrans_le &
  [ STEM < "supposed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supposed_rel" ].

supposed_a2 := adj_reg_equi_nomod_le &
  [ STEM < "supposed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supposed_rel" ].

sure_a1 := adj_reg_cp_le &
  [ STEM < "sure" >,
    SYNSEM.LKEYS.KEYREL.PRED _sure_j_rel ].

sure_a2 := adj_trans_le &
  [ STEM < "sure" >,
    SYNSEM [ LKEYS.KEYREL.PRED _sure_j_rel,
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

sure_a3 := adj_reg_equi_le &
  [ STEM < "sure" >,
    SYNSEM.LKEYS.KEYREL.PRED _sure_j_rel ].

sure_a4 := adj_intrans_le &
  [ STEM < "sure" >,
    SYNSEM.LKEYS.KEYREL.PRED _sure_j_rel ].

sure_root_pre := adv_disc_preh_le &
  [ STEM < "sure" >,
    SYNSEM.LKEYS.KEYREL.CARG "sure" ].

sure_root_post := adv_disc_posth_le &
  [ STEM < "sure" >,
    SYNSEM.LKEYS.KEYREL.CARG "sure" ].

sure_adv1 := adv_vp_pre_le &
  [ STEM < "sure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sure_adv_rel" ].

surely_adv1 := adv_int_vp_le &
  [ STEM < "surely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surely_rel" ].

surprise_n1 := n_ppof_le &
  [ STEM < "surprise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surprise_n_rel" ].

surprise_v1 := v_np_trans_le &
  [ STEM < "surprise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surprise_v_rel" ].

suspend_v1 := v_np_trans_le &
  [ STEM < "suspend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suspend_rel" ].

swell_a1 := adj_intrans_le &
  [ STEM < "swell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swell_rel" ].

swim_v1 := v_unerg_le &
  [ STEM < "swim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swim_rel" ].

swing_v1 := v_unacc_le &
  [ STEM < "swing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swing_v_rel" ].

swing_v2 := v_np_trans_le &
  [ STEM < "swing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swing_cause_v_rel" ].

swing_n1 := n_ppof_le &
  [ STEM < "swing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swing_n_rel" ].

switch_n1 := n_ppof_le &
  [ STEM < "switch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_switch_n_rel" ].

switch_v1 := v_unacc_le &
  [ STEM < "switch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_switch_v_rel" ].

switch_v2 := v_np_trans_le &
  [ STEM < "switch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_switch_v2_rel" ].

switch_v3 := v_np*_trans_double_pp_to*_le &
  [ STEM < "switch" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_switch_v2_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

sympathetic_a1 := adj_intrans_le &
  [ STEM < "sympathetic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sympathetic_rel" ].

system_n1 := n_ppof_le &
  [ STEM < "system" >,
    SYNSEM.LKEYS.KEYREL.PRED "_system_rel" ].

systematically_adv1 := adv_int_vp_le &
  [ STEM < "systematically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_systematically_rel" ].

table_n1 := n_ppof_le &
  [ STEM < "table" >,
    SYNSEM.LKEYS.KEYREL.PRED "_table_n_rel" ].

tackle_v1 := v_np_trans_le &
  [ STEM < "tackle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tackle_rel" ].

Tai_Pen_n1 := n_proper_le &
  [ STEM < "tai", "pen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tai_Pen" ].

take_adv_v1 := v_empty_prep_trans_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_adv_rel",
             LKEYS [ --COMPKEY _advantage_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

take_away_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_away_rel",
             LKEYS.--COMPKEY _away_p_sel_rel ] ].

take_care_v1 := v_empty_prep_nbar_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_v_rel",
             LKEYS [ --COMPKEY _care_n_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

take_charge_of_v1 := v_empty_prep_nbar_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_v_rel",
             LKEYS [ --COMPKEY _charge_n_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

take_down_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

take_hold_v1 := v_empty_prep_trans_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_hold_rel",
             LKEYS [ --COMPKEY _hold_n_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

take_into_v1 := v_empty_prep_trans_idiom_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_into_rel",
             LKEYS.--OCOMPKEY _into_p_sel_rel ] ].

take_off_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

take_out_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

take_out_v2 := v_particle_np_pp_to_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_out_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

take_over_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

take_place_v1 := v_np_non_trans_unacc_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_place_v_rel",
             LKEYS.--COMPKEY _i_place_rel ] ].

take_up_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

take_v1 := v_to*_trans_le &
  [ STEM < "take" >,
    SYNSEM.LKEYS.KEYREL.PRED "_take_v_rel" ].

take_part_in_v1 := v_np_prep_trans_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_part_in_rel",
             LKEYS [ --COMPKEY _part_sel_rel,
                     --OCOMPKEY _in_p_rel ] ] ].

talent_n1 := n_ppof_le &
  [ STEM < "talent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_talent_rel" ].

talk_n1 := n_ppof_le &
  [ STEM < "talk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_talk_n_rel" ].

talk_over_v1 := v_particle_np_le &
  [ STEM < "talk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_talk_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

talk_v1 := v_double_pp_le &
  [ STEM < "talk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_talk_about_rel",
             LKEYS [ --COMPKEY _to_p_rel,
                     --OCOMPKEY _about_p_rel ] ] ].

talk_v2 := v_prep_intrans_le &
  [ STEM < "talk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_talk_about_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

talk_v3 := v_prep_intrans_le &
  [ STEM < "talk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_talk_about_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

talk_v4 := v_unerg_le &
  [ STEM < "talk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_talk_v_rel" ].

tall_a1 := adj_intrans_le &
  [ STEM < "tall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tall_rel" ].

task_n1 := n_ppof_le &
  [ STEM < "task" >,
    SYNSEM.LKEYS.KEYREL.PRED "_task_rel" ].

taste_v1 := v_np_trans_le &
  [ STEM < "taste" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taste_v_rel" ].

taxi_n1 := n_intr_le &
  [ STEM < "taxi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taxi_n_rel" ].

taxi_v1 := v_unerg_le &
  [ STEM < "taxi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taxi_v_rel" ].

tea_n1 := n_mass_count_le &
  [ STEM < "tea" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tea_rel" ].

tea_time_n1 := n_mealtime_le &
  [ STEM < "tea", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED _tea_time_rel ].

teach_v1 := v_np*_trans_le &
  [ STEM < "teach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_teach_rel" ].

teacher_n1 := n_ppof_le &
  [ STEM < "teacher" >,
    SYNSEM.LKEYS.KEYREL.PRED "_teacher_rel" ].

team_n1 := n_ppof_le &
  [ STEM < "team" >,
    SYNSEM.LKEYS.KEYREL.PRED "_team_rel" ].

tear_v1 := v_np_trans_le &
  [ STEM < "tear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tear_cause_v_rel" ].

tear_v2 := v_unacc_le &
  [ STEM < "tear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tear_v_rel" ].

technical_a1 := adj_intrans_le &
  [ STEM < "technical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_technical_rel" ].

technicality_n1 := n_ppof_le &
  [ STEM < "technicality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_technicality_rel" ].

technically := adv_int_vp_le &
  [ STEM < "technically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_technically_rel" ].

technique_n1 := n_ppof_le &
  [ STEM < "technique" >,
    SYNSEM.LKEYS.KEYREL.PRED "_technique_rel" ].

technology_n1 := n_mass_count_le &
  [ STEM < "technology" >,
    SYNSEM.LKEYS.KEYREL.PRED "_technology_rel" ].

telephone_n1 := n_intr_le &
  [ STEM < "telephone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_telephone_rel" ].

telephone_v1 := v_np*_trans_le &
  [ STEM < "telephone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_telephone_v_rel" ].

tell_v1 := v_ditrans_only_le &
  [ STEM < "tell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tell_rel" ].

tell_v2 := v_np_trans_cp_fin_or_inf_le &
  [ STEM < "tell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tell_rel" ].

tell_v3 := v_obj_equi_le &
  [ STEM < "tell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tell_rel" ].

tell_v4 := v_np_trans_le &
  [ STEM < "tell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tell_rel" ].

tell_v5 := v_cp_fin_inf_non_trans_le &
  [ STEM < "tell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tell_rel" ].

tell_about_v1 := v_empty_prep_trans_le &
  [ STEM < "tell" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tell_about_rel",
             LKEYS.--OCOMPKEY _about_p_sel_rel ] ].

tempt_v1 := v_np_trans_le &
  [ STEM < "tempt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tempt_rel" ].

ten := adj_bare_unspecified_card_two_le & 
  [ STEM < "ten" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

ten_hour := n_hour_le &
  [ STEM < "ten" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

tend_v1 := v_ssr_le &
  [ STEM < "tend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tend_rel" ].

tennis_n1 := n_mass_le &
  [ STEM < "tennis" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tennis_rel" ].

tentative_a1 := adj_intrans_le &
  [ STEM < "tentative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tentative_rel" ].

tentatively := adv_int_vp_le &
  [ STEM < "tentatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tentatively_rel" ].

tenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "tenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

tenth_day := n_day_of_month_le &
  [ STEM < "tenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

ten_day := n_day_of_month_card_le &
  [ STEM < "ten" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

ten_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits10ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

ten_day_num := n_day_of_month_card_le &
  [ STEM < "10" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

tenth_day_num := n_day_of_month_le &
  [ STEM < "10th" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

term_n1 := n_ppof_le &
  [ STEM < "term" >,
    SYNSEM.LKEYS.KEYREL.PRED "_term_rel" ].

terminate_v1 := v_np_trans_le &
  [ STEM < "terminate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terminate_v2_rel" ].

terminate_v2 := v_unacc_le &
  [ STEM < "terminate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terminate_v_rel" ].

terrible_a1 := adj_intrans_le &
  [ STEM < "terrible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terrible_rel" ].

terribly_deg := adv_degree_spec_v_le &
  [ STEM < "terribly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terribly_deg_rel" ].

terribly := adv_int_vp_post_le &
  [ STEM < "terribly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terribly_rel" ].

terrific_a1 := adj_intrans_le &
  [ STEM < "terrific" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terrific_rel" ].

terror_n1 := n_mass_count_le &
  [ STEM < "terror" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terror_rel" ].

test_n1 := n_ppof_le &
  [ STEM < "test" >,
    SYNSEM.LKEYS.KEYREL.PRED "_test_n_rel" ].

text_n1 := n_ppof_le &
  [ STEM < "text" >,
    SYNSEM.LKEYS.KEYREL.PRED "_text_rel" ].

Thai_n1 := n_proper_le &
  [ STEM < "thai" >,
    SYNSEM.LKEYS.KEYREL.CARG "Thai" ].

thank_v1 := v_np_trans_le &
  [ STEM < "thank" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thank_rel" ].

thank_you_for_v1 := v_empty_prep*_trans_imp_le &
  [ STEM < "thank" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_thank_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

thanks_v1 := v_unerg_imp_le &
  [ STEM < "thanks" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thank_rel" ].

thanks_n1 := n_plur_le &
  [ STEM < "thanks" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thanks_rel" ].

thanks_much_v1 := v_unerg_imp_le &
  [ STEM < "thanks", "much" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thank_rel" ].

thanks_root_pre := adv_disc_preh_le &
  [ STEM < "thanks" >,
    SYNSEM.LKEYS.KEYREL.CARG "thanks" ].

thanks_root_post := adv_disc_posth_le &
  [ STEM < "thanks" >,
    SYNSEM.LKEYS.KEYREL.CARG "thanks" ].

thanks_abb_v1 := v_unerg_imp_le &
  [ STEM < "thx" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thank_rel" ].

thanks_abb_root_pre := adv_disc_preh_le &
  [ STEM < "thx" >,
    SYNSEM.LKEYS.KEYREL.CARG "thanks" ].

thanks_abb_root_post := adv_disc_posth_le &
  [ STEM < "thx" >,
    SYNSEM.LKEYS.KEYREL.CARG "thanks" ].

cheers_v1 := v_unerg_imp_le &
  [ STEM < "cheers" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheers_rel" ].

that_det := det_sm_le &
  [ STEM < "that" >,
    SYNSEM.LKEYS.KEYREL.PRED _that_q_dem_rel ].

that_c := comp_that_le &
  [ STEM < "that" > ].

that_c_subj := comp_that_subj_le &
  [ STEM < "that" > ].

that_is_root_pre := adv_disc_preh_le &
  [ STEM < "that", "is" >,
    SYNSEM.LKEYS.KEYREL.CARG "that_is" ].

that_is_root_post := adv_disc_posth_le &
  [ STEM < "that", "is" >,
    SYNSEM.LKEYS.KEYREL.CARG "that_is" ].

that_deix := n_deictic_pro_sg_le &
  [ STEM < "that" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _that_q_dem_rel ].

that_r := n_rel_pro_nonwh_le &
  [ STEM < "that" > ].

the_1 := det_the_le &
  [ STEM < "the" >,
    SYNSEM.LKEYS.KEYREL.PRED _the_q_rel ].

german_unity_day := n_holiday_le &
  [ STEM < "day", "of", "german", "unity" >,
    SYNSEM.LKEYS.KEYREL.CARG "day_of_german_unity" ].

volkstrauertag := n_holiday_le &
  [ STEM < "the", "day", "of", "prayer_and_repentance" >,
    SYNSEM.LKEYS.KEYREL.CARG "day_of_prayer_and_repentance" ].

media_n1 := n_plur_le &
  [ STEM < "media" >,
    SYNSEM.LKEYS.KEYREL.PRED "_media_rel" ].

the_same_a1 := adj_irreg_pred_intrans_le &
  [ STEM < "the", "same" >,
    SYNSEM.LKEYS.KEYREL.PRED "_same_rel" ].

theater_n1 := n_ppof_le &
  [ STEM < "theater" >,
    SYNSEM.LKEYS.KEYREL.PRED "_theater_rel" ].

their := det_poss_their_le &
  [ STEM < "their" > ].

theirs := n_poss_pro_theirs_le &
  [ STEM < "theirs" > ].

them := n_pers_pro_them_le &
  [ STEM < "them" > ].

theme_n1 := n_ppof_le &
  [ STEM < "theme" >,
    SYNSEM.LKEYS.KEYREL.PRED "_theme_rel" ].

themselves := n_refl_pro_themselves_le &
  [ STEM < "themselves" > ].

then_adv := n_adv_nospr_le &
  [ STEM < "then" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _then_p_temp_rel ] ].

then_disc_pre := adv_disc_preh_le &
  [ STEM < "then" >,
    SYNSEM.LKEYS.KEYREL.CARG "then" ].

then_disc_post := adv_disc_posth_le &
  [ STEM < "then" >,
    SYNSEM.LKEYS.KEYREL.CARG "then" ].

theoretical_a1 := adj_intrans_le &
  [ STEM < "theoretical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_theoretical_rel" ].

theoretically_adv1 := adv_int_vp_le &
  [ STEM < "theoretically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_theoretically_rel" ].

there_nom := n_adv_acc_le &
  [ STEM < "there" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _there_j_rel ] ].

there_expl := n_expl_there_le &
  [ STEM < "there" > ].

thereabouts_adv1 := pp_le &
  [ STEM < "thereabouts" >,
    SYNSEM.LKEYS.KEYREL.PRED _thereabouts_rel ].

thereby_adv1 := adv_vp_pre_le &
  [ STEM < "thereby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thereby_rel" ].

thereby_adv2 := adv_s_pre_le &
  [ STEM < "thereby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thereby_rel" ].

therefore_root_pre := adv_disc_preh_le &
  [ STEM < "therefore" >,
    SYNSEM.LKEYS.KEYREL.CARG "therefore" ].

therefore_root_post := adv_disc_posth_le &
  [ STEM < "therefore" >,
    SYNSEM.LKEYS.KEYREL.CARG "therefore" ].

therefore_subord := p_subconj_le &
  [ STEM < "therefore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_therefore_rel" ].

these_det := det_pl_le &
  [ STEM < "these" >,
    SYNSEM.LKEYS.KEYREL.PRED _these_q_dem_rel ].

these_deix := n_deictic_pro_pl_le &
  [ STEM < "these" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _these_q_dem_rel ].

they := n_pers_pro_they_le &
  [ STEM < "they" > ].

they_sg := n_pers_pro_noagr_le &
  [ STEM < "they" > ].

thing_n1 := n_ppof_unsp_le &
  [ STEM < "thing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thing_rel" ].

thing_n2 := n_ppcomp_oblig_le &
  [ STEM < "thing" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_thing_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

think_about := v_empty_prep_trans*_le &
  [ STEM < "think" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_think_about_rel",
             LKEYS.--OCOMPKEY _about_p_sel_rel ] ].

think_of := v_empty_prep_trans*_le &
  [ STEM < "think" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_think_of_rel",
             LKEYS.--OCOMPKEY _of_p_sel_rel ] ].

think_through_v1 := v_particle_np_le &
  [ STEM < "think" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_think_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

think1 := v_cp_prop_non_trans_le &
  [ STEM < "think" >,
    SYNSEM.LKEYS.KEYREL.PRED "_think_rel" ].

think2 := v_prep_intrans_event_le &
  [ STEM < "think" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_think_loc_rel",
             LKEYS.--COMPKEY loc_abstr_rel ] ].

think_v3 := v_np_non_trans_le &
  [ STEM < "think" >,
    SYNSEM.LKEYS.KEYREL.PRED "_think_rel" ].

think_v4 := v_unerg_le &
  [ STEM < "think" >,
    SYNSEM.LKEYS.KEYREL.PRED "_think_rel" ].

third := adj_bare_unspecified_ord_one_le &
  [ STEM < "third" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

third_day := n_day_of_month_le &
  [ STEM < "third" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

three_day := n_day_of_month_card_le &
  [ STEM < "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

three_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits3ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

three_day_num := n_day_of_month_card_le &
  [ STEM < "3" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

third_day_num := n_day_of_month_le &
  [ STEM < "3rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

thirteen := adj_bare_unspecified_card_two_le & 
  [ STEM < "thirteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

thirteenth := adj_bare_unspecified_ord_two_le &
  [ STEM < "thirteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

thirteenth_day := n_day_of_month_le &
  [ STEM < "thirteenth" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

thirteen_day := n_day_of_month_card_le &
  [ STEM < "thirteen" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

thirteen_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits13ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

thirteen_day_num := n_day_of_month_card_le &
  [ STEM < "13" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

thirteenth_day_num := n_day_of_month_le &
  [ STEM < "13th" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

thirtieth := adj_bare_unspecified_ord_two_le &
  [ STEM < "thirtieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirtieth_day := n_day_of_month_le &
  [ STEM < "thirtieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirty_day := n_day_of_month_card_le &
  [ STEM < "thirty" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirty_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits30ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirty_day_num := n_day_of_month_card_le &
  [ STEM < "30" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirtieth_day_num := n_day_of_month_le &
  [ STEM < "30th" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirty_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "thirty" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirty := adj_bare_unspecified_card_two_le & 
  [ STEM < "thirty" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirtyfirst_day := n_day_of_month_le &
  [ STEM < "thirty", "first" >,
    SYNSEM.LKEYS.KEYREL.CARG "31" ].

thirty_one_day := n_day_of_month_card_le &
  [ STEM < "thirty", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "31" ].

thirty_one_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits31ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "31" ].

thirty_one_day_num := n_day_of_month_card_le &
  [ STEM < "31" >,
    SYNSEM.LKEYS.KEYREL.CARG "31" ].

thirty_first_day_num := n_day_of_month_le &
  [ STEM < "31st" >,
    SYNSEM.LKEYS.KEYREL.CARG "31" ].

this_det := det_sm_le &
  [ STEM < "this" >,
    SYNSEM.LKEYS.KEYREL.PRED _this_q_dem_rel ].

this_deix := n_deictic_pro_sg_le &
  [ STEM < "this" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _this_q_dem_rel ].

thorough_a1 := adj_intrans_le &
  [ STEM < "thorough" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thorough_rel" ].

thoroughly_adv1 := adv_int_vp_le &
  [ STEM < "thoroughly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thoroughly_rel" ].

those_det := det_pl_le &
  [ STEM < "those" >,
    SYNSEM.LKEYS.KEYREL.PRED _those_q_dem_rel ].

those_deix := n_deictic_pro_pl_le &
  [ STEM < "those" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _those_q_dem_rel ].

though_root_pre := adv_disc_preh_le &
  [ STEM < "though" >,
    SYNSEM.LKEYS.KEYREL.CARG "though" ].

though_root_post := adv_disc_posth_le &
  [ STEM < "though" >,
    SYNSEM.LKEYS.KEYREL.CARG "though" ].

though_subord := p_subconj_le &
  [ STEM < "though" >,
    SYNSEM.LKEYS.KEYREL.PRED "_though_rel" ].

though := adv_vp_post_le &
  [ STEM < "though" >,
    SYNSEM.LKEYS.KEYREL.PRED "_though_scop_rel" ].

even_though_subord := p_subconj_le &
  [ STEM < "even", "though" >,
    SYNSEM.LKEYS.KEYREL.PRED "_though_rel" ].

even_if_subord := p_subconj_le &
  [ STEM < "even", "if" >,
    SYNSEM.LKEYS.KEYREL.PRED "_even_if_rel" ].

thought_n1 := n_ppof_le &
  [ STEM < "thought" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thought_rel" ].

thousand := adj_bare_specified_card_thousand_le & 
  [ STEM < "thousand" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000" ].

thousand_comps := adj_complemented_specified_card_thousand_le & 
  [ STEM < "thousand" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000" ].

three := adj_bare_unspecified_card_one_le & 
  [ STEM < "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

three_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

three_hour := n_hour_le &
  [ STEM < "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

through := p_le &
  [ STEM < "through" >,
    SYNSEM.LKEYS.KEYREL.PRED _through_p_rel ].

through_prtcl := p_prtcl_le &
  [ STEM < "through" >,
    SYNSEM.LKEYS.KEYREL.PRED _through_p_sel_rel ].

through_temp := p_nomod_le &
  [ STEM < "through" >,
    SYNSEM [ LKEYS.KEYREL.PRED _through_p_until_rel,
             LKEYS.--COMPKEY temp_abstr_rel ] ].

thru_p := p_le &
  [ STEM < "thru" >,
    SYNSEM.LKEYS.KEYREL.PRED _through_p_rel ].

throughout := p_reg_le &
  [ STEM < "throughout" >,
    SYNSEM.LKEYS.KEYREL.PRED _throughout_rel ].

throw_open_v1 := v_particle_np_le &
  [ STEM < "throw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_throw_open_rel",
             LKEYS.--COMPKEY _open_j_sel_rel ] ].

throw_v1 := v_np_trans_le &
  [ STEM < "throw" >,
    SYNSEM.LKEYS.KEYREL.PRED "_throw_rel" ].

thursday_n1 := n_day_of_week_le &
  [ STEM < "thursday" >,
    SYNSEM.LKEYS.KEYREL.CARG "thu" ].

thursday_n2 := n_day_of_week_le &
  [ STEM < "thurs" >,
    SYNSEM.LKEYS.KEYREL.CARG "thu" ].

thus_adv1 := adv_vp_pre_le &
  [ STEM < "thus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thus_rel" ].

thus_adv2 := adv_s_pre_le &
  [ STEM < "thus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thus_rel" ].

ticket_n1 := n_intr_le &
  [ STEM < "ticket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ticket_rel" ].

tie_up_v1 := v_particle_np_le &
  [ STEM < "tie" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tie_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

tie_v1 := v_np_trans_le &
  [ STEM < "tie" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tie_v_rel" ].

tight_a1 := adj_intrans_le &
  [ STEM < "tight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tight_rel" ].

tightly := adv_int_vp_le &
  [ STEM < "tightly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tightly_rel" ].

till_cp_p1 := p_subconj_le &
  [ STEM < "till" >,
    SYNSEM.LKEYS.KEYREL.PRED "_until_h_rel" ].

till_cp_p2 := p_subconj_le &
  [ STEM < "til" >,
    SYNSEM.LKEYS.KEYREL.PRED "_until_h_rel" ].

till_p1 := p_nomod_le &
  [ STEM < "till" >,
    SYNSEM.LKEYS.KEYREL.PRED _until_p_rel ].

till_p2 := p_nomod_le &
  [ STEM < "til" >,
    SYNSEM.LKEYS.KEYREL.PRED _until_p_rel ].

time_n1 := n_mass_count_time_le &
  [ STEM < "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_time_rel" ].

time_a1 := adj_atrans_pp_le &
  [ STEM < "time" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_time_expl_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

time_a2 := adj_reg_atrans_le &
  [ STEM < "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_time_expl_rel" ].

timetable_n1 := n_ppof_le &
  [ STEM < "timetable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_timetable_rel" ].

tired_a1 := adj_trans_le &
  [ STEM < "tired" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tired_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

tiresome_a1 := adj_intrans_le &
  [ STEM < "tiresome" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiresome_rel" ].

title_n1 := n_ppof_le &
  [ STEM < "title" >,
    SYNSEM.LKEYS.KEYREL.PRED "_title_n_rel" ].

to := p_no_nmod_le &
  [ STEM < "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _to_p_rel ].

to_nmod := p_nmod_no_tmod_le &
  [ STEM < "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _to_p_rel ].

to_prtcl := p_prtcl_le &
  [ STEM < "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _to_p_sel_rel ].

to_make_sure_adv1 := adv_int_vp_post_le &
  [ STEM < "to", "make", "sure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_to_make_sure_rel" ].

to_c_prop := comp_to_prop_le &
  [ STEM < "to" > ].

to_c_nonprop := comp_to_nonprop_le &
  [ STEM < "to" > ].

to_c_prop_elided := comp_to_prop_elided_le &
  [ STEM < "to" > ].

to_c_nonprop_elided := comp_to_nonprop_elided_le &
  [ STEM < "to" > ].

to_do_with := p_le &
  [ STEM < "to", "do", "with" >,
    SYNSEM.LKEYS.KEYREL.PRED _to_do_with_rel ].

to_until := p_nomod_le &
  [ STEM < "to" >,
    SYNSEM [ LKEYS.KEYREL.PRED _to_p_unsp2_rel,
             LKEYS.--COMPKEY temp_abstr_rel ] ].

to_subord := p_subconj_inf_le &
  [ STEM < "to" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_order_to_rel" ].

today_np := n_adv_tm_le &
  [ STEM < "today" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _today_j_rel ] ].

together_adv := pp_le &
  [ STEM < "together" >,
    SYNSEM.LKEYS.KEYREL.PRED _together_p_rel ].

together_prtcl := pp_prtcl_le &
  [ STEM < "together" >,
    SYNSEM.LKEYS.KEYREL.PRED _together_p_sel_rel ].

tolerable_a1 := adj_intrans_le &
  [ STEM < "tolerable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tolerable_rel" ].

tolerably_adv1 := adv_vp_pre_le &
  [ STEM < "tolerably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tolerably_rel" ].

tolerably_adv2 := adv_s_pre_le &
  [ STEM < "tolerably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tolerably_rel" ].

tomorrow_np := n_adv_tm_le &
  [ STEM < "tomorrow" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _tomorrow_j_rel ] ].

tonight_np := n_adv_tm_le &
  [ STEM < "tonight" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _tonight_j_rel ] ].

too_deg := too_degree_spec_le &
  [ STEM < "too" >,
    SYNSEM.LKEYS.KEYREL.PRED "_too_deg_rel" ].

too_deg_nc := comp_degree_spec_nc_le &
  [ STEM < "too" >,
    SYNSEM.LKEYS.KEYREL.PRED "_too_deg_rel" ].

too := adv_vp_post_le &
  [ STEM < "too" >,
    SYNSEM.LKEYS.KEYREL.PRED "_too_also_rel" ].

top_a1 := adj_intrans_le &
  [ STEM < "top" >,
    SYNSEM.LKEYS.KEYREL.PRED "_top_adj_rel" ].

top_n1 := n_ppof_le &
  [ STEM < "top" >,
    SYNSEM.LKEYS.KEYREL.PRED "_top_rel" ].

topic_n1 := n_ppof_le &
  [ STEM < "topic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_topic_rel" ].

total_a1 := adj_intrans_le &
  [ STEM < "total" >,
    SYNSEM.LKEYS.KEYREL.PRED "_total_rel" ].

totally_deg := adv_degree_spec_v_le &
  [ STEM < "totally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_totally_deg_rel" ].

totally_adv1 := adv_int_vp_le &
  [ STEM < "totally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_totally_rel" ].

touch_v1 := v_np_trans_le &
  [ STEM < "touch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_touch_v_rel" ].

touch_v2 := v_unerg_le &
  [ STEM < "touch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_touch_meet_rel" ].

tour_n1 := n_ppof_le &
  [ STEM < "tour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tour_n_rel" ].

toward := p_le &
  [ STEM < "toward" >,
    SYNSEM.LKEYS.KEYREL.PRED _toward_p_rel ].

toward_prtcl := p_prtcl_le &
  [ STEM < "toward" >,
    SYNSEM.LKEYS.KEYREL.PRED _toward_p_sel_rel ].

towards := p_le &
  [ STEM < "towards" >,
    SYNSEM.LKEYS.KEYREL.PRED _towards_p_rel ].

towards_prtcl := p_prtcl_le &
  [ STEM < "towards" >,
    SYNSEM.LKEYS.KEYREL.PRED _towards_p_sel_rel ].

town_n1 := n_mass_count_ppof_le &
  [ STEM < "town" >,
    SYNSEM.LKEYS.KEYREL.PRED "_town_rel" ].

track_n1 := n_ppof_le &
  [ STEM < "track" >,
    SYNSEM.LKEYS.KEYREL.PRED "_track_n_rel" ].

track_v1 := v_np*_trans_le &
  [ STEM < "track" >,
    SYNSEM.LKEYS.KEYREL.PRED "_track_v_rel" ].

tragic_a1 := adj_intrans_le &
  [ STEM < "tragic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tragic_rel" ].

train_n1 := n_ppof_le &
  [ STEM < "train" >,
    SYNSEM.LKEYS.KEYREL.PRED "_train_n_rel" ].

train_v1 := v_np_trans_le &
  [ STEM < "train" >,
    SYNSEM.LKEYS.KEYREL.PRED "_train_v_rel" ].

tranquil_a1 := adj_intrans_le &
  [ STEM < "tranquil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tranquil_rel" ].

transact_v1 := v_np_trans_le &
  [ STEM < "transact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transact_rel" ].

transportation_n1 := n_mass_le &
  [ STEM < "transportation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transportation_rel" ].

travel_n1 := n_mass_count_le &
  [ STEM < "travel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travel_n_rel" ].

travel_v1 := v_prep*_intrans_le &
  [ STEM < "travel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travel_v_rel" ].

tree_n1 := n_ppof_le &
  [ STEM < "tree" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tree_rel" ].

trick_n1 := n_intr_le &
  [ STEM < "trick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trick_rel" ].

trip_n1 := n_ppcomp_le &
  [ STEM < "trip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trip_rel" ].

trouble_n1 := n_mass_count_le &
  [ STEM < "trouble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trouble_rel" ].

trouble_v1 := v_np_trans_le &
  [ STEM < "trouble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trouble_v_rel" ].

troublesome_a1 := adj_intrans_le &
  [ STEM < "troublesome" >,
    SYNSEM.LKEYS.KEYREL.PRED "_troublesome_rel" ].

true_a1 := adj_intrans_le &
  [ STEM < "true" >,
    SYNSEM.LKEYS.KEYREL.PRED "_true_rel" ].

true_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "true" >,
    SYNSEM.LKEYS.KEYREL.PRED "_true_rel" ].

truly := adv_int_vp_le &
  [ STEM < "truly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_truly_rel" ].

trust_v1 := v_np_trans_le &
  [ STEM < "trust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trust_rel" ].

trust_v2 := v_cp_prop_non_trans_le &
  [ STEM < "trust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trust_rel" ].

trustworthy_a1 := adj_intrans_le &
  [ STEM < "trustworthy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trustworthy_rel" ].

truth_n1 := n_mass_le &
  [ STEM < "truth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_truth_rel" ].

try_v1 := v_np*_trans_le &
  [ STEM < "try" >,
    SYNSEM.LKEYS.KEYREL.PRED "_try_v_rel" ].

try_v2 := v_subj_equi_le &
  [ STEM < "try" >,
    SYNSEM.LKEYS.KEYREL.PRED "_try_v_rel" ].

try_out_v1 := v_particle_np_le &
  [ STEM < "try" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_try_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

try_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "try" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_try_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

tuck_v1 := v_np_prep_trans_dors_le &
  [ STEM < "tuck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tuck_rel" ].

Tuebingen_n1 := n_proper_le &
  [ STEM < "tuebingen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tuebingen" ].

tuesday_n1 := n_day_of_week_le &
  [ STEM < "tuesday" >,
    SYNSEM.LKEYS.KEYREL.CARG "tue" ].

tuesday_n2 := n_day_of_week_le &
  [ STEM < "tues" >,
    SYNSEM.LKEYS.KEYREL.CARG "tue" ].

tuition_n1 := n_mass_le &
  [ STEM < "tuition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tuition_rel" ].

turn_down_v1 := v_particle_np_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

turn_n1 := n_ppof_le &
  [ STEM < "turn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_turn_n_rel" ].

turn_off_v1 := v_particle_np_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

turn_out_v1 := v_particle_inf_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

turn_out_v2 := v_particle_prd_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

turn_v1 := v_unerg_le &
  [ STEM < "turn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_turn_v_rel" ].

turn_v2 := v_prd_ssr_adj_le &
  [ STEM < "turn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_turn_prd_rel" ].

twelfth_day := n_day_of_month_le &
  [ STEM < "twelfth" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twelve_day := n_day_of_month_card_le &
  [ STEM < "twelve" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twelve_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits12ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twelve_day_num := n_day_of_month_card_le &
  [ STEM < "12" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twelfth_day_num := n_day_of_month_le &
  [ STEM < "12th" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twelve := adj_bare_unspecified_card_two_le & 
  [ STEM < "twelve" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twelve_hour := n_hour_le &
  [ STEM < "twelve" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twentieth_day := n_day_of_month_le &
  [ STEM < "twentieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twenty_day := n_day_of_month_card_le &
  [ STEM < "twenty" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twenty_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits20ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twenty_day_num := n_day_of_month_card_le &
  [ STEM < "20" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twentieth_day_num := n_day_of_month_le &
  [ STEM < "20th" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twenty_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "twenty" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twenty := adj_bare_unspecified_card_two_le & 
  [ STEM < "twenty" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twenty_num := adj_bare_unspecified_card_two_le & 
  [ STEM < "20" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twentyeighth_day := n_day_of_month_le &
  [ STEM < "twenty", "eighth" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

twentyeighth_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "eighth" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

twentyeight_day := n_day_of_month_card_le &
  [ STEM < "twenty", "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

twentyeight_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

twentyeight_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits28ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

twentyeight_day_num := n_day_of_month_card_le &
  [ STEM < "28" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

twentyeighth_day_num := n_day_of_month_le &
  [ STEM < "28th" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

twentyfifth_day := n_day_of_month_le &
  [ STEM < "twenty", "fifth" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

twentyfifth_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "fifth" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

twentyfive_day := n_day_of_month_card_le &
  [ STEM < "twenty", "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

twentyfive_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

twentyfive_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits25ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

twentyfive_day_num := n_day_of_month_card_le &
  [ STEM < "25" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

twentyfifth_day_num := n_day_of_month_le &
  [ STEM < "25th" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

twentyfirst_day := n_day_of_month_le &
  [ STEM < "twenty", "first" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

twentyfirst_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "first" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

twenty_one_day := n_day_of_month_card_le &
  [ STEM < "twenty", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

twenty_one_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

twentyone_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits21ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

twentyone_day_num := n_day_of_month_card_le &
  [ STEM < "21" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

twentyfirst_day_num := n_day_of_month_le &
  [ STEM < "21st" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

twentyfourth_day := n_day_of_month_le &
  [ STEM < "twenty", "fourth" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

twentyfourth_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "fourth" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

twentyfour_day := n_day_of_month_card_le &
  [ STEM < "twenty", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

twentyfour_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

twentyfour_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits24ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

twentyfour_day_num := n_day_of_month_card_le &
  [ STEM < "24" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

twentyfourth_day_num := n_day_of_month_le &
  [ STEM < "24th" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

twentyninth_day := n_day_of_month_le &
  [ STEM < "twenty", "ninth" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

twentyninth_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "ninth" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

twentynine_day := n_day_of_month_card_le &
  [ STEM < "twenty", "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

twentynine_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

twentynine_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits29ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

twentynine_day_num := n_day_of_month_card_le &
  [ STEM < "29" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

twentyninth_day_num := n_day_of_month_le &
  [ STEM < "29th" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

twentysecond_day := n_day_of_month_le &
  [ STEM < "twenty", "second" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

twentysecond_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "second" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

twentytwo_day := n_day_of_month_card_le &
  [ STEM < "twenty", "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

twentytwo_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

twentytwo_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits22ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

twentytwo_day_num := n_day_of_month_card_le &
  [ STEM < "22" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

twentysecond_day_num := n_day_of_month_le &
  [ STEM < "22nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

twentyseventh_day := n_day_of_month_le &
  [ STEM < "twenty", "seventh" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

twentyseventh_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "seventh" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

twentyseven_day := n_day_of_month_card_le &
  [ STEM < "twenty", "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

twentyseven_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

twentyseven_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits27ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

twentyseven_day_num := n_day_of_month_card_le &
  [ STEM < "27" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

twentyseventh_day_num := n_day_of_month_le &
  [ STEM < "27th" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

twentysixth_day := n_day_of_month_le &
  [ STEM < "twenty", "sixth" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

twentysixth_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "sixth" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

twentysix_day := n_day_of_month_card_le &
  [ STEM < "twenty", "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

twentysix_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

twentysix_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits26ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

twentysix_day_num := n_day_of_month_card_le &
  [ STEM < "26" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

twentysixth_day_num := n_day_of_month_le &
  [ STEM < "26th" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

twentythird_day := n_day_of_month_le &
  [ STEM < "twenty", "third" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

twentythird_day_2 := n_day_of_month_le &
  [ STEM < "twenty", "-", "third" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

twentythree_day := n_day_of_month_card_le &
  [ STEM < "twenty", "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

twentythree_day_2 := n_day_of_month_card_le &
  [ STEM < "twenty", "-", "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

twentythree_day_num_ersatz := n_day_of_month_card_le &
  [ STEM < "digits23ersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

twentythree_day_num := n_day_of_month_card_le &
  [ STEM < "23" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

twentythird_day_num := n_day_of_month_le &
  [ STEM < "23rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

twice_adv1 := adv_int_vp_post_le &
  [ STEM < "twice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_twice_rel" ].

two := adj_bare_unspecified_card_one_le & 
  [ STEM < "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

two_c := adj_bare_unspecified_card_wcomps_one_le &
  [ STEM < "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

two_hour := n_hour_le &
  [ STEM < "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

two-thousand := n_year_le &
  [ STEM < "two", "thousand" >,
    SYNSEM.LKEYS.KEYREL.CARG "2000" ].

two-thousand_2 := n_year_le &
  [ STEM < "2000" >,
    SYNSEM.LKEYS.KEYREL.CARG "2000" ].

two-thousand_3 := n_year_le &
  [ STEM < "two", "thousand" >,
    SYNSEM.LKEYS.KEYREL.CARG "2000" ].

Ulf_n1 := n_proper_le &
  [ STEM < "ulf" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ulf" ].

ultimate_a1 := adj_intrans_le &
  [ STEM < "ultimate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ultimate_isect_rel" ].

umlaut_n1 := n_intr_le &
  [ STEM < "umlaut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_umlaut_rel" ].

umm_root := adv_disc_like_preh_le &
  [ STEM < "umm" >,
    SYNSEM.LKEYS.KEYREL.CARG "umm" ].

umpteen := det_pl_le &
  [ STEM < "umpteen" >,
    SYNSEM.LKEYS.KEYREL.PRED _umpteen_q_rel ].

unable_a1 := adj_attr_intrans_le &
  [ STEM < "unable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unable_rel" ].

unable_a2 := adj_reg_equi_le &
  [ STEM < "unable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unable_rel" ].

unaffected_a1 := adj_intrans_le &
  [ STEM < "unaffected" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unaffected_rel" ].

unavailable_a1 := adj_intrans_le &
  [ STEM < "unavailable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unavailable_rel" ].

unawares_a1 := adj_intrans_le &
  [ STEM < "unawares" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unawares_rel" ].

unbearable_a1 := adj_intrans_le &
  [ STEM < "unbearable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unbearable_rel" ].

under := p_reg_le &
  [ STEM < "under" >,
    SYNSEM.LKEYS.KEYREL.PRED _under_p_rel ].

under_deg := adv_degree_spec_int_le &
  [ STEM < "under" >,
    SYNSEM.LKEYS.KEYREL.PRED "_under_deg_rel" ].

undergrad_n1 := n_ppof_le &
  [ STEM < "undergrad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undergrad_rel" ].

understand_v1 := v_np_trans_le &
  [ STEM < "understand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_understand_rel" ].

understand_v2 := v_pp_cp_fin_le &
  [ STEM < "understand" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_understand_by_rel",
             LKEYS.--COMPKEY _by_p_sel_rel ] ].

understand_v3 := v_unerg_le &
  [ STEM < "understand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_understand_rel" ].

undertake_v1 := v_np_trans_le &
  [ STEM < "undertake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undertake_rel" ].

undoubted_a1 := adj_intrans_le &
  [ STEM < "undoubted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undoubted_rel" ].

unevaluated_a1 := adj_intrans_le &
  [ STEM < "unevaluated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unevaluated_rel" ].

unexpected_a1 := adj_intrans_le &
  [ STEM < "unexpected" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unexpected_rel" ].

unexpectedly_adv1 := adv_int_vp_le &
  [ STEM < "unexpectedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unexpectedly_rel" ].

unfavorable_a1 := adj_intrans_le &
  [ STEM < "unfavorable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unfavorable_rel" ].

unfavorably := adv_int_vp_le &
  [ STEM < "unfavorably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unfavorably_rel" ].

unfortunate_a1 := adj_intrans_le &
  [ STEM < "unfortunate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unfortunate_rel" ].

unfortunately_adv1 := adv_vp_le &
  [ STEM < "unfortunately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unfortunately_rel" ].

unfortunately_adv2 := adv_s_pre_le &
  [ STEM < "unfortunately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unfortunately_rel" ].

unhurried_a1 := adj_intrans_le &
  [ STEM < "unhurried" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhurried_rel" ].

unhurriedly_adv1 := adv_int_vp_le &
  [ STEM < "unhurriedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhurriedly_rel" ].

uniform_a1 := adj_intrans_le &
  [ STEM < "uniform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uniform_adj_rel" ].

uniform_n1 := n_ppof_le &
  [ STEM < "uniform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uniform_rel" ].

unimportant_a1 := adj_intrans_le &
  [ STEM < "unimportant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unimportant_rel" ].

union_n1 := n_ppof_le &
  [ STEM < "union" >,
    SYNSEM.LKEYS.KEYREL.PRED "_union_rel" ].

united_a1 := adj_intrans_le &
  [ STEM < "united" >,
    SYNSEM.LKEYS.KEYREL.PRED "_united_rel" ].

unity_n1 := n_mass_le &
  [ STEM < "unity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unity_rel" ].

university_n1 := n_mass_count_ppof_le &
  [ STEM < "university" >,
    SYNSEM.LKEYS.KEYREL.PRED "_university_rel" ].

unless := p_subconj_le &
  [ STEM < "unless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unless_rel" ].

unlikely_a1 := adj_intrans_le &
  [ STEM < "unlikely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unlikely_rel" ].

unlikely_a2 := adj_reg_atrans_le &
  [ STEM < "unlikely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unlikely_rel" ].

unluckily_adv1 := adv_int_vp_le &
  [ STEM < "unluckily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unluckily_rel" ].

unpack_v1 := v_np*_trans_le &
  [ STEM < "unpack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unpack_rel" ].

unpleasant_a1 := adj_intrans_le &
  [ STEM < "unpleasant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unpleasant_rel" ].

unpleasantly := adv_int_vp_post_le &
  [ STEM < "unpleasantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unpleasantly_rel" ].

until := p_no_nmod_nopro_le &
  [ STEM < "until" >,
    SYNSEM.LKEYS.KEYREL.PRED _until_p_rel ].

until_temp := p_nomod_le &
  [ STEM < "until" >,
    SYNSEM [ LKEYS.KEYREL.PRED _until_p_rel,
             LKEYS.--COMPKEY temp_abstr_rel ] ].

until2 := p_subconj_le &
  [ STEM < "until" >,
    SYNSEM.LKEYS.KEYREL.PRED "_until_h_rel" ].

up_until := p_no_nmod_nopro_le &
  [ STEM < "up", "until" >,
    SYNSEM.LKEYS.KEYREL.PRED _up_until_rel ].

unwilling_a1 := adj_intrans_le &
  [ STEM < "unwilling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unwilling_rel" ].

unwilling_a2 := adj_reg_equi_le &
  [ STEM < "unwilling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unwilling_rel" ].

unwillingly_adv1 := adv_int_vp_le &
  [ STEM < "unwillingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unwillingly_rel" ].

up := p_le &
  [ STEM < "up" >,
    SYNSEM.LKEYS.KEYREL.PRED _up_p_rel ].

up_prtcl := p_prtcl_le &
  [ STEM < "up" >,
    SYNSEM.LKEYS.KEYREL.PRED _up_p_sel_rel ].

up_to_p := p_le &
  [ STEM < "up", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _up_to_rel ].

up_to_deg := adv_degree_spec_le &
  [ STEM < "up", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED "_up_to_deg_rel" ].

update_v1 := v_np*_trans_le &
  [ STEM < "update" >,
    SYNSEM.LKEYS.KEYREL.PRED "_update_rel" ].

upon := p_reg_le &
  [ STEM < "upon" >,
    SYNSEM.LKEYS.KEYREL.PRED _upon_p_rel ].

upon_prtcl := p_prtcl_le &
  [ STEM < "upon" >,
    SYNSEM.LKEYS.KEYREL.PRED _upon_p_sel_rel ].

upper_a1 := adj_intrans_le &
  [ STEM < "upper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upper_j_rel" ].

upright_a1 := adj_intrans_le &
  [ STEM < "upright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upright_rel" ].

upstairs_adv1 := pp_le &
  [ STEM < "upstairs" >,
    SYNSEM.LKEYS.KEYREL.PRED _upstairs_rel ].

urge1 := v_obj_equi_le &
  [ STEM < "urge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_urge_to_rel" ].

urgently_adv1 := adv_int_vp_le &
  [ STEM < "urgently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_urgently_rel" ].

us := n_pers_pro_us_le &
  [ STEM < "us" > ].

use_n1 := n_mass_count_ppof_le &
  [ STEM < "use" >,
    SYNSEM.LKEYS.KEYREL.PRED "_use_n_rel" ].

use_v1 := v_np_trans_le &
  [ STEM < "use" >,
    SYNSEM.LKEYS.KEYREL.PRED "_use_rel" ].

use_v2 := v_anom_equi_trans_le &
  [ STEM < "use" >,
    SYNSEM.LKEYS.KEYREL.PRED "_use_rel" ].

used_to_aux_pos := va_past_ought_pos_le & 
  [ STEM < "used" >,
    SYNSEM.LKEYS.KEYREL.PRED _used_to_aux_rel ].

useful_a1 := adj_intrans_le &
  [ STEM < "useful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_useful_rel" ].

useless_a1 := adj_intrans_le &
  [ STEM < "useless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_useless_adj_rel" ].

uselessly := adv_int_vp_le &
  [ STEM < "uselessly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uselessly_rel" ].

usual_a1 := adj_intrans_le &
  [ STEM < "usual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_usual_rel" ].

usually_adv1 := adv_vp_pre_le &
  [ STEM < "usually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_usually_rel" ].

usually_adv2 := adv_s_pre_le &
  [ STEM < "usually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_usually_rel" ].

utmost_a1 := adj_intrans_le &
  [ STEM < "utmost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_utmost_rel" ].

vacancy_n1 := n_intr_le &
  [ STEM < "vacancy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vacancy_rel" ].

vacant_a1 := adj_intrans_le &
  [ STEM < "vacant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vacant_rel" ].

vacation_n1 := n_mass_count_le &
  [ STEM < "vacation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vacation_rel" ].

vacation_v1 := v_unerg_le &
  [ STEM < "vacation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vacation_v_rel" ].

vain_a1 := adj_intrans_le &
  [ STEM < "vain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vain_rel" ].

Vanderloo := n_proper_le &
  [ STEM < "vanderloo" >,
    SYNSEM.LKEYS.KEYREL.CARG "vanderloo" ].

vegetarian_a1 := adj_intrans_le &
  [ STEM < "vegetarian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vegetarian_isect_rel" ].

vegetarian_n1 := n_intr_le &
  [ STEM < "vegetarian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vegetarian_rel" ].

very := adv_degree_spec_v_le &
  [ STEM < "very" >,
    SYNSEM.LKEYS.KEYREL.PRED "_very_deg_rel" ].

veteran_n1 := n_ppof_le &
  [ STEM < "veteran" >,
    SYNSEM.LKEYS.KEYREL.PRED "_veteran_rel" ].

veterans_day := n_holiday_le &
  [ STEM < "veterans", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "veterans_day" ].

via := p_reg_le &
  [ STEM < "via" >,
    SYNSEM.LKEYS.KEYREL.PRED _via_rel ].

vibration_n1 := n_ppof_le &
  [ STEM < "vibration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vibration_rel" ].

video_n1 := n_ppof_le &
  [ STEM < "video" >,
    SYNSEM.LKEYS.KEYREL.PRED "_video_rel" ].

Vienna_n1 := n_proper_le &
  [ STEM < "vienna" >,
    SYNSEM.LKEYS.KEYREL.CARG "Vienna" ].

view_n1 := n_ppof_le &
  [ STEM < "view" >,
    SYNSEM.LKEYS.KEYREL.PRED "_view_n_rel" ].

view_v1 := v_np_trans_le &
  [ STEM < "view" >,
    SYNSEM.LKEYS.KEYREL.PRED "_view_v_rel" ].

villa_n1 := n_intr_le &
  [ STEM < "villa" >,
    SYNSEM.LKEYS.KEYREL.PRED "_villa_rel" ].

village_n1 := n_ppof_le &
  [ STEM < "village" >,
    SYNSEM.LKEYS.KEYREL.PRED "_village_rel" ].

virgin_n1 := n_intr_le &
  [ STEM < "virgin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_virgin_rel" ].

virginal_a1 := adj_intrans_le &
  [ STEM < "virginal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_virginal_rel" ].

virtual_a1 := adj_intrans_le &
  [ STEM < "virtual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_virtual_rel" ].

virtually_adv1 := adv_vp_pre_le &
  [ STEM < "virtually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_virtually_rel" ].

virtually_adv2 := adv_s_pre_le &
  [ STEM < "virtually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_virtually_rel" ].

visit_n1 := n_ppof_le &
  [ STEM < "visit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_visit_n_rel" ].

visit_v1 := v_np_trans_le &
  [ STEM < "visit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_visit_v_rel" ].

visitor_n1 := n_ppof_le &
  [ STEM < "visitor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_visitor_rel" ].

vivid_a1 := adj_intrans_le &
  [ STEM < "vivid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vivid_rel" ].

vividly := adv_int_vp_le &
  [ STEM < "vividly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vividly_rel" ].

voice_n1 := n_ppof_le &
  [ STEM < "voice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_voice_rel" ].

vote_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "vote" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_vote_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

vote_n1 := n_ppof_le &
  [ STEM < "vote" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vote_n_rel" ].

vote_v1 := v_unerg_le &
  [ STEM < "vote" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vote_v_rel" ].

vowel_n1 := n_intr_le &
  [ STEM < "vowel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vowel_rel" ].

voyage_n1 := n_ppof_le &
  [ STEM < "voyage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_voyage_rel" ].

wait_v1 := v_np*_trans_le &
  [ STEM < "wait" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wait_v_rel",
             LKEYS.--COMPKEY temp_abstr_rel ] ].

waiter_n1 := n_intr_le &
  [ STEM < "waiter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_waiter_rel" ].

wake_v1 := v_np_trans_le &
  [ STEM < "wake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wake_rel" ].

wake_up_v1 := v_particle_le &
  [ STEM < "wake" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wake_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

wake_x_up_v1 := v_particle_np_le &
  [ STEM < "wake" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wake_x_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

walk_v1 := v_unerg_le &
  [ STEM < "walk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_walk_v_rel" ].

walk_over_v1 := v_particle_le &
  [ STEM < "walk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_walk_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

wander_v1 := v_unerg_le &
  [ STEM < "wander" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wander_rel" ].

wander_up_v1 := v_particle_le &
  [ STEM < "wander" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wander_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

want_v1 := v_np_non_trans_le &
  [ STEM < "want" >,
    SYNSEM.LKEYS.KEYREL.PRED "_want_v_rel" ].

want_v2 := v_subj_equi_le &
  [ STEM < "want" >,
    SYNSEM.LKEYS.KEYREL.PRED "_want_v_rel" ].

want_v3 := v_sor_non_trans_le &
  [ STEM < "want" >,
    SYNSEM.LKEYS.KEYREL.PRED "_want_v_rel" ].

warm_a1 := adj_intrans_le &
  [ STEM < "warm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_rel" ].

warm_a2 := adj_atrans_le &
  [ STEM < "warm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_expl_rel" ].

warm_up_v1 := v_particle_np_le &
  [ STEM < "warm" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_warm_up_v_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

warmly_adv1 := adv_int_vp_le &
  [ STEM < "warmly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warmly_rel" ].

be_c_was := vc_prd_was_le &
  [ STEM < "was" > ].

be_id_was := vc_id_was_le &
  [ STEM < "was" > ].

be_th_cop_was := vc_there_was_le &
  [ STEM < "was" > ].

be_c_was_subj := vc_prd_was_subj_le &
  [ STEM < "was" > ].

be_id_was_subj := vc_id_was_subj_le &
  [ STEM < "was" > ].

be_th_cop_was_subj := vc_there_was_subj_le &
  [ STEM < "was" > ].

be_id_was_neg_1 := vc_id_was_neg_le &
  [ STEM < "wasn't" > ].

be_id_was_neg_2 := vc_id_was_neg_le &
  [ STEM < "wasn", "'t" > ].

be_th_cop_was_neg_1 := vc_there_was_neg_le &
  [ STEM < "wasn't" > ].

be_th_cop_was_neg_2 := vc_there_was_neg_le &
  [ STEM < "wasn", "'t" > ].

be_c_was_neg_1 := vc_prd_was_neg_le &
  [ STEM < "wasn't" > ].

be_c_was_neg_2 := vc_prd_was_neg_le &
  [ STEM < "wasn", "'t" > ].

be_id_was_neg_subj_1 := vc_id_was_neg_subj_le &
  [ STEM < "wasn't" > ].

be_id_was_neg_subj_2 := vc_id_was_neg_subj_le &
  [ STEM < "wasn", "'t" > ].

be_th_cop_was_neg_subj_1 := vc_there_was_neg_subj_le &
  [ STEM < "wasn't" > ].

be_th_cop_was_neg_subj_2 := vc_there_was_neg_subj_le &
  [ STEM < "wasn", "'t" > ].

be_c_was_neg_subj_1 := vc_prd_was_neg_subj_le &
  [ STEM < "wasn't" > ].

be_c_was_neg_subj_2 := vc_prd_was_neg_subj_le &
  [ STEM < "wasn", "'t" > ].

waste_n1 := n_ppof_le &
  [ STEM < "waste" >,
    SYNSEM.LKEYS.KEYREL.PRED "_waste_n_rel" ].

waste_v1 := v_np_trans_le &
  [ STEM < "waste" >,
    SYNSEM.LKEYS.KEYREL.PRED "_waste_v_rel" ].

watch_v1 := v_np_trans_le &
  [ STEM < "watch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_watch_v_rel" ].

watch_v2 := v_sorb_le &
  [ STEM < "watch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_watch_v_rel" ].

way_n1 := n_ppof_unspec_le &
  [ STEM < "way" >,
    SYNSEM.LKEYS.KEYREL.PRED "_way_n_rel" ].

way_n2 := n_vpcomp_le &
  [ STEM < "way" >,
    SYNSEM.LKEYS.KEYREL.PRED "_way_n_h_rel" ].

way_n3 := n_cpcomp_fin_optthat_unspec_le &
  [ STEM < "way" >,
    SYNSEM.LKEYS.KEYREL.PRED "_way_n_h_rel" ].

we := n_pers_pro_we_le &
  [ STEM < "we" > ].

weak_a1 := adj_intrans_le &
  [ STEM < "weak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weak_rel" ].

Wean_Hall := n_proper_le &
  [ STEM < "wean", "hall" >,
    SYNSEM.LKEYS.KEYREL.CARG "wean_hall" ].

weather_n1 := n_mass_le &
  [ STEM < "weather" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weather_rel" ].

wedding_n1 := n_ppof_le &
  [ STEM < "wedding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wedding_rel" ].

wednesday_n1 := n_day_of_week_le &
  [ STEM < "wednesday" >,
    SYNSEM.LKEYS.KEYREL.CARG "wed" ].

wednesday_n2 := n_day_of_week_le &
  [ STEM < "wed" >,
    SYNSEM.LKEYS.KEYREL.CARG "wed" ].

week1 := n_ppcomp_le &
  [ STEM < "week" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_week_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

weekday_n1 := n_intr_temp_d_le &
  [ STEM < "weekday" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weekday_rel" ].

weekend_n1 := n_ppcomp_le &
  [ STEM < "weekend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weekend_rel" ].

weekly_adv1 := adv_int_vp_post_le &
  [ STEM < "weekly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weekly_adv_rel" ].

weekly_a1 := adj_intrans_le &
  [ STEM < "weekly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weekly_rel" ].

Weimar_n1 := n_proper_le &
  [ STEM < "weimar" >,
    SYNSEM.LKEYS.KEYREL.CARG "Weimar" ].

welcome_a1 := adj_intrans_le &
  [ STEM < "welcome" >,
    SYNSEM.LKEYS.KEYREL.PRED "_welcome_adj_rel" ].

welcome_v1 := v_np_trans_le &
  [ STEM < "welcome" >,
    SYNSEM.LKEYS.KEYREL.PRED "_welcome_v_rel" ].

well := adv_int_vp_post_nonmob_le &
  [ STEM < "well" >,
    SYNSEM.LKEYS.KEYREL.PRED "_well_rel" ].

well_s_adv := adv_s_pre_word_nospec_le &
  [ STEM < "well" >,
    SYNSEM.LKEYS.KEYREL.PRED "_well_rel" ].

be_c_were := vc_prd_were_le &
  [ STEM < "were" > ].

be_id_were := vc_id_were_le &
  [ STEM < "were" > ].

be_th_cop_were := vc_there_were_le &
  [ STEM < "were" > ].

be_c_were_subj := vc_prd_were_subj_le &
  [ STEM < "were" > ].

be_id_were_subj := vc_id_were_subj_le &
  [ STEM < "were" > ].

be_th_cop_were_subj := vc_there_were_subj_le &
  [ STEM < "were" > ].

be_c_were_neg_1 := vc_prd_were_neg_le &
  [ STEM < "weren't" > ].

be_c_were_neg_2 := vc_prd_were_neg_le &
  [ STEM < "weren", "'t" > ].

be_id_were_neg_1 := vc_id_were_neg_le &
  [ STEM < "weren't" > ].

be_id_were_neg_2 := vc_id_were_neg_le &
  [ STEM < "weren", "'t" > ].

be_th_cop_were_neg_1 := vc_there_were_neg_le &
  [ STEM < "weren't" > ].

be_th_cop_were_neg_2 := vc_there_were_neg_le &
  [ STEM < "weren", "'t" > ].

be_c_were_neg_subj_1 := vc_prd_were_neg_subj_le &
  [ STEM < "weren't" > ].

be_c_were_neg_subj_2 := vc_prd_were_neg_subj_le &
  [ STEM < "weren", "'t" > ].

be_id_were_neg_subj_1 := vc_id_were_neg_subj_le &
  [ STEM < "weren't" > ].

be_id_were_neg_subj_2 := vc_id_were_neg_subj_le &
  [ STEM < "weren", "'t" > ].

be_th_cop_were_neg_subj_1 := vc_there_were_neg_subj_le &
  [ STEM < "weren't" > ].

be_th_cop_were_neg_subj_2 := vc_there_were_neg_subj_le &
  [ STEM < "weren", "'t" > ].

what1 := n_wh_pro_le &
  [ STEM < "what" >,
    SYNSEM [ LKEYS.KEYREL.PRED thing_rel ] ].

what2 := n_freerel_pro_le &
  [ STEM < "what" >,
    SYNSEM.LKEYS.KEYREL.PRED thing_rel ].

what_det_freerel := det_freerel_le &
  [ STEM < "what" >,
    SYNSEM.LKEYS.KEYREL.PRED free_relative_ever_q_rel ].

what_det := det_wh_le &
  [ STEM < "what" >,
    SYNSEM.LKEYS.KEYREL.PRED _which_q_rel ].

what_about := comp_how_about_n_or_p_le &
  [ STEM < "what", "about" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

what_about_vp := comp_how_about_vp_le &
  [ STEM < "what", "about" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

what_do_you_say := comp_how_about_s_le &
  [ STEM < "what", "do", "you", "say" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

what_if := comp_how_about_s_le &
  [ STEM < "what", "if" >,
    SYNSEM.LKEYS.KEYREL.PRED "_how_about_rel" ].

whatever1 := n_freerel_pro_le &
  [ STEM < "whatever" >,
    SYNSEM.LKEYS.KEYREL.PRED thing_rel ].

whatever_det := det_freerel_le &
  [ STEM < "whatever" >,
    SYNSEM.LKEYS.KEYREL.PRED free_relative_ever_q_rel ].

when_nom := n_wh_adv_tm_le &
  [ STEM < "when" > ].

when2 := pp_rel_le &
  [ STEM < "when" >,
    SYNSEM.LKEYS [ KEYREL.PRED temp_loc_rel,
                   ALTKEYREL.PRED temp_rel ] ].

when_freerel_np := n_freerel_pro_adv_le &
  [ STEM < "when" >,
    SYNSEM.LKEYS [ KEYREL.PRED temp_rel,
                   ALT2KEYREL.PRED temp_loc_rel ] ].

whenever_freerel_np := n_freerel_pro_adv_le &
  [ STEM < "whenever" >,
    SYNSEM.LKEYS [ KEYREL.PRED temp_rel,
                   ALT2KEYREL.PRED temp_loc_rel ] ].

where_nom := n_wh_adv_pl_le &
  [ STEM < "where" > ].

where2 := pp_rel_le &
  [ STEM < "where" >,
    SYNSEM.LKEYS [ KEYREL.PRED unspec_loc_rel,
                   ALTKEYREL.PRED _place_n_rel ] ].

where_freerel_np := n_freerel_pro_adv_le &
  [ STEM < "where" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED unspec_loc_rel ] ].

how_freerel_np := n_freerel_pro_adv_le &
  [ STEM < "how" >,
    SYNSEM.LKEYS [ KEYREL.PRED "_way_n_rel",
                   ALT2KEYREL.PRED unspec_manner_rel ] ].

whereas := p_subconj_le &
  [ STEM < "whereas" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whereas_rel" ].

whereby := p_subconj_le &
  [ STEM < "whereby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whereby_rel" ].

wherein := pp_rel_le &
  [ STEM < "wherein" >,
    SYNSEM.LKEYS [ KEYREL.PRED unspec_loc_rel,
                   ALTKEYREL.PRED _place_n_rel ] ].

whether_c_fin := comp_whether_fin_le &
  [ STEM < "whether" > ].

whether_c_inf := comp_whether_inf_le &
  [ STEM < "whether" > ].

which1 := det_part_unsp_le &
  [ STEM < "which" >,
    SYNSEM.LKEYS.KEYREL.PRED _which_q_rel ].

which_r := n_rel_pro_what_le &
  [ STEM < "which" > ].

whichever := n_freerel_part_le &
  [ STEM < "whichever" >,
    SYNSEM.LKEYS.KEYREL.PRED free_relative_ever_q_rel ].

while_n1 := n_temp_nomod_le &
  [ STEM < "while" >,
    SYNSEM.LKEYS.KEYREL.PRED "_while_n_rel" ].

while := p_subconj_le &
  [ STEM < "while" >,
    SYNSEM.LKEYS.KEYREL.PRED "_while_rel" ].

whit_monday := n_holiday_le &
  [ STEM < "whit", "monday" >,
    SYNSEM.LKEYS.KEYREL.CARG "whit_monday" ].

whit_week := n_holiday_le &
  [ STEM < "whit", "week" >,
    SYNSEM.LKEYS.KEYREL.CARG "whit_week" ].

white_a1 := adj_intrans_le &
  [ STEM < "white" >,
    SYNSEM.LKEYS.KEYREL.PRED "_white_rel" ].

whitsun := n_season_pp_le &
  [ STEM < "whitsun" >,
    SYNSEM.LKEYS.KEYREL.CARG "whitsun" ].

whitsuntide := n_season_pp_le &
  [ STEM < "whitsuntide" >,
    SYNSEM.LKEYS.KEYREL.CARG "whitsuntide" ].

whitsun_week := n_holiday_le &
  [ STEM < "whitsun", "week" >,
    SYNSEM.LKEYS.KEYREL.CARG "whitsun_week" ].

who1 := n_wh_pro_le &
  [ STEM < "who" >,
    SYNSEM [ LKEYS.KEYREL.PRED person_rel ] ].

who2 := n_rel_pro_who_le &
  [ STEM < "who" > ].

whoever1 := n_freerel_pro_le &
  [ STEM < "whoever" >,
    SYNSEM.LKEYS.KEYREL.PRED person_rel ].

whole_a1 := adj_intrans_le &
  [ STEM < "whole" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whole_rel" ].

wholly_deg := adv_degree_spec_v_le &
  [ STEM < "wholly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wholly_deg_rel" ].

whom1 := n_wh_pro_acc_le &
  [ STEM < "whom" >,
    SYNSEM.LKEYS.KEYREL.PRED person_rel ].

whom2 := n_rel_pro_acc_le &
  [ STEM < "whom" > ].

whoops_root_pre := adv_disc_preh_le &
  [ STEM < "whoops" >,
    SYNSEM.LKEYS.KEYREL.CARG "whoops" ].

whoops_root_post := adv_disc_posth_le &
  [ STEM < "whoops" >,
    SYNSEM.LKEYS.KEYREL.CARG "whoops" ].

whose_1 := det_wh_poss_le &
  [ STEM < "whose" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED person_rel ].

whose_2 := det_rel_poss_le &
  [ STEM < "whose" > ].

why1 := pp_wh_le &
  [ STEM < "why" >,
    SYNSEM.LKEYS [ KEYREL.PRED _for_p_rel,
                   ALTKEYREL.PRED "reason_rel" ] ].

why2 := pp_rel_le &
  [ STEM < "why" >,
    SYNSEM.LKEYS [ KEYREL.PRED _for_p_rel,
                   ALTKEYREL.PRED "reason_rel" ] ].

wicked_a1 := adj_intrans_le &
  [ STEM < "wicked" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wicked_rel" ].

Wiesbaden_n1 := n_proper_le &
  [ STEM < "wiesbaden" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wiesbaden" ].

wife_n1 := n_ppof_le &
  [ STEM < "wife" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wife_rel" ].

wilco_root_pre := adv_disc_preh_le &
  [ STEM < "wilco" >,
    SYNSEM.LKEYS.KEYREL.CARG "wilco" ].

wilco_root_post := adv_disc_posth_le &
  [ STEM < "wilco" >,
    SYNSEM.LKEYS.KEYREL.CARG "wilco" ].

wild_a1 := adj_intrans_le &
  [ STEM < "wild" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wild_rel" ].

wildly_adv1 := adv_int_vp_le &
  [ STEM < "wildly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wildly_rel" ].

will_aux_pos := va_will_pos_le & 
  [ STEM < "will" >,
    SYNSEM.LKEYS.KEYREL.PRED _will_aux_rel ].

will_aux_pos_cx := va_will_pos_cx_le &
  [ STEM < "ll" >,
    SYNSEM.LKEYS.KEYREL.PRED _will_aux_rel ].

will_aux_pos_cx_2 := va_will_pos_cx_le &
  [ STEM < "'ll" >,
    SYNSEM.LKEYS.KEYREL.PRED _will_aux_rel ].

Willien_n1 := n_proper_le &
  [ STEM < "willien" >,
    SYNSEM.LKEYS.KEYREL.CARG "Willien" ].

willing_a1 := adj_intrans_le &
  [ STEM < "willing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_willing_rel" ].

willing_a2 := adj_reg_equi_le &
  [ STEM < "willing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_willing_rel" ].

willingly_adv1 := adv_int_vp_le &
  [ STEM < "willingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_willingly_rel" ].

Wilson := n_proper_le &
  [ STEM < "wilson" >,
    SYNSEM.LKEYS.KEYREL.CARG "wilson" ].

win_v1 := v_np*_trans_le &
  [ STEM < "win" >,
    SYNSEM.LKEYS.KEYREL.PRED "_win_rel" ].

wine_n1 := n_mass_count_le &
  [ STEM < "wine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wine_rel" ].

winter_n1 := n_season_pp_le &
  [ STEM < "winter" >,
    SYNSEM.LKEYS.KEYREL.CARG "winter" ].

winter_n2 := n_season_np_le &
  [ STEM < "winter" >,
    SYNSEM.LKEYS.KEYREL.CARG "winter" ].

wise_a1 := adj_intrans_le &
  [ STEM < "wise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wise_rel" ].

wish_n1 := n_intr_le &
  [ STEM < "wish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wish_n_rel" ].

wish_v1 := v_ditrans_only_le &
  [ STEM < "wish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wish_v_rel" ].

wish_v2 := v_subj_equi_le &
  [ STEM < "wish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wish_v_rel" ].

wish_v3 := v_sor_non_trans_le &
  [ STEM < "wish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wish_v_rel" ].

wish_v4 := v_unerg_le &
  [ STEM < "wish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wish_v_rel" ].

wish_v5 := v_cp_prop_non_trans_le &
  [ STEM < "wish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wish_v_rel" ].

with_p := p_le &
  [ STEM < "with" >,
    SYNSEM.LKEYS.KEYREL.PRED _with_p_rel ].

with_prtcl := p_prtcl_le &
  [ STEM < "with" >,
    SYNSEM.LKEYS.KEYREL.PRED _with_p_sel_rel ].

with_means := p_nbar_comp_le &
  [ STEM < "with" >,
    SYNSEM.LKEYS.KEYREL.PRED _with_p_rel ].

with_subord := p_subconj_nocop_le &
  [ STEM < "with" >,
    SYNSEM.LKEYS.KEYREL.PRED "_with_subord_rel" ].

within := p_le &
  [ STEM < "within" >,
    SYNSEM.LKEYS.KEYREL.PRED _within_p_rel ].

without := p_le &
  [ STEM < "without" >,
    SYNSEM.LKEYS.KEYREL.PRED _without_p_rel ].

without_prtcl := p_prtcl_le &
  [ STEM < "without" >,
    SYNSEM.LKEYS.KEYREL.PRED _without_p_sel_rel ].

Woellnatz_n1 := n_proper_le &
  [ STEM < "woellnatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Woellnatz" ].

woman1 := n_intr_le &
  [ STEM < "woman" >,
    SYNSEM.LKEYS.KEYREL.PRED "_woman_rel" ].

will_aux_neg_1 := va_will_neg_le &
  [ STEM < "won't" >,
    SYNSEM.LKEYS.KEYREL.PRED _will_aux_rel ].

will_aux_neg_2 := va_will_neg_le &
  [ STEM < "won", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _will_aux_rel ].

wok_n2 := n_intr_le &
  [ STEM < "wok" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wok_rel" ].

wonder_v1 := v_cp_ques_fin_inf_non_trans_le &
  [ STEM < "wonder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wonder_v_rel" ].

wonderful_root_pre := adv_disc_preh_le &
  [ STEM < "wonderful" >,
    SYNSEM.LKEYS.KEYREL.CARG "wonderful" ].

wonderful_root_post := adv_disc_posth_le &
  [ STEM < "wonderful" >,
    SYNSEM.LKEYS.KEYREL.CARG "wonderful" ].

wonderful_a1 := adj_intrans_le &
  [ STEM < "wonderful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wonderful_rel" ].

wonderfully := adv_int_vp_post_le &
  [ STEM < "wonderfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wonderfully_rel" ].

word_n1 := n_ppof_le &
  [ STEM < "word" >,
    SYNSEM.LKEYS.KEYREL.PRED "_word_rel" ].

word_n2 := n_cpcomp_fin_le &
  [ STEM < "word" >,
    SYNSEM.LKEYS.KEYREL.PRED "_word_h_rel" ]. 

work_n1 := n_mass_le &
  [ STEM < "work" >,
    SYNSEM.LKEYS.KEYREL.PRED "_work_n_rel" ].

work_in_v1 := v_particle_np_le &
  [ STEM < "work" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_work_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

work_out_v1 := v_particle_np_le &
  [ STEM < "work" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_work_x_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

work_v1 := v_unerg_le &
  [ STEM < "work" >,
    SYNSEM.LKEYS.KEYREL.PRED "_work_v_rel" ].

work_through_v1 := v_empty_prep_intrans_le &
  [ STEM < "work" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_work_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

workday_n1 := n_intr_temp_d_le &
  [ STEM < "workday" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workday_rel" ].

workshop_n1 := n_intr_le &
  [ STEM < "workshop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workshop_rel" ].

world_n1 := n_ppof_le &
  [ STEM < "world" >,
    SYNSEM.LKEYS.KEYREL.PRED "_world_rel" ].

worry_about_v1 := v_empty_prep_intrans_le &
  [ STEM < "worry" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_worry_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

worry_v2 := v_unerg_le &
  [ STEM < "worry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worry_about_rel" ].

worse_a1 := adj_intrans_le &
  [ STEM < "worse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worse_rel" ].

worst_a1 := adj_intrans_le &
  [ STEM < "worst" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worst_rel" ].

worthwhile_a1 := adj_intrans_le &
  [ STEM < "worthwhile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worthwhile_rel" ].

would_aux_pos := va_would_pos_le &
  [ STEM < "would" >,
    SYNSEM.LKEYS.KEYREL.PRED _would_rel ].

would_aux_pos_cx := va_would_pos_cx_le &
  [ STEM < "d" >,
    SYNSEM.LKEYS.KEYREL.PRED _would_rel ].

would_aux_pos_cx_2 := va_would_pos_cx_le &
  [ STEM < "'d" >,
    SYNSEM.LKEYS.KEYREL.PRED _would_rel ].

would_aux_neg_1 := va_would_neg_le &
  [ STEM < "wouldn't" >,
    SYNSEM.LKEYS.KEYREL.PRED _would_rel ].

would_aux_neg_2 := va_would_neg_le &
  [ STEM < "wouldn", "'t" >,
    SYNSEM.LKEYS.KEYREL.PRED _would_rel ].

wrap_v1 := v_np_trans_le &
  [ STEM < "wrap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wrap_v_rel" ].

wrap_up_v1 := v_particle_np_le &
  [ STEM < "wrap" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wrap_up_v_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

wrap_up_n1 := n_intr_le &
  [ STEM < "wrap", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wrap_up_rel" ].

write_down_v1 := v_particle_np_le &
  [ STEM < "write" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_write_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

write_in_v1 := v_particle_np_le &
  [ STEM < "write" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_write_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

write_up_v1 := v_particle_np_le &
  [ STEM < "write" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_write_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

write_v1 := v_np_trans_le &
  [ STEM < "write" >,
    SYNSEM.LKEYS.KEYREL.PRED "_write_rel" ].

writing_up_n1 := n_intr_le &
  [ STEM < "writing", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_writing_up_rel" ].

wrong_a1 := adj_trans_oblig_le &
  [ STEM < "wrong" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wrong_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

wrong_a2 := adj_intrans_le &
  [ STEM < "wrong" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wrong_rel" ].

wrongly_adv1 := adv_int_vp_le &
  [ STEM < "wrongly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wrongly_rel" ].

Wuerzburg_n1 := n_proper_le &
  [ STEM < "wuerzburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wuerzburg" ].

yeah_root_pre := adv_disc_preh_le &
  [ STEM < "yeah" >,
    SYNSEM.LKEYS.KEYREL.CARG "yeah" ].

yeah_root_post := adv_disc_posth_le &
  [ STEM < "yeah" >,
    SYNSEM.LKEYS.KEYREL.CARG "yeah" ].

year_n1 := n_temp_ppcomp_year_le &
  [ STEM < "year" >,
    SYNSEM.LKEYS.KEYREL.PRED "_year_rel" ].

year_ttl := n_title_le &
  [ STEM < "year" >,
    SYNSEM.LKEYS.KEYREL.PRED "_year_ttl_rel" ].

yearly_adv1 := adv_vp_post_le &
  [ STEM < "yearly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yearly_adv_rel" ].

yearly_a1 := adj_intrans_le &
  [ STEM < "yearly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yearly_rel" ].

yep_root_pre := adv_disc_preh_le &
  [ STEM < "yep" >,
    SYNSEM.LKEYS.KEYREL.CARG "yep" ].

yep_root_post := adv_disc_posth_le &
  [ STEM < "yep" >,
    SYNSEM.LKEYS.KEYREL.CARG "yep" ].

yes_pre_root := adv_disc_preh_le &
  [ STEM < "yes" >,
    SYNSEM.LKEYS.KEYREL.CARG "yes" ].

yes_post_root := adv_disc_posth_le &
  [ STEM < "yes" >,
    SYNSEM.LKEYS.KEYREL.CARG "yes" ].

yesterday_np := n_adv_tm_le &
  [ STEM < "yesterday" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _yesterday_j_rel ] ].

yet_adv1 := adv_int_vp_post_le &
  [ STEM < "yet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yet_r_rel" ].

yet_adv1_prtcl := adv_int_vp_post_prtcl_le &
  [ STEM < "yet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yet_r_rel" ].

York_n1 := n_proper_le &
  [ STEM < "york" >,
    SYNSEM.LKEYS.KEYREL.CARG "York" ].

you := n_pers_pro_you_le &
  [ STEM < "you" > ].

u_pro := n_pers_pro_you_le &
  [ STEM < "u" > ].

your := det_poss_your_le &
  [ STEM < "your" > ].

yours := n_poss_pro_yours_le &
  [ STEM < "yours" > ].

yourself := n_refl_pro_yourself_le &
  [ STEM < "yourself" > ].    

yourselves := n_refl_pro_yourselves_le &
  [ STEM < "yourselves" > ].

yum_root_pre := adv_disc_preh_le &
  [ STEM < "yum" >,
    SYNSEM.LKEYS.KEYREL.CARG "yum" ].

yum_root_post := adv_disc_posth_le &
  [ STEM < "yum" >,
    SYNSEM.LKEYS.KEYREL.CARG "yum" ].

zero_det := det_pl_le &
  [ STEM < "zero" >,
    SYNSEM.LKEYS.KEYREL.PRED _no_q_rel ].

zero := adj_bare_unspecified_card_one_le & 
  [ STEM < "zero" >,
    SYNSEM.LKEYS.KEYREL.CARG "0" ].

oh := adj_bare_unspecified_card_one_le & 
  [ STEM < "oh" >,
    SYNSEM.LKEYS.KEYREL.CARG "0" ].

Zurich_n1 := n_proper_le &
  [ STEM < "zurich" >,
    SYNSEM.LKEYS.KEYREL.CARG "Zurich" ].

first := adj_bare_unspecified_ord_one_le & 
  [ STEM < "first" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

second := adj_bare_unspecified_ord_one_le &
  [ STEM < "second" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

twelfth := adj_bare_unspecified_ord_two_le &
  [ STEM < "twelfth" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twentieth := adj_bare_unspecified_ord_two_le &
  [ STEM < "twentieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

hundredth := adj_bare_specified_ord_hundred_le &
  [ STEM < "hundredth" >,
    SYNSEM.LKEYS.KEYREL.CARG "100" ].

thousandth := adj_bare_specified_ord_thousand_le &
  [ STEM < "thousandth" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000" ].

millionth := adj_bare_specified_ord_million_le &
  [ STEM < "millionth" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000" ].

Aachen_n1 := n_proper_le &
  [ STEM < "aachen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Aachen" ].

Acapulco_n1 := n_proper_le &
  [ STEM < "acapulco" >,
    SYNSEM.LKEYS.KEYREL.CARG "Acapulco" ].

Alan_n1 := n_proper_le &
  [ STEM < "alan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alan" ].

Alberta_n1 := n_proper_le &
  [ STEM < "alberta" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alberta" ].

Alex_n1 := n_proper_le &
  [ STEM < "alex" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alex" ].

Ali_n1 := n_proper_le &
  [ STEM < "ali" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ali" ].

Allegheny_n1 := n_proper_le &
  [ STEM < "allegheny" >,
    SYNSEM.LKEYS.KEYREL.CARG "Allegheny" ].

Allequippa_n1 := n_proper_le &
  [ STEM < "allequippa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Allequippa" ].

Allied_Chemicals_n1 := n_proper_le &
  [ STEM < "allied", "chemicals" >,
    SYNSEM.LKEYS.KEYREL.CARG "Allied_Chemicals" ].

Alte-Oper_n1 := n_proper_le &
  [ STEM < "alte", "oper" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alte-Oper" ].

Amy_n1 := n_proper_le &
  [ STEM < "amy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Amy" ].

Andrew_n1 := n_proper_le &
  [ STEM < "andrew" >,
    SYNSEM.LKEYS.KEYREL.CARG "Andrew" ].

Andy_n1 := n_proper_le &
  [ STEM < "andy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Andy" ].

Ann_n1 := n_proper_le &
  [ STEM < "ann" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ann" ].

Anuj_n1 := n_proper_le &
  [ STEM < "anuj" >,
    SYNSEM.LKEYS.KEYREL.CARG "Anuj" ].

Arabica_n1 := n_proper_le &
  [ STEM < "arabica" >,
    SYNSEM.LKEYS.KEYREL.CARG "Arabica" ].

Arthur_n1 := n_proper_le &
  [ STEM < "arthur" >,
    SYNSEM.LKEYS.KEYREL.CARG "Arthur" ].

Ava_n1 := n_proper_le &
  [ STEM < "ava" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ava" ].

Baba_n1 := n_proper_le &
  [ STEM < "baba" >,
    SYNSEM.LKEYS.KEYREL.CARG "Baba" ].

Baden_n1 := n_proper_le &
  [ STEM < "baden" >,
    SYNSEM.LKEYS.KEYREL.CARG "Baden" ].

Bahamas_n1 := n_proper_le &
  [ STEM < "bahamas" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bahamas" ].

Bamberg_n1 := n_proper_le &
  [ STEM < "bamberg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bamberg" ].

Barbados_n1 := n_proper_le &
  [ STEM < "barbados" >,
    SYNSEM.LKEYS.KEYREL.CARG "Barbados" ].

Barck_n1 := n_proper_le &
  [ STEM < "barck" >,
    SYNSEM.LKEYS.KEYREL.CARG "Barck" ].

Bart_n1 := n_proper_le &
  [ STEM < "bart" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bart" ].

Bayreuth_n1 := n_proper_le &
  [ STEM < "bayreuth" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bayreuth" ].

Becher_n1 := n_proper_le &
  [ STEM < "becher" >,
    SYNSEM.LKEYS.KEYREL.CARG "Becher" ].

Beehive_n1 := n_proper_le &
  [ STEM < "beehive" >,
    SYNSEM.LKEYS.KEYREL.CARG "Beehive" ].

Bellefonte_n1 := n_proper_le &
  [ STEM < "bellefonte" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bellefonte" ].

Ben_n1 := n_proper_le &
  [ STEM < "ben" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ben" ].

Best-Western_n1 := n_intr_named_le &
  [ STEM < "best", "western" >,
    SYNSEM.LKEYS.KEYREL.CARG "Best-Western" ].

Bitterfeld_n1 := n_proper_le &
  [ STEM < "bitterfeld" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bitterfeld" ].

Bouquet_n1 := n_proper_le &
  [ STEM < "bouquet" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bouquet" ].

Brack_n1 := n_proper_le &
  [ STEM < "brack" >,
    SYNSEM.LKEYS.KEYREL.CARG "Brack" ].

Bremen_n1 := n_proper_le &
  [ STEM < "bremen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bremen" ].

Brother_n2 := n_proper_le &
  [ STEM < "brother" >,
    SYNSEM.LKEYS.KEYREL.CARG "Brother" ].

Bub_n1 := n_proper_le &
  [ STEM < "bub" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bub" ].

Bunznudders_n1 := n_proper_le &
  [ STEM < "bunznudders" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bunznudders" ].

Busch_n1 := n_proper_le &
  [ STEM < "busch" >,
    SYNSEM.LKEYS.KEYREL.CARG "Busch" ].

California_n1 := n_proper_le &
  [ STEM < "california" >,
    SYNSEM.LKEYS.KEYREL.CARG "California" ].

Carmen_n1 := n_proper_le &
  [ STEM < "carmen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Carmen" ].

Celle_n1 := n_proper_le &
  [ STEM < "celle" >,
    SYNSEM.LKEYS.KEYREL.CARG "Celle" ].

Central-Station_n1 := n_proper_le &
  [ STEM < "central", "station" >,
    SYNSEM.LKEYS.KEYREL.CARG "Central_Station" ].

Central-Station_n2 := n_intr_named_le &
  [ STEM < "central", "station" >,
    SYNSEM.LKEYS.KEYREL.CARG "Central_Station" ].

Chalfant_n1 := n_proper_le &
  [ STEM < "chalfant" >,
    SYNSEM.LKEYS.KEYREL.CARG "Chalfant" ].

Charles_n1 := n_proper_le &
  [ STEM < "charles" >,
    SYNSEM.LKEYS.KEYREL.CARG "Charles" ].

Chemnitz_n1 := n_proper_le &
  [ STEM < "chemnitz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Chemnitz" ].

China_n1 := n_proper_le &
  [ STEM < "china" >,
    SYNSEM.LKEYS.KEYREL.CARG "China" ].

Chris_n1 := n_proper_le &
  [ STEM < "chris" >,
    SYNSEM.LKEYS.KEYREL.CARG "Chris" ].

Christian_n1 := n_proper_le &
  [ STEM < "christian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Christian" ].

Cindy_n1 := n_proper_le &
  [ STEM < "cindy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Cindy" ].

City_n1 := n_intr_named_le &
  [ STEM < "city" >,
    SYNSEM.LKEYS.KEYREL.CARG "City" ].

Clay_n1 := n_proper_le &
  [ STEM < "clay" >,
    SYNSEM.LKEYS.KEYREL.CARG "Clay" ].

Cleveland_n1 := n_proper_le &
  [ STEM < "cleveland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Cleveland" ].

Cliffside_n1 := n_proper_le &
  [ STEM < "cliffside" >,
    SYNSEM.LKEYS.KEYREL.CARG "Cliffside" ].

Coburg_n1 := n_proper_le &
  [ STEM < "coburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Coburg" ].

Coca_Cola_n1 := n_proper_le &
  [ STEM < "coca", "cola" >,
    SYNSEM.LKEYS.KEYREL.CARG "Coca_Cola" ].

Columbus_n1 := n_proper_le &
  [ STEM < "columbus" >,
    SYNSEM.LKEYS.KEYREL.CARG "Columbus" ].

Compaq_n1 := n_proper_le &
  [ STEM < "compaq" >,
    SYNSEM.LKEYS.KEYREL.CARG "Compaq" ].

Compaq_n2 := n_intr_le &
  [ STEM < "compaq" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compaq_rel" ].

Continental_n1 := n_proper_le &
  [ STEM < "continental" >,
    SYNSEM.LKEYS.KEYREL.CARG "Continental" ].

Dan_n1 := n_proper_le &
  [ STEM < "dan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dan" ].

Dana_n1 := n_proper_le &
  [ STEM < "dana" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dana" ].

Danny_n1 := n_proper_le &
  [ STEM < "danny" >,
    SYNSEM.LKEYS.KEYREL.CARG "Danny" ].

Darlene_n1 := n_proper_le &
  [ STEM < "darlene" >,
    SYNSEM.LKEYS.KEYREL.CARG "Darlene" ].

Dave_n1 := n_proper_le &
  [ STEM < "dave" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dave" ].

David_n1 := n_proper_le &
  [ STEM < "david" >,
    SYNSEM.LKEYS.KEYREL.CARG "David" ].

Denny_n1 := n_proper_le &
  [ STEM < "denny" >,
    SYNSEM.LKEYS.KEYREL.CARG "Denny" ].

Denver_n1 := n_proper_le &
  [ STEM < "denver" >,
    SYNSEM.LKEYS.KEYREL.CARG "Denver" ].

Der-Talismann_n1 := n_proper_le &
  [ STEM < "der", "talismann" >,
    SYNSEM.LKEYS.KEYREL.CARG "Der-Talismann" ].

Detroit_n1 := n_proper_le &
  [ STEM < "detroit" >,
    SYNSEM.LKEYS.KEYREL.CARG "Detroit" ].

Diepholz_n1 := n_proper_le &
  [ STEM < "diepholz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Diepholz" ].

Diner_n1 := n_proper_le &
  [ STEM < "diner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Diner" ].

Doherty_n1 := n_proper_le &
  [ STEM < "doherty" >,
    SYNSEM.LKEYS.KEYREL.CARG "Doherty" ].

Dolamore_n1 := n_proper_le &
  [ STEM < "dolamore" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dolamore" ].

Domino_n1 := n_proper_le &
  [ STEM < "domino" >,
    SYNSEM.LKEYS.KEYREL.CARG "Domino" ].

Don-Giovanni_n1 := n_proper_le &
  [ STEM < "don", "giovanni" >,
    SYNSEM.LKEYS.KEYREL.CARG "Don-Giovanni" ].

Donner_n1 := n_proper_le &
  [ STEM < "donner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Donner" ].

Doom_n2 := n_proper_le &
  [ STEM < "doom" >,
    SYNSEM.LKEYS.KEYREL.CARG "Doom" ].

Dortmund_n1 := n_proper_le &
  [ STEM < "dortmund" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dortmund" ].

Duderstadt_n1 := n_proper_le &
  [ STEM < "duderstadt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Duderstadt" ].

Duisburg_n1 := n_proper_le &
  [ STEM < "duisburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Duisburg" ].

Eaton_n1 := n_proper_le &
  [ STEM < "eaton" >,
    SYNSEM.LKEYS.KEYREL.CARG "Eaton" ].

Eggers_n1 := n_proper_le &
  [ STEM < "eggers" >,
    SYNSEM.LKEYS.KEYREL.CARG "Eggers" ].

Eleanor_n1 := n_proper_le &
  [ STEM < "eleanor" >,
    SYNSEM.LKEYS.KEYREL.CARG "Eleanor" ].

Elektronika_n1 := n_proper_le &
  [ STEM < "elektronika" >,
    SYNSEM.LKEYS.KEYREL.CARG "Elektronika" ].

Ernst-August-Platz_n1 := n_proper_le &
  [ STEM < "ernst", "august", "platz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ernst-August-Platz" ].

Erz_n1 := n_proper_le &
  [ STEM < "erz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Erz" ].

Esslingen_n1 := n_proper_le &
  [ STEM < "esslingen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Esslingen" ].

Eugene_n1 := n_proper_le &
  [ STEM < "eugene" >,
    SYNSEM.LKEYS.KEYREL.CARG "Eugene" ].

Eva_n1 := n_proper_le &
  [ STEM < "eva" >,
    SYNSEM.LKEYS.KEYREL.CARG "Eva" ].

Eva-And-Adele_n1 := n_proper_le &
  [ STEM < "eva", "and", "adele" >,
    SYNSEM.LKEYS.KEYREL.CARG "Eva-And-Adele" ].

Everman_n1 := n_proper_le &
  [ STEM < "everman" >,
    SYNSEM.LKEYS.KEYREL.CARG "Everman" ].

Faz_n1 := n_proper_le &
  [ STEM < "faz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Faz" ].

Fasanengarten_n1 := n_intr_named_le &
  [ STEM < "fasanengarten" >,
    SYNSEM.LKEYS.KEYREL.CARG "Fasanengarten" ].

Felsenburg_n1 := n_proper_le &
  [ STEM < "felsenburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Felsenburg" ].

Fischlein_n1 := n_proper_le &
  [ STEM < "fischlein" >,
    SYNSEM.LKEYS.KEYREL.CARG "Fischlein" ].

Forbes_n1 := n_proper_le &
  [ STEM < "forbes" >,
    SYNSEM.LKEYS.KEYREL.CARG "Forbes" ].

Freiburg_n1 := n_proper_le &
  [ STEM < "freiburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Freiburg" ].

Freyburg_n1 := n_proper_le &
  [ STEM < "freyburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Freyburg" ].

Friedrichshafen_n1 := n_proper_le &
  [ STEM < "friedrichshafen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Friedrichshafen" ].

Fritzsche_n1 := n_proper_le &
  [ STEM < "fritzsche" >,
    SYNSEM.LKEYS.KEYREL.CARG "Fritzsche" ].

Fulda_n1 := n_proper_le &
  [ STEM < "fulda" >,
    SYNSEM.LKEYS.KEYREL.CARG "Fulda" ].

Furui_n1 := n_proper_le &
  [ STEM < "furui" >,
    SYNSEM.LKEYS.KEYREL.CARG "Furui" ].

Gema_n1 := n_proper_le &
  [ STEM < "gema" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gema" ].

Galerie-Stift_n1 := n_proper_le &
  [ STEM < "galerie", "stift" >,
    SYNSEM.LKEYS.KEYREL.CARG "Galerie-Stift" ].

Galerie-Am-Stift_n1 := n_proper_le &
  [ STEM < "galerie", "am", "stift" >,
    SYNSEM.LKEYS.KEYREL.CARG "Galerie-Am-Stift" ].

Georg_n1 := n_proper_le &
  [ STEM < "georg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Georg" ].

Gerald_n1 := n_proper_le &
  [ STEM < "gerald" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gerald" ].

Gerhard_n1 := n_proper_le &
  [ STEM < "gerhard" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gerhard" ].

Gie_n1 := n_proper_le &
  [ STEM < "gie" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gie" ].

Ginkinspiel_n1 := n_proper_le &
  [ STEM < "ginkinspiel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ginkinspiel" ].

Girst_n1 := n_proper_le &
  [ STEM < "girst" >,
    SYNSEM.LKEYS.KEYREL.CARG "Girst" ].

Goehring_n1 := n_proper_le &
  [ STEM < "goehring" >,
    SYNSEM.LKEYS.KEYREL.CARG "Goehring" ].

Goettman_n1 := n_proper_le &
  [ STEM < "goettman" >,
    SYNSEM.LKEYS.KEYREL.CARG "Goettman" ].

Goslar_n1 := n_proper_le &
  [ STEM < "goslar" >,
    SYNSEM.LKEYS.KEYREL.CARG "Goslar" ].

Gotha_n1 := n_proper_le &
  [ STEM < "gotha" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gotha" ].

Great_Scot_n1 := n_proper_le &
  [ STEM < "great", "scot" >,
    SYNSEM.LKEYS.KEYREL.CARG "Great_Scot" ].

Greg_n1 := n_proper_le &
  [ STEM < "greg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Greg" ].

Gries_n1 := n_proper_le &
  [ STEM < "gries" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gries" ].

Gro_n1 := n_proper_le &
  [ STEM < "gro" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gro" ].

Groth_n1 := n_proper_le &
  [ STEM < "groth" >,
    SYNSEM.LKEYS.KEYREL.CARG "Groth" ].

Groth-Heine_n1 := n_proper_le &
  [ STEM < "groth", "heine" >,
    SYNSEM.LKEYS.KEYREL.CARG "Groth-Heine" ].

Grubenhagen_n1 := n_proper_le &
  [ STEM < "grubenhagen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Grubenhagen" ].

Gullifty_n1 := n_proper_le &
  [ STEM < "gullifty" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gullifty" ].

Hagen_n1 := n_proper_le &
  [ STEM < "hagen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hagen" ].

Hall_n1 := n_proper_le &
  [ STEM < "hall" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hall" ].

Halle_n1 := n_proper_le &
  [ STEM < "halle" >,
    SYNSEM.LKEYS.KEYREL.CARG "Halle" ].

Hans_n1 := n_proper_le &
  [ STEM < "hans" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hans" ].

Harp_n1 := n_proper_le &
  [ STEM < "harp" >,
    SYNSEM.LKEYS.KEYREL.CARG "Harp" ].

Heidi_n1 := n_proper_le &
  [ STEM < "heidi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Heidi" ].

Heilbronn_n1 := n_proper_le &
  [ STEM < "heilbronn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Heilbronn" ].

Heine_n1 := n_proper_le &
  [ STEM < "heine" >,
    SYNSEM.LKEYS.KEYREL.CARG "Heine" ].

Herald_n1 := n_proper_le &
  [ STEM < "herald" >,
    SYNSEM.LKEYS.KEYREL.CARG "Herald" ].

Hermann_n1 := n_proper_le &
  [ STEM < "hermann" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hermann" ].

Herrenhausen_n1 := n_proper_le &
  [ STEM < "herrenhausen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Herrenhausen" ].

Herrmann_n1 := n_proper_le &
  [ STEM < "herrmann" >,
    SYNSEM.LKEYS.KEYREL.CARG "Herrmann" ].

Hessen_n1 := n_proper_le &
  [ STEM < "hessen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hessen" ].

Hilton_n1 := n_intr_named_le &
  [ STEM < "hilton" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hilton" ].

Hiratsuka_n1 := n_proper_le &
  [ STEM < "hiratsuka" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hiratsuka" ].

Hochmut_n1 := n_proper_le &
  [ STEM < "hochmut" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hochmut" ].

Hockenheim_n1 := n_proper_le &
  [ STEM < "hockenheim" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hockenheim" ].

Holland_n1 := n_proper_le &
  [ STEM < "holland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Holland" ].

Holstein_n1 := n_proper_le &
  [ STEM < "holstein" >,
    SYNSEM.LKEYS.KEYREL.CARG "Holstein" ].

Homburg_n1 := n_proper_le &
  [ STEM < "homburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Homburg" ].

Horke_n1 := n_proper_le &
  [ STEM < "horke" >,
    SYNSEM.LKEYS.KEYREL.CARG "Horke" ].

Horst_n1 := n_proper_le &
  [ STEM < "horst" >,
    SYNSEM.LKEYS.KEYREL.CARG "Horst" ].

Hospitz-Am-Bahnhof_n1 := n_proper_le &
  [ STEM < "hospitz", "am", "bahnhof" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hospitz-Am-Bahnhof" ].

Houlihan_n1 := n_proper_le &
  [ STEM < "houlihan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Houlihan" ].

Hummel_n1 := n_proper_le &
  [ STEM < "hummel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hummel" ].

Iida_n1 := n_proper_le &
  [ STEM < "iida" >,
    SYNSEM.LKEYS.KEYREL.CARG "Iida" ].

Irish-Over_n1 := n_proper_le &
  [ STEM < "irish", "over" >,
    SYNSEM.LKEYS.KEYREL.CARG "Irish-Over" ].

Jackie_n1 := n_proper_le &
  [ STEM < "jackie" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jackie" ].

Jakob-And-Adele_n1 := n_proper_le &
  [ STEM < "jakob", "and", "adele" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jakob-And-Adele" ].

Japan_n1 := n_proper_le &
  [ STEM < "japan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Japan" ].

Jena_n1 := n_proper_le &
  [ STEM < "jena" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jena" ].

Jenifer_n1 := n_proper_le &
  [ STEM < "jenifer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jenifer" ].

Jennifer_n1 := n_proper_le &
  [ STEM < "jennifer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jennifer" ].

Jerusalem_n1 := n_proper_le &
  [ STEM < "jerusalem" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jerusalem" ].

Jesus_n1 := n_proper_le &
  [ STEM < "jesus" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jesus" ].

Johannes_n1 := n_proper_le &
  [ STEM < "johannes" >,
    SYNSEM.LKEYS.KEYREL.CARG "Johannes" ].

Jones_n1 := n_proper_le &
  [ STEM < "jones" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jones" ].

Juli_n1 := n_proper_le &
  [ STEM < "juli" >,
    SYNSEM.LKEYS.KEYREL.CARG "Juli" ].

Kaiserhof_n1 := n_intr_named_le &
  [ STEM < "kaiserhof" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kaiserhof" ].

Kaiserslautern_n1 := n_proper_le &
  [ STEM < "kaiserslautern" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kaiserslautern" ].

Kehl_n1 := n_proper_le &
  [ STEM < "kehl" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kehl" ].

Kempten_n1 := n_proper_le &
  [ STEM < "kempten" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kempten" ].

Kerstin_n1 := n_proper_le &
  [ STEM < "kerstin" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kerstin" ].

Kevin_n1 := n_proper_le &
  [ STEM < "kevin" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kevin" ].

Kinter_n1 := n_proper_le &
  [ STEM < "kinter" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kinter" ].

Klee_n1 := n_proper_le &
  [ STEM < "klee" >,
    SYNSEM.LKEYS.KEYREL.CARG "Klee" ].

Kleinschmidt_n1 := n_proper_le &
  [ STEM < "kleinschmidt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kleinschmidt" ].

Knorr_n1 := n_proper_le &
  [ STEM < "knorr" >,
    SYNSEM.LKEYS.KEYREL.CARG "Knorr" ].

Koblenz_n1 := n_proper_le &
  [ STEM < "koblenz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Koblenz" ].

Konstanz_n1 := n_proper_le &
  [ STEM < "konstanz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Konstanz" ].

Kopp_n1 := n_proper_le &
  [ STEM < "kopp" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kopp" ].

Lafayette_n1 := n_proper_le &
  [ STEM < "lafayette" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lafayette" ].

Lamont_n1 := n_proper_le &
  [ STEM < "lamont" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lamont" ].

Landau_n1 := n_proper_le &
  [ STEM < "landau" >,
    SYNSEM.LKEYS.KEYREL.CARG "Landau" ].

Landsberg_n1 := n_proper_le &
  [ STEM < "landsberg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Landsberg" ].

Landshut_n1 := n_proper_le &
  [ STEM < "landshut" >,
    SYNSEM.LKEYS.KEYREL.CARG "Landshut" ].

Lang_n1 := n_proper_le &
  [ STEM < "lang" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lang" ].

Larry_n1 := n_proper_le &
  [ STEM < "larry" >,
    SYNSEM.LKEYS.KEYREL.CARG "Larry" ].

Latimer_n1 := n_proper_le &
  [ STEM < "latimer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Latimer" ].

Lauper_n1 := n_proper_le &
  [ STEM < "lauper" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lauper" ].

Lause_n1 := n_proper_le &
  [ STEM < "lause" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lause" ].

Lauser_n1 := n_proper_le &
  [ STEM < "lauser" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lauser" ].

Lew_n1 := n_proper_le &
  [ STEM < "lew" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lew" ].

Limburg_n1 := n_proper_le &
  [ STEM < "limburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Limburg" ].

Linden_n1 := n_proper_le &
  [ STEM < "linden" >,
    SYNSEM.LKEYS.KEYREL.CARG "Linden" ].

Lively_n1 := n_proper_le &
  [ STEM < "lively" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lively" ].

Lloyd-Webber_n1 := n_proper_le &
  [ STEM < "lloyd", "webber" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lloyd-Webber" ].

London_n1 := n_proper_le &
  [ STEM < "london" >,
    SYNSEM.LKEYS.KEYREL.CARG "London" ].

Lord_n1 := n_proper_le &
  [ STEM < "lord" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lord" ].

Lufthansa_n1 := n_proper_le &
  [ STEM < "lufthansa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lufthansa" ].

Luisenhof_n1 := n_intr_named_le &
  [ STEM < "luisenhof" >,
    SYNSEM.LKEYS.KEYREL.CARG "Luisenhof" ].

Lysander_n1 := n_proper_le &
  [ STEM < "lysander" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lysander" ].

Mac_n1 := n_proper_le &
  [ STEM < "mac" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mac" ].

Madrid_n1 := n_proper_le &
  [ STEM < "madrid" >,
    SYNSEM.LKEYS.KEYREL.CARG "Madrid" ].

Marcy_n1 := n_proper_le &
  [ STEM < "marcy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Marcy" ].

Maritim_n1 := n_intr_named_le &
  [ STEM < "maritim" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maritim" ].

Mark_n1 := n_proper_le &
  [ STEM < "mark" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mark" ].

Maschsee_n1 := n_proper_le &
  [ STEM < "maschsee" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maschsee" ].

Maui_n1 := n_proper_le &
  [ STEM < "maui" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maui" ].

Metze_n1 := n_proper_le &
  [ STEM < "metze" >,
    SYNSEM.LKEYS.KEYREL.CARG "Metze" ].

Meyer-Kuckuck_n1 := n_proper_le &
  [ STEM < "meyer", "kuckuck" >,
    SYNSEM.LKEYS.KEYREL.CARG "Meyer-Kuckuck" ].

Michael_n1 := n_proper_le &
  [ STEM < "michael" >,
    SYNSEM.LKEYS.KEYREL.CARG "Michael" ].

Mike_n1 := n_proper_le &
  [ STEM < "mike" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mike" ].

Milan_n1 := n_proper_le &
  [ STEM < "milan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Milan" ].

Minden_n1 := n_proper_le &
  [ STEM < "minden" >,
    SYNSEM.LKEYS.KEYREL.CARG "Minden" ].

Mittler_n1 := n_proper_le &
  [ STEM < "mittler" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mittler" ].

Monogahela_n1 := n_proper_le &
  [ STEM < "monogahela" >,
    SYNSEM.LKEYS.KEYREL.CARG "Monogahela" ].

Monongahela_n1 := n_proper_le &
  [ STEM < "monongahela" >,
    SYNSEM.LKEYS.KEYREL.CARG "Monongahela" ].

Morimoto_n1 := n_proper_le &
  [ STEM < "morimoto" >,
    SYNSEM.LKEYS.KEYREL.CARG "Morimoto" ].

Mozart_n1 := n_proper_le &
  [ STEM < "mozart" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mozart" ].

Nestroy_n1 := n_proper_le &
  [ STEM < "nestroy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nestroy" ].

Netherlands_n1 := n_intr_named_le &
  [ STEM < "netherlands" >,
    SYNSEM.LKEYS.KEYREL.CARG "Netherlands" ].

New_York_n1 := n_proper_le &
  [ STEM < "new", "york" >,
    SYNSEM.LKEYS.KEYREL.CARG "New_York" ].

New_York_City_n1 := n_proper_le &
  [ STEM < "new", "york", "city" >,
    SYNSEM.LKEYS.KEYREL.CARG "New_York" ].

Chicago_n1 := n_proper_le &
  [ STEM < "chicago" >,
    SYNSEM.LKEYS.KEYREL.CARG "Chicago" ].

Nick_n1 := n_proper_le &
  [ STEM < "nick" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nick" ].

Nils_n1 := n_proper_le &
  [ STEM < "nils" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nils" ].

Noah_n1 := n_proper_le &
  [ STEM < "noah" >,
    SYNSEM.LKEYS.KEYREL.CARG "Noah" ].

Northumberland_n1 := n_proper_le &
  [ STEM < "northumberland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Northumberland" ].

Norton_n1 := n_proper_le &
  [ STEM < "norton" >,
    SYNSEM.LKEYS.KEYREL.CARG "Norton" ].

Norway_n1 := n_proper_le &
  [ STEM < "norway" >,
    SYNSEM.LKEYS.KEYREL.CARG "Norway" ].

Oakes_n1 := n_proper_le &
  [ STEM < "oakes" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oakes" ].

Oakland_n1 := n_proper_le &
  [ STEM < "oakland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oakland" ].

Oakside_n1 := n_proper_le &
  [ STEM < "oakside" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oakside" ].

Oberressel_n1 := n_proper_le &
  [ STEM < "oberressel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oberressel" ].

Oder_n1 := n_proper_le &
  [ STEM < "oder" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oder" ].

Offenbach_n1 := n_proper_le &
  [ STEM < "offenbach" >,
    SYNSEM.LKEYS.KEYREL.CARG "Offenbach" ].

Offenburg_n1 := n_proper_le &
  [ STEM < "offenburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Offenburg" ].

Ogai_n1 := n_proper_le &
  [ STEM < "ogai" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ogai" ].

Oglethorpe_n1 := n_proper_le &
  [ STEM < "oglethorpe" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oglethorpe" ].

Oldenburg_n1 := n_proper_le &
  [ STEM < "oldenburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oldenburg" ].

Paderborn_n1 := n_proper_le &
  [ STEM < "paderborn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Paderborn" ].

Paradise_n1 := n_proper_le &
  [ STEM < "paradise" >,
    SYNSEM.LKEYS.KEYREL.CARG "Paradise" ].

Parkhotel_n1 := n_intr_named_le &
  [ STEM < "parkhotel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Parkhotel" ].

Passau_n1 := n_proper_le &
  [ STEM < "passau" >,
    SYNSEM.LKEYS.KEYREL.CARG "Passau" ].

Patty_n1 := n_proper_le &
  [ STEM < "patty" >,
    SYNSEM.LKEYS.KEYREL.CARG "Patty" ].

Paul_n1 := n_proper_le &
  [ STEM < "paul" >,
    SYNSEM.LKEYS.KEYREL.CARG "Paul" ].

Pforzheim_n1 := n_proper_le &
  [ STEM < "pforzheim" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pforzheim" ].

Philadelphia_n1 := n_proper_le &
  [ STEM < "philadelphia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Philadelphia" ].

Philly_n1 := n_proper_le &
  [ STEM < "philly" >,
    SYNSEM.LKEYS.KEYREL.CARG "Philly" ].

Potsdam_n1 := n_proper_le &
  [ STEM < "potsdam" >,
    SYNSEM.LKEYS.KEYREL.CARG "Potsdam" ].

Primanti_n1 := n_proper_le &
  [ STEM < "primanti" >,
    SYNSEM.LKEYS.KEYREL.CARG "Primanti" ].

Radeberg_n1 := n_proper_le &
  [ STEM < "radeberg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Radeberg" ].

Recklinghausen_n1 := n_proper_le &
  [ STEM < "recklinghausen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Recklinghausen" ].

Red_n1 := n_proper_le &
  [ STEM < "red" >,
    SYNSEM.LKEYS.KEYREL.CARG "Red" ].

Regensburg_n1 := n_proper_le &
  [ STEM < "regensburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Regensburg" ].

Rendsburg_n1 := n_proper_le &
  [ STEM < "rendsburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rendsburg" ].

Renner_n1 := n_proper_le &
  [ STEM < "renner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Renner" ].

Reutlingen_n1 := n_proper_le &
  [ STEM < "reutlingen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Reutlingen" ].

Rhein_n1 := n_proper_le &
  [ STEM < "rhein" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rhein" ].

Rheinland_n1 := n_proper_le &
  [ STEM < "rheinland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rheinland" ].

Ribeau_n1 := n_proper_le &
  [ STEM < "ribeau" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ribeau" ].

Richter_n1 := n_proper_le &
  [ STEM < "richter" >,
    SYNSEM.LKEYS.KEYREL.CARG "Richter" ].

Rob_n1 := n_proper_le &
  [ STEM < "rob" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rob" ].

Robert_n1 := n_proper_le &
  [ STEM < "robert" >,
    SYNSEM.LKEYS.KEYREL.CARG "Robert" ].

Rome_n1 := n_proper_le &
  [ STEM < "rome" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rome" ].

Rothenburg_n1 := n_proper_le &
  [ STEM < "rothenburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rothenburg" ].

Rottweil_n1 := n_proper_le &
  [ STEM < "rottweil" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rottweil" ].

Russell_n1 := n_proper_le &
  [ STEM < "russell" >,
    SYNSEM.LKEYS.KEYREL.CARG "Russell" ].

Siggraph_n1 := n_proper_le &
  [ STEM < "siggraph" >,
    SYNSEM.LKEYS.KEYREL.CARG "Siggraph" ].

Sam_n1 := n_proper_le &
  [ STEM < "sam" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sam" ].

San_Francisco_n1 := n_proper_le &
  [ STEM < "san", "francisco" >,
    SYNSEM.LKEYS.KEYREL.CARG "San_Francisco" ].

Sauber-Und-Co_n1 := n_proper_le &
  [ STEM < "saube", "und", "co" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sauber-Und-Co" ].

Scarazzo_n1 := n_proper_le &
  [ STEM < "scarazzo" >,
    SYNSEM.LKEYS.KEYREL.CARG "Scarazzo" ].

Schauspielhaus_n1 := n_proper_le &
  [ STEM < "schauspielhaus" >,
    SYNSEM.LKEYS.KEYREL.CARG "Schauspielhaus" ].

Schenley_n1 := n_proper_le &
  [ STEM < "schenley" >,
    SYNSEM.LKEYS.KEYREL.CARG "Schenley" ].

Schleswig_n1 := n_proper_le &
  [ STEM < "schleswig" >,
    SYNSEM.LKEYS.KEYREL.CARG "Schleswig" ].

Schlitz_n1 := n_proper_le &
  [ STEM < "schlitz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Schlitz" ].

Scott_n1 := n_proper_le &
  [ STEM < "scott" >,
    SYNSEM.LKEYS.KEYREL.CARG "Scott" ].

Seattle_n1 := n_proper_le &
  [ STEM < "seattle" >,
    SYNSEM.LKEYS.KEYREL.CARG "Seattle" ].

Seymour_n1 := n_proper_le &
  [ STEM < "seymour" >,
    SYNSEM.LKEYS.KEYREL.CARG "Seymour" ].

Shady_n1 := n_proper_le &
  [ STEM < "shady" >,
    SYNSEM.LKEYS.KEYREL.CARG "Shady" ].

Shadyside_n1 := n_proper_le &
  [ STEM < "shadyside" >,
    SYNSEM.LKEYS.KEYREL.CARG "Shadyside" ].

Siam_n1 := n_proper_le &
  [ STEM < "siam" >,
    SYNSEM.LKEYS.KEYREL.CARG "Siam" ].

Siegen_n1 := n_proper_le &
  [ STEM < "siegen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Siegen" ].

Singen_n1 := n_proper_le &
  [ STEM < "singen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Singen" ].

Slowig_n1 := n_proper_le &
  [ STEM < "slowig" >,
    SYNSEM.LKEYS.KEYREL.CARG "Slowig" ].

Soutome_n1 := n_proper_le &
  [ STEM < "soutome" >,
    SYNSEM.LKEYS.KEYREL.CARG "Soutome" ].

Spaghetti_Warehouse_n1 := n_intr_named_le &
  [ STEM < "spaghetti", "warehouse" >,
    SYNSEM.LKEYS.KEYREL.CARG "Spaghetti_Warehouse" ].

Speyer_n1 := n_proper_le &
  [ STEM < "speyer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Speyer" ].

Sprengel_n1 := n_proper_le &
  [ STEM < "sprengel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sprengel" ].

Staatstheater_n1 := n_intr_named_le &
  [ STEM < "staatstheater" >,
    SYNSEM.LKEYS.KEYREL.CARG "Staatstheater" ].

Stairway-Queen_n1 := n_proper_le &
  [ STEM < "stairway", "queen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stairway-Queen" ].

Starnberg_n1 := n_proper_le &
  [ STEM < "starnberg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Starnberg" ].

Steinhuder-Meer_n1 := n_proper_le &
  [ STEM < "steinhuder", "meer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Steinhuder-Meer" ].

Stern_n1 := n_proper_le &
  [ STEM < "stern" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stern" ].

Stift_n1 := n_proper_le &
  [ STEM < "stift" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stift" ].

Stralsund_n1 := n_proper_le &
  [ STEM < "stralsund" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stralsund" ].

Strasbourg_n1 := n_proper_le &
  [ STEM < "strasbourg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Strasbourg" ].

Strom_n1 := n_proper_le &
  [ STEM < "strom" >,
    SYNSEM.LKEYS.KEYREL.CARG "Strom" ].

Stromberg_n1 := n_proper_le &
  [ STEM < "stromberg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stromberg" ].

Subway_n1 := n_proper_le &
  [ STEM < "subway" >,
    SYNSEM.LKEYS.KEYREL.CARG "Subway" ].

Sugar_n1 := n_proper_le &
  [ STEM < "sugar" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sugar" ].

Sullivan_n1 := n_proper_le &
  [ STEM < "sullivan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sullivan" ].

Summers_n1 := n_proper_le &
  [ STEM < "summers" >,
    SYNSEM.LKEYS.KEYREL.CARG "Summers" ].

Susquehanna_n1 := n_proper_le &
  [ STEM < "susquehanna" >,
    SYNSEM.LKEYS.KEYREL.CARG "Susquehanna" ].

Taco_Bell_n1 := n_proper_le &
  [ STEM < "taco", "bell" >,
    SYNSEM.LKEYS.KEYREL.CARG "Taco_Bell" ].

Takemoto_n1 := n_proper_le &
  [ STEM < "takemoto" >,
    SYNSEM.LKEYS.KEYREL.CARG "Takemoto" ].

The-Hairy-Ape_n1 := n_proper_le &
  [ STEM < "the", "hairy", "ape" >,
    SYNSEM.LKEYS.KEYREL.CARG "The-Hairy-Ape" ].

Thomas_n1 := n_proper_le &
  [ STEM < "thomas" >,
    SYNSEM.LKEYS.KEYREL.CARG "Thomas" ].

Timothy_n1 := n_proper_le &
  [ STEM < "timothy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Timothy" ].

Tokyo_n1 := n_proper_le &
  [ STEM < "tokyo" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tokyo" ].

Tor_n1 := n_proper_le &
  [ STEM < "tor" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tor" ].

Toronto_n1 := n_proper_le &
  [ STEM < "toronto" >,
    SYNSEM.LKEYS.KEYREL.CARG "Toronto" ].

Torsten_n1 := n_proper_le &
  [ STEM < "torsten" >,
    SYNSEM.LKEYS.KEYREL.CARG "Torsten" ].

Traunstein_n1 := n_proper_le &
  [ STEM < "traunstein" >,
    SYNSEM.LKEYS.KEYREL.CARG "Traunstein" ].

Trevor_n1 := n_proper_le &
  [ STEM < "trevor" >,
    SYNSEM.LKEYS.KEYREL.CARG "Trevor" ].

Trier_n1 := n_proper_le &
  [ STEM < "trier" >,
    SYNSEM.LKEYS.KEYREL.CARG "Trier" ].

US_n1 := n_intr_named_le &
  [ STEM < "us" >,
    SYNSEM.LKEYS.KEYREL.CARG "US" ].

Ulm_n1 := n_proper_le &
  [ STEM < "ulm" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ulm" ].

United_States_n1 := n_intr_named_le &
  [ STEM < "united", "states" >,
    SYNSEM.LKEYS.KEYREL.CARG "United_States" ].

Venice_n1 := n_proper_le &
  [ STEM < "venice" >,
    SYNSEM.LKEYS.KEYREL.CARG "Venice" ].

Wahlster_n1 := n_proper_le &
  [ STEM < "wahlster" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wahlster" ].

Waibel_n1 := n_proper_le &
  [ STEM < "waibel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Waibel" ].

Wall_n1 := n_proper_le &
  [ STEM < "wall" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wall" ].

Wally_n1 := n_proper_le &
  [ STEM < "wally" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wally" ].

Warner_n1 := n_proper_le &
  [ STEM < "warner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Warner" ].

Water_n1 := n_proper_le &
  [ STEM < "water" >,
    SYNSEM.LKEYS.KEYREL.CARG "Water" ].

Wean_n1 := n_proper_le &
  [ STEM < "wean" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wean" ].

Wetzlar_n1 := n_proper_le &
  [ STEM < "wetzlar" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wetzlar" ].

Wilhelm_n1 := n_proper_le &
  [ STEM < "wilhelm" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wilhelm" ].

Wok_n1 := n_proper_le &
  [ STEM < "wok" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wok" ].

Wolfsburg_n1 := n_proper_le &
  [ STEM < "wolfsburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wolfsburg" ].

Woyzeck_n1 := n_proper_le &
  [ STEM < "woyzeck" >,
    SYNSEM.LKEYS.KEYREL.CARG "Woyzeck" ].

Wuppertal_n1 := n_proper_le &
  [ STEM < "wuppertal" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wuppertal" ].

Yamazaki_n1 := n_proper_le &
  [ STEM < "yamazaki" >,
    SYNSEM.LKEYS.KEYREL.CARG "Yamazaki" ].

Youghiogheny_n1 := n_proper_le &
  [ STEM < "youghiogheny" >,
    SYNSEM.LKEYS.KEYREL.CARG "Youghiogheny" ].

Yum_n1 := n_proper_le &
  [ STEM < "yum" >,
    SYNSEM.LKEYS.KEYREL.CARG "Yum" ].

Zaphod_n1 := n_proper_le &
  [ STEM < "zaphod" >,
    SYNSEM.LKEYS.KEYREL.CARG "Zaphod" ].

Zell_n1 := n_proper_le &
  [ STEM < "zell" >,
    SYNSEM.LKEYS.KEYREL.CARG "Zell" ].

Zentral_n1 := n_intr_named_le &
  [ STEM < "zentral" >,
    SYNSEM.LKEYS.KEYREL.CARG "Zentral" ].

Zentralhotel-Kaiserhof_n1 := n_intr_named_le &
  [ STEM < "zentralhotel", "kaiserhof" >,
    SYNSEM.LKEYS.KEYREL.CARG "Zentralhotel-Kaiserhof" ].

Zephyr_n1 := n_proper_le &
  [ STEM < "zephyr" >,
    SYNSEM.LKEYS.KEYREL.CARG "Zephyr" ].

Kaestner_n1 := n_proper_le &
  [ STEM < "kaestner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kaestner" ].

Von-Julis_n1 := n_proper_le &
  [ STEM < "von", "julis" >,
    SYNSEM.LKEYS.KEYREL.CARG "Von-Julis" ].

Von-Sudniz_n1 := n_proper_le &
  [ STEM < "von", "sudniz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Von-Sudniz" ].

American_n1 := n_intr_le &
  [ STEM < "american" >,
    SYNSEM.LKEYS.KEYREL.PRED "_american_n_rel" ].

Arab_n1 := n_intr_le &
  [ STEM < "arab" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arab_n_rel" ].

arab_a1 := adj_intrans_le &
  [ STEM < "arab" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arab_isect_rel" ].

Filofax_n1 := n_intr_le &
  [ STEM < "filofax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_filofax_rel" ].

german_n2 := n_intr_le &
  [ STEM < "german" >,
    SYNSEM.LKEYS.KEYREL.PRED "_german_n_rel" ].

god_n1 := n_intr_le &
  [ STEM < "god" >,
    SYNSEM.LKEYS.KEYREL.PRED "_god_rel" ].

Greek_n2 := n_intr_le &
  [ STEM < "greek" >,
    SYNSEM.LKEYS.KEYREL.PRED "_greek_n_rel" ].

inn_n1 := n_intr_le &
  [ STEM < "inn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inn_rel" ].

Italian_n2 := n_intr_le &
  [ STEM < "italian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_italian_n_rel" ].

mount_n1 := n_intr_le &
  [ STEM < "mount" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mount_n_rel" ].

mount_ttl := n_title_le &
  [ STEM < "mt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mount_n_rel" ].

mount_ttl_2 := n_title_le &
  [ STEM < "mt", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_mount_n_rel" ].

Scot_n1 := n_intr_le &
  [ STEM < "scot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scot_rel" ].

square_n1 := n_ppof_le &
  [ STEM < "square" >,
    SYNSEM.LKEYS.KEYREL.PRED "_square_rel" ].

Thai_n2 := n_intr_le &
  [ STEM < "thai" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thai_n_rel" ].

abbreviation_n1 := n_intr_le &
  [ STEM < "abbreviation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abbreviation_rel" ].

access_n1 := n_mass_le &
  [ STEM < "access" >,
    SYNSEM.LKEYS.KEYREL.PRED "_access_n_rel" ].

accountant_n1 := n_intr_le &
  [ STEM < "accountant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accountant_rel" ].

acquisition_n1 := n_ppof_le &
  [ STEM < "acquisition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acquisition_rel" ].

advance_n1 := n_ppof_le &
  [ STEM < "advance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advance_n_rel" ].

advisor_n1 := n_intr_le &
  [ STEM < "advisor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advisor_rel" ].

aim_n1 := n_ppof_le &
  [ STEM < "aim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aim_n_rel" ].

airline_n1 := n_intr_le &
  [ STEM < "airline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_airline_rel" ].

allergy_n1 := n_intr_le &
  [ STEM < "allergy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allergy_rel" ].

analysis_n1 := n_mass_count_ppof_le &
  [ STEM < "analysis" >,
    SYNSEM.LKEYS.KEYREL.PRED "_analysis_rel" ].

angle_n1 := n_ppof_le &
  [ STEM < "angle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_angle_n_rel" ].

animal_n1 := n_intr_le &
  [ STEM < "animal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_animal_rel" ].

announcement_n1 := n_ppof_le &
  [ STEM < "announcement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_announcement_rel" ].

apostrophe_n1 := n_intr_le &
  [ STEM < "apostrophe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apostrophe_rel" ].

apple_n1 := n_intr_le &
  [ STEM < "apple" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apple_rel" ].

argument_n1 := n_intr_le &
  [ STEM < "argument" >,
    SYNSEM.LKEYS.KEYREL.PRED "_argument_rel" ].

argumentation_n1 := n_intr_le &
  [ STEM < "argumentation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_argumentation_rel" ].

art_n1 := n_intr_le &
  [ STEM < "art" >,
    SYNSEM.LKEYS.KEYREL.PRED "_art_rel" ].

article_n1 := n_ppof_le &
  [ STEM < "article" >,
    SYNSEM.LKEYS.KEYREL.PRED "_article_rel" ].

artist_n1 := n_intr_le &
  [ STEM < "artist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_artist_rel" ].

aspect_n1 := n_ppof_le &
  [ STEM < "aspect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aspect_rel" ].

asset_n1 := n_ppof_le &
  [ STEM < "asset" >,
    SYNSEM.LKEYS.KEYREL.PRED "_asset_rel" ].

assistant_n1 := n_intr_le &
  [ STEM < "assistant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assistant_rel" ].

attention_n1 := n_mass_count_ppto_le &
  [ STEM < "attention" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attention_rel" ].

attitude_n1 := n_ppof_le &
  [ STEM < "attitude" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attitude_rel" ].

authority_n1 := n_ppof_le &
  [ STEM < "authority" >,
    SYNSEM.LKEYS.KEYREL.PRED "_authority_rel" ].

availability_n1 := n_mass_ppcomp_le &
  [ STEM < "availability" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_availability_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

avenue_n1 := n_ppof_le &
  [ STEM < "avenue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_avenue_rel" ].

avenue_n2 := n_ppof_le &
  [ STEM < "ave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_avenue_rel" ].

back_n1 := n_ppof_le &
  [ STEM < "back" >,
    SYNSEM.LKEYS.KEYREL.PRED "_back_n_rel" ].

backup_n1 := n_intr_le &
  [ STEM < "backup" >,
    SYNSEM.LKEYS.KEYREL.PRED "_backup_rel" ].

bagel_n1 := n_intr_le &
  [ STEM < "bagel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bagel_rel" ].

baggage_n1 := n_mass_count_le &
  [ STEM < "baggage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_baggage_rel" ].

balcony_n1 := n_ppof_le &
  [ STEM < "balcony" >,
    SYNSEM.LKEYS.KEYREL.PRED "_balcony_rel" ].

ball_n1 := n_ppof_le &
  [ STEM < "ball" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ball_rel" ].

bank_n1 := n_ppof_le &
  [ STEM < "bank" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bank_rel" ].

barrier_n1 := n_intr_le &
  [ STEM < "barrier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_barrier_rel" ].

basketball_n1 := n_mass_count_le &
  [ STEM < "basketball" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basketball_rel" ].

bat_n1 := n_intr_le &
  [ STEM < "bat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bat_rel" ].

bath_n1 := n_intr_le &
  [ STEM < "bath" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bath_rel" ].

beach_n1 := n_intr_le &
  [ STEM < "beach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beach_rel" ].

bear_n1 := n_intr_le &
  [ STEM < "bear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bear_n_rel" ].

bed_n1 := n_ppof_le &
  [ STEM < "bed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bed_rel" ].

bet_n1 := n_intr_le &
  [ STEM < "bet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bet_n_rel" ].

bicycle_n1 := n_intr_le &
  [ STEM < "bicycle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bicycle_rel" ].

bingo_n1 := n_intr_le &
  [ STEM < "bingo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bingo_rel" ].

bird_n1 := n_intr_le &
  [ STEM < "bird" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bird_rel" ].

bit_n1 := n_ppof_le &
  [ STEM < "bit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bit_n_rel" ].

bite_n1 := n_ppof_le &
  [ STEM < "bite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bite_n_rel" ].

blonde_n1 := n_intr_le &
  [ STEM < "blonde" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blonde_n_rel" ].

blonde_adj := adj_intrans_le &
  [ STEM < "blonde" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blonde_adj_rel" ].

board_n1 := n_ppof_le &
  [ STEM < "board" >,
    SYNSEM.LKEYS.KEYREL.PRED "_board_n_rel" ].

boom_n1 := n_intr_le &
  [ STEM < "boom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boom_rel" ].

border_n1 := n_ppof_le &
  [ STEM < "border" >,
    SYNSEM.LKEYS.KEYREL.PRED "_border_n_rel" ].

boredom_n1 := n_intr_le &
  [ STEM < "boredom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boredom_rel" ].

boss_n1 := n_ppof_le &
  [ STEM < "boss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boss_rel" ].

bottle_n1 := n_ppof_le &
  [ STEM < "bottle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bottle_rel" ].

bound_n1 := n_intr_le &
  [ STEM < "bound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bound_rel" ].

box_n1 := n_ppof_le &
  [ STEM < "box" >,
    SYNSEM.LKEYS.KEYREL.PRED "_box_n_rel" ].

box_title := n_title_le &
  [ STEM < "box" >,
    SYNSEM.LKEYS.KEYREL.PRED "_box_n_rel" ].

brim_n1 := n_ppof_le &
  [ STEM < "brim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brim_rel" ].

broadcasting_n1 := n_ppof_le &
  [ STEM < "broadcasting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_broadcasting_rel" ].

brochure_n1 := n_ppof_le &
  [ STEM < "brochure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brochure_rel" ].

brother_n1 := n_ppof_le &
  [ STEM < "brother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brother_rel" ].

brunch_n1 := n_intr_le &
  [ STEM < "brunch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_branch_rel" ].

buddy_n1 := n_ppof_le &
  [ STEM < "buddy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buddy_rel" ].

budget_n1 := n_ppof_le &
  [ STEM < "budget" >,
    SYNSEM.LKEYS.KEYREL.PRED "_budget_rel" ].

buffer_n1 := n_ppof_le &
  [ STEM < "buffer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buffer_rel" ].

buffet_n1 := n_intr_le &
  [ STEM < "buffet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buffet_rel" ].

bummer_n1 := n_ppof_le &
  [ STEM < "bummer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bummer_rel" ].

bus_n1 := n_ppof_le &
  [ STEM < "bus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bus_rel" ].

bus-line_n1 := n_intr_le &
  [ STEM < "bus", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bus_line_rel" ].

cake_n1 := n_intr_le &
  [ STEM < "cake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cake_rel" ].

calorie_n1 := n_intr_le &
  [ STEM < "calorie" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calorie_rel" ].

cancellation_n1 := n_mass_count_ppof_le &
  [ STEM < "cancellation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cancellation_rel" ].

cart_n1 := n_ppof_le &
  [ STEM < "cart" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cart_rel" ].

cash_n1 := n_mass_le &
  [ STEM < "cash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cash_rel" ].

category_n1 := n_ppof_le &
  [ STEM < "category" >,
    SYNSEM.LKEYS.KEYREL.PRED "_category_rel" ].

caviar_n1 := n_intr_le &
  [ STEM < "caviar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_caviar_rel" ].

celebration_n1 := n_ppof_le &
  [ STEM < "celebration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_celebration_rel" ].

certificate_n1 := n_ppof_le &
  [ STEM < "certificate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_certificate_rel" ].

champagne_n1 := n_intr_le &
  [ STEM < "champagne" >,
    SYNSEM.LKEYS.KEYREL.PRED "_champagne_rel" ].

chancellor_n1 := n_ppof_le &
  [ STEM < "chancellor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chancellor_rel" ].

chancellor_ttl := n_title_le &
  [ STEM < "chancellor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chancellor_rel" ].

emperor_n1 := n_ppof_le &
  [ STEM < "emperor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_emperor_rel" ].

emperor_ttl := n_title_le &
  [ STEM < "emperor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_emperor_rel" ].

check-in_n1 := n_mass_count_le &
  [ STEM < "check", "in" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_in_n_rel" ].

chief_n1 := n_ppof_le &
  [ STEM < "chief" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chief_rel" ].

chunk_n1 := n_ppof_le &
  [ STEM < "chunk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chunk_rel" ].

church_n1 := n_mass_count_le &
  [ STEM < "church" >,
    SYNSEM.LKEYS.KEYREL.PRED "_church_rel" ].

cinema_n1 := n_intr_le &
  [ STEM < "cinema" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cinema_rel" ].

circle_n1 := n_ppof_le &
  [ STEM < "circle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circle_rel" ].

circular_n1 := n_intr_le &
  [ STEM < "circular" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circular_rel" ].

circulation_n1 := n_ppof_le &
  [ STEM < "circulation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circulation_rel" ].

clarity_n1 := n_ppof_le &
  [ STEM < "clarity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clarity_rel" ].

climate_n1 := n_ppof_le &
  [ STEM < "climate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_climate_rel" ].

close_n1 := n_ppof_le &
  [ STEM < "close" >,
    SYNSEM.LKEYS.KEYREL.PRED "_close_n_rel" ].

closet_n1 := n_ppof_le &
  [ STEM < "closet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_closet_rel" ].

club_n1 := n_ppof_le &
  [ STEM < "club" >,
    SYNSEM.LKEYS.KEYREL.PRED "_club_n_rel" ].

clue_n1 := n_intr_le &
  [ STEM < "clue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clue_rel" ].

code_n1 := n_ppof_le &
  [ STEM < "code" >,
    SYNSEM.LKEYS.KEYREL.PRED "_code_n_rel" ].

coincidence_n1 := n_intr_le &
  [ STEM < "coincidence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coincidence_rel" ].

cola_n1 := n_intr_le &
  [ STEM < "cola" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cola_rel" ].

colloquium_n1 := n_intr_le &
  [ STEM < "colloquium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_colloquium_rel" ].

communication_n1 := n_ppof_le &
  [ STEM < "communication" >,
    SYNSEM.LKEYS.KEYREL.PRED "_communication_rel" ].

community_n1 := n_ppof_le &
  [ STEM < "community" >,
    SYNSEM.LKEYS.KEYREL.PRED "_community_rel" ].

compromise_n1 := n_intr_le &
  [ STEM < "compromise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compromise_n_rel" ].

conception_n1 := n_ppof_le &
  [ STEM < "conception" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conception_rel" ].

concert_n1 := n_ppof_le &
  [ STEM < "concert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concert_rel" ].

concession_n1 := n_intr_le &
  [ STEM < "concession" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concession_rel" ].

conclusion_n1 := n_ppof_le &
  [ STEM < "conclusion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conclusion_rel" ].

condition_n1 := n_mass_count_ppof_le &
  [ STEM < "condition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_condition_rel" ].

condo_n1 := n_intr_le &
  [ STEM < "condo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_condo_rel" ].

conduct_n1 := n_ppof_le &
  [ STEM < "conduct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conduct_n_rel" ].

connection_n1 := n_ppof_le &
  [ STEM < "connection" >,
    SYNSEM.LKEYS.KEYREL.PRED "_connection_rel" ].

consideration_n1 := n_ppof_le &
  [ STEM < "consideration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consideration_rel" ].

consolation_n1 := n_intr_le &
  [ STEM < "consolation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consolation_rel" ].

conspiracy_n1 := n_intr_le &
  [ STEM < "conspiracy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conspiracy_rel" ].

consultation_n1 := n_ppof_le &
  [ STEM < "consultation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consultation_rel" ].

content_n1 := n_ppof_le &
  [ STEM < "content" >,
    SYNSEM.LKEYS.KEYREL.PRED "_content_n_rel" ].

contradiction_n1 := n_intr_le &
  [ STEM < "contradiction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contradiction_rel" ].

contrast_n1 := n_intr_le &
  [ STEM < "contrast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contrast_n_rel" ].

contribution_n1 := n_ppof_le &
  [ STEM < "contribution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contribution_rel" ].

control_n1 := n_mass_count_ppof_le &
  [ STEM < "control" >,
    SYNSEM.LKEYS.KEYREL.PRED "_control_n_rel" ].

convenience_n1 := n_ppof_le &
  [ STEM < "convenience" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convenience_rel" ].

convention-hall_n1 := n_intr_le &
  [ STEM < "convention", "hall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convention_hall_rel" ].

conviction_n1 := n_ppof_le &
  [ STEM < "conviction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conviction_rel" ].

cooperation_n1 := n_intr_le &
  [ STEM < "cooperation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cooperation_rel" ].

corner_n1 := n_ppof_le &
  [ STEM < "corner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_corner_n_rel" ].

council_n1 := n_mass_count_ppof_le &
  [ STEM < "council" >,
    SYNSEM.LKEYS.KEYREL.PRED "_council_rel" ].

count_n1 := n_ppof_le &
  [ STEM < "count" >,
    SYNSEM.LKEYS.KEYREL.PRED "_count_n_rel" ].

counter_n1 := n_ppof_le &
  [ STEM < "counter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counter_rel" ].

country_n1 := n_ppof_le &
  [ STEM < "country" >,
    SYNSEM.LKEYS.KEYREL.PRED "_country_rel" ].

county_n1 := n_mass_count_ppof_le &
  [ STEM < "county" >,
    SYNSEM.LKEYS.KEYREL.PRED "_county_rel" ].

court_n1 := n_ppof_le &
  [ STEM < "court" >,
    SYNSEM.LKEYS.KEYREL.PRED "_court_n_rel" ].

crack_n1 := n_intr_le &
  [ STEM < "crack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crack_n_rel" ].

crap_n1 := n_mass_count_le &
  [ STEM < "crap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crap_rel" ].

cream_n1 := n_mass_count_ppof_le &
  [ STEM < "cream" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cream_rel" ].

credit_n1 := n_mass_count_le &
  [ STEM < "credit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_credit_n_rel" ].

crew_n1 := n_ppof_le &
  [ STEM < "crew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crew_rel" ].

critique_n1 := n_ppof_le &
  [ STEM < "critique" >,
    SYNSEM.LKEYS.KEYREL.PRED "_critique_rel" ].

culture_n1 := n_ppof_le &
  [ STEM < "culture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_culture_rel" ].

cup_n1 := n_ppof_le &
  [ STEM < "cup" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cup_n_rel" ].

customer_n1 := n_ppof_le &
  [ STEM < "customer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_customer_rel" ].

cycle_n1 := n_intr_le &
  [ STEM < "cycle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cycle_n_rel" ].

cylinder_n1 := n_intr_le &
  [ STEM < "cylinder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cylinder_rel" ].

dance_n1 := n_ppof_le &
  [ STEM < "dance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dance_n_rel" ].

deficit_n1 := n_ppof_le &
  [ STEM < "deficit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deficit_rel" ].

deja_vu_n1 := n_intr_le &
  [ STEM < "deja_vu" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deja_vu_rel" ].

designer_n1 := n_ppof_le &
  [ STEM < "designer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_designer_rel" ].

devil_n1 := n_intr_le &
  [ STEM < "devil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_devil_rel" ].

dialog_n1 := n_intr_le &
  [ STEM < "dialog" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dialogue_rel" ].

dialogue_n1 := n_intr_le &
  [ STEM < "dialogue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dialogue_rel" ].

disadvantage_n1 := n_ppof_le &
  [ STEM < "disadvantage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disadvantage_rel" ].

disaster_n1 := n_mass_count_le &
  [ STEM < "disaster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disaster_rel" ].

disk_n1 := n_intr_le &
  [ STEM < "disk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disk_rel" ].

distraction_n1 := n_intr_le &
  [ STEM < "distraction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distraction_rel" ].

disturbance_n1 := n_intr_le &
  [ STEM < "disturbance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disturbance_rel" ].

documentation_n1 := n_ppof_le &
  [ STEM < "documentation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_documentation_rel" ].

dog_n1 := n_intr_le &
  [ STEM < "dog" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dog_n_rel" ].

donut_n1 := n_intr_le &
  [ STEM < "donut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_donut_rel" ].

door_n1 := n_ppof_le &
  [ STEM < "door" >,
    SYNSEM.LKEYS.KEYREL.PRED "_door_rel" ].

doubt_n1 := n_intr_le &
  [ STEM < "doubt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doubt_n_rel" ].

doughnut_n1 := n_intr_le &
  [ STEM < "doughnut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doughnut_rel" ].

drive_n1 := n_intr_le &
  [ STEM < "drive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drive_n_rel" ].

ear_n1 := n_ppof_le &
  [ STEM < "ear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ear_rel" ].

east_n1 := n_ppof_le &
  [ STEM < "east" >,
    SYNSEM.LKEYS.KEYREL.PRED "_east_n_rel" ].

east_n2 := n_adv_pl_le &
  [ STEM < "east" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _east_j_rel ] ].

eatery_n1 := n_intr_le &
  [ STEM < "eatery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eatery_rel" ].

edge_n1 := n_ppof_le &
  [ STEM < "edge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_edge_rel" ].

effort_n1 := n_ppof_le &
  [ STEM < "effort" >,
    SYNSEM.LKEYS.KEYREL.PRED "_effort_rel" ].

elevator_n1 := n_ppof_le &
  [ STEM < "elevator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elevator_rel" ].

email_n1 := n_mass_count_ppof_le &
  [ STEM < "email" >,
    SYNSEM.LKEYS.KEYREL.PRED "_email_n_rel" ].

embarrassment_n1 := n_intr_le &
  [ STEM < "embarrassment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_embarrassment_rel" ].

energy_n1 := n_mass_count_le &
  [ STEM < "energy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_energy_rel" ].

environment_n1 := n_ppof_le &
  [ STEM < "environment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_environment_rel" ].

envy_n1 := n_ppof_le &
  [ STEM < "envy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_envy_n_rel" ].

evaluation_n1 := n_ppof_le &
  [ STEM < "evaluation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_evaluation_rel" ].

eventuality_n1 := n_intr_le &
  [ STEM < "eventuality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eventuality_rel" ].

evil_n1 := n_intr_le &
  [ STEM < "evil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_evil_rel" ].

ex-girlfriend_n1 := n_intr_le &
  [ STEM < "ex", "girlfriend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_girlfriend_rel" ].

examination_n1 := n_ppof_le &
  [ STEM < "examination" >,
    SYNSEM.LKEYS.KEYREL.PRED "_examination_rel" ].

exchange_n1 := n_ppof_le &
  [ STEM < "exchange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exchange_n_rel" ].

excuse_n1 := n_intr_le &
  [ STEM < "excuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excuse_n_rel" ].

exhibition_n1 := n_ppof_le &
  [ STEM < "exhibition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exhibition_rel" ].

expedition_n1 := n_ppof_le &
  [ STEM < "expedition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expedition_rel" ].

exposure_n1 := n_ppof_le &
  [ STEM < "exposure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exposure_rel" ].

faculty_n1 := n_ppof_le &
  [ STEM < "faculty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_faculty_rel" ].

fairground_n1 := n_intr_le &
  [ STEM < "fairground" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fairground_rel" ].

farewell_n1 := n_intr_le &
  [ STEM < "farewell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_farewell_rel" ].

feeling_n1 := n_ppof_le &
  [ STEM < "feeling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feeling_rel" ].

fellow_n1 := n_intr_le &
  [ STEM < "fellow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fellow_rel" ].

festival_n1 := n_ppof_le &
  [ STEM < "festival" >,
    SYNSEM.LKEYS.KEYREL.PRED "_festival_rel" ].

final_n1 := n_intr_le &
  [ STEM < "final" >,
    SYNSEM.LKEYS.KEYREL.PRED "_final_n_rel" ].

finding_n1 := n_intr_le &
  [ STEM < "finding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finding_rel" ].

flexiday_n1 := n_intr_le &
  [ STEM < "flexiday" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flexiday_rel" ].

flip_n1 := n_ppof_le &
  [ STEM < "flip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flip_n_rel" ].

flop_n1 := n_intr_le &
  [ STEM < "flop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flop_rel" ].

flyer_n1 := n_intr_le &
  [ STEM < "flyer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flyer_rel" ].

foot_n1 := n_meas_ppof_le &
  [ STEM < "foot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foot_rel" ].

foreground_n1 := n_ppof_le &
  [ STEM < "foreground" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foreground_rel" ].

form_n1 := n_ppof_le &
  [ STEM < "form" >,
    SYNSEM.LKEYS.KEYREL.PRED "_form_n_rel" ].

format_n1 := n_ppof_le &
  [ STEM < "format" >,
    SYNSEM.LKEYS.KEYREL.PRED "_format_n_rel" ].

front_n1 := n_ppof_le &
  [ STEM < "front" >,
    SYNSEM.LKEYS.KEYREL.PRED "_front_n_rel" ].

fun_n1 := n_mass_le &
  [ STEM < "fun" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fun_n_rel" ].

function_n1 := n_ppof_le &
  [ STEM < "function" >,
    SYNSEM.LKEYS.KEYREL.PRED "_function_n_rel" ].

fund_n1 := n_intr_le &
  [ STEM < "fund" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fund_rel" ].

funding_n1 := n_ppof_le &
  [ STEM < "funding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_funding_rel" ].

gallery_n1 := n_ppof_le &
  [ STEM < "gallery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gallery_rel" ].

gardening_n1 := n_intr_le &
  [ STEM < "gardening" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gardening_rel" ].

gear_n1 := n_mass_count_le &
  [ STEM < "gear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gear_rel" ].

gerbil_n1 := n_intr_le &
  [ STEM < "gerbil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gerbil_rel" ].

gesture_n1 := n_intr_le &
  [ STEM < "gesture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gesture_n_rel" ].

ghost_n1 := n_ppof_le &
  [ STEM < "ghost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ghost_rel" ].

giant_n1 := n_ppof_le &
  [ STEM < "giant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_giant_rel" ].

gift_n1 := n_ppof_le &
  [ STEM < "gift" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gift_rel" ].

girlfriend_n1 := n_ppof_le &
  [ STEM < "girlfriend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_girlfriend_rel" ].

golf_n1 := n_intr_le &
  [ STEM < "golf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_golf_n_rel" ].

goodness_n1 := n_ppof_le &
  [ STEM < "goodness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_goodness_rel" ].

goulash_n1 := n_intr_le &
  [ STEM < "goulash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_goulash_rel" ].

grease_n1 := n_intr_le &
  [ STEM < "grease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grease_n_rel" ].

grill_n1 := n_intr_le &
  [ STEM < "grill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grill_n_rel" ].

grip_n1 := n_ppof_le &
  [ STEM < "grip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grip_n_rel" ].

guideline_n1 := n_ppof_le &
  [ STEM < "guideline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guideline_rel" ].

hallway_n1 := n_ppof_le &
  [ STEM < "hallway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hallway_rel" ].

hamburger_n1 := n_intr_le &
  [ STEM < "hamburger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hamburger_rel" ].

hanger_n1 := n_intr_le &
  [ STEM < "hanger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hanger_rel" ].

happening_n1 := n_intr_le &
  [ STEM < "happening" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happening_rel" ].

happening-artist_n1 := n_intr_le &
  [ STEM < "happening", "artist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happening_artist_rel" ].

haste_n1 := n_intr_le &
  [ STEM < "haste" >,
    SYNSEM.LKEYS.KEYREL.PRED "_haste_rel" ].

heart_n1 := n_ppof_le &
  [ STEM < "heart" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heart_rel" ].

heck_n1 := n_intr_le &
  [ STEM < "heck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heck_n_rel" ].

hell_n1 := n_intr_le &
  [ STEM < "hell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hell_rel" ].

hello_n1 := n_intr_le &
  [ STEM < "hello" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hello_rel" ].

help_n1 := n_mass_count_le &
  [ STEM < "help" >,
    SYNSEM.LKEYS.KEYREL.PRED "_help_n_rel" ].

hepatitis_n1 := n_mass_count_le &
  [ STEM < "hepatitis" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hepatitis_rel" ].

highway_n1 := n_intr_le &
  [ STEM < "highway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_highway_rel" ].

history_n1 := n_ppof_le &
  [ STEM < "history" >,
    SYNSEM.LKEYS.KEYREL.PRED "_history_rel" ].

hit_n1 := n_intr_le &
  [ STEM < "hit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hit_n_rel" ].

holder_n1 := n_ppof_le &
  [ STEM < "holder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_holder_rel" ].

hole_n1 := n_intr_le &
  [ STEM < "hole" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hole_rel" ].

honor_n1 := n_ppof_le &
  [ STEM < "honor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_honor_n_rel" ].

horse_n1 := n_intr_le &
  [ STEM < "horse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horse_rel" ].

hoser_n1 := n_intr_le &
  [ STEM < "hoser" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hoser_rel" ].

hunger_n1 := n_intr_le &
  [ STEM < "hunger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hunger_rel" ].

hurry_n1 := n_intr_le &
  [ STEM < "hurry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hurry_n_rel" ].

ice_n1 := n_mass_le &
  [ STEM < "ice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ice_rel" ].

improbability_n1 := n_ppof_le &
  [ STEM < "improbability" >,
    SYNSEM.LKEYS.KEYREL.PRED "_improbability_rel" ].

industry_n1 := n_ppof_le &
  [ STEM < "industry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_industry_rel" ].

inquiry_n1 := n_ppof_le &
  [ STEM < "inquiry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inquiry_rel" ].

instruction_n1 := n_ppof_le &
  [ STEM < "instruction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instruction_rel" ].

insult_n1 := n_intr_le &
  [ STEM < "insult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insult_n_rel" ].

intelligence_n1 := n_mass_count_ppof_le &
  [ STEM < "intelligence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intelligence_rel" ].

intercity_n2 := n_intr_le &
  [ STEM < "intercity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intercity_rel" ].

interregio_n1 := n_intr_le &
  [ STEM < "interregio" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interregio_rel" ].

interruption_n1 := n_ppof_le &
  [ STEM < "interruption" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interruption_rel" ].

invitation_n1 := n_ppof_le &
  [ STEM < "invitation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invitation_rel" ].

item_n1 := n_ppof_le &
  [ STEM < "item" >,
    SYNSEM.LKEYS.KEYREL.PRED "_item_rel" ].

item_ttl := n_title_le &
  [ STEM < "item" >,
    SYNSEM.LKEYS.KEYREL.PRED "_item_rel" ].

jacuzzi_n1 := n_intr_le &
  [ STEM < "jacuzzi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jacuzzi_rel" ].

jaguar_n2 := n_intr_le &
  [ STEM < "jaguar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jaguar_rel" ].

jazz_n1 := n_intr_le &
  [ STEM < "jazz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jazz_rel" ].

jet_n1 := n_intr_le &
  [ STEM < "jet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jet_n_rel" ].

jet-lag_n1 := n_intr_le &
  [ STEM < "jet", "lag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jet_lag_rel" ].

joke_n1 := n_intr_le &
  [ STEM < "joke" >,
    SYNSEM.LKEYS.KEYREL.PRED "_joke_n_rel" ].

joy_n1 := n_ppof_le &
  [ STEM < "joy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_joy_rel" ].

judgment_n1 := n_intr_le &
  [ STEM < "judgment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_judgment_rel" ].

judgement_n1 := n_intr_le &
  [ STEM < "judgement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_judgment_rel" ].

jump_n1 := n_intr_le &
  [ STEM < "jump" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jump_n_rel" ].

kilometer_n1 := n_ppof_le &
  [ STEM < "kilometer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kilometer_rel" ].

kindness_n1 := n_ppof_le &
  [ STEM < "kindness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kindness_rel" ].

kitchen_n1 := n_ppof_le &
  [ STEM < "kitchen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kitchen_rel" ].

knowledge_n1 := n_ppof_le &
  [ STEM < "knowledge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_knowledge_rel" ].

lady_n1 := n_ppof_le &
  [ STEM < "lady" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lady_rel" ].

lag_n1 := n_ppof_le &
  [ STEM < "lag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lag_rel" ].

land_n1 := n_ppof_le &
  [ STEM < "land" >,
    SYNSEM.LKEYS.KEYREL.PRED "_land_n_rel" ].

lane_n2 := n_intr_le &
  [ STEM < "lane" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lane_rel" ].

league_n1 := n_ppof_le &
  [ STEM < "league" >,
    SYNSEM.LKEYS.KEYREL.PRED "_league_rel" ].

left_n1 := n_mass_le &
  [ STEM < "left" >,
    SYNSEM.LKEYS.KEYREL.PRED "_left_n_rel" ].

liberty_n1 := n_intr_le &
  [ STEM < "liberty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_liberty_rel" ].

link_n1 := n_intr_le &
  [ STEM < "link" >,
    SYNSEM.LKEYS.KEYREL.PRED "_link_n_rel" ].

load_n1 := n_ppof_le &
  [ STEM < "load" >,
    SYNSEM.LKEYS.KEYREL.PRED "_load_n_rel" ].

luncheon_n1 := n_intr_le &
  [ STEM < "luncheon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_luncheon_rel" ].

mail_n1 := n_mass_count_ppof_le &
  [ STEM < "mail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mail_n_rel" ].

make_up_n1 := n_intr_le &
  [ STEM < "make_up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_makeup_rel" ].

manuscript_n1 := n_ppof_le &
  [ STEM < "manuscript" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manuscript_rel" ].

mark_n2 := n_ppof_le &
  [ STEM < "mark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deutschmark_rel" ].

market_n1 := n_ppof_le &
  [ STEM < "market" >,
    SYNSEM.LKEYS.KEYREL.PRED "_market_rel" ].

marketplace_n1 := n_ppof_le &
  [ STEM < "marketplace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_marketplace_rel" ].

match_n1 := n_ppof_le &
  [ STEM < "match" >,
    SYNSEM.LKEYS.KEYREL.PRED "_match_n_rel" ].

medium_n1 := n_intr_le &
  [ STEM < "medium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_medium_n_rel" ].

track_meet_n1 := n_intr_le &
  [ STEM < "track", "meet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_track_meet_rel" ].

message_n1 := n_ppof_le &
  [ STEM < "message" >,
    SYNSEM.LKEYS.KEYREL.PRED "_message_rel" ].

meter_n1 := n_ppof_le &
  [ STEM < "meter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meter_n_rel" ].

meter_v1 := v_np_trans_le &
  [ STEM < "meter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meter_v_rel" ].

midnight_n1 := n_intr_le &
  [ STEM < "midnight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_midnight_rel" ].

mile_n1 := n_ppof_le &
  [ STEM < "mile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mile_rel" ].

mind_n1 := n_ppof_le &
  [ STEM < "mind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mind_n_rel" ].

minister_n1 := n_ppof_le &
  [ STEM < "minister" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minister_rel" ].

minutes_n1 := n_plur_ppcomp_le &
  [ STEM < "minutes" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_minutes_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

miscommunication_n1 := n_intr_le &
  [ STEM < "miscommunication" >,
    SYNSEM.LKEYS.KEYREL.PRED "_miscommunication_rel" ].

mission_n1 := n_intr_le &
  [ STEM < "mission" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mission_rel" ].

mixture_n1 := n_ppof_le &
  [ STEM < "mixture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mixture_rel" ].

model_n1 := n_ppcomp_le &
  [ STEM < "model" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_model_n_rel",
             LKEYS.--COMPKEY _of_p_nbar_rel ] ].

model_n2 := n_ppof_oblig_le &
  [ STEM < "model" >,
    SYNSEM.LKEYS.KEYREL.PRED "_model_n_rel" ].

motion_n1 := n_ppof_le &
  [ STEM < "motion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_motion_rel" ].

mover_n1 := n_ppof_le &
  [ STEM < "mover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mover_rel" ].

multiple_n1 := n_ppof_le &
  [ STEM < "multiple" >,
    SYNSEM.LKEYS.KEYREL.PRED "_multiple_n_rel" ].

museum_n1 := n_ppof_le &
  [ STEM < "museum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_museum_rel" ].

music_n1 := n_mass_le &
  [ STEM < "music" >,
    SYNSEM.LKEYS.KEYREL.PRED "_music_rel" ].

must_n1 := n_intr_le &
  [ STEM < "must" >,
    SYNSEM.LKEYS.KEYREL.PRED "_must_n_rel" ].

nail_n1 := n_intr_le &
  [ STEM < "nail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nail_n_rel" ].

nerve_n1 := n_intr_le &
  [ STEM < "nerve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nerve_rel" ].

networking_n1 := n_mass_count_le &
  [ STEM < "networking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_networking_rel" ].

newspaper_n1 := n_ppof_le &
  [ STEM < "newspaper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_newspaper_rel" ].

no_go_n1 := n_intr_le &
  [ STEM < "no", "go" >,
    SYNSEM.LKEYS.KEYREL.PRED "_no_go_rel" ].

non_smoker_n1 := n_intr_le &
  [ STEM < "non_smoker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_smoker_rel" ].

noon_n1 := n_intr_le &
  [ STEM < "noon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_noon_rel" ].

north_n1 := n_ppof_le &
  [ STEM < "north" >,
    SYNSEM.LKEYS.KEYREL.PRED "_north_n_rel" ].

north_n2 := n_adv_pl_le &
  [ STEM < "north" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _north_j_rel ] ].

notion_n1 := n_ppof_le &
  [ STEM < "notion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notion_rel" ].

obsession_n1 := n_intr_le &
  [ STEM < "obsession" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obsession_rel" ].

opera_n1 := n_mass_count_ppof_le &
  [ STEM < "opera" >,
    SYNSEM.LKEYS.KEYREL.PRED "_opera_rel" ].

ophthalmologist_n1 := n_intr_le &
  [ STEM < "ophthalmologist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ophthalmologist_rel" ].

organizer_n1 := n_ppof_le &
  [ STEM < "organizer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_organizer_rel" ].

outskirts_n1 := n_plur_ppcomp_le &
  [ STEM < "outskirts" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_outskirts_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

overtime_n1 := n_mass_count_le &
  [ STEM < "overtime" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overtime_rel" ].

owner_n1 := n_ppof_le &
  [ STEM < "owner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_owner_rel" ].

pack_n1 := n_ppof_le &
  [ STEM < "pack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pack_n_rel" ].

package_n1 := n_ppof_le &
  [ STEM < "package" >,
    SYNSEM.LKEYS.KEYREL.PRED "_package_n_rel" ].

paint_n1 := n_intr_le &
  [ STEM < "paint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_paint_n_rel" ].

painting_n1 := n_ppof_le &
  [ STEM < "painting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_painting_rel" ].

panel_n1 := n_ppof_le &
  [ STEM < "panel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_panel_rel" ].

paperwork_n1 := n_intr_le &
  [ STEM < "paperwork" >,
    SYNSEM.LKEYS.KEYREL.PRED "_paperwork_rel" ].

par_n1 := n_intr_le &
  [ STEM < "par" >,
    SYNSEM.LKEYS.KEYREL.PRED "_par_rel" ].

pardon_n1 := n_intr_le &
  [ STEM < "pardon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pardon_n_rel" ].

past_n1 := n_intr_le &
  [ STEM < "past" >,
    SYNSEM.LKEYS.KEYREL.PRED "_past_n_rel" ].

payment_n1 := n_mass_count_ppof_le &
  [ STEM < "payment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_payment_rel" ].

pedestrian_n1 := n_intr_le &
  [ STEM < "pedestrian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pedestrian_rel" ].

penthouse_n1 := n_intr_le &
  [ STEM < "penthouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_penthouse_rel" ].

percent_n1 := n_ppof_le &
  [ STEM < "percent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_percent_rel" ].

per_cent_n1 := n_ppof_le &
  [ STEM < "per", "cent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_percent_rel" ].

per_cent_plur_n1 := n_plur_ppcomp_le &
  [ STEM < "per", "cent" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_percent_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

percent_char_n1 := n_ppof_le &
  [ STEM < "%" >,
    SYNSEM.LKEYS.KEYREL.PRED "_percent_rel" ].

performance-artist_n1 := n_intr_le &
  [ STEM < "performance", "artist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_performance_artist_rel" ].

pet_n1 := n_intr_le &
  [ STEM < "pet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pet_n_rel" ].

phase_n1 := n_ppof_le &
  [ STEM < "phase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_phase_rel" ].

photographer_n1 := n_ppof_le &
  [ STEM < "photographer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_photographer_rel" ].

pick_n1 := n_ppof_le &
  [ STEM < "pick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pick_n_rel" ].

picture_n1 := n_ppof_le &
  [ STEM < "picture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_picture_n_rel" ].

pill_n1 := n_intr_le &
  [ STEM < "pill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pill_rel" ].

pilot_n1 := n_ppof_le &
  [ STEM < "pilot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pilot_rel" ].

pizza_n1 := n_intr_le &
  [ STEM < "pizza" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pizza_rel" ].

pollution_n1 := n_ppof_le &
  [ STEM < "pollution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pollution_rel" ].

post_n1 := n_intr_le &
  [ STEM < "post" >,
    SYNSEM.LKEYS.KEYREL.PRED "_post_n_rel" ].

pottery_n1 := n_intr_le &
  [ STEM < "pottery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pottery_rel" ].

precedence_n1 := n_intr_le &
  [ STEM < "precedence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precedence_rel" ].

presidency_n1 := n_ppof_le &
  [ STEM < "presidency" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presidency_rel" ].

president_n1 := n_ppof_le &
  [ STEM < "president" >,
    SYNSEM.LKEYS.KEYREL.PRED "_president_rel" ].

price-list_n1 := n_ppof_le &
  [ STEM < "price", "list" >,
    SYNSEM.LKEYS.KEYREL.PRED "_price_list_rel" ].

prince_n1 := n_ppof_le &
  [ STEM < "prince" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prince_rel" ].

prince_ttl := n_title_le &
  [ STEM < "prince" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prince_rel" ].

princess_n1 := n_ppof_le &
  [ STEM < "princess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_princess_n_rel" ].

princess_ttl := n_title_le &
  [ STEM < "princess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_princess_n_rel" ].

print_n1 := n_intr_le &
  [ STEM < "print" >,
    SYNSEM.LKEYS.KEYREL.PRED "_print_n_rel" ].

priority_n1 := n_ppof_le &
  [ STEM < "priority" >,
    SYNSEM.LKEYS.KEYREL.PRED "_priority_rel" ].

procedure_n1 := n_ppof_le &
  [ STEM < "procedure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_procedure_rel" ].

procedure_n2 := n_cpcomp_inf_le &
  [ STEM < "procedure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_procedure_c_rel" ].

process_n1 := n_mass_count_ppof_le &
  [ STEM < "process" >,
    SYNSEM.LKEYS.KEYREL.PRED "_process_n_rel" ].

production_n1 := n_ppof_le &
  [ STEM < "production" >,
    SYNSEM.LKEYS.KEYREL.PRED "_production_rel" ].

productivity_n1 := n_ppof_le &
  [ STEM < "productivity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_productivity_rel" ].

progress_n1 := n_ppof_le &
  [ STEM < "progress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_progress_n_rel" ].

promise_n1 := n_ppof_le &
  [ STEM < "promise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promise_n_rel" ].

promptness_n1 := n_intr_le &
  [ STEM < "promptness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promptness_rel" ].

propaganda_n1 := n_intr_le &
  [ STEM < "propaganda" >,
    SYNSEM.LKEYS.KEYREL.PRED "_propaganda_rel" ].

prospect_n1 := n_ppof_le &
  [ STEM < "prospect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prospect_rel" ].

protocol_n1 := n_intr_le &
  [ STEM < "protocol" >,
    SYNSEM.LKEYS.KEYREL.PRED "_protocol_rel" ].

pub_n1 := n_intr_le &
  [ STEM < "pub" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pub_rel" ].

public_n1 := n_intr_le &
  [ STEM < "public" >,
    SYNSEM.LKEYS.KEYREL.PRED "_public_n_rel" ].

purchase_n1 := n_ppof_le &
  [ STEM < "purchase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_purchase_n_rel" ].

quality_n1 := n_ppof_le &
  [ STEM < "quality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quality_rel" ].

qualm_n1 := n_intr_le &
  [ STEM < "qualm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_qualm_rel" ].

quota_n1 := n_intr_le &
  [ STEM < "quota" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quota_rel" ].

race_n1 := n_ppof_le &
  [ STEM < "race" >,
    SYNSEM.LKEYS.KEYREL.PRED "_race_n_rel" ].

railway_n1 := n_ppof_le &
  [ STEM < "railway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_railway_rel" ].

reception_n1 := n_ppof_le &
  [ STEM < "reception" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reception_rel" ].

regard_n1 := n_ppof_le &
  [ STEM < "regard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regard_n_rel" ].

relative_n1 := n_ppof_le &
  [ STEM < "relative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relative_n_rel" ].

relaxation_n1 := n_intr_le &
  [ STEM < "relaxation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relaxation_rel" ].

rendering_n1 := n_ppof_le &
  [ STEM < "rendering" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rendering_rel" ].

rent_n1 := n_mass_count_ppof_le &
  [ STEM < "rent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rent_n_rel" ].

rental_n1 := n_mass_count_ppof_le &
  [ STEM < "rental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rental_rel" ].

repair_n1 := n_mass_count_ppof_le &
  [ STEM < "repair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repair_n_rel" ].

reply_n1 := n_ppof_le &
  [ STEM < "reply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reply_n_rel" ].

representation_n1 := n_mass_count_ppof_le &
  [ STEM < "representation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_representation_rel" ].

representative_n1 := n_ppof_le &
  [ STEM < "representative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_representative_rel" ].

rep_n1 := n_ppof_le &
  [ STEM < "rep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_representative_rel" ].

republic_n1 := n_ppof_le &
  [ STEM < "republic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_republic_rel" ].

reputation_n1 := n_ppof_le &
  [ STEM < "reputation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reputation_rel" ].

research_n1 := n_mass_ppcomp_le &
  [ STEM < "research" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_research_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

reserve_n1 := n_intr_le &
  [ STEM < "reserve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reserve_n_rel" ].

resource_n1 := n_ppof_le &
  [ STEM < "resource" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resource_rel" ].

review_n1 := n_ppof_le &
  [ STEM < "review" >,
    SYNSEM.LKEYS.KEYREL.PRED "_review_n_rel" ].

revue_n1 := n_ppof_le &
  [ STEM < "revue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revue_rel" ].

right_n1 := n_intr_le &
  [ STEM < "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_right_n_rel" ].

risk_n1 := n_ppof_le &
  [ STEM < "risk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_risk_n_rel" ].

river_n1 := n_ppof_le &
  [ STEM < "river" >,
    SYNSEM.LKEYS.KEYREL.PRED "_river_rel" ].

role_n1 := n_ppof_le &
  [ STEM < "role" >,
    SYNSEM.LKEYS.KEYREL.PRED "_role_rel" ].

roof_n1 := n_ppof_le &
  [ STEM < "roof" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roof_rel" ].

round_n1 := n_ppof_le &
  [ STEM < "round" >,
    SYNSEM.LKEYS.KEYREL.PRED "_round_n_rel" ].

rule_n1 := n_ppof_le &
  [ STEM < "rule" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rule_n_rel" ].

rush_n1 := n_intr_le &
  [ STEM < "rush" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rush_n_rel" ].

sale_n1 := n_mass_count_ppof_le &
  [ STEM < "sale" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sale_rel" ].

sand_n1 := n_intr_le &
  [ STEM < "sand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sand_n_rel" ].

scenario_n1 := n_intr_le &
  [ STEM < "scenario" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scenario_rel" ].

scene_n1 := n_ppof_le &
  [ STEM < "scene" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scene_rel" ].

scuba_n1 := n_intr_le &
  [ STEM < "scuba" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scuba_rel" ].

seat_n1 := n_ppof_le &
  [ STEM < "seat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seat_n_rel" ].

second_n1 := n_temp_ppcomp_nd_le &
  [ STEM < "second" >,
    SYNSEM.LKEYS.KEYREL.PRED "_second_n_rel" ].

second_n2 := n_temp_ppcomp_nd_le &
  [ STEM < "sec" >,
    SYNSEM.LKEYS.KEYREL.PRED "_second_n_rel" ].

self_n1 := n_intr_le &
  [ STEM < "self" >,
    SYNSEM.LKEYS.KEYREL.PRED "_self_rel" ].

semester_n1 := n_ppof_le &
  [ STEM < "semester" >,
    SYNSEM.LKEYS.KEYREL.PRED "_semester_rel" ].

sequence_n1 := n_ppof_le &
  [ STEM < "sequence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sequence_rel" ].

service_n1 := n_mass_count_le &
  [ STEM < "service" >,
    SYNSEM.LKEYS.KEYREL.PRED "_service_n_rel" ].

setup_n1 := n_intr_le &
  [ STEM < "setup" >,
    SYNSEM.LKEYS.KEYREL.PRED "_setup_rel" ].

shaker_n1 := n_intr_le &
  [ STEM < "shaker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shaker_rel" ].

shame_n1 := n_intr_le &
  [ STEM < "shame" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shame_rel" ].

shareholder_n1 := n_intr_le &
  [ STEM < "shareholder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shareholder_rel" ].

shit_n1 := n_intr_le &
  [ STEM < "shit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shit_n_rel" ].

shopping_n1 := n_intr_le &
  [ STEM < "shopping" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shopping_rel" ].

short-circuit_n1 := n_intr_le &
  [ STEM < "short", "circuit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_short_circuit_rel" ].

shortness_n1 := n_ppof_le &
  [ STEM < "shortness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shortness_rel" ].

shot_n1 := n_ppof_le &
  [ STEM < "shot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shot_n_rel" ].

shower_n1 := n_ppof_le &
  [ STEM < "shower" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shower_n_rel" ].

sightseeing_n1 := n_intr_le &
  [ STEM < "sightseeing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sightseeing_rel" ].

sister_n1 := n_ppof_le &
  [ STEM < "sister" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sister_rel" ].

size_n1 := n_ppof_le &
  [ STEM < "size" >,
    SYNSEM.LKEYS.KEYREL.PRED "_size_rel" ].

size_title := n_title_le &
  [ STEM < "size" >,
    SYNSEM.LKEYS.KEYREL.PRED "_size_rel" ].

slam_n1 := n_intr_le &
  [ STEM < "slam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slam_n_rel" ].

slam_v1 := v_np*_trans_le &
  [ STEM < "slam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slam_v_rel" ].

sleep_n1 := n_mass_le &
  [ STEM < "sleep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sleep_n_rel" ].

soccer_n1 := n_intr_le &
  [ STEM < "soccer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soccer_rel" ].

society_n1 := n_ppof_le &
  [ STEM < "society" >,
    SYNSEM.LKEYS.KEYREL.PRED "_society_rel" ].

socket_n1 := n_intr_le &
  [ STEM < "socket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_socket_rel" ].

solarium_n1 := n_intr_le &
  [ STEM < "solarium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solarium_rel" ].

soul_n1 := n_ppof_le &
  [ STEM < "soul" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soul_rel" ].

south_n1 := n_ppof_le &
  [ STEM < "south" >,
    SYNSEM.LKEYS.KEYREL.PRED "_south_n_rel" ].

south_n2 := n_adv_pl_le &
  [ STEM < "south" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _south_j_rel ] ].

speaker_n1 := n_intr_le &
  [ STEM < "speaker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_speaker_rel" ].

speed_n1 := n_ppof_le &
  [ STEM < "speed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_speed_n_rel" ].

spice_n1 := n_intr_le &
  [ STEM < "spice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spice_rel" ].

spirit_n1 := n_ppof_le &
  [ STEM < "spirit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spirit_rel" ].

sport_n1 := n_intr_le &
  [ STEM < "sport" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sport_rel" ].

spot_n1 := n_ppof_le &
  [ STEM < "spot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spot_n_rel" ].

spreadsheet_n1 := n_ppof_le &
  [ STEM < "spreadsheet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spreadsheet_rel" ].

stain_n1 := n_intr_le &
  [ STEM < "stain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stain_n_rel" ].

standard_n1 := n_ppof_le &
  [ STEM < "standard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_standard_n_rel" ].

steak_n1 := n_intr_le &
  [ STEM < "steak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_steak_rel" ].

steam_n1 := n_intr_le &
  [ STEM < "steam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_steam_n_rel" ].

stock_n1 := n_mass_count_ppof_le &
  [ STEM < "stock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stock_n_rel" ].

stone_n1 := n_intr_le &
  [ STEM < "stone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stone_n_rel" ].

stop_n1 := n_intr_le &
  [ STEM < "stop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stop_n_rel" ].

store_n1 := n_intr_le &
  [ STEM < "store" >,
    SYNSEM.LKEYS.KEYREL.PRED "_store_n_rel" ].

storm_n1 := n_intr_le &
  [ STEM < "storm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_storm_n_rel" ].

storm_v1 := v_np_trans_le &
  [ STEM < "storm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_storm_v_rel" ].

strain_n1 := n_intr_le &
  [ STEM < "strain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strain_n_rel" ].

stranger_n1 := n_intr_le &
  [ STEM < "stranger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stranger_rel" ].

studio_n1 := n_ppof_le &
  [ STEM < "studio" >,
    SYNSEM.LKEYS.KEYREL.PRED "_studio_rel" ].

suburb_n1 := n_ppof_le &
  [ STEM < "suburb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suburb_n_rel" ].

summary_n1 := n_ppof_le &
  [ STEM < "summary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_summary_rel" ].

support_n1 := n_ppof_le &
  [ STEM < "support" >,
    SYNSEM.LKEYS.KEYREL.PRED "_support_n_rel" ].

surplus_n1 := n_ppof_le &
  [ STEM < "surplus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surplus_rel" ].

surrounding_n1 := n_intr_le &
  [ STEM < "surrounding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surrounding_rel" ].

sushi_n1 := n_intr_le &
  [ STEM < "sushi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sushi_rel" ].

swabian_n1 := n_intr_le &
  [ STEM < "swabian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swabian_n_rel" ].

swimming-pool_n1 := n_intr_le &
  [ STEM < "swimming", "pool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swimming_pool_rel" ].

symposium_n1 := n_intr_le &
  [ STEM < "symposium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_symposium_rel" ].

taste_n1 := n_ppof_le &
  [ STEM < "taste" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taste_n_rel" ].

television_n1 := n_intr_le &
  [ STEM < "television" >,
    SYNSEM.LKEYS.KEYREL.PRED "_television_rel" ].

tendency_n1 := n_ppof_le &
  [ STEM < "tendency" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tendency_rel" ].

tension_n1 := n_intr_le &
  [ STEM < "tension" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tension_rel" ].

territory_n1 := n_ppof_le &
  [ STEM < "territory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_territory_rel" ].

theory_n1 := n_ppof_le &
  [ STEM < "theory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_theory_rel" ].

third_n1 := n_ppof_le &
  [ STEM < "third" >,
    SYNSEM.LKEYS.KEYREL.PRED "_third_n_rel" ].

thunder_n1 := n_mass_count_le &
  [ STEM < "thunder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thunder_n_rel" ].

timespan_n1 := n_intr_le &
  [ STEM < "timespan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_timespan_rel" ].

toast_n1 := n_ppof_le &
  [ STEM < "toast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toast_n_rel" ].

tool_n1 := n_ppof_le &
  [ STEM < "tool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tool_rel" ].

touch_n1 := n_mass_count_le &
  [ STEM < "touch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_touch_n_rel" ].

tourist_n1 := n_intr_le &
  [ STEM < "tourist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tourist_rel" ].

tower_n1 := n_ppof_le &
  [ STEM < "tower" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tower_rel" ].

tradition_n1 := n_intr_le &
  [ STEM < "tradition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tradition_rel" ].

traffic_n1 := n_mass_le &
  [ STEM < "traffic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_traffic_rel" ].

tram_n1 := n_intr_le &
  [ STEM < "tram" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tram_rel" ].

treat_n1 := n_intr_le &
  [ STEM < "treat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_treat_n_rel" ].

triangle_n1 := n_ppof_le &
  [ STEM < "triangle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_triangle_rel" ].

try_n1 := n_intr_le &
  [ STEM < "try" >,
    SYNSEM.LKEYS.KEYREL.PRED "_try_n_rel" ].

tub_n1 := n_ppof_le &
  [ STEM < "tub" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tub_rel" ].

tutor_n1 := n_ppof_le &
  [ STEM < "tutor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tutor_n_rel" ].

tv_n1 := n_intr_le &
  [ STEM < "tv" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tv_rel" ].

vcr_n1 := n_intr_le &
  [ STEM < "vcr" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vcr_rel" ].

type_n1 := n_ppcomp_le &
  [ STEM < "type" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_type_n_rel",
             LKEYS.--COMPKEY _of_p_nbar_rel ] ].

understanding_n1 := n_ppof_le &
  [ STEM < "understanding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_understanding_rel" ].

undertaking_n1 := n_intr_le &
  [ STEM < "undertaking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undertaking_rel" ].

validity_n1 := n_ppof_le &
  [ STEM < "validity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_validity_rel" ].

variation_n1 := n_ppof_le &
  [ STEM < "variation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_variation_rel" ].

vehicle_n1 := n_intr_le &
  [ STEM < "vehicle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vehicle_rel" ].

vehicle_title := n_title_le &
  [ STEM < "vehicle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vehicle_rel" ].

version_n1 := n_ppof_le &
  [ STEM < "version" >,
    SYNSEM.LKEYS.KEYREL.PRED "_version_rel" ].

volume_n1 := n_ppof_le &
  [ STEM < "volume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_volume_rel" ].

warrant_n1 := n_intr_le &
  [ STEM < "warrant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warrant_n_rel" ].

wash_n1 := n_intr_le &
  [ STEM < "wash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wash_n_rel" ].

watch_n1 := n_intr_le &
  [ STEM < "watch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_watch_n_rel" ].

wedge_n1 := n_ppof_le &
  [ STEM < "wedge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wedge_n_rel" ].

weight_n1 := n_mass_count_ppof_le &
  [ STEM < "weight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weight_rel" ].

west_n1 := n_ppof_le &
  [ STEM < "west" >,
    SYNSEM.LKEYS.KEYREL.PRED "_west_n_rel" ].

west_n2 := n_adv_pl_le &
  [ STEM < "west" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _west_j_rel ] ].

whale_n1 := n_ppof_le &
  [ STEM < "whale" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whale_rel" ].

widget_n1 := n_intr_le &
  [ STEM < "widget" >,
    SYNSEM.LKEYS.KEYREL.PRED "_widget_rel" ].

width_n1 := n_ppof_le &
  [ STEM < "width" >,
    SYNSEM.LKEYS.KEYREL.PRED "_width_rel" ].

window_n1 := n_ppof_le &
  [ STEM < "window" >,
    SYNSEM.LKEYS.KEYREL.PRED "_window_n_rel" ].

windsurfing_n1 := n_intr_le &
  [ STEM < "windsurfing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windsurfing_rel" ].

zeppelin_n1 := n_intr_le &
  [ STEM < "zeppelin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_zeppelin_rel" ].

zoo_n1 := n_intr_le &
  [ STEM < "zoo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_zoo_rel" ].

AGTR_nd := n_proper_le &
  [ STEM < "agtr" >,
    SYNSEM.LKEYS.KEYREL.CARG "AGTR" ].

AI_n:= n_mass_le &
  [ STEM < "ai" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ai_rel" ].

AKD_nd := n_proper_le &
  [ STEM < "akd" >,
    SYNSEM.LKEYS.KEYREL.CARG "AKD" ].

AKDT_nd := n_proper_le &
  [ STEM < "akdt" >,
    SYNSEM.LKEYS.KEYREL.CARG "AKDT" ].

AVBR_nd := n_proper_le &
  [ STEM < "avbr" >,
    SYNSEM.LKEYS.KEYREL.CARG "AVBR" ].

BASF_nd := n_proper_le &
  [ STEM < "basf" >,
    SYNSEM.LKEYS.KEYREL.CARG "BASF" ].

BIRV_nd := n_proper_le &
  [ STEM < "birv" >,
    SYNSEM.LKEYS.KEYREL.CARG "BIRV" ].

BMFT_nd := n_proper_le &
  [ STEM < "bmft" >,
    SYNSEM.LKEYS.KEYREL.CARG "BMFT" ].

DFKI_nd := n_proper_le &
  [ STEM < "dfki" >,
    SYNSEM.LKEYS.KEYREL.CARG "DFKI" ].

DGFS_nd := n_proper_le &
  [ STEM < "dgfs" >,
    SYNSEM.LKEYS.KEYREL.CARG "DGFS" ].

DKLU_nd := n_proper_le &
  [ STEM < "dklu" >,
    SYNSEM.LKEYS.KEYREL.CARG "DKLU" ].

Dmark_n := n_intr_le &
  [ STEM < "d", "mark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deutschmark_rel" ].

FAZ_nd := n_proper_le &
  [ STEM < "faz" >,
    SYNSEM.LKEYS.KEYREL.CARG "FAZ" ].

FMAE_nd := n_proper_le &
  [ STEM < "fmae" >,
    SYNSEM.LKEYS.KEYREL.CARG "FMAE" ].

HKSA_nd := n_proper_le &
  [ STEM < "hksa" >,
    SYNSEM.LKEYS.KEYREL.CARG "HKSA" ].

IAA_nd := n_proper_le &
  [ STEM < "iaa" >,
    SYNSEM.LKEYS.KEYREL.CARG "IAA" ].

IBM_n1 := n_proper_le &
  [ STEM < "ibm" >,
    SYNSEM.LKEYS.KEYREL.CARG "IBM" ].

ICE_n := n_intr_le &
  [ STEM < "ice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_i_c_e_rel" ].

ICPHS_nd := n_proper_le &
  [ STEM < "icphs" >,
    SYNSEM.LKEYS.KEYREL.CARG "ICPHS" ].

IDS_nd := n_proper_le &
  [ STEM < "ids" >,
    SYNSEM.LKEYS.KEYREL.CARG "IDS" ].

LH_nd := n_proper_le &
  [ STEM < "lh" >,
    SYNSEM.LKEYS.KEYREL.CARG "LH" ].

LHFG_nd := n_proper_le &
  [ STEM < "lhfg" >,
    SYNSEM.LKEYS.KEYREL.CARG "LHFG" ].

LQIV_nd := n_proper_le &
  [ STEM < "lqiv" >,
    SYNSEM.LKEYS.KEYREL.CARG "LQIV" ].

MKSA_nd := n_proper_le &
  [ STEM < "mksa" >,
    SYNSEM.LKEYS.KEYREL.CARG "MKSA" ].

NECP_nd := n_proper_le &
  [ STEM < "necp" >,
    SYNSEM.LKEYS.KEYREL.CARG "NECP" ].

OKBZ_nd := n_proper_le &
  [ STEM < "okbz" >,
    SYNSEM.LKEYS.KEYREL.CARG "OKBZ" ].

OPKS_nd := n_proper_le &
  [ STEM < "opks" >,
    SYNSEM.LKEYS.KEYREL.CARG "OPKS" ].

PHI_nd := n_proper_le &
  [ STEM < "phi" >,
    SYNSEM.LKEYS.KEYREL.CARG "PHI" ].

RKMO_nd := n_proper_le &
  [ STEM < "rkmo" >,
    SYNSEM.LKEYS.KEYREL.CARG "RKMO" ].

SGRK_nd := n_proper_le &
  [ STEM < "sgrk" >,
    SYNSEM.LKEYS.KEYREL.CARG "SGRK" ].

TUDarmstadt_nd := n_proper_le &
  [ STEM < "tu", "darmstadt" >,
    SYNSEM.LKEYS.KEYREL.CARG "TUDarmstadt" ].

TUWien_nd := n_proper_le &
  [ STEM < "tu", "wien" >,
    SYNSEM.LKEYS.KEYREL.CARG "TUWien" ].

WDR_nd := n_proper_le &
  [ STEM < "wdr" >,
    SYNSEM.LKEYS.KEYREL.CARG "WDR" ].

ZDF_nd := n_proper_le &
  [ STEM < "zdf" >,
    SYNSEM.LKEYS.KEYREL.CARG "ZDF" ].

AlteOper_nd := n_proper_le &
  [ STEM < "alte", "oper" >,
    SYNSEM.LKEYS.KEYREL.CARG "AlteOper" ].

Buechner_nd := n_proper_le &
  [ STEM < "buechner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Buechner" ].

Buehne_nd := n_proper_le &
  [ STEM < "buehne" >,
    SYNSEM.LKEYS.KEYREL.CARG "Buehne" ].

captain_n := n_ppof_le &
  [ STEM < "captain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_captain_rel" ].

captain_ttl := n_title_le &
  [ STEM < "captain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_captain_rel" ].

Columbus_Day_hd := n_holiday_le &
  [ STEM < "columbus", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "Columbus_Day" ].

Duesseldorf_nd := n_proper_le &
  [ STEM < "duesseldorf" >,
    SYNSEM.LKEYS.KEYREL.CARG "Duesseldorf" ].

Faecherbad_nd := n_proper_le &
  [ STEM < "faecherbad" >,
    SYNSEM.LKEYS.KEYREL.CARG "Faecherbad" ].

Fuerth_nd := n_proper_le &
  [ STEM < "fuerth" >,
    SYNSEM.LKEYS.KEYREL.CARG "Fuerth" ].

Frau_ttl := n_title_unsp_le &
  [ STEM < "frau" >,
    SYNSEM.LKEYS.KEYREL.CARG "frau" ].

Guettingen_nd := n_proper_le &
  [ STEM < "guettingen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Guettingen" ].

Guetersloh_nd := n_proper_le &
  [ STEM < "guetersloh" >,
    SYNSEM.LKEYS.KEYREL.CARG "Guetersloh" ].

Giessen_nd := n_proper_le &
  [ STEM < "giessen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Giessen" ].

GruebchenanderMarktkirche_nd := n_proper_le &
  [ STEM < "gruebchen", "an", "der", "marktkirche" >,
    SYNSEM.LKEYS.KEYREL.CARG "GruebchenanderMarktkirche" ].

Huelzer_nd := n_proper_le &
  [ STEM < "huelzer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Huelzer" ].

Halloween_hd := n_holiday_le &
  [ STEM < "halloween" >,
    SYNSEM.LKEYS.KEYREL.CARG "Halloween" ].

Herr_ttl := n_title_unsp_le &
  [ STEM < "herr" >,
    SYNSEM.LKEYS.KEYREL.CARG "herr" ].

Juliss_nd := n_proper_le &
  [ STEM < "juliss" >,
    SYNSEM.LKEYS.KEYREL.CARG "Juliss" ].

Kaefer_nd := n_proper_le &
  [ STEM < "kaefer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kaefer" ].

Kuenig_nd := n_proper_le &
  [ STEM < "kuenig" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kuenig" ].

Kuenigstein_nd := n_proper_le &
  [ STEM < "kuenigstein" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kuenigstein" ].

Kuepp_nd := n_proper_le &
  [ STEM < "kuepp" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kuepp" ].

Kuerner_nd := n_proper_le &
  [ STEM < "kuerner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kuerner" ].

Lueneburg_nd := n_proper_le &
  [ STEM < "lueneburg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lueneburg" ].

Mueckl_nd := n_proper_le &
  [ STEM < "mueckl" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mueckl" ].

Muenchengladbach_nd := n_proper_le &
  [ STEM < "muenchengladbach" >,
    SYNSEM.LKEYS.KEYREL.CARG "Muenchengladbach" ].

Monday_before_Lent_hd := n_holiday_le &
  [ STEM < "monday", "before", "lent" >,
    SYNSEM.LKEYS.KEYREL.CARG "Monday_before_Lent" ].

Mothers_Day_hd := n_holiday_le &
  [ STEM < "mothers", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mothers_Day" ].

Newcastle_nd := n_proper_le &
  [ STEM < "newcastle" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newcastle" ].

Repentance_Day_hd := n_holiday_le &
  [ STEM < "repentance", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "Repentance_Day" ].

SchwaebischGmuend_nd := n_proper_le &
  [ STEM < "schwaebisch", "gmuend" >,
    SYNSEM.LKEYS.KEYREL.CARG "SchwaebischGmuend" ].

Siam_Kitchen_nd := n_proper_le &
  [ STEM < "siam", "kitchen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Siam_Kitchen" ].

Sunday_before_Advent_hd := n_holiday_le &
  [ STEM < "sunday", "before", "advent" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sunday_before_Advent" ].

Thanksgiving_n1 := n_holiday_le &
  [ STEM < "thanksgiving" >,
    SYNSEM.LKEYS.KEYREL.CARG "Thanksgiving" ].

Thanksgiving_n2 := n_season_pp_le &
  [ STEM < "thanksgiving" >,
    SYNSEM.LKEYS.KEYREL.CARG "Thanksgiving" ].

Wuellnatz_nd := n_proper_le &
  [ STEM < "wuellnatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wuellnatz" ].

Whit_Sunday_hd := n_holiday_le &
  [ STEM < "whit", "sunday" >,
    SYNSEM.LKEYS.KEYREL.CARG "Whit_Sunday" ].

Wolfenbuettel_nd := n_proper_le &
  [ STEM < "wolfenbuettel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wolfenbuettel" ].

abandon_v13 := v_np*_trans_le &
  [ STEM < "abandon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abandon_rel" ].

accompany_v13 := v_np*_trans_le &
  [ STEM < "accompany" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accompany_rel" ].

activate_v13 := v_np*_trans_le &
  [ STEM < "activate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_activate_rel" ].

adjust_v13 := v_np*_trans_le &
  [ STEM < "adjust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adjust_rel" ].

adjust_to_v1 := v_prep_intrans_le &
  [ STEM < "adjust" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_adjust_to_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

advent_n := n_ppof_le &
  [ STEM < "advent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advent_rel" ].

advertise_v13 := v_np*_trans_le &
  [ STEM < "advertise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advertise_rel" ].

agency_n := n_ppof_le &
  [ STEM < "agency" >,
    SYNSEM.LKEYS.KEYREL.PRED "_agency_rel" ].

agent_n := n_ppof_le &
  [ STEM < "agent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_agent_rel" ].

alrighty_excl_pre := adv_disc_preh_le &
  [ STEM < "alrighty" >,
    SYNSEM.LKEYS.KEYREL.CARG "alrighty" ].

alrighty_excl_post := adv_disc_posth_le &
  [ STEM < "alrighty" >,
    SYNSEM.LKEYS.KEYREL.CARG "alrighty" ].

anteroom_n := n_ppof_le &
  [ STEM < "anteroom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anteroom_rel" ].

anyways_scop := adv_le &
  [ STEM < "anyways" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anyways_rel" ].

append_v13 := v_np*_trans_le &
  [ STEM < "append" >,
    SYNSEM.LKEYS.KEYREL.PRED "_append_rel" ].

approval_n1 := n_ppof_le &
  [ STEM < "approval" >,
    SYNSEM.LKEYS.KEYREL.PRED "_approval_rel" ].

acquaintance_n := n_ppof_le &
  [ STEM < "acquaintance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acquaintance_rel" ].

astonish_pcv13_1 := v_np_trans_le &
  [ STEM < "astonish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_astonish_rel" ].

attack_v13 := v_np*_trans_le &
  [ STEM < "attack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attack_rel" ].

attendant_n := n_ppof_le &
  [ STEM < "attendant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attendant_rel" ].

ay_excl_pre := adv_disc_preh_le &
  [ STEM < "ay" >,
    SYNSEM.LKEYS.KEYREL.CARG "ay" ].

ay_excl_post := adv_disc_posth_le &
  [ STEM < "ay" >,
    SYNSEM.LKEYS.KEYREL.CARG "ay" ].

bail_out_v1 := v_particle_np_le &
  [ STEM < "bail" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bail_v_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

bail_out_of_v1 := v_empty_prep_trans_le &
  [ STEM < "bail" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bail_out_of_rel",
             LKEYS.--OCOMPKEY _out_of_p_sel_rel ] ].

basic_grad := adv_degree_spec_v_le &
  [ STEM < "basic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basic_rel" ].

blow_v3 := v_unacc_le &
  [ STEM < "blow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blow_v_rel" ].

blow_out_v1 := v_particle_np_le &
  [ STEM < "blow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_blow_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

bore_v13 := v_np*_trans_le &
  [ STEM < "bore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bore_v_rel" ].

break_off_v1 := v_particle_np_le &
  [ STEM < "break" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_break_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

bring_along_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_along_rel",
             LKEYS.--COMPKEY _along_p_sel_rel ] ].

bring_in_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

bring_up_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

browse_v13 := v_np*_trans_le &
  [ STEM < "browse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_browse_rel" ].

build_v13 := v_np*_trans_le &
  [ STEM < "build" >,
    SYNSEM.LKEYS.KEYREL.PRED "_build_rel" ].

build_up_v1 := v_particle_np_le &
  [ STEM < "build" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_build_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

by_chance_scop := adv_le &
  [ STEM < "by", "chance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_by_chance_rel" ].

bypass_v13 := v_np*_trans_le &
  [ STEM < "bypass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bypass_v_rel" ].

cable_n := n_ppof_le &
  [ STEM < "cable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cable_rel" ].

caricature_n := n_ppof_le &
  [ STEM < "caricature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_caricature_rel" ].

catch_up_v1 := v_particle_le &
  [ STEM < "catch" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_catch_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

catch_on_v2 := v_particle_cp_le &
  [ STEM < "catch" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_catch_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

chain_n := n_ppof_le &
  [ STEM < "chain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chain_rel" ].

characterise_v13 := v_np*_trans_le &
  [ STEM < "characterise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_characterise_rel" ].

characterize_v13 := v_np*_trans_le &
  [ STEM < "characterize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_characterise_rel" ].

chase_v13 := v_np*_trans_le &
  [ STEM < "chase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chase_v_rel" ].

check_in_v1 := v_particle_np_le &
  [ STEM < "check" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_check_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

check_in_v2 := v_particle_le &
  [ STEM < "check" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_check_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

check_out_v2 := v_particle_le &
  [ STEM < "check" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_check_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

check_through_v13 := v_empty_prep_intrans_le &
  [ STEM < "check" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_check_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

check_in_a1 := adj_intrans_le &
  [ STEM < "check", "in" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_in_a_rel" ].

cheers_gr_pre := adv_disc_preh_le &
  [ STEM < "cheers" >,
    SYNSEM.LKEYS.KEYREL.CARG "cheers" ].

cheers_gr_post := adv_disc_posth_le &
  [ STEM < "cheers" >,
    SYNSEM.LKEYS.KEYREL.CARG "cheers" ].

cheque_n := n_intr_le &
  [ STEM < "cheque" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_n_rel" ].

chip_in_v1 := v_particle_np_le &
  [ STEM < "chip" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_chip_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

circumvent_v13 := v_np_trans_le &
  [ STEM < "circumvent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circumvent_rel" ].

cold_n := n_intr_le &
  [ STEM < "cold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_n_rel" ].

collection_n := n_ppof_le &
  [ STEM < "collection" >,
    SYNSEM.LKEYS.KEYREL.PRED "_collection_rel" ].

come_about_v1 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

comedy_n := n_ppof_le &
  [ STEM < "comedy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comedy_rel" ].

comfort_n := n_ppof_le &
  [ STEM < "comfort" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comfort_rel" ].

comic_n := n_intr_le &
  [ STEM < "comic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comic_rel" ].

comma_n := n_intr_le &
  [ STEM < "comma" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comma_rel" ].

commute_v13 := v_np*_trans_le &
  [ STEM < "commute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_commute_v_rel" ].

compilation_n := n_ppof_le &
  [ STEM < "compilation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compilation_rel" ].

complain_pcv13_1 := v_cp_prop_non_trans_le &
  [ STEM < "complain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complain_rel" ].

complain_pcv13_2 := v_empty_prep_intrans_le &
  [ STEM < "complain" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_complain_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

complain_v1 := v_unerg_le &
  [ STEM < "complain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complain_rel" ].

complement_v13 := v_np*_trans_le &
  [ STEM < "complement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complement_v_rel" ].

concentrate_v1 := v_empty_prep_intrans_le &
  [ STEM < "concentrate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_concentrate_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

concentrate_v2 := v_unerg_le &
  [ STEM < "concentrate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concentrate_rel" ].

confess_pcv13_1 := v_np_trans_le &
  [ STEM < "confess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confess_rel" ].

confess_pcv13_2 := v_cp_non_trans_le &
  [ STEM < "confess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confess_rel" ].

confirmation_n1 := n_mass_count_ppof_le &
  [ STEM < "confirmation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confirmation_rel" ].

confirmation_n3x := n_mass_count_cpcomp_fin_le &
  [ STEM < "confirmation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confirmation_c_rel" ].

confront_v13 := v_np*_trans_le &
  [ STEM < "confront" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confront_rel" ].

confuse_v13 := v_np*_trans_le &
  [ STEM < "confuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confuse_rel" ].

consent_v1 := v_empty_prep_intrans_le &
  [ STEM < "consent" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_consent_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

consent_v2 := v_unerg_le &
  [ STEM < "consent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consent_to_rel" ].

construction_n := n_ppof_le &
  [ STEM < "construction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_construction_rel" ].

cope_v1 := v_empty_prep_intrans_le &
  [ STEM < "cope" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cope_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

cope_v2 := v_unerg_le &
  [ STEM < "cope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cope_with_rel" ].

copy_v1 := v_np*_trans_le &
  [ STEM < "copy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_copy_v_rel" ].

copy_v2 := v_np_prep_trans_dors_le &
  [ STEM < "copy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_copy_v_rel" ].

copy_out_v1 := v_particle_np_le &
  [ STEM < "copy" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_copy_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

cover_v13 := v_np*_trans_le &
  [ STEM < "cover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cover_v_rel" ].

cover_v14 := v_empty_prep_intrans_le &
  [ STEM < "cover" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cover_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

crash_v1 := v_unacc_le &
  [ STEM < "crash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crash_v_rel" ].

crash_v2 := v_np_trans_le &
  [ STEM < "crash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crash_cause_v_rel" ].

crash_n := n_ppof_le &
  [ STEM < "crash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crash_n_rel" ].

crop_up_v1 := v_particle_le &
  [ STEM < "crop" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_crop_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

crowd_n := n_ppof_le &
  [ STEM < "crowd" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crowd_n_rel" ].

customize_v13 := v_np*_trans_le &
  [ STEM < "customize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_customize_rel" ].

cut_down_v1 := v_particle_np_le &
  [ STEM < "cut" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cut_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

cut_in_v1 := v_particle_np_le &
  [ STEM < "cut" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cut_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

day_before_Easter_hd := n_holiday_le &
  [ STEM < "day", "before", "easter" >,
    SYNSEM.LKEYS.KEYREL.CARG "day_before_Easter" ].

debate_n := n_ppof_le &
  [ STEM < "debate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_debate_rel" ].

deceive_v13 := v_np*_trans_le &
  [ STEM < "deceive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deceive_rel" ].

decrease_v13 := v_np*_trans_le &
  [ STEM < "decrease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decrease_cause_v_rel" ].

decrease_v2 := v_unacc_le &
  [ STEM < "decrease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decrease_v_rel" ].

deign_v1 := v_subj_equi_le &
  [ STEM < "deign" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deign_rel" ].

deposit_n1 := n_ppof_le &
  [ STEM < "deposit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deposit_rel" ].

description_n1 := n_mass_count_ppof_le &
  [ STEM < "description" >,
    SYNSEM.LKEYS.KEYREL.PRED "_description_rel" ].

detect_v13 := v_np*_trans_le &
  [ STEM < "detect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_detect_rel" ].

discount_n := n_mass_count_ppof_le &
  [ STEM < "discount" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discount_n_rel" ].

dismiss_v13 := v_np*_trans_le &
  [ STEM < "dismiss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dismiss_rel" ].

disregard_v13 := v_np*_trans_le &
  [ STEM < "disregard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disregard_rel" ].

distinguish_v13 := v_np*_trans_le &
  [ STEM < "distinguish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distinguish_rel" ].

distort_v13 := v_np*_trans_le &
  [ STEM < "distort" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distort_rel" ].

drag_on_v3 := v_particle_le &
  [ STEM < "drag" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_drag_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

draw_up_v1 := v_particle_np_le &
  [ STEM < "draw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_draw_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

dreadfully_grad := adv_degree_spec_v_le &
  [ STEM < "dreadfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dreadfully_deg_rel" ].

effectively_scop := adv_le &
  [ STEM < "effectively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_effectively_rel" ].

end_up_v3 := v_particle_prd_le &
  [ STEM < "end" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_end_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

ensure_pcv13_1 := v_cp_prop_non_trans_le &
  [ STEM < "ensure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ensure_rel" ].

establish_v13 := v_np*_trans_le &
  [ STEM < "establish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_establish_rel" ].

eurocity_n := n_intr_le &
  [ STEM < "eurocity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eurocity_rel" ].

excepting_prep := p_reg_le &
  [ STEM < "excepting" >,
    SYNSEM.LKEYS.KEYREL.PRED _excepting_p_rel ].

excerpt_n := n_intr_le &
  [ STEM < "excerpt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excerpt_rel" ].

express_v13 := v_np*_trans_le &
  [ STEM < "express" >,
    SYNSEM.LKEYS.KEYREL.PRED "_express_v_rel" ].

face_up_v1 := v_particle_pp_le &
  [ STEM < "face" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_face_up_rel",
             LKEYS [ --COMPKEY _up_p_sel_rel,
                     --OCOMPKEY _to_p_rel ] ] ].

facing_prep := p_reg_le &
  [ STEM < "facing" >,
    SYNSEM.LKEYS.KEYREL.PRED _facing_rel ].

fight_v13 := v_np*_trans_le &
  [ STEM < "fight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fight_v_rel" ].

film_n := n_ppof_le &
  [ STEM < "film" >,
    SYNSEM.LKEYS.KEYREL.PRED "_film_rel" ].

finalize_v13 := v_np*_trans_le &
  [ STEM < "finalize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finalize_rel" ].

flee_v1 := v_empty_prep_intrans_le &
  [ STEM < "flee" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_flee_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

flee_v2 := v_unerg_le &
  [ STEM < "flee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flee_rel" ].

float_v1 := v_unacc_le &
  [ STEM < "float" >,
    SYNSEM.LKEYS.KEYREL.PRED "_float_v_rel" ].

float_v2 := v_np_trans_le &
  [ STEM < "float" >,
    SYNSEM.LKEYS.KEYREL.PRED "_float_cause_v_rel" ].

float_n1 := n_ppof_le &
  [ STEM < "float" >,
    SYNSEM.LKEYS.KEYREL.PRED "_float_n_rel" ].

folder_n := n_ppof_le &
  [ STEM < "folder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_folder_rel" ].

frankly_scop := adv_le &
  [ STEM < "frankly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frankly_rel" ].

frankly_disc_adv_pre := adv_disc_preh_le &
  [ STEM < "frankly" >,
    SYNSEM.LKEYS.KEYREL.CARG "frankly" ].

frankly_disc_adv_post := adv_disc_posth_le &
  [ STEM < "frankly" >,
    SYNSEM.LKEYS.KEYREL.CARG "frankly" ].

fuck_excl_pre := adv_disc_preh_le &
  [ STEM < "fuck" >,
    SYNSEM.LKEYS.KEYREL.CARG "fuck" ].

fuck_excl_post := adv_disc_posth_le &
  [ STEM < "fuck" >,
    SYNSEM.LKEYS.KEYREL.CARG "fuck" ].

gee_excl_pre := adv_disc_preh_le &
  [ STEM < "gee" >,
    SYNSEM.LKEYS.KEYREL.CARG "gee" ].

gee_excl_post := adv_disc_posth_le &
  [ STEM < "gee" >,
    SYNSEM.LKEYS.KEYREL.CARG "gee" ].

geez_excl_pre := adv_disc_preh_le &
  [ STEM < "geez" >,
    SYNSEM.LKEYS.KEYREL.CARG "geez" ].

geez_excl_post := adv_disc_posth_le &
  [ STEM < "geez" >,
    SYNSEM.LKEYS.KEYREL.CARG "geez" ].

give_up_v1 := v_particle_np_le &
  [ STEM < "give" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_give_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

give_up_v2 := v_particle_le &
  [ STEM < "give" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_give_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

go_in_v13 := v_empty_prep_intrans_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

go_up_v1 := v_particle_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

go_about_v1 := v_empty_prep_intrans_le &
  [ STEM < "go" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

good_day_gr_pre := adv_disc_preh_grt_le &
  [ STEM < "good", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_day" ].

good_day_gr_post := adv_disc_posth_grt_le &
  [ STEM < "good", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_day" ].

good_evening_gr_pre := adv_disc_preh_grt_le &
  [ STEM < "good", "evening" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_evening" ].

good_evening_gr_post := adv_disc_posth_grt_le &
  [ STEM < "good", "evening" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_evening" ].

good_morning_gr_pre := adv_disc_preh_grt_le &
  [ STEM < "good", "morning" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_morning" ].

good_morning_gr_post := adv_disc_posth_grt_le &
  [ STEM < "good", "morning" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_morning" ].

gospel_n := n_ppof_le &
  [ STEM < "gospel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gospel_rel" ].

graduate_v13 := v_np*_trans_le &
  [ STEM < "graduate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graduate_v_rel" ].

grant_v13 := v_np*_trans_le &
  [ STEM < "grant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grant_rel" ].

guest_n := n_ppof_le &
  [ STEM < "guest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guest_rel" ].

guide_n := n_intr_le &
  [ STEM < "guide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guide_rel" ].

hack_v13 := v_np*_trans_le &
  [ STEM < "hack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hack_v_rel" ].

hack_up_v1 := v_particle_np_le &
  [ STEM < "hack" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hack_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

hang_v1 := v_unacc_le &
  [ STEM < "hang" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hang_v_rel" ].

hang_v2 := v_np_trans_le &
  [ STEM < "hang" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hang_v2_rel" ].

hash_out_v1 := v_particle_np_le &
  [ STEM < "hash" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hash_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

heavens_excl_pre := adv_disc_preh_le &
  [ STEM < "heavens" >,
    SYNSEM.LKEYS.KEYREL.CARG "heavens" ].

heavens_excl_post := adv_disc_posth_le &
  [ STEM < "heavens" >,
    SYNSEM.LKEYS.KEYREL.CARG "heavens" ].

hide_v13 := v_np*_trans_le &
  [ STEM < "hide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hide_rel" ].

highlight_n := n_ppof_le &
  [ STEM < "highlight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_highlight_rel" ].

hint_pcv13_1 := v_cp_non_trans_le &
  [ STEM < "hint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hint_v_rel" ].

hint_n := n_ppof_le &
  [ STEM < "hint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hint_n_rel" ].

hold_off_v1 := v_particle_np_le &
  [ STEM < "hold" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hold_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

hosers_excl_pre := adv_disc_preh_le &
  [ STEM < "hosers" >,
    SYNSEM.LKEYS.KEYREL.CARG "hosers" ].

hosers_excl_post := adv_disc_posth_le &
  [ STEM < "hosers" >,
    SYNSEM.LKEYS.KEYREL.CARG "hosers" ].

hospitality_n := n_ppof_le &
  [ STEM < "hospitality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hospitality_rel" ].

huh_excl_pre := adv_disc_preh_le &
  [ STEM < "huh" >,
    SYNSEM.LKEYS.KEYREL.CARG "huh" ].

huh_excl_post := adv_disc_posth_le &
  [ STEM < "huh" >,
    SYNSEM.LKEYS.KEYREL.CARG "huh" ].

illustration_n := n_ppof_le &
  [ STEM < "illustration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_illustration_rel" ].

illustrator_n := n_ppof_le &
  [ STEM < "illustrator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_illustrator_rel" ].

importance_n := n_ppof_le &
  [ STEM < "importance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_importance_rel" ].

imposition_n := n_ppof_le &
  [ STEM < "imposition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imposition_rel" ].

improve_v13 := v_np*_trans_le &
  [ STEM < "improve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_improve_rel" ].

incoming_adj := adj_intrans_le &
  [ STEM < "incoming" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incoming_rel" ].

increase_v1 := v_unacc_le &
  [ STEM < "increase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_increase_v_rel" ].

indicate_pcv13_1 := v_np_trans_le &
  [ STEM < "indicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indicate_rel" ].

indicate_pcv13_2 := v_cp_non_trans_le &
  [ STEM < "indicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indicate_rel" ].

infer_pcv13_1 := v_cp_non_trans_le &
  [ STEM < "infer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_infer_rel" ].

infrequently_sa := adv_le &
  [ STEM < "infrequently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_infrequently_rel" ].

inquire_v1 := v_prep_intrans_le &
  [ STEM < "inquire" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_inquire_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

inquire_v2 := v_prep_intrans_le &
  [ STEM < "inquire" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_inquire_rel",
             LKEYS.--COMPKEY _as_to_p_rel ] ].

inquire_v3 := v_unerg_le &
  [ STEM < "inquire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inquire_rel" ].

inquire_pcv13_2 := v_cp_non_trans_le &
  [ STEM < "inquire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inquire_rel" ].

insinuate_pcv13_1 := v_np_trans_le &
  [ STEM < "insinuate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insinuate_rel" ].

insinuate_pcv13_2 := v_cp_non_trans_le &
  [ STEM < "insinuate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insinuate_rel" ].

interpret_v13 := v_np*_trans_le &
  [ STEM < "interpret" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interpret_rel" ].

inventor_n := n_ppof_le &
  [ STEM < "inventor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inventor_rel" ].

judge_v13 := v_np*_trans_le &
  [ STEM < "judge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_judge_v_rel" ].

juggle_around_v1 := v_particle_np_le &
  [ STEM < "juggle" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_juggle_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

justify_v13 := v_np*_trans_le &
  [ STEM < "justify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_justify_rel" ].

kick_v13 := v_np*_trans_le &
  [ STEM < "kick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kick_rel" ].

kick_out_v1 := v_particle_np_le &
  [ STEM < "kick" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_kick_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

kill_v13 := v_np*_trans_le &
  [ STEM < "kill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kill_rel" ].

kind_of_scop := adv_le &
  [ STEM < "kind", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kind_of_rel" ].

leak_v1 := v_unacc_le &
  [ STEM < "leak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leak_v_rel" ].

leak_v2 := v_np_trans_le &
  [ STEM < "leak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leak_cause_v_rel" ].

leak_n1 := n_ppof_le &
  [ STEM < "leak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leak_n_rel" ].

leave_off_v1 := v_particle_np_le &
  [ STEM < "leave" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_leave_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

leave_open_v1 := v_particle_np_le &
  [ STEM < "leave" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_leave_open_rel",
             LKEYS.--COMPKEY _open_j_sel_rel ] ].

listen_in_v13 := v_particle_le &
  [ STEM < "listen" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_listen_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

live_down_v1 := v_particle_np_le &
  [ STEM < "live" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_live_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

liver_n := n_intr_le &
  [ STEM < "liver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_liver_rel" ].

look_through_v13 := v_empty_prep_intrans_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

loosen_v13 := v_np*_trans_le &
  [ STEM < "loosen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loosen_rel" ].

lot_n := n_ppof_le &
  [ STEM < "lot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lot_rel" ].

louse_n := n_intr_le &
  [ STEM < "louse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_louse_rel" ].

luxury_n := n_ppof_le &
  [ STEM < "luxury" >,
    SYNSEM.LKEYS.KEYREL.PRED "_luxury_rel" ].

maintain_v1 := v_np_trans_le &
  [ STEM < "maintain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maintain_rel" ].

maintain_v2 := v_cp_prop_non_trans_le &
  [ STEM < "maintain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maintain_rel" ].

make_out_v1 := v_particle_np_le &
  [ STEM < "make" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_make_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

make_up_v1 := v_particle_np_le &
  [ STEM < "make" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_make_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

make_use_v1 := v_empty_prep_trans_le &
  [ STEM < "make" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_make_use_of_rel",
             LKEYS [ --COMPKEY _use_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

mark_off_v1 := v_particle_np_le &
  [ STEM < "mark" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mark_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

max_scop := adv_le &
  [ STEM < "max" >,
    SYNSEM.LKEYS.KEYREL.PRED "_max_rel" ].

merge_v13 := v_np*_trans_le &
  [ STEM < "merge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_merge_rel" ].

mess_up_v1 := v_particle_np_le &
  [ STEM < "mess" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mess_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

misinterpret_v13 := v_np*_trans_le &
  [ STEM < "misinterpret" >,
    SYNSEM.LKEYS.KEYREL.PRED "_misinterpret_rel" ].

mix_v13 := v_np*_trans_le &
  [ STEM < "mix" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mix_rel" ].

mix_up_v1 := v_particle_np_le &
  [ STEM < "mix" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mix_up_v_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

movie_n := n_ppof_le &
  [ STEM < "movie" >,
    SYNSEM.LKEYS.KEYREL.PRED "_movie_rel" ].

mud_flats_n := n_intr_le &
  [ STEM < "mud", "flats" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mud_flats_rel" ].

nah_excl_pre := adv_disc_preh_le &
  [ STEM < "nah" >,
    SYNSEM.LKEYS.KEYREL.CARG "nah" ].

nah_excl_post := adv_disc_posth_le &
  [ STEM < "nah" >,
    SYNSEM.LKEYS.KEYREL.CARG "nah" ].

narrow_down_v1 := v_particle_np_le &
  [ STEM < "narrow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_narrow_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

narrow_down_v2 := v_particle_empty_pp_le &
  [ STEM < "narrow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_narrow_down_rel",
             LKEYS [ --COMPKEY _down_p_sel_rel,
                     --OCOMPKEY _to_p_sel_rel ] ] ].

narrow_down_v3 := v_particle_np_pp_to_le &
  [ STEM < "narrow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_narrow_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

notify_v1 := v_np_trans_le &
  [ STEM < "notify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notify_rel" ].

notify_v2 := v_np_prep_trans_nomsg_le &
  [ STEM < "notify" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_notify_rel",
             LKEYS.--OCOMPKEY _of_p_rel ] ].

nowadays_ta := adv_int_vp_le &
  [ STEM < "nowadays" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nowadays_rel" ].

oh_yes_excl_pre := adv_disc_preh_le &
  [ STEM < "oh", "yes" >,
    SYNSEM.LKEYS.KEYREL.CARG "oh_yes" ].

oh_yes_excl_post := adv_disc_posth_le &
  [ STEM < "oh", "yes" >,
    SYNSEM.LKEYS.KEYREL.CARG "oh_yes" ].

ok_doke_excl_pre := adv_disc_preh_le &
  [ STEM < "ok", "doke" >,
    SYNSEM.LKEYS.KEYREL.CARG "ok_doke" ].

ok_doke_excl_post := adv_disc_posth_le &
  [ STEM < "ok", "doke" >,
    SYNSEM.LKEYS.KEYREL.CARG "ok_doke" ].

okey_doke_excl_pre := adv_disc_preh_le &
  [ STEM < "okey", "doke" >,
    SYNSEM.LKEYS.KEYREL.CARG "ok_doke" ].

okey_doke_excl_post := adv_disc_posth_le &
  [ STEM < "okey", "doke" >,
    SYNSEM.LKEYS.KEYREL.CARG "ok_doke" ].

omit_v13 := v_np*_trans_le &
  [ STEM < "omit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_omit_rel" ].

on_the_one_hand_dra_pre := adv_disc_preh_le &
  [ STEM < "on", "the", "one", "hand" >,
    SYNSEM.LKEYS.KEYREL.CARG "on_the_one_hand" ].

on_the_one_hand_dra_post := adv_disc_posth_le &
  [ STEM < "on", "the", "one", "hand" >,
    SYNSEM.LKEYS.KEYREL.CARG "on_the_one_hand" ].

or_whatever_scop := adv_le &
  [ STEM < "or", "whatever" >,
    SYNSEM.LKEYS.KEYREL.PRED "_or_whatever_rel" ].

ordinarily_scop := adv_le &
  [ STEM < "ordinarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ordinarily_rel" ].

overdo_v13 := v_np*_trans_le &
  [ STEM < "overdo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overdo_rel" ].

overrun_v13 := v_np*_trans_le &
  [ STEM < "overrun" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overrun_v_rel" ].

overwork_v13 := v_np*_trans_le &
  [ STEM < "overwork" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overwork_v_rel" ].

owl_n := n_intr_le &
  [ STEM < "owl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_owl_rel" ].

particulars_n := n_plur_ppcomp_le &
  [ STEM < "particulars" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_particulars_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

perform_v13 := v_np*_trans_le &
  [ STEM < "perform" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perform_rel" ].

plenty_n := n_mass_ppcomp_le &
  [ STEM < "plenty" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_plenty_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

porter_n := n_ppof_le &
  [ STEM < "porter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_porter_rel" ].

postmortem_n := n_intr_le &
  [ STEM < "postmortem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_postmortem_rel" ].

prejudice_n := n_mass_count_le &
  [ STEM < "prejudice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prejudice_rel" ].

premiere_n := n_intr_le &
  [ STEM < "premiere" >,
    SYNSEM.LKEYS.KEYREL.PRED "_premiere_rel" ].

preoccupy_v23 := v_np*_trans_le &
  [ STEM < "preoccupy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preoccupy_rel" ].

profit_v13 := v_np*_trans_le &
  [ STEM < "profit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profit_v_rel" ].

prolong_v13 := v_np*_trans_le &
  [ STEM < "prolong" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prolong_rel" ].

promote_v13 := v_np*_trans_le &
  [ STEM < "promote" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promote_rel" ].

protect_v13 := v_np*_trans_le &
  [ STEM < "protect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_protect_rel" ].

pursue_v13 := v_np*_trans_le &
  [ STEM < "pursue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pursue_rel" ].

push_off_v1 := v_particle_np_le &
  [ STEM < "push" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_push_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

put_together_v1 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_together_rel",
             LKEYS.--COMPKEY _together_p_sel_rel ] ].

put_up_v1 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

reassure_v1 := v_np*_trans_le &
  [ STEM < "reassure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reassure_rel" ].

reassure_v2 := v_np_trans_cp_prop_le &
  [ STEM < "reassure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reassure_rel" ].

reassure_about_v1 := v_empty_prep_trans_le &
  [ STEM < "reassure" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reassure_about_rel",
             LKEYS.--OCOMPKEY _about_p_sel_rel ] ].

receipt_n1 := n_mass_count_ppof_le &
  [ STEM < "receipt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_receipt_rel" ].

recognize_v13 := v_np*_trans_le &
  [ STEM < "recognize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recognize_rel" ].

refer_v1 := v_empty_prep_intrans_le &
  [ STEM < "refer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_refer_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

refer_v2 := v_empty_prep_trans_le &
  [ STEM < "refer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_refer_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

reflect_v13 := v_np*_trans_le &
  [ STEM < "reflect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reflect_rel" ].

refrain_v1 := v_empty_prep_intrans_le &
  [ STEM < "refrain" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_refrain_from_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

refrain_v2 := v_unerg_le &
  [ STEM < "refrain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refrain_from_rel" ].

refusal_n1 := n_ppof_le &
  [ STEM < "refusal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refusal_rel" ].

register_v13 := v_np*_trans_le &
  [ STEM < "register" >,
    SYNSEM.LKEYS.KEYREL.PRED "_register_rel" ].

remotely_grad := adv_degree_spec_v_le &
  [ STEM < "remotely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remotely_deg_rel" ].

render_v13 := v_np*_trans_le &
  [ STEM < "render" >,
    SYNSEM.LKEYS.KEYREL.PRED "_render_rel" ].

repay_v13 := v_np*_trans_le &
  [ STEM < "repay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repay_rel" ].

represent_v13 := v_np*_trans_le &
  [ STEM < "represent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_represent_rel" ].

resolve_v13 := v_np*_trans_le &
  [ STEM < "resolve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resolve_rel" ].

resume_v13 := v_np*_trans_le &
  [ STEM < "resume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resume_v_rel" ].

retreat_v13 := v_np*_trans_le &
  [ STEM < "retreat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_retreat_v_rel" ].

reveal_v13 := v_np*_trans_le &
  [ STEM < "reveal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reveal_rel" ].

revoke_v13 := v_np*_trans_le &
  [ STEM < "revoke" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revoke_rel" ].

rework_v13 := v_np*_trans_le &
  [ STEM < "rework" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rework_rel" ].

righto_excl_pre := adv_disc_preh_le &
  [ STEM < "righto" >,
    SYNSEM.LKEYS.KEYREL.CARG "righto" ].

righto_excl_post := adv_disc_posth_le &
  [ STEM < "righto" >,
    SYNSEM.LKEYS.KEYREL.CARG "righto" ].

roger_wilco_excl_pre := adv_disc_preh_le &
  [ STEM < "roger", "wilco" >,
    SYNSEM.LKEYS.KEYREL.CARG "roger_wilco" ].

roger_wilco_excl_post := adv_disc_posth_le &
  [ STEM < "roger", "wilco" >,
    SYNSEM.LKEYS.KEYREL.CARG "roger_wilco" ].

rough_grad := adv_degree_spec_adj_le &
  [ STEM < "rough" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rough_deg_rel" ].

ruin_v13 := v_np*_trans_le &
  [ STEM < "ruin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ruin_v_rel" ].

run_over_v3 := v_particle_le &
  [ STEM < "run" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_run_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

sake_n := n_ppof_le &
  [ STEM < "sake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sake_rel" ].

scatter_v13 := v_np*_trans_le &
  [ STEM < "scatter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scatter_rel" ].

scrape_together_v1 := v_particle_np_le &
  [ STEM < "scrape" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_scrape_together_rel",
             LKEYS.--COMPKEY _together_p_sel_rel ] ].

sell_out_v13 := v_particle_np_le &
  [ STEM < "sell" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sell_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

set_aside_v13 := v_particle_np_le &
  [ STEM < "set" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_set_aside_rel",
             LKEYS.--COMPKEY _aside_p_sel_rel ] ].

set_off_v13 := v_particle_np_le &
  [ STEM < "set" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_set_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

shadow_n := n_ppof_le &
  [ STEM < "shadow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shadow_rel" ].

shake_v13 := v_np*_trans_le &
  [ STEM < "shake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shake_rel" ].

shuttle_v13 := v_np*_trans_le &
  [ STEM < "shuttle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shuttle_v_rel" ].

smash_v13 := v_np*_trans_le &
  [ STEM < "smash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smash_rel" ].

smoker_n := n_ppof_le &
  [ STEM < "smoker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smoker_rel" ].

so_so_excl_pre := adv_disc_preh_le &
  [ STEM < "so", "so" >,
    SYNSEM.LKEYS.KEYREL.CARG "so_so" ].

so_so_excl_post := adv_disc_posth_le &
  [ STEM < "so", "so" >,
    SYNSEM.LKEYS.KEYREL.CARG "so_so" ].

sow_v13 := v_np*_trans_le &
  [ STEM < "sow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sow_v_rel" ].

space_out_v1 := v_particle_np_le &
  [ STEM < "space" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_space_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

stand_in_v3 := v_particle_le &
  [ STEM < "stand" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stand_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

start_off_v1 := v_particle_np_le &
  [ STEM < "start" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_start_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

start_from_v1 := v_empty_prep_intrans_le &
  [ STEM < "start" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_start_from_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

stipulate_pcv13_1 := v_np_trans_le &
  [ STEM < "stipulate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stipulate_rel" ].

stipulate_pcv13_2 := v_cp_non_trans_le &
  [ STEM < "stipulate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stipulate_rel" ].

stock_up_v1 := v_particle_pp_le &
  [ STEM < "stock" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stock_up_rel",
             LKEYS [ --COMPKEY _up_p_sel_rel,
                     --OCOMPKEY _with_p_rel ] ] ].

stomach_n := n_ppof_le &
  [ STEM < "stomach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stomach_rel" ].

strive_v13 := v_empty_prep_intrans_le &
  [ STEM < "strive" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_strive_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

stroll_n := n_intr_le &
  [ STEM < "stroll" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stroll_rel" ].

stroll_along_v3 := v_particle_le &
  [ STEM < "stroll" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stroll_along_rel",
             LKEYS.--COMPKEY _along_p_sel_rel ] ].

substitution_n := n_ppof_le &
  [ STEM < "substitution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_substitution_rel" ].

suffer_v3 := v_unacc_le &
  [ STEM < "suffer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suffer_v_rel" ].

supervise_v13 := v_np*_trans_le &
  [ STEM < "supervise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supervise_rel" ].

supplement_n := n_ppof_le &
  [ STEM < "supplement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supplement_rel" ].

surcharge_n := n_ppof_le &
  [ STEM < "surcharge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surcharge_rel" ].

surprisingly_sa := adv_le &
  [ STEM < "surprisingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surprisingly_rel" ].

surprisingly_sa2 := adv_s_pre_le &
  [ STEM < "surprisingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surprisingly_rel" ].

swallow_v13 := v_np*_trans_le &
  [ STEM < "swallow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swallow_v_rel" ].

take_along_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_along_rel",
             LKEYS.--COMPKEY _along_p_sel_rel ] ].

take_in_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

take_on_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

tear_apart_v1 := v_particle_np_le &
  [ STEM < "tear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tear_apart_rel",
             LKEYS.--COMPKEY _apart_j_sel_rel ] ].

terrace_n := n_ppof_le &
  [ STEM < "terrace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terrace_rel" ].

thanks_so_much_excl_pre := adv_disc_preh_le &
  [ STEM < "thanks", "so", "much" >,
    SYNSEM.LKEYS.KEYREL.CARG "thanks_so_much" ].

thanks_so_much_excl_post := adv_disc_posth_le &
  [ STEM < "thanks", "so", "much" >,
    SYNSEM.LKEYS.KEYREL.CARG "thanks_so_much" ].

think_up_v1 := v_particle_np_le &
  [ STEM < "think" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_think_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

tie_on_v1 := v_particle_np_le &
  [ STEM < "tie" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tie_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

torment_v13 := v_np*_trans_le &
  [ STEM < "torment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_torment_v_rel" ].

translate_v13 := v_np*_trans_le &
  [ STEM < "translate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_translate_rel" ].

turn_up_v3 := v_particle_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

twist_v13 := v_np*_trans_le &
  [ STEM < "twist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_twist_v_rel" ].

use_up_v1 := v_particle_np_le &
  [ STEM < "use" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_use_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

value_n1 := n_mass_count_ppof_le &
  [ STEM < "value" >,
    SYNSEM.LKEYS.KEYREL.PRED "_value_n_rel" ].

value_v1 := v_np_trans_le &
  [ STEM < "value" >,
    SYNSEM.LKEYS.KEYREL.PRED "_value_v_rel" ].

vaudeville_n := n_intr_le &
  [ STEM < "vaudeville" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vaudeville_rel" ].

violate_v13 := v_np*_trans_le &
  [ STEM < "violate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_violate_rel" ].

vitally_grad := adv_degree_spec_v_le &
  [ STEM < "vitally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vitally_rel" ].

watch_out_v1 := v_particle_pp_le &
  [ STEM < "watch" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_watch_out_rel",
             LKEYS [ --COMPKEY _out_p_sel_rel,
                     --OCOMPKEY _for_p_rel ] ] ].

wedge_in_v1 := v_particle_np_le &
  [ STEM < "wedge" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wedge_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

willingness_n1 := n_intr_le &
  [ STEM < "willingness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_willingness_rel" ].

willingness_n2 := n_vpcomp_le &
  [ STEM < "willingness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_willingness_rel" ].

withdraw_v1 := v_unerg_le &
  [ STEM < "withdraw" >,
    SYNSEM.LKEYS.KEYREL.PRED "_withdraw_rel" ].

withdraw_v13 := v_np_trans_le &
  [ STEM < "withdraw" >,
    SYNSEM.LKEYS.KEYREL.PRED "_withdraw_rel" ].

withdraw_from_v1 := v_empty_prep_trans_le &
  [ STEM < "withdraw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_withdraw_from_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

wow_excl_pre := adv_disc_preh_le &
  [ STEM < "wow" >,
    SYNSEM.LKEYS.KEYREL.CARG "wow" ].

wow_excl_post := adv_disc_posth_le &
  [ STEM < "wow" >,
    SYNSEM.LKEYS.KEYREL.CARG "wow" ].

wrangling_n := n_intr_le &
  [ STEM < "wrangling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wrangling_rel" ].

yup_excl_pre := adv_disc_preh_le &
  [ STEM < "yup" >,
    SYNSEM.LKEYS.KEYREL.CARG "yup" ].

yup_excl_post := adv_disc_posth_le &
  [ STEM < "yup" >,
    SYNSEM.LKEYS.KEYREL.CARG "yup" ].

zone_n := n_ppof_le &
  [ STEM < "zone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_zone_rel" ].

Brasilian_isect := adj_intrans_le &
  [ STEM < "brasilian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brasilian_rel" ].

abnormal_isect := adj_intrans_le &
  [ STEM < "abnormal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abnormal_rel" ].

abnormally_adv := adv_int_vp_le &
  [ STEM < "abnormally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abnormally_rel" ].

additionally_isect := adv_int_vp_le &
  [ STEM < "additionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_additionally_rel" ].

adequate_isect := adj_intrans_le &
  [ STEM < "adequate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adequate_rel" ].

adequately_isect := adv_int_vp_le &
  [ STEM < "adequately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adequately_rel" ].

administrative_isect := adj_intrans_le &
  [ STEM < "administrative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_administrative_rel" ].

allotted_isect := adj_intrans_le &
  [ STEM < "allotted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allotted_rel" ].

allright_isect := adj_intrans_le &
  [ STEM < "allright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allright_adj_rel" ].

amiable_isect := adj_intrans_le &
  [ STEM < "amiable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amiable_rel" ].

amiably_isect := adv_int_vp_le &
  [ STEM < "amiably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amiably_rel" ].

amusing_isect := adj_intrans_le &
  [ STEM < "amusing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amusing_rel" ].

annually_isect := adv_int_vp_le &
  [ STEM < "annually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annually_rel" ].

answering_isect := adj_intrans_le &
  [ STEM < "answering" >,
    SYNSEM.LKEYS.KEYREL.PRED "_answering_rel" ].

apparent_isect := adj_intrans_le &
  [ STEM < "apparent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apparent_rel" ].

appropriately_isect := adv_int_vp_le &
  [ STEM < "appropriately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appropriately_rel" ].

arbitrarily_isect := adv_int_vp_le &
  [ STEM < "arbitrarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arbitrarily_rel" ].

athletic_isect := adj_intrans_le &
  [ STEM < "athletic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_athletic_rel" ].

attractive_isect := adj_intrans_le &
  [ STEM < "attractive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attractive_rel" ].

awful_isect := adj_intrans_le &
  [ STEM < "awful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awful_rel" ].

awry_isect := adj_intrans_le &
  [ STEM < "awry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awry_rel" ].

baroque_isect := adj_intrans_le &
  [ STEM < "baroque" >,
    SYNSEM.LKEYS.KEYREL.PRED "_baroque_isect_rel" ].

befitting_isect := adj_intrans_le &
  [ STEM < "befitting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_befitting_rel" ].

bimonthly_isect := adj_intrans_le &
  [ STEM < "bimonthly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bimonthly_rel" ].

bimonthly_adv := adv_int_vp_le &
  [ STEM < "bimonthly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bimonthly_adv_rel" ].

biological_isect := adj_intrans_le &
  [ STEM < "biological" >,
    SYNSEM.LKEYS.KEYREL.PRED "_biological_rel" ].

bitter_isect := adj_intrans_le &
  [ STEM < "bitter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bitter_rel" ].

black_isect := adj_intrans_le &
  [ STEM < "black" >,
    SYNSEM.LKEYS.KEYREL.PRED "_black_rel" ].

blind_isect := adj_intrans_le &
  [ STEM < "blind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blind_rel" ].

blue_isect := adj_intrans_le &
  [ STEM < "blue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blue_rel" ].

boring_isect := adj_intrans_le &
  [ STEM < "boring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boring_rel" ].

borne_isect := adj_intrans_le &
  [ STEM < "borne" >,
    SYNSEM.LKEYS.KEYREL.PRED "_borne_rel" ].

bright_isect := adj_intrans_le &
  [ STEM < "bright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bright_rel" ].

brighter_a1 := adj_comp_le &
  [ STEM < "brighter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bright_rel" ].

brightest_a1 := adj_superl_le &
  [ STEM < "brightest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bright_rel" ].

brightest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "brightest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bright_rel" ].

brilliant_isect := adj_intrans_le &
  [ STEM < "brilliant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brilliant_rel" ].

broken_isect := adj_intrans_le &
  [ STEM < "broken" >,
    SYNSEM.LKEYS.KEYREL.PRED "_broken_rel" ].

broke_robust := adj_intrans_le &
  [ STEM < "broke" >,
    SYNSEM.LKEYS.KEYREL.PRED "_broken_rel" ].

catastrophic_isect := adj_intrans_le &
  [ STEM < "catastrophic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_catastrophic_rel" ].

catholic_isect := adj_intrans_le &
  [ STEM < "catholic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_catholic_rel" ].

changeable_isect := adj_intrans_le &
  [ STEM < "changeable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_changeable_rel" ].

characteristic_isect := adj_intrans_le &
  [ STEM < "characteristic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_characteristic_rel" ].

classical_isect := adj_intrans_le &
  [ STEM < "classical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_classical_rel" ].

clean_isect := adj_intrans_le &
  [ STEM < "clean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clean_j_rel" ].

closed_isect := adj_intrans_le &
  [ STEM < "closed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_closed_rel" ].

colorful_isect := adj_intrans_le &
  [ STEM < "colorful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_colorful_rel" ].

compact_isect := adj_intrans_le &
  [ STEM < "compact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compact_rel" ].

comparative_isect := adj_intrans_le &
  [ STEM < "comparative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comparative_rel" ].

compatible_isect := adj_intrans_le &
  [ STEM < "compatible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compatible_rel" ].

complicated_isect := adj_intrans_le &
  [ STEM < "complicated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complicated_rel" ].

concentrated_isect := adj_intrans_le &
  [ STEM < "concentrated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concentrated_rel" ].

concretely_isect := adv_int_vp_le &
  [ STEM < "concretely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concretely_rel" ].

conflicting_isect := adj_intrans_le &
  [ STEM < "conflicting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conflicting_rel" ].

confused_isect := adj_intrans_le &
  [ STEM < "confused" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confused_rel" ].

confused_a2 := adj_trans_oblig_le &
  [ STEM < "confused" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_confused_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

confusing_isect := adj_intrans_le &
  [ STEM < "confusing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confusing_rel" ].

consecutively_isect := adv_int_vp_le &
  [ STEM < "consecutively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consecutively_rel" ].

considerable_isect := adj_intrans_le &
  [ STEM < "considerable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_considerable_rel" ].

consistent_isect := adj_intrans_le &
  [ STEM < "consistent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consistent_rel" ].

consistently_isect := adv_int_vp_le &
  [ STEM < "consistently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consistently_rel" ].

constructive_isect := adj_intrans_le &
  [ STEM < "constructive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_constructive_rel" ].

contemplative_isect := adj_intrans_le &
  [ STEM < "contemplative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contemplative_rel" ].

contemporary_isect := adj_intrans_le &
  [ STEM < "contemporary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contemporary_rel" ].

continuously_isect := adv_int_vp_le &
  [ STEM < "continuously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_continuously_rel" ].

cooperative_isect := adj_intrans_le &
  [ STEM < "cooperative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cooperative_rel" ].

copious_isect := adj_intrans_le &
  [ STEM < "copious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_copious_rel" ].

corporate_isect := adj_intrans_le &
  [ STEM < "corporate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_corporate_rel" ].

corresponding_isect := adj_intrans_le &
  [ STEM < "corresponding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_corresponding_rel" ].

covered_up_isect := adj_intrans_le &
  [ STEM < "covered", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_covered_up_rel" ].

critical_isect := adj_intrans_le &
  [ STEM < "critical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_critical_rel" ].

crosswise_isect := adj_intrans_le &
  [ STEM < "crosswise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crosswise_rel" ].

crowded_isect := adj_intrans_le &
  [ STEM < "crowded" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crowded_rel" ].

crucial_a1 := adj_intrans_le &
  [ STEM < "crucial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crucial_rel" ].

crucial_a2 := adj_reg_atrans_le &
  [ STEM < "crucial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crucial_rel" ].

crucial_a3 := adj_reg_atrans_cp_le &
  [ STEM < "crucial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crucial_rel" ].

crucially_pcisect := adv_int_vp_le &
  [ STEM < "crucially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crucially_rel" ].

cultural_isect := adj_intrans_le &
  [ STEM < "cultural" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cultural_rel" ].

culturally_isect := adv_int_vp_le &
  [ STEM < "culturally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_culturally_rel" ].

currently_isect := adv_int_vp_aux_le &
  [ STEM < "currently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_currently_rel" ].

dark_isect := adj_intrans_le &
  [ STEM < "dark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dark_rel" ].

deadly_isect := adj_intrans_le &
  [ STEM < "deadly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deadly_rel" ].

deceivingly_isect := adv_int_vp_le &
  [ STEM < "deceivingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deceivingly_rel" ].

decent_isect := adj_intrans_le &
  [ STEM < "decent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decent_isect_rel" ].

delicious_isect := adj_intrans_le &
  [ STEM < "delicious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delicious_rel" ].

determined_isect := adj_intrans_le &
  [ STEM < "determined" >,
    SYNSEM.LKEYS.KEYREL.PRED "_determined_rel" ].

dismissive_isect := adj_intrans_le &
  [ STEM < "dismissive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dismissive_rel" ].

dissatisfied_isect := adj_intrans_le &
  [ STEM < "dissatisfied" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dissatisfied_rel" ].

disturbed_isect := adj_intrans_le &
  [ STEM < "disturbed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disturbed_rel" ].

domestic_isect := adj_intrans_le &
  [ STEM < "domestic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_domestic_rel" ].

downstairs_isect := adj_intrans_le &
  [ STEM < "downstairs" >,
    SYNSEM.LKEYS.KEYREL.PRED "_downstairs_rel" ].

downtown_isect := adj_intrans_le &
  [ STEM < "downtown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_downtown_rel" ].

dreadful_a1 := adj_intrans_le &
  [ STEM < "dreadful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dreadful_rel" ].

dreadful_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "dreadful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dreadful_rel" ].

dry_isect := adj_intrans_le &
  [ STEM < "dry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_adj_rel" ].

dry_a2 := adj_atrans_le &
  [ STEM < "dry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_expl_rel" ].

dull_isect := adj_intrans_le &
  [ STEM < "dull" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dull_rel" ].

ecological_isect := adj_intrans_le &
  [ STEM < "ecological" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ecological_rel" ].

edible_isect := adj_intrans_le &
  [ STEM < "edible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_edible_rel" ].

egoistic_isect := adj_intrans_le &
  [ STEM < "egoistic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_egoistic_rel" ].

elegant_isect := adj_intrans_le &
  [ STEM < "elegant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elegant_rel" ].

elementary_isect := adj_intrans_le &
  [ STEM < "elementary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elementary_rel" ].

else_isect := adj_intrans_le &
  [ STEM < "else" >,
    SYNSEM.LKEYS.KEYREL.PRED "_else_rel" ].

encouraging_a1 := adj_intrans_le &
  [ STEM < "encouraging" >,
    SYNSEM.LKEYS.KEYREL.PRED "_encouraging_rel" ].

encouraging_a2 := adj_reg_atrans_le &
  [ STEM < "encouraging" >,
    SYNSEM.LKEYS.KEYREL.PRED "_encouraging_rel" ].

encouraging_a3 := adj_reg_atrans_cp_le &
  [ STEM < "encouraging" >,
    SYNSEM.LKEYS.KEYREL.PRED "_encouraging_rel" ].

enthusiastic_isect := adj_intrans_le &
  [ STEM < "enthusiastic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enthusiastic_rel" ].

enticing_isect := adj_intrans_le &
  [ STEM < "enticing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enticing_rel" ].

environmental_isect := adj_intrans_le &
  [ STEM < "environmental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_environmental_rel" ].

euphoric_isect := adj_intrans_le &
  [ STEM < "euphoric" >,
    SYNSEM.LKEYS.KEYREL.PRED "_euphoric_rel" ].

everyday_isect := adj_intrans_le &
  [ STEM < "everyday" >,
    SYNSEM.LKEYS.KEYREL.PRED "_everyday_rel" ].

excellently_isect := adv_int_vp_le &
  [ STEM < "excellently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excellently_rel" ].

exceptional_isect := adj_intrans_le &
  [ STEM < "exceptional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exceptional_rel" ].

exciting_isect := adj_intrans_le &
  [ STEM < "exciting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exciting_rel" ].

expensively_isect := adv_int_vp_le &
  [ STEM < "expensively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expensively_rel" ].

explicit_isect := adj_intrans_le &
  [ STEM < "explicit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_explicit_rel" ].

favorite_isect := adj_intrans_le &
  [ STEM < "favorite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_favorite_rel" ].

fixed_isect := adj_intrans_le &
  [ STEM < "fixed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fixed_rel" ].

fondly_isect := adv_int_vp_le &
  [ STEM < "fondly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fondly_rel" ].

formal_isect := adj_intrans_le &
  [ STEM < "formal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_formal_rel" ].

fragmented_isect := adj_intrans_le &
  [ STEM < "fragmented" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fragmented_rel" ].

frightening_isect := adj_intrans_le &
  [ STEM < "frightening" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frightening_rel" ].

full_up_isect := adj_intrans_le &
  [ STEM < "full", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_full_up_rel" ].

general_isect := adj_intrans_le &
  [ STEM < "general" >,
    SYNSEM.LKEYS.KEYREL.PRED "_general_adj_rel" ].

generous_isect := adj_intrans_le &
  [ STEM < "generous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_generous_rel" ].

gold_isect := adj_intrans_le &
  [ STEM < "gold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gold_rel" ].

grand_isect := adj_intrans_le &
  [ STEM < "grand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grand_rel" ].

graphic_isect := adj_intrans_le &
  [ STEM < "graphic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graphic_adj_rel" ].

graphically_isect := adv_int_vp_le &
  [ STEM < "graphically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graphically_rel" ].

grateful_isect := adj_intrans_le &
  [ STEM < "grateful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grateful_rel" ].

green_isect := adj_intrans_le &
  [ STEM < "green" >,
    SYNSEM.LKEYS.KEYREL.PRED "_green_rel" ].

haggard_isect := adj_intrans_le &
  [ STEM < "haggard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_haggard_rel" ].

hasty_isect := adj_intrans_le &
  [ STEM < "hasty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hasty_rel" ].

healthy_isect := adj_intrans_le &
  [ STEM < "healthy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_healthy_rel" ].

heavily_isect := adv_int_vp_le &
  [ STEM < "heavily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heavily_rel" ].

helpful_isect := adj_intrans_le &
  [ STEM < "helpful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_helpful_rel" ].

helpless_isect := adj_intrans_le &
  [ STEM < "helpless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_helpless_rel" ].

hip_isect := adj_intrans_le &
  [ STEM < "hip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hip_adj_rel" ].

historical_isect := adj_intrans_le &
  [ STEM < "historical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_historical_rel" ].

hopeless_isect := adj_intrans_le &
  [ STEM < "hopeless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hopeless_rel" ].

horrendous_a1 := adj_intrans_le &
  [ STEM < "horrendous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horrendous_rel" ].

horrendous_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "horrendous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horrendous_rel" ].

horrendously_pcisect := adv_int_vp_le &
  [ STEM < "horrendously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horrendously_rel" ].

horrible_a1 := adj_intrans_le &
  [ STEM < "horrible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horrible_rel" ].

horrible_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "horrible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horrible_rel" ].

horribly_pcisect := adv_int_vp_le &
  [ STEM < "horribly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horribly_rel" ].

huge_isect := adj_intrans_le &
  [ STEM < "huge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_huge_rel" ].

humid_isect := adj_intrans_le &
  [ STEM < "humid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_humid_rel" ].

hungrily_isect := adv_int_vp_le &
  [ STEM < "hungrily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hungrily_rel" ].

hurriedly_isect := adv_int_vp_le &
  [ STEM < "hurriedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hurriedly_rel" ].

ideally_isect := adv_int_vp_le &
  [ STEM < "ideally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ideally_rel" ].

imperative_isect := adj_intrans_le &
  [ STEM < "imperative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imperative_rel" ].

imperative_a2 := adj_reg_atrans_cp_le &
  [ STEM < "imperative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imperative_rel" ].

imperative_a3 := adj_atrans_bse_cp_le &
  [ STEM < "imperative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imperative_rel" ].

impromptu_isect := adj_intrans_le &
  [ STEM < "impromptu" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impromptu_rel" ].

inaccurate_isect := adj_intrans_le &
  [ STEM < "inaccurate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inaccurate_rel" ].

indefinitely_isect := adv_int_vp_le &
  [ STEM < "indefinitely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indefinitely_rel" ].

independently_isect := adv_int_vp_le &
  [ STEM < "independently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_independently_rel" ].

indifferent_isect := adj_intrans_le &
  [ STEM < "indifferent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indifferent_rel" ].

ineffective_isect := adj_intrans_le &
  [ STEM < "ineffective" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ineffective_rel" ].

informative_isect := adj_intrans_le &
  [ STEM < "informative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_informative_rel" ].

informatively_isect := adv_int_vp_le &
  [ STEM < "informatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_informatively_rel" ].

inopportune_isect := adj_intrans_le &
  [ STEM < "inopportune" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inopportune_rel" ].

intelligent_isect := adj_intrans_le &
  [ STEM < "intelligent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intelligent_rel" ].

intensified_isect := adj_intrans_le &
  [ STEM < "intensified" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intensified_rel" ].

interesting_a1 := adj_intrans_le &
  [ STEM < "interesting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interesting_rel" ].

interesting_a2 := adj_reg_atrans_le &
  [ STEM < "interesting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interesting_rel" ].

interesting_a3 := adj_reg_atrans_cp_le &
  [ STEM < "interesting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interesting_rel" ].

intimate_isect := adj_intrans_le &
  [ STEM < "intimate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intimate_rel" ].

intolerable_isect := adj_intrans_le &
  [ STEM < "intolerable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intolerable_rel" ].

involved_isect := adj_intrans_le &
  [ STEM < "involved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_involved_rel" ].

juicy_isect := adj_intrans_le &
  [ STEM < "juicy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_juicy_rel" ].

justifiable_isect := adj_intrans_le &
  [ STEM < "justifiable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_justifiable_rel" ].

kosher_isect := adj_intrans_le &
  [ STEM < "kosher" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kosher_rel" ].

latter_isect := adj_intrans_le &
  [ STEM < "latter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_latter_rel" ].

leading_isect := adj_intrans_le &
  [ STEM < "leading" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leading_rel" ].

leisurely_isect := adv_int_vp_le &
  [ STEM < "leisurely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leisurely_rel" ].

lovely_adv := adv_int_vp_post_le &
  [ STEM < "lovely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lovely_adv_rel" ].

lovely_adj := adj_intrans_le &
  [ STEM < "lovely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lovely_adj_rel" ].

loving_isect := adj_intrans_le &
  [ STEM < "loving" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loving_rel" ].

lucky_a1 := adj_intrans_le &
  [ STEM < "lucky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lucky_rel" ].

lucky_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "lucky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lucky_rel" ].

luxurious_isect := adj_intrans_le &
  [ STEM < "luxurious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_luxurious_rel" ].

medieval_isect := adj_intrans_le &
  [ STEM < "medieval" >,
    SYNSEM.LKEYS.KEYREL.PRED "_medieval_rel" ].

messed_up_isect := adj_intrans_le &
  [ STEM < "messed", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_messed_up_rel" ].

messy_isect := adj_intrans_le &
  [ STEM < "messy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_messy_rel" ].

mild_isect := adj_intrans_le &
  [ STEM < "mild" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_rel" ].

mild_a2 := adj_atrans_le &
  [ STEM < "mild" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_expl_rel" ].

moderate_isect := adj_intrans_le &
  [ STEM < "moderate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moderate_adj_rel" ].

modern_isect := adj_intrans_le &
  [ STEM < "modern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_modern_rel" ].

narrowly_isect := adv_int_vp_le &
  [ STEM < "narrowly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_narrowly_rel" ].

native_isect := adj_intrans_le &
  [ STEM < "native" >,
    SYNSEM.LKEYS.KEYREL.PRED "_native_rel" ].

neatly_isect := adv_int_vp_le &
  [ STEM < "neatly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neatly_rel" ].

negative_isect := adj_intrans_le &
  [ STEM < "negative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negative_rel" ].

negligible_isect := adj_intrans_le &
  [ STEM < "negligible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negligible_rel" ].

nightly_adv := adv_int_vp_post_le &
  [ STEM < "nightly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nightly_adv_rel" ].

nightly_a1 := adj_intrans_le &
  [ STEM < "nightly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nightly_rel" ].

nonGerman_isect := adj_intrans_le &
  [ STEM < "non", "german" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_german_rel" ].

nonsmoking_isect := adj_intrans_le &
  [ STEM < "non", "smoking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_smoking_rel" ].

refundable_a1 := adj_intrans_le &
  [ STEM < "refundable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refundable_rel" ].

nonrefundable_a1 := adj_intrans_le &
  [ STEM < "nonrefundable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonrefundable_rel" ].

nonrefundable_a2 := adj_intrans_le &
  [ STEM < "non-refundable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonrefundable_rel" ].

nonrefundable_a3 := adj_intrans_le &
  [ STEM < "non", "refundable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonrefundable_rel" ].

nonrefundable_a4 := adj_intrans_le &
  [ STEM < "non", "-", "refundable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonrefundable_rel" ].

onward_isect := adj_intrans_le &
  [ STEM < "onward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_onward_rel" ].

onwards_isect := adj_intrans_le &
  [ STEM < "onwards" >,
    SYNSEM.LKEYS.KEYREL.PRED "_onwards_rel" ].

opposed_isect := adj_trans_le &
  [ STEM < "opposed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_opposed_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

oppressive_isect := adj_intrans_le &
  [ STEM < "oppressive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oppressive_rel" ].

optional_a1 := adj_intrans_le &
  [ STEM < "optional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optional_rel" ].

optional_a2 := adj_reg_atrans_le &
  [ STEM < "optional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optional_rel" ].

optional_a3 := adj_reg_atrans_cp_le &
  [ STEM < "optional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optional_rel" ].

organizationally_isect := adv_int_vp_le &
  [ STEM < "organizationally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_organizationally_rel" ].

outrageous_isect := adj_intrans_le &
  [ STEM < "outrageous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outrageous_rel" ].

outward_isect := adj_intrans_le &
  [ STEM < "outward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outward_rel" ].

overcrowded_isect := adj_intrans_le &
  [ STEM < "overcrowded" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overcrowded_rel" ].

overnight_isect := adj_intrans_le &
  [ STEM < "overnight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overnight_rel" ].

overnight_adv1 := adv_int_vp_post_le &
  [ STEM < "overnight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overnight_adv_rel" ].

painful_isect := adj_intrans_le &
  [ STEM < "painful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_painful_rel" ].

painfully_isect := adv_int_vp_le &
  [ STEM < "painfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_painfully_rel" ].

peachy_isect := adj_intrans_le &
  [ STEM < "peachy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peachy_rel" ].

penultimate_isect := adj_intrans_le &
  [ STEM < "penultimate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_penultimate_rel" ].

pharmaceutical_isect := adj_intrans_le &
  [ STEM < "pharmaceutical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pharmaceutical_rel" ].

picky_isect := adj_intrans_le &
  [ STEM < "picky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_picky_rel" ].

polite_isect := adj_intrans_le &
  [ STEM < "polite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_polite_rel" ].

poorly_isect := adv_int_vp_le &
  [ STEM < "poorly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_poorly_rel" ].

posh_isect := adj_intrans_le &
  [ STEM < "posh" >,
    SYNSEM.LKEYS.KEYREL.PRED "_posh_rel" ].

precious_isect := adj_intrans_le &
  [ STEM < "precious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precious_rel" ].

predefined_isect := adj_intrans_le &
  [ STEM < "predefined" >,
    SYNSEM.LKEYS.KEYREL.PRED "_predefined_rel" ].

pressing_isect := adj_intrans_le &
  [ STEM < "pressing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pressing_rel" ].

presumable_isect := adj_intrans_le &
  [ STEM < "presumable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presumable_rel" ].

pricewise_isect := adj_intrans_le &
  [ STEM < "pricewise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pricewise_rel" ].

productive_isect := adj_intrans_le &
  [ STEM < "productive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_productive_rel" ].

productively_isect := adv_int_vp_le &
  [ STEM < "productively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_productively_rel" ].

professional_isect := adj_intrans_le &
  [ STEM < "professional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_professional_rel" ].

profitable_a1 := adj_intrans_le &
  [ STEM < "profitable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profitable_rel" ].

profitable_a2 := adj_reg_atrans_le &
  [ STEM < "profitable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profitable_rel" ].

profitable_a3 := adj_reg_atrans_cp_le &
  [ STEM < "profitable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profitable_rel" ].

profitably_pcisect := adv_int_vp_le &
  [ STEM < "profitably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profitably_rel" ].

prolonged_isect := adj_intrans_le &
  [ STEM < "prolonged" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prolonged_rel" ].

promising_a1 := adj_intrans_le &
  [ STEM < "promising" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promising_rel" ].

promising_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "promising" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promising_rel" ].

publicly_isect := adv_int_vp_le &
  [ STEM < "publicly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_publicly_rel" ].

punctually_isect := adv_int_vp_le &
  [ STEM < "punctually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_punctually_rel" ].

random_isect := adj_intrans_le &
  [ STEM < "random" >,
    SYNSEM.LKEYS.KEYREL.PRED "_random_rel" ].

randomly_isect := adv_int_vp_le &
  [ STEM < "randomly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_randomly_rel" ].

reciprocal_isect := adj_intrans_le &
  [ STEM < "reciprocal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reciprocal_rel" ].

regardless_isect := adv_int_vp_post_le &
  [ STEM < "regardless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regardless_rel" ].

regrettable_isect := adj_intrans_le &
  [ STEM < "regrettable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regrettable_rel" ].

relaxing_isect := adj_intrans_le &
  [ STEM < "relaxing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relaxing_rel" ].

relieved_isect := adj_intrans_le &
  [ STEM < "relieved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relieved_rel" ].

relieving_a1 := adj_intrans_le &
  [ STEM < "relieving" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relieving_rel" ].

relieving_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "relieving" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relieving_rel" ].

remarkable_a1 := adj_intrans_le &
  [ STEM < "remarkable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remarkable_rel" ].

remarkable_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "remarkable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remarkable_rel" ].

remarkably_pcisect := adv_int_vp_le &
  [ STEM < "remarkably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remarkably_rel" ].

remote_isect := adj_intrans_le &
  [ STEM < "remote" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remote_rel" ].

renewed_isect := adj_intrans_le &
  [ STEM < "renewed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_renewed_rel" ].

respective_isect := adj_intrans_le &
  [ STEM < "respective" >,
    SYNSEM.LKEYS.KEYREL.PRED "_respective_rel" ].

risky_isect := adj_intrans_le &
  [ STEM < "risky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_risky_rel" ].

rosy_isect := adj_intrans_le &
  [ STEM < "rosy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rosy_rel" ].

rusty_isect := adj_intrans_le &
  [ STEM < "rusty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rusty_rel" ].

safely_isect := adv_int_vp_le &
  [ STEM < "safely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_safely_rel" ].

satisfactory_a1 := adj_intrans_le &
  [ STEM < "satisfactory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_satisfactory_rel" ].

satisfactory_a2 := adj_reg_atrans_le &
  [ STEM < "satisfactory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_satisfactory_rel" ].

satisfactory_a3 := adj_reg_atrans_cp_le &
  [ STEM < "satisfactory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_satisfactory_rel" ].

satisfying_isect := adj_intrans_le &
  [ STEM < "satisfying" >,
    SYNSEM.LKEYS.KEYREL.PRED "_satisfying_rel" ].

scattered_isect := adj_intrans_le &
  [ STEM < "scattered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scattered_rel" ].

sceptical_isect := adj_intrans_le &
  [ STEM < "sceptical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sceptical_rel" ].

screwed_isect := adj_intrans_le &
  [ STEM < "screwed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_screwed_rel" ].

severe_isect := adj_intrans_le &
  [ STEM < "severe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_severe_rel" ].

severely_isect := adv_int_vp_le &
  [ STEM < "severely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_severely_rel" ].

sick_isect := adj_trans_le &
  [ STEM < "sick" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sick_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

situated_isect := adj_intrans_le &
  [ STEM < "situated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_situated_rel" ].

smart_isect := adj_intrans_le &
  [ STEM < "smart" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smart_rel" ].

smooth_isect := adj_intrans_le &
  [ STEM < "smooth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smooth_rel" ].

socially_isect := adv_int_vp_le &
  [ STEM < "socially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_socially_rel" ].

sold_out_isect := adj_intrans_le &
  [ STEM < "sold", "out" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sold_out_rel" ].

soulful_isect := adj_intrans_le &
  [ STEM < "soulful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soulful_rel" ].

sour_isect := adj_intrans_le &
  [ STEM < "sour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sour_rel" ].

sour_a2 := adj_trans_oblig_le &
  [ STEM < "sour" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sour_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

southern_isect := adj_intrans_le &
  [ STEM < "southern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_southern_rel" ].

spontaneous_isect := adj_intrans_le &
  [ STEM < "spontaneous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spontaneous_rel" ].

sporadic_isect := adj_intrans_le &
  [ STEM < "sporadic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sporadic_rel" ].

stray_isect := adj_intrans_le &
  [ STEM < "stray" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stray_rel" ].

structured_isect := adj_intrans_le &
  [ STEM < "structured" >,
    SYNSEM.LKEYS.KEYREL.PRED "_structured_rel" ].

stupendous_a1 := adj_intrans_le &
  [ STEM < "stupendous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stupendous_rel" ].

stupendous_a2 := adj_reg_atrans_that_cp_le &
  [ STEM < "stupendous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stupendous_rel" ].

stupendously_pcisect := adv_int_vp_le &
  [ STEM < "stupendously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stupendously_rel" ].

substantial_isect := adj_intrans_le &
  [ STEM < "substantial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_substantial_rel" ].

successfully_isect := adv_int_vp_le &
  [ STEM < "successfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_successfully_rel" ].

systematic_isect := adj_intrans_le &
  [ STEM < "systematic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_systematic_rel" ].

tanned_isect := adj_intrans_le &
  [ STEM < "tanned" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tanned_rel" ].

tasteful_isect := adj_intrans_le &
  [ STEM < "tasteful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tasteful_rel" ].

tastefully_isect := adv_int_vp_le &
  [ STEM < "tastefully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tastefully_rel" ].

tense_isect := adj_intrans_le &
  [ STEM < "tense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tense_adj_rel" ].

tepid_isect := adj_intrans_le &
  [ STEM < "tepid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tepid_rel" ].

terrifically_pcisect := adv_int_vp_le &
  [ STEM < "terrifically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terrifically_rel" ].

thereafter_isect := adv_int_vp_le &
  [ STEM < "thereafter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thereafter_rel" ].

timewise_isect := adj_intrans_le &
  [ STEM < "timewise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_timewise_rel" ].

tough_a1 := adj_intrans_le &
  [ STEM < "tough" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tough_adj_rel" ].

tough_a2 := adj_reg_atrans_le &
  [ STEM < "tough" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tough_adj_rel" ].

tough_a3 := adj_tough_atrans_le &
  [ STEM < "tough" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tough_adj_rel" ].

traditional_isect := adj_intrans_le &
  [ STEM < "traditional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_traditional_rel" ].

traditionally_isect := adv_int_vp_le &
  [ STEM < "traditionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_traditionally_rel" ].

unacceptable_isect := adj_intrans_le &
  [ STEM < "unacceptable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unacceptable_rel" ].

unbelievable_isect := adj_intrans_le &
  [ STEM < "unbelievable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unbelievable_rel" ].

uncomplicated_isect := adj_intrans_le &
  [ STEM < "uncomplicated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uncomplicated_rel" ].

uncool_isect := adj_intrans_le &
  [ STEM < "uncool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uncool_rel" ].

underway_isect := adj_intrans_le &
  [ STEM < "underway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_underway_rel" ].

unfinished_isect := adj_intrans_le &
  [ STEM < "unfinished" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unfinished_rel" ].

uninteresting_isect := adj_intrans_le &
  [ STEM < "uninteresting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uninteresting_rel" ].

unlucky_isect := adj_intrans_le &
  [ STEM < "unlucky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unlucky_rel" ].

unmarried_isect := adj_intrans_le &
  [ STEM < "unmarried" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unmarried_rel" ].

unnecessary_a1 := adj_intrans_le &
  [ STEM < "unnecessary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unnecessary_rel" ].

unnecessary_a2 := adj_reg_atrans_le &
  [ STEM < "unnecessary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unnecessary_rel" ].

unnecessary_a3 := adj_reg_atrans_cp_le &
  [ STEM < "unnecessary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unnecessary_rel" ].

unprepared_isect := adj_intrans_le &
  [ STEM < "unprepared" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unprepared_rel" ].

unproblematic_isect := adj_intrans_le &
  [ STEM < "unproblematic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unproblematic_rel" ].

unproductive_isect := adj_intrans_le &
  [ STEM < "unproductive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unproductive_rel" ].

unrealistic_isect := adj_intrans_le &
  [ STEM < "unrealistic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unrealistic_rel" ].

unrestricted_isect := adj_intrans_le &
  [ STEM < "unrestricted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unrestricted_rel" ].

unsafe_isect := adj_intrans_le &
  [ STEM < "unsafe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsafe_rel" ].

unselfish_isect := adj_intrans_le &
  [ STEM < "unselfish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unselfish_rel" ].

unsuitable_isect := adj_intrans_le &
  [ STEM < "unsuitable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsuitable_rel" ].

unusual_isect := adj_intrans_le &
  [ STEM < "unusual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unusual_rel" ].

upcoming_isect := adj_intrans_le &
  [ STEM < "upcoming" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upcoming_rel" ].

upset_isect := adj_intrans_le &
  [ STEM < "upset" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upset_rel" ].

upset_a2 := adj_reg_cp_le &
  [ STEM < "upset" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upset_rel" ].

upward_isect := adj_intrans_le &
  [ STEM < "upward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upward_rel" ].

usefully_pcisect := adv_int_vp_le &
  [ STEM < "usefully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_usefully_rel" ].

valid_isect := adj_intrans_le &
  [ STEM < "valid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_valid_rel" ].

variable_isect := adj_intrans_le &
  [ STEM < "variable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_variable_rel" ].

various_isect := adj_intrans_le &
  [ STEM < "various" >,
    SYNSEM.LKEYS.KEYREL.PRED "_various_rel" ].

variously_isect := adv_int_vp_le &
  [ STEM < "variously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_variously_rel" ].

voluntary_isect := adj_intrans_le &
  [ STEM < "voluntary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_voluntary_rel" ].

involuntary_isect := adj_intrans_le &
  [ STEM < "involuntary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_involuntary_rel" ].

wellknown_isect := adj_intrans_le &
  [ STEM < "well", "known" >,
    SYNSEM.LKEYS.KEYREL.PRED "_well-known_rel" ].

wide_isect := adj_intrans_le &
  [ STEM < "wide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wide_rel" ].

wide_deg := adv_degree_spec_adj_le &
  [ STEM < "wide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wide_deg_rel" ].

wisely_pcisect := adv_int_vp_le &
  [ STEM < "wisely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wisely_rel" ].

workable_isect := adj_intrans_le &
  [ STEM < "workable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workable_rel" ].

worried_isect := adj_intrans_le &
  [ STEM < "worried" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worried_rel" ].

young_isect := adj_intrans_le &
  [ STEM < "young" >,
    SYNSEM.LKEYS.KEYREL.PRED "_young_rel" ].

tide_n1 := n_ppof_le &
  [ STEM < "tide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tide_rel" ].

ascribe_v13 := v_empty_prep_intrans_le &
  [ STEM < "ascribe" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ascribe_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

assign_v1 := v_ditrans_le &
  [ STEM < "assign" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assign_to_rel" ].

balance_v13 := v_np*_trans_le &
  [ STEM < "balance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_balance_v_rel" ].

bear_v13 := v_np*_trans_le &
  [ STEM < "bear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bear_v_rel" ].

behave_v1 := v_unerg_le &
  [ STEM < "behave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_behave_rel" ].

boy_n1 := n_ppof_le &
  [ STEM < "boy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boy_rel" ].

breathe_v1 := v_unerg_le &
  [ STEM < "breathe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breathe_rel" ].

bunch_n1 := n_ppof_le &
  [ STEM < "bunch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bunch_rel" ].

clash_v1 := v_unerg_le &
  [ STEM < "clash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clash_v_rel" ].

cold_a1 := adj_intrans_le &
  [ STEM < "cold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_rel" ].

cold_a2 := adj_atrans_le &
  [ STEM < "cold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_expl_rel" ].

conduct_v1 := v_np_trans_le &
  [ STEM < "conduct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conduct_v_rel" ].

continental_a1 := adj_intrans_le &
  [ STEM < "continental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_continental_rel" ].

cook_v1 := v_unerg_le &
  [ STEM < "cook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cook_v_rel" ].

cooperate_v1 := v_unerg_le &
  [ STEM < "cooperate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cooperate_rel" ].

cost_v1 := v_ditrans_only_le &
  [ STEM < "cost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cost_v_rel" ].

cost_v2 := v_np_trans_le &
  [ STEM < "cost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cost_v_rel" ].

cost_v3 := v_expl_it_subj_np_np_cp_inf_le &
  [ STEM < "cost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cost_vx_rel" ].

cost_v4 := v_expl_it_subj_np_np_vp_inf_le &
  [ STEM < "cost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cost_vx_rel" ].

cost_n1 := n_ppof_le &
  [ STEM < "cost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cost_n_rel" ].

count_v1 := v_unacc_le &
  [ STEM < "count" >,
    SYNSEM.LKEYS.KEYREL.PRED "_count_v_rel" ].

couple_n1 := n_ppof_le &
  [ STEM < "couple" >,
    SYNSEM.LKEYS.KEYREL.PRED "_couple_rel" ].

couple_adj := adj_bare_unspecified_card_one_le & 
  [ STEM < "couple" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

creep_v1 := v_unerg_le &
  [ STEM < "creep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_creep_v_rel" ].

curious_a1 := adj_trans_le &
  [ STEM < "curious" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_curious_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

curious_a2 := adj_reg_cp_le &
  [ STEM < "curious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_curious_rel" ].

curious_a3 := adj_trans_le &
  [ STEM < "curious" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_curious_rel",
             LKEYS.--COMPKEY _as_to_p_sel_rel ] ].

curiously_a1 := adv_int_vp_le &
  [ STEM < "curiously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_curiously_rel" ].

dance_v1 := v_unerg_le &
  [ STEM < "dance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dance_v_rel" ].

daydream_v1 := v_unerg_le &
  [ STEM < "daydream" >,
    SYNSEM.LKEYS.KEYREL.PRED "_day_dream_rel" ].

dedicate_v1 := v_ditrans_le &
  [ STEM < "dedicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dedicate_rel" ].

delay_v1 := v_np_trans_le &
  [ STEM < "delay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delay_v_rel" ].

develop_v2 := v_unacc_le &
  [ STEM < "develop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_develop_v_rel" ].

down_a1 := adj_intrans_le &
  [ STEM < "down" >,
    SYNSEM.LKEYS.KEYREL.PRED "_down_adj_rel" ].

drive_up_v1 := v_particle_le &
  [ STEM < "drive" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_drive_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

eavesdrop_v1 := v_unerg_le &
  [ STEM < "eavesdrop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eavesdrop_rel" ].

economize_v1 := v_unerg_le &
  [ STEM < "economize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_economize_rel" ].

email_v1 := v_ditrans_le &
  [ STEM < "email" >,
    SYNSEM.LKEYS.KEYREL.PRED "_email_v_rel" ].

endeavor_v1 := v_unerg_le &
  [ STEM < "endeavor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_endeavor_v_rel" ].

ensue_v1 := v_unacc_le &
  [ STEM < "ensue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ensue_v_rel" ].

expand_v1 := v_unerg_le &
  [ STEM < "expand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expand_rel" ].

familiar_a1 := adj_trans_le &
  [ STEM < "familiar" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_familiar_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

fear_v1 := v_np_trans_le &
  [ STEM < "fear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fear_v_rel" ].

fit_into_v13 := v_empty_prep_intrans_le &
  [ STEM < "fit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fit_into_rel",
             LKEYS.--COMPKEY _into_p_sel_rel ] ].

flip_v1 := v_np_trans_le &
  [ STEM < "flip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flip_v_rel" ].

flop_v1 := v_unacc_le &
  [ STEM < "flop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flop_v_rel" ].

force_v1 := v_obj_equi_le &
  [ STEM < "force" >,
    SYNSEM.LKEYS.KEYREL.PRED "_force_v_rel" ].

fortify_v1 := v_np_trans_le &
  [ STEM < "fortify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fortify_rel" ].

forward_v1 := v_np_trans_le &
  [ STEM < "forward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forward_v_rel" ].

forward_v2 := v_ditrans_le &
  [ STEM < "forward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forward_v_rel" ].

frequent_v1 := v_np_trans_le &
  [ STEM < "frequent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frequent_v_rel" ].

furthermore_adv1 := adv_vp_le &
  [ STEM < "furthermore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_furthermore_rel" ].

golf_v1 := v_unerg_le &
  [ STEM < "golf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_golf_v_rel" ].

hang_out_v1 := v_particle_le &
  [ STEM < "hang" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hang_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

happy_a1 := adj_intrans_le &
  [ STEM < "happy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happy_j_rel" ].

happy_a2 := adj_reg_cp_le &
  [ STEM < "happy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happy_j_rel" ].

happier := adj_comp_le &
  [ STEM < "happier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happy_j_rel" ].

happiest_a1 := adj_superl_le &
  [ STEM < "happiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happy_j_rel" ].

happiest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "happiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happy_j_rel" ].

unhappy_a1 := adj_intrans_le &
  [ STEM < "unhappy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhappy_rel" ].

unhappy_a2 := adj_reg_cp_le &
  [ STEM < "unhappy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhappy_rel" ].

unhappier := adj_comp_le &
  [ STEM < "unhappier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhappy_rel" ].

unhappiest_a1 := adj_superl_le &
  [ STEM < "unhappiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhappy_rel" ].

unhappiest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "unhappiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhappy_rel" ].

happily_a1 := adv_int_vp_le &
  [ STEM < "happily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happily_rel" ].

unhappily_a1 := adv_int_vp_le &
  [ STEM < "unhappily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unhappily_rel" ].

head_out_v1 := v_particle_le &
  [ STEM < "head" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_head_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

head_off_v1 := v_particle_le &
  [ STEM < "head" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_head_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

hike_v1 := v_unerg_le &
  [ STEM < "hike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hike_v_rel" ].

hold_on_v1 := v_particle_le &
  [ STEM < "hold" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hold_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

hurry_v1 := v_np_trans_le &
  [ STEM < "hurry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hurry_v_rel" ].

hurry_up_v1 := v_particle_le &
  [ STEM < "hurry" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hurry_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

in_a1 := adj_pred_intrans_le &
  [ STEM < "in" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_adj_rel" ].

indeed := adv_int_vp_le &
  [ STEM < "indeed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indeed_rel" ].

insult_v1 := v_np_trans_le &
  [ STEM < "insult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insult_v_rel" ].

interest_v1 := v_np_non_trans_le &
  [ STEM < "interest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interest_v_rel" ].

jam_deg := adv_degree_spec_adj_le &
  [ STEM < "jam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jam_deg_rel" ].

jet_off_v1 := v_particle_le &
  [ STEM < "jet" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_jet_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

join_in_v13 := v_empty_prep_intrans_le &
  [ STEM < "join" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_join_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

jump_v1 := v_unerg_le &
  [ STEM < "jump" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jump_v_rel" ].

jump_to_v1 := v_empty_prep_intrans_le &
  [ STEM < "jump" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_jump_to_v_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

kind_n1 := n_ppcomp_le &
  [ STEM < "kind" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_kind_rel",
             LKEYS.--COMPKEY _of_p_nbar_rel ] ].

kind_pl_n1 := n_plur_sing_ppcomp_le &
  [ STEM < "kind" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_kind_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

land_v1 := v_unerg_le &
  [ STEM < "land" >,
    SYNSEM.LKEYS.KEYREL.PRED "_land_v_rel" ].

lecture_on_v13 := v_empty_prep_intrans_le &
  [ STEM < "lecture" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lecture_v_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

lecture_v1 := v_unerg_le &
  [ STEM < "lecture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lecture_v_rel" ].

lend_v1 := v_ditrans_le &
  [ STEM < "lend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lend_rel" ].

less_a2 := adj_intrans_le &
  [ STEM < "less" >,
    SYNSEM.LKEYS.KEYREL.PRED "_less_isect_rel" ].

limit_down_v1 := v_particle_np_pp_to_le &
  [ STEM < "limit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_limit_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

limit_down_v2 := v_particle_np_le &
  [ STEM < "limit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_limit_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

listen_up_v1 := v_particle_le &
  [ STEM < "listen" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_listen_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

lively_a1 := adj_intrans_le &
  [ STEM < "lively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lively_rel" ].

look_to_v13 := v_empty_prep_intrans_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

look_v1 := v_unerg_le &
  [ STEM < "look" >,
    SYNSEM.LKEYS.KEYREL.PRED "_look_v_rel" ].

look_v2 := v_subj_equi_le &
  [ STEM < "look" >,
    SYNSEM.LKEYS.KEYREL.PRED "_look_v_rel" ].

look_like_v1 := v_prep_intrans_le &
  [ STEM < "look" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_like_v_rel",
             LKEYS.--COMPKEY _like_p_rel ] ].

miscalculate_v1 := v_unerg_le &
  [ STEM < "miscalculate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_miscalculate_rel" ].

moreover_1 := adv_int_vp_post_le &
  [ STEM < "moreover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moreover_rel" ].

motivate_v1 := v_obj_equi_le &
  [ STEM < "motivate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_motivate_rel" ].

orientate_v1 := v_unerg_le &
  [ STEM < "orientate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_orientate_rel" ].

paint_v1 := v_np_trans_le &
  [ STEM < "paint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_paint_v_rel" ].

parachute_in_v1 := v_particle_le &
  [ STEM < "parachute" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_parachute_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

park_v1 := v_np*_trans_le &
  [ STEM < "park" >,
    SYNSEM.LKEYS.KEYREL.PRED "_park_v_rel" ].

participation_n1 := n_mass_ppcomp_le &
  [ STEM < "participation" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_participation_rel",
             LKEYS.--COMPKEY _in_p_rel ] ].

phone_v1 := v_np_trans_le &
  [ STEM < "phone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_phone_v_rel" ].

point_out_v1 := v_particle_np_pp_to_le &
  [ STEM < "point" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_point_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

point_out_v2 := v_particle_np_le &
  [ STEM < "point" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_point_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

preach_v1 := v_unerg_le &
  [ STEM < "preach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preach_rel" ].

print_v1 := v_np_trans_le &
  [ STEM < "print" >,
    SYNSEM.LKEYS.KEYREL.PRED "_print_v_rel" ].

process_v1 := v_np*_trans_le &
  [ STEM < "process" >,
    SYNSEM.LKEYS.KEYREL.PRED "_process_v_rel" ].

purchase_v1 := v_np_trans_le &
  [ STEM < "purchase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_purchase_v_rel" ].

reasonably_adv := adv_degree_spec_v_le &
  [ STEM < "reasonably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reasonably_deg_rel" ].

cap_n1 := n_ppof_le &
  [ STEM < "cap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cap_rel" ].

capacity_n1 := n_ppof_le &
  [ STEM < "capacity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_capacity_rel" ].

carriage_n1 := n_intr_le &
  [ STEM < "carriage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carriage_rel" ].

casino_n1 := n_ppof_le &
  [ STEM < "casino" >,
    SYNSEM.LKEYS.KEYREL.PRED "_casino_rel" ].

century_n1 := n_ppof_le &
  [ STEM < "century" >,
    SYNSEM.LKEYS.KEYREL.PRED "_century_rel" ].

charm_n1 := n_intr_le &
  [ STEM < "charm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charm_rel" ].

chime_n1 := n_intr_le &
  [ STEM < "chime" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chime_rel" ].

curfew_n1 := n_intr_le &
  [ STEM < "curfew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_curfew_rel" ].

decade_n1 := n_ppof_le &
  [ STEM < "decade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decade_rel" ].

detour_n1 := n_ppof_le &
  [ STEM < "detour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_detour_rel" ].

dike_n1 := n_intr_le &
  [ STEM < "dike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dike_rel" ].

drawer_n1 := n_ppof_le &
  [ STEM < "drawer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drawer_rel" ].

drop_n_n1 := n_ppof_le &
  [ STEM < "drop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drop_n_rel" ].

ferry_n1 := n_ppof_le &
  [ STEM < "ferry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ferry_rel" ].

fitness_n1 := n_intr_le &
  [ STEM < "fitness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fitness_rel" ].

flair_n1 := n_intr_le &
  [ STEM < "flair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flair_rel" ].

floodgate_n1 := n_ppof_le &
  [ STEM < "floodgate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_floodgate_rel" ].

harbor_n1 := n_ppof_le &
  [ STEM < "harbor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_harbor_rel" ].

hint_n_n1 := n_ppof_le &
  [ STEM < "hint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hint_n_rel" ].

locker_n1 := n_intr_le &
  [ STEM < "locker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_locker_rel" ].

low_n1 := n_mass_count_ppof_le &
  [ STEM < "low" >,
    SYNSEM.LKEYS.KEYREL.PRED "_low_n_rel" ].

pillar_n1 := n_ppof_le &
  [ STEM < "pillar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pillar_rel" ].

portion_n1 := n_ppof_le &
  [ STEM < "portion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_portion_rel" ].

scenery_n1 := n_ppof_le &
  [ STEM < "scenery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scenery_rel" ].

severity_n1 := n_ppof_le &
  [ STEM < "severity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_severity_rel" ].

ship_n1 := n_ppof_le &
  [ STEM < "ship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ship_n_rel" ].

steamer_n1 := n_ppof_le &
  [ STEM < "steamer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_steamer_rel" ].

transfer_n1 := n_ppof_le &
  [ STEM < "transfer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transfer_n_rel" ].

tutorial_n1 := n_intr_le &
  [ STEM < "tutorial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tutorial_rel" ].

vicinity_n1 := n_ppof_le &
  [ STEM < "vicinity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vicinity_rel" ].

walk_n1 := n_ppof_le &
  [ STEM < "walk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_walk_n_rel" ].

wallet_n1 := n_ppof_le &
  [ STEM < "wallet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wallet_rel" ].

wood_n1 := n_intr_le &
  [ STEM < "wood" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wood_rel" ].

adrenaline_n1 := n_intr_le &
  [ STEM < "adrenaline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adrenaline_rel" ].

affiliate_n1 := n_ppof_le &
  [ STEM < "affiliate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_affiliate_rel" ].

amenities_n1 := n_plur_ppcomp_le &
  [ STEM < "amenities" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_amenities_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

ass_n1 := n_intr_le &
  [ STEM < "ass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ass_rel" ].

associate_n_n1 := n_ppof_le &
  [ STEM < "associate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_associate_n_rel" ].

attribute_n1 := n_ppof_le &
  [ STEM < "attribute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attribute_n_rel" ].

awhile_nom := n_adv_simp_acc_le &
  [ STEM < "awhile" >,
    SYNSEM.LKEYS.KEYREL.PRED _awhile_rel ].

bag_n1 := n_ppof_le &
  [ STEM < "bag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bag_n_rel" ].

bill_n1 := n_ppof_le &
  [ STEM < "bill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bill_n_rel" ].

billing_n1 := n_mass_count_le &
  [ STEM < "billing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_billing_rel" ].

boat_n1 := n_ppof_le &
  [ STEM < "boat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boat_n_rel" ].

bureaucracy_n1 := n_intr_le &
  [ STEM < "bureaucracy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bureaucracy_rel" ].

calculation_n1 := n_ppof_le &
  [ STEM < "calculation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calculation_rel" ].

castle_n1 := n_ppof_le &
  [ STEM < "castle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_castle_rel" ].

characteristic_n1 := n_ppof_le &
  [ STEM < "characteristic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_characteristic_n_rel" ].

checkout_n1 := n_intr_le &
  [ STEM < "checkout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_checkout_rel" ].

checkup_n1 := n_intr_le &
  [ STEM < "checkup" >,
    SYNSEM.LKEYS.KEYREL.PRED "_checkup_rel" ].

chick_n1 := n_intr_le &
  [ STEM < "chick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chick_rel" ].

chimney_n1 := n_ppof_le &
  [ STEM < "chimney" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chimney_rel" ].

citizen_n1 := n_ppof_le &
  [ STEM < "citizen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_citizen_rel" ].

concierge_n1 := n_ppof_le &
  [ STEM < "concierge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concierge_rel" ].

constraint_n1 := n_intr_le &
  [ STEM < "constraint" >,
    SYNSEM.LKEYS.KEYREL.PRED "_constraint_rel" ].

contract_n1 := n_ppof_le &
  [ STEM < "contract" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contract_n_rel" ].

crib_n1 := n_intr_le &
  [ STEM < "crib" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crib_n_rel" ].

custom_n1 := n_ppof_le &
  [ STEM < "custom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_custom_rel" ].

customs_n1 := n_intr_le &
  [ STEM < "customs" >,
    SYNSEM.LKEYS.KEYREL.PRED "_customs_rel" ].

daylight_n1 := n_intr_le &
  [ STEM < "daylight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_daylight_rel" ].

deutsche_mark_n1 := n_intr_le &
  [ STEM < "deutsche", "mark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deutschmark_rel" ].

development_n1 := n_ppof_le &
  [ STEM < "development" >,
    SYNSEM.LKEYS.KEYREL.PRED "_development_rel" ].

diet_n1 := n_intr_le &
  [ STEM < "diet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_diet_n_rel" ].

differential_n1 := n_intr_le &
  [ STEM < "differential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_differential_n_rel" ].

disappointment_n1 := n_ppof_le &
  [ STEM < "disappointment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disappointment_rel" ].

doc_n1 := n_intr_le &
  [ STEM < "doc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doc_rel" ].

double_n1 := n_intr_le &
  [ STEM < "double" >,
    SYNSEM.LKEYS.KEYREL.PRED "_double_n_rel" ].

economy_n1 := n_ppof_le &
  [ STEM < "economy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_economy_rel" ].

engagement_n1 := n_ppof_le &
  [ STEM < "engagement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_engagement_rel" ].

entertainer_n1 := n_intr_le &
  [ STEM < "entertainer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entertainer_rel" ].

error_n1 := n_mass_count_le &
  [ STEM < "error" >,
    SYNSEM.LKEYS.KEYREL.PRED "_error_rel" ].

estimate_n1 := n_ppof_le &
  [ STEM < "estimate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_estimate_n_rel" ].

euro_n1 := n_intr_le &
  [ STEM < "euro" >,
    SYNSEM.LKEYS.KEYREL.PRED "_euro_rel" ].

ex_n1 := n_intr_le &
  [ STEM < "ex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_rel" ].

excitement_n1 := n_ppof_le &
  [ STEM < "excitement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_excitement_rel" ].

expo_n1 := n_intr_le &
  [ STEM < "expo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expo_rel" ].

factor_n1 := n_intr_le &
  [ STEM < "factor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_factor_n_rel" ].

feature_n1 := n_ppof_le &
  [ STEM < "feature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feature_n_rel" ].

flexibility_n1 := n_ppof_le &
  [ STEM < "flexibility" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flexibility_rel" ].

folks_n1 := n_plur_le &
  [ STEM < "folks" >,
    SYNSEM.LKEYS.KEYREL.PRED "_folks_rel" ].

football_n1 := n_mass_count_le &
  [ STEM < "football" >,
    SYNSEM.LKEYS.KEYREL.PRED "_football_rel" ].

gum_n1 := n_intr_le &
  [ STEM < "gum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gum_n_rel" ].

guru_n1 := n_intr_le &
  [ STEM < "guru" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guru_rel" ].

hair_n1 := n_ppof_le &
  [ STEM < "hair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hair_rel" ].

hop_n1 := n_intr_le &
  [ STEM < "hop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hop_n_rel" ].

horn_n1 := n_ppof_le &
  [ STEM < "horn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horn_n_rel" ].

layover_n1 := n_ppof_le &
  [ STEM < "layover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_layover_rel" ].

leg_n1 := n_ppof_le &
  [ STEM < "leg" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leg_n_rel" ].

limo_n1 := n_intr_le &
  [ STEM < "limo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_limo_rel" ].

literature_n1 := n_ppof_le &
  [ STEM < "literature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_literature_rel" ].

local_n1 := n_intr_le &
  [ STEM < "local" >,
    SYNSEM.LKEYS.KEYREL.PRED "_local_n_rel" ].

luggage_n1 := n_intr_le &
  [ STEM < "luggage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_luggage_rel" ].

math_n1 := n_intr_le &
  [ STEM < "math" >,
    SYNSEM.LKEYS.KEYREL.PRED "_math_rel" ].

maximum_n1 := n_ppof_le &
  [ STEM < "maximum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maximum_n_rel" ].

mentality_n1 := n_ppof_le &
  [ STEM < "mentality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mentality_rel" ].

meridian_n1 := n_ppof_le &
  [ STEM < "meridian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meridian_rel" ].

midafternoon_n1 := n_intr_le &
  [ STEM < "midafternoon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_midafternoon_rel" ].

minimum_n1 := n_ppof_le &
  [ STEM < "minimum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minimum_n_rel" ].

minus_n1 := n_intr_le &
  [ STEM < "minus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minus_n_rel" ].

nature_n1 := n_ppof_le &
  [ STEM < "nature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nature_rel" ].

nicety_n1 := n_intr_le &
  [ STEM < "nicety" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nicety_rel" ].

non-smoking_n1 := n_intr_le &
  [ STEM < "nonsmoking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_smoking_n_rel" ].

overview_n1 := n_ppof_le &
  [ STEM < "overview" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overview_rel" ].

pain_n1 := n_ppof_le &
  [ STEM < "pain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pain_rel" ].

palace_n1 := n_ppof_le &
  [ STEM < "palace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_palace_rel" ].

parachute_n1 := n_ppof_le &
  [ STEM < "parachute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_parachute_n_rel" ].

passport_n1 := n_ppof_le &
  [ STEM < "passport" >,
    SYNSEM.LKEYS.KEYREL.PRED "_passport_rel" ].

per_diem_n1 := n_intr_le &
  [ STEM < "per", "diem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_per_diem_rel" ].

phrase_n1 := n_intr_le &
  [ STEM < "phrase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_phrase_n_rel" ].

pillow_n1 := n_intr_le &
  [ STEM < "pillow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pillow_n_rel" ].

pin_n1 := n_intr_le &
  [ STEM < "pin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pin_n_rel" ].

piss_n1 := n_intr_le &
  [ STEM < "piss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_piss_n_rel" ].

plot_n1 := n_ppof_le &
  [ STEM < "plot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plot_n_rel" ].

plus_n1 := n_intr_le &
  [ STEM < "plus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plus_n_rel" ].

pretzel_n1 := n_intr_le &
  [ STEM < "pretzel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretzel_rel" ].

pricing_n1 := n_mass_le &
  [ STEM < "pricing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pricing_rel" ].

privacy_n1 := n_ppof_le &
  [ STEM < "privacy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_privacy_rel" ].

promotion_n1 := n_ppof_le &
  [ STEM < "promotion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promotion_rel" ].

radius_n1 := n_ppof_le &
  [ STEM < "radius" >,
    SYNSEM.LKEYS.KEYREL.PRED "_radius_rel" ].

repetition_n1 := n_ppof_le &
  [ STEM < "repetition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repetition_rel" ].

requirement_n1 := n_ppof_le &
  [ STEM < "requirement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_requirement_rel" ].

retirement_n1 := n_ppof_le &
  [ STEM < "retirement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_retirement_rel" ].

reverse_n1 := n_ppof_le &
  [ STEM < "reverse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reverse_n_rel" ].

savings_n1 := n_mass_le &
  [ STEM < "savings" >,
    SYNSEM.LKEYS.KEYREL.PRED "_savings_rel" ].

schmuck_n1 := n_intr_le &
  [ STEM < "schmuck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_schmuck_rel" ].

shuttle_n1 := n_intr_le &
  [ STEM < "shuttle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shuttle_n_rel" ].

smoking_n1 := n_intr_le &
  [ STEM < "smoking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smoking_n_rel" ].

sofa_n1 := n_intr_le &
  [ STEM < "sofa" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sofa_rel" ].

specifics_n1 := n_plur_ppcomp_le &
  [ STEM < "specifics" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_specifics_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

splurge_n1 := n_intr_le &
  [ STEM < "splurge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_splurge_rel" ].

sporting_n1 := n_intr_le &
  [ STEM < "sporting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sporting_rel" ].

symphony_n1 := n_ppof_le &
  [ STEM < "symphony" >,
    SYNSEM.LKEYS.KEYREL.PRED "_symphony_rel" ].

tab_n1 := n_intr_le &
  [ STEM < "tab" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tab_rel" ].

ton_n1 := n_ppof_le &
  [ STEM < "ton" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ton_rel" ].

trade_n1 := n_ppof_le &
  [ STEM < "trade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trade_rel" ].

turnout_n1 := n_ppof_le &
  [ STEM < "turnout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_turnout_rel" ].

urine_n1 := n_ppof_le &
  [ STEM < "urine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_urine_rel" ].

variety_n1 := n_ppof_le &
  [ STEM < "variety" >,
    SYNSEM.LKEYS.KEYREL.PRED "_variety_rel" ].

warning_n1 := n_ppof_le &
  [ STEM < "warning" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warning_rel" ].

whatnot_n1 := n_intr_le &
  [ STEM < "whatnot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whatnot_rel" ].

workaholic_n1 := n_intr_le &
  [ STEM < "workaholic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workaholic_n_rel" ].

workout_n1 := n_intr_le &
  [ STEM < "workout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workout_rel" ].

workplace_n1 := n_ppof_le &
  [ STEM < "workplace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workplace_rel" ].

yard_n1 := n_ppof_le &
  [ STEM < "yard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yard_rel" ].

accessible_a1 := adj_intrans_le &
  [ STEM < "accessible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accessible_rel" ].

addicted_a1 := adj_intrans_le &
  [ STEM < "addicted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_addicted_rel" ].

ample_a1 := adj_intrans_le &
  [ STEM < "ample" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ample_rel" ].

appreciated_a1 := adj_intrans_le &
  [ STEM < "appreciated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appreciated_rel" ].

automatic_a1 := adj_intrans_le &
  [ STEM < "automatic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_automatic_rel" ].

binding_a1 := adj_intrans_le &
  [ STEM < "binding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_binding_rel" ].

civil_a1 := adj_intrans_le &
  [ STEM < "civil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_civil_rel" ].

crooked_a1 := adj_intrans_le &
  [ STEM < "crooked" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crooked_rel" ].

deciding_a1 := adj_intrans_le &
  [ STEM < "deciding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deciding_rel" ].

distinct_a1 := adj_intrans_le &
  [ STEM < "distinct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distinct_rel" ].

effective_a1 := adj_intrans_le &
  [ STEM < "effective" >,
    SYNSEM.LKEYS.KEYREL.PRED "_effective_rel" ].

famous_a1 := adj_intrans_le &
  [ STEM < "famous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_famous_rel" ].

female_a1 := adj_intrans_le &
  [ STEM < "female" >,
    SYNSEM.LKEYS.KEYREL.PRED "_female_rel" ].

financial_a1 := adj_intrans_le &
  [ STEM < "financial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_financial_rel" ].

full-time_a1 := adj_intrans_le &
  [ STEM < "full", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_full_time_rel" ].

horrified_a1 := adj_intrans_le &
  [ STEM < "horrified" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horrified_rel" ].

human_a1 := adj_intrans_le &
  [ STEM < "human" >,
    SYNSEM.LKEYS.KEYREL.PRED "_human_isect_rel" ].

human_n1 := n_intr_le &
  [ STEM < "human" >,
    SYNSEM.LKEYS.KEYREL.PRED "_human_n_rel" ].

impractical_a1 := adj_intrans_le &
  [ STEM < "impractical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impractical_rel" ].

lastnamed_a1 := adj_intrans_le &
  [ STEM < "lastnamed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lastnamed_rel" ].

literary_a1 := adj_intrans_le &
  [ STEM < "literary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_literary_rel" ].

occasional_a1 := adj_intrans_le &
  [ STEM < "occasional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_occasional_rel" ].

open_plan_a1 := adj_intrans_le &
  [ STEM < "open", "plan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_open_plan_rel" ].

qualitative_a1 := adj_intrans_le &
  [ STEM < "qualitative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_qualitative_rel" ].

rich_a1 := adj_intrans_le &
  [ STEM < "rich" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rich_rel" ].

satisfied_a1 := adj_intrans_le &
  [ STEM < "satisfied" >,
    SYNSEM.LKEYS.KEYREL.PRED "_satisfied_rel" ].

so-called_a1 := adj_intrans_le &
  [ STEM < "so", "called" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_called_rel" ].

sold_out_a1 := adj_intrans_le &
  [ STEM < "sold", "out" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sold_out_rel" ].

strained_a1 := adj_intrans_le &
  [ STEM < "strained" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strained_rel" ].

temporary_a1 := adj_intrans_le &
  [ STEM < "temporary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_temporary_rel" ].

time-saving_a1 := adj_intrans_le &
  [ STEM < "time", "saving" >,
    SYNSEM.LKEYS.KEYREL.PRED "_time_saving_rel" ].

typical_a1 := adj_intrans_le &
  [ STEM < "typical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_typical_rel" ].

uncomfortable_a1 := adj_intrans_le &
  [ STEM < "uncomfortable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uncomfortable_rel" ].

upstream_a1 := adj_intrans_le &
  [ STEM < "upstream" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upstream_rel" ].

afternoonish_a1 := adj_intrans_le &
  [ STEM < "afternoonish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_afternoonish_rel" ].

alert_a1 := adj_intrans_le &
  [ STEM < "alert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alert_isect_rel" ].

ancient_a1 := adj_intrans_le &
  [ STEM < "ancient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ancient_rel" ].

appetizing_a1 := adj_intrans_le &
  [ STEM < "appetizing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appetizing_isect_rel" ].

appetizingly_a1 := adv_int_vp_le &
  [ STEM < "appetizingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appetizingly_isect_rel" ].

attractively_a1 := adv_int_vp_le &
  [ STEM < "attractively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attractively_rel" ].

bleary_a1 := adj_intrans_le &
  [ STEM < "bleary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bleary_rel" ].

business_like_a1 := adj_intrans_le &
  [ STEM < "business", "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_business_like_rel" ].

catchy_a1 := adj_intrans_le &
  [ STEM < "catchy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_catchy_isect_rel" ].

comparable_a1 := adj_intrans_le &
  [ STEM < "comparable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comparable_rel" ].

comparably_a1 := adv_int_vp_post_le &
  [ STEM < "comparably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comparably_rel" ].

conceivable_a1 := adj_intrans_le &
  [ STEM < "conceivable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conceivable_rel" ].

conceivably_a1 := adv_int_vp_le &
  [ STEM < "conceivably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conceivably_rel" ].

decently_a1 := adv_int_vp_le &
  [ STEM < "decently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decently_rel" ].

decisive_a1 := adj_intrans_le &
  [ STEM < "decisive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decisive_isect_rel" ].

decisively_a1 := adv_int_vp_le &
  [ STEM < "decisively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decisively_isect_rel" ].

dumb_a1 := adj_intrans_le &
  [ STEM < "dumb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dumb_isect_rel" ].

efficiently_a1 := adv_int_vp_le &
  [ STEM < "efficiently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_efficiently_rel" ].

etcetera_a1 := adj_intrans_le &
  [ STEM < "etcetera" >,
    SYNSEM.LKEYS.KEYREL.PRED "_etcetera_rel" ].

express_a1 := adj_intrans_le &
  [ STEM < "express" >,
    SYNSEM.LKEYS.KEYREL.PRED "_express_isect_rel" ].

expressly_a1 := adv_int_vp_le &
  [ STEM < "expressly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expressly_isect_rel" ].

feasibly_a1 := adv_int_vp_le &
  [ STEM < "feasibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feasibly_rel" ].

frugal_a1 := adj_intrans_le &
  [ STEM < "frugal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frugal_rel" ].

frugally_a1 := adv_int_vp_le &
  [ STEM < "frugally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frugally_rel" ].

frustrating_a1 := adj_intrans_le &
  [ STEM < "frustrating" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frustrating_rel" ].

handily_a1 := adv_int_vp_le &
  [ STEM < "handily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handily_isect_rel" ].

inexpensive_a1 := adj_intrans_le &
  [ STEM < "inexpensive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inexpensive_rel" ].

inexpensively_a1 := adv_int_vp_le &
  [ STEM < "inexpensively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inexpensively_rel" ].

irrelevant_a1 := adj_intrans_le &
  [ STEM < "irrelevant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_irrelevant_rel" ].

janitorial_a1 := adj_intrans_le &
  [ STEM < "janitorial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_janitorial_rel" ].

justifiably_a1 := adv_int_vp_le &
  [ STEM < "justifiably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_justifiably_rel" ].

lazy_a1 := adj_intrans_le &
  [ STEM < "lazy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lazy_isect_rel" ].

lazily_a1 := adv_int_vp_le &
  [ STEM < "lazily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lazily_isect_rel" ].

lenient_a1 := adj_intrans_le &
  [ STEM < "lenient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lenient_rel" ].

leniently_a1 := adv_int_vp_post_le &
  [ STEM < "leniently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leniently_rel" ].

lined_a1 := adj_intrans_le &
  [ STEM < "lined" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lined_rel" ].

local_a1 := adj_intrans_le &
  [ STEM < "local" >,
    SYNSEM.LKEYS.KEYREL.PRED "_local_isect_rel" ].

locally_a1 := adv_int_vp_le &
  [ STEM < "locally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_locally_isect_rel" ].

loose_a1 := adj_intrans_le &
  [ STEM < "loose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loose_isect_rel" ].

loosely_a1 := adv_int_vp_post_le &
  [ STEM < "loosely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loosely_isect_rel" ].

married_a1 := adj_intrans_le &
  [ STEM < "married" >,
    SYNSEM.LKEYS.KEYREL.PRED "_married_rel" ].

middling_a1 := adj_intrans_le &
  [ STEM < "middling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_middling_rel" ].

military_a1 := adj_intrans_le &
  [ STEM < "military" >,
    SYNSEM.LKEYS.KEYREL.PRED "_military_isect_rel" ].

minimal_a1 := adj_intrans_le &
  [ STEM < "minimal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minimal_rel" ].

minimally_a1 := adv_int_vp_le &
  [ STEM < "minimally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minimally_rel" ].

minimum_a1 := adj_intrans_le &
  [ STEM < "minimum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_minimum_rel" ].

odd_a1 := adj_intrans_le &
  [ STEM < "odd" >,
    SYNSEM.LKEYS.KEYREL.PRED "_odd_isect_rel" ].

oddly_a1 := adv_int_vp_post_le &
  [ STEM < "oddly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oddly_isect_rel" ].

positively_a1 := adv_int_vp_le &
  [ STEM < "positively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_positively_rel" ].

potentially_a1 := adv_vp_le &
  [ STEM < "potentially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_potentially_rel" ].

realistic_a1 := adj_intrans_le &
  [ STEM < "realistic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_realistic_rel" ].

realistically_a1 := adv_int_vp_le &
  [ STEM < "realistically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_realistically_rel" ].

repetitious_a1 := adj_intrans_le &
  [ STEM < "repetitious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repetitious_rel" ].

repetitiously_a1 := adv_int_vp_le &
  [ STEM < "repetitiously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repetitiously_rel" ].

respectable_a1 := adj_intrans_le &
  [ STEM < "respectable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_respectable_rel" ].

respectably_a1 := adv_int_vp_post_le &
  [ STEM < "respectably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_respectably_rel" ].

ritzy_a1 := adj_intrans_le &
  [ STEM < "ritzy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ritzy_rel" ].

sacred_a1 := adj_intrans_le &
  [ STEM < "sacred" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sacred_rel" ].

sensibly_a1 := adv_int_vp_le &
  [ STEM < "sensibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sensibly_rel" ].

tiring_a1 := adj_intrans_le &
  [ STEM < "tiring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiring_rel" ].

tricky_a1 := adj_intrans_le &
  [ STEM < "tricky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tricky_rel" ].

tuckered_a1 := adj_intrans_le &
  [ STEM < "tuckered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tuckered_rel" ].

unfamiliar_a1 := adj_trans_le &
  [ STEM < "unfamiliar" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_unfamiliar_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

wacky_a1 := adj_intrans_le &
  [ STEM < "wacky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wacky_rel" ].

accommodate_v1 := v_np_trans_le &
  [ STEM < "accommodate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accommodate_rel" ].

add_up_v1 := v_particle_np_le &
  [ STEM < "add" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_add_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

advise_v1 := v_np*_trans_le &
  [ STEM < "advise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advise_rel" ].

advise_v2 := v_np*_trans_cp_le &
  [ STEM < "advise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advise_rel" ].

advise_v3 := v_np*_prep_trans_nomsg_le &
  [ STEM < "advise" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_advise_rel",
             LKEYS.--OCOMPKEY _of_p_rel ] ].

advise_v4 := v_obj_equi_le &
  [ STEM < "advise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advise_rel" ].

aim_v := v_empty_prep_intrans_le &
  [ STEM < "aim" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_aim_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

bite_v1 := v_np_trans_le &
  [ STEM < "bite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bite_v_rel" ].

count_v2 := v_np_trans_le &
  [ STEM < "count" >,
    SYNSEM.LKEYS.KEYREL.PRED "_count_v_rel" ].

design_v1 := v_np_trans_le &
  [ STEM < "design" >,
    SYNSEM.LKEYS.KEYREL.PRED "_design_v_rel" ].

despise_v1 := v_np_trans_le &
  [ STEM < "despise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_despise_rel" ].

enumerate_v1 := v_np_trans_le &
  [ STEM < "enumerate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enumerate_rel" ].

hunt_v1 := v_np_trans_le &
  [ STEM < "hunt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hunt_rel" ].

instruct_v2 := v_np_trans_le &
  [ STEM < "instruct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instruct_rel" ].

intensify_v1 := v_np_trans_le &
  [ STEM < "intensify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intensify_rel" ].

investigate_v1 := v_np*_trans_le &
  [ STEM < "investigate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_investigate_rel" ].

obtain_v1 := v_np_trans_le &
  [ STEM < "obtain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obtain_rel" ].

program_v1 := v_np_trans_le &
  [ STEM < "program" >,
    SYNSEM.LKEYS.KEYREL.PRED "_program_v_rel" ].

smoke_v1 := v_np_trans_le &
  [ STEM < "smoke" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smoke_v_rel" ].

transport_v1 := v_np_trans_le &
  [ STEM < "transport" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transport_v_rel" ].

cater_v1 := v_np_trans_le &
  [ STEM < "cater" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cater_rel" ].

chuck_v1 := v_np_trans_le &
  [ STEM < "chuck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chuck_rel" ].

complicate_v1 := v_np_trans_le &
  [ STEM < "complicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complicate_rel" ].

dig_v1 := v_np_trans_le &
  [ STEM < "dig" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dig_rel" ].

dry_v1 := v_np_trans_le &
  [ STEM < "dry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_v_rel" ].

entertain_v1 := v_np_trans_le &
  [ STEM < "entertain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entertain_rel" ].

exercise_v1 := v_np_trans_le &
  [ STEM < "exercise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exercise_v_rel" ].

expense_v1 := v_np_trans_le &
  [ STEM < "expense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expense_v_rel" ].

explore_v1 := v_np_trans_le &
  [ STEM < "explore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_explore_rel" ].

eye_v1 := v_np_trans_le &
  [ STEM < "eye" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eye_v_rel" ].

factor_in_v1 := v_particle_np_le &
  [ STEM < "factor" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_factor_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

feature_v1 := v_np_trans_le &
  [ STEM < "feature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feature_v_rel" ].

finagle_v1 := v_np_trans_le &
  [ STEM < "finagle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finagle_v_rel" ].

frustrate_v1 := v_np_trans_le &
  [ STEM < "frustrate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frustrate_rel" ].

haul_v1 := v_np_trans_le &
  [ STEM < "haul" >,
    SYNSEM.LKEYS.KEYREL.PRED "_haul_v_rel" ].

honk_v1 := v_np_trans_le &
  [ STEM < "honk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_honk_v_rel" ].

identify_v1 := v_np_trans_le &
  [ STEM < "identify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_identify_rel" ].

intersperse_v1 := v_np_trans_le &
  [ STEM < "intersperse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intersperse_rel" ].

irritate_v1 := v_np_trans_le &
  [ STEM < "irritate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_irritate_rel" ].

knock_v1 := v_np_trans_le &
  [ STEM < "knock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_knock_v_rel" ].

maximize_v1 := v_np_trans_le &
  [ STEM < "maximize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maximize_rel" ].

nix_v1 := v_np_trans_le &
  [ STEM < "nix" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nix_rel" ].

nix_v2 := v_unerg_le &
  [ STEM < "nix" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nix_rel" ].

opt_v1 := v_prep_intrans_le &
  [ STEM < "opt" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_opt_for_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

phrase_v1 := v_np_trans_le &
  [ STEM < "phrase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_phrase_v_rel" ].

pop_v1 := v_np_trans_le &
  [ STEM < "pop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pop_v_rel" ].

rate_v1 := v_np_trans_le &
  [ STEM < "rate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rate_v_rel" ].

research_v1 := v_np_trans_le &
  [ STEM < "research" >,
    SYNSEM.LKEYS.KEYREL.PRED "_research_v_rel" ].

reverse_v1 := v_np_trans_le &
  [ STEM < "reverse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reverse_v_rel" ].

share_v1 := v_np_trans_le &
  [ STEM < "share" >,
    SYNSEM.LKEYS.KEYREL.PRED "_share_v_rel" ].

shove_v1 := v_np_trans_le &
  [ STEM < "shove" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shove_v_rel" ].

smell_v1 := v_np_trans_le &
  [ STEM < "smell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smell_v_rel" ].

specify_v1 := v_np_trans_le &
  [ STEM < "specify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_specify_rel" ].

squish_v1 := v_np_trans_le &
  [ STEM < "squish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_squish_rel" ].

stink_v1 := v_np_trans_le &
  [ STEM < "stink" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stink_v_rel" ].

time_v1 := v_np_trans_le &
  [ STEM < "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_time_v_rel" ].

tire_v1 := v_np_trans_le &
  [ STEM < "tire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tire_v_rel" ].

trade_v1 := v_np_trans_le &
  [ STEM < "trade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trade_v_rel" ].

trade_in_v2 := v_particle_np_le &
  [ STEM < "trade" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_trade_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

trade_in_v3 := v_particle_np_pp_for_le &
  [ STEM < "trade" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_trade_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

wear_v1 := v_np_trans_le &
  [ STEM < "wear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wear_v_rel" ].

amuse_v1 := v_np_trans_le &
  [ STEM < "amuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amuse_rel" ].

anticipate_v1 := v_np_trans_le &
  [ STEM < "anticipate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anticipate_rel" ].

anticipate_v2 := v_cp_non_trans_le &
  [ STEM < "anticipate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anticipate_rel" ].

doubt_v1 := v_np_trans_le &
  [ STEM < "doubt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doubt_v_rel" ].

doubt_v2 := v_cp_non_trans_le &
  [ STEM < "doubt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doubt_v_rel" ].

conspire_v1 := v_subj_equi_le &
  [ STEM < "conspire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conspire_rel" ].

contract_v1 := v_subj_equi_le &
  [ STEM < "contract" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contract_v_rel" ].

estimate_v1 := v_np_trans_le &
  [ STEM < "estimate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_estimate_v_rel" ].

estimate_v2 := v_cp_non_trans_le &
  [ STEM < "estimate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_estimate_v_rel" ].

fret_v1 := v_cp_prop_non_trans_le &
  [ STEM < "fret" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fret_rel" ].

jot_down_v1 := v_particle_np_le &
  [ STEM < "jot" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_jot_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

multiply_v1 := v_np_trans_le &
  [ STEM < "multiply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_multiply_rel" ].

subtract_v1 := v_np_trans_le &
  [ STEM < "subtract" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subtract_rel" ].

come_along_v2 := v_particle_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_along_rel",
             LKEYS.--COMPKEY _along_p_sel_rel ] ].

come_up_with_v1 := v_particle_pp_le &
  [ STEM < "come" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_up_with_rel",
             LKEYS [ --COMPKEY _in_p_sel_rel,
                     --OCOMPKEY _with_p_rel ] ] ].

describe_v1 := v_to*_trans_le &
  [ STEM < "describe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_describe_rel" ].

discourage_v1 := v_np_trans_le &
  [ STEM < "discourage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discourage_rel" ].

transfer_v1 := v_np_trans_double_pp*_le &
  [ STEM < "transfer" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_transfer_v_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

transfer_v2 := v_np_trans_le &
  [ STEM < "transfer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transfer_v_rel" ].

alert_v1 := v_np_trans_cp_le &
  [ STEM < "alert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alert_v_rel" ].

bill_for_v1 := v_empty_prep*_trans_le &
  [ STEM < "bill" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bill_v_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

cable_v1 := v_ditrans_le &
  [ STEM < "cable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cable_v_rel" ].

convert_v1 := v_to_trans_le &
  [ STEM < "convert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convert_rel" ].

convert_v2 := v_prep_intrans_le &
  [ STEM < "convert" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_convert_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

comparably_deg := adv_degree_spec_v_le &
  [ STEM < "comparably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comparably_deg_rel" ].

goodnight_root_pre := adv_disc_preh_grt_le &
  [ STEM < "goodnight" >,
    SYNSEM.LKEYS.KEYREL.CARG "goodnight" ].

goodnight_root_post := adv_disc_posth_grt_le &
  [ STEM < "goodnight" >,
    SYNSEM.LKEYS.KEYREL.CARG "goodnight" ].

guide_v1 := v_to*_trans_le &
  [ STEM < "guide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guide_v_rel" ].

lately_adv1 := adv_int_vp_post_le &
  [ STEM < "lately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lately_isect_rel" ].

outdoors_nom := n_adv_pl_le &
  [ STEM < "outdoors" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _outdoors_j_rel ] ].

overseas_nom := n_adv_pl_le &
  [ STEM < "overseas" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _overseas_j_rel ] ].

warn_v1 := v_np_trans_cp_le &
  [ STEM < "warn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warn_rel" ].

hop_v1 := v_unerg_le &
  [ STEM < "hop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hop_v_rel" ].

party_v1 := v_unerg_le &
  [ STEM < "party" >,
    SYNSEM.LKEYS.KEYREL.PRED "_party_v_rel" ].

skimp_v1 := v_unerg_le &
  [ STEM < "skimp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_skimp_rel" ].

splurge_v1 := v_unerg_le &
  [ STEM < "splurge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_splurge_v_rel" ].

stagger_v1 := v_unerg_le &
  [ STEM < "stagger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stagger_v_rel" ].

versus_conj := conj_complex_vs_le &
  [ STEM < "versus" > ].

vs_conj := conj_complex_vs_le &
  [ STEM < "vs" > ].

vs_2_conj := conj_complex_vs_le &
  [ STEM < "vs." > ].

vs_3_conj := conj_complex_vs_le &
  [ STEM < "v." > ].

and_vice_versa_adv1 := adv_vp_post_le &
  [ STEM < "and", "vice", "versa" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vice_versa_rel" ].

deserve_v1 := v_np_trans_le &
  [ STEM < "deserve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deserve_rel" ].

dribble_v1 := v_unerg_le &
  [ STEM < "dribble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dribble_rel" ].

fly_on_v1 := v_particle_le &
  [ STEM < "fly" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fly_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

hurt_v1 := v_np*_trans_le &
  [ STEM < "hurt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hurt_rel" ].

earn_v1 := v_np_trans_le &
  [ STEM < "earn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_earn_rel" ].

intervene_v1 := v_unacc_le &
  [ STEM < "intervene" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intervene_v_rel" ].

minus_conj := conj_complex_minus_le &
  [ STEM < "minus" > ].

question_about_v1 := v_np*_prep_trans_le &
  [ STEM < "question" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_question_v_rel",
             LKEYS.--OCOMPKEY _about_p_rel ] ].

slip_in_v1 := v_particle_le &
  [ STEM < "slip" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_slip_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

find_adj_v1 := v_obj_equi_prd_adj_le &
  [ STEM < "find" >,
    SYNSEM.LKEYS.KEYREL.PRED "_find_mental_rel" ].

find_v4 := v_sor_le &
  [ STEM < "find" >,
    SYNSEM.LKEYS.KEYREL.PRED "_find_v_rel" ].

european_a1 := adj_intrans_le &
  [ STEM < "european" >,
    SYNSEM.LKEYS.KEYREL.PRED "_european_rel" ].

architectural_a1 := adj_intrans_le &
  [ STEM < "architectural" >,
    SYNSEM.LKEYS.KEYREL.PRED "_architectural_rel" ].

arise_v2 := v_empty_prep_intrans_le &
  [ STEM < "arise" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_arise_from_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

armed_a1 := adj_intrans_le &
  [ STEM < "armed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_armed_rel" ].

canal_n1 := n_ppof_le &
  [ STEM < "canal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_canal_rel" ].

car-pool_n1 := n_intr_le &
  [ STEM < "car", "pool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_car_pool_rel" ].

condemn_v1 := v_to*_trans_le &
  [ STEM < "condemn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_condemn_to_rel" ].

credit_v1 := v_empty_prep_trans_le &
  [ STEM < "credit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_credit_v_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

credit_v2 := v_np_trans_le &
  [ STEM < "credit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_credit_v_rel" ].

credit_v3 := v_np_prep_trans_le &
  [ STEM < "credit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_credit_v_rel",
             LKEYS.--OCOMPKEY _for_p_rel ] ].

crib_v1 := v_np_trans_le &
  [ STEM < "crib" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crib_v_rel" ].

declining_a1 := adj_intrans_le &
  [ STEM < "declining" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declining_rel" ].

delayed_a1 := adj_intrans_le &
  [ STEM < "delayed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delayed_rel" ].

dependence_n1 := n_intr_le &
  [ STEM < "dependence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dependence_rel" ].

dig_up_v1 := v_particle_np_le &
  [ STEM < "dig" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_dig_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

do_up_v1 := v_particle_np_le &
  [ STEM < "do" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_do_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

drive_around_v1 := v_particle_le &
  [ STEM < "drive" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_drive_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

earthly_a1 := adj_intrans_le &
  [ STEM < "earthly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_earthly_rel" ].

ebb_n1 := n_intr_le &
  [ STEM < "ebb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ebb_n_rel" ].

educate_v1 := v_np_trans_le &
  [ STEM < "educate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_educate_rel" ].

embarrassing_a1 := adj_intrans_le &
  [ STEM < "embarrassing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_embarrassing_rel" ].

express_n1 := n_mass_count_le &
  [ STEM < "express" >,
    SYNSEM.LKEYS.KEYREL.PRED "_express_n_rel" ].

facilitate_v1 := v_np_trans_le &
  [ STEM < "facilitate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_facilitate_rel" ].

first_mentioned_a1 := adj_intrans_le &
  [ STEM < "first", "mentioned" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_mentioned_rel" ].

first_class_a1 := adj_intrans_le &
  [ STEM < "first", "class" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_class_rel" ].

first_class_adv1 := adv_int_vp_post_le &
  [ STEM < "first", "class" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_class_adv_rel" ].

get_around_v1 := v_empty_prep_intrans_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

get_around_v2 := v_particle_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_around_itr_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

get_around_v3 := v_particle_empty_pp_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_around_rel",
             LKEYS [ --COMPKEY _around_p_sel_rel,
                     --OCOMPKEY _to_p_sel_rel ] ] ].

get_over_v1 := v_empty_prep_intrans_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

get_on_with_v1 := v_particle_pp_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_on_rel",
             LKEYS [ --COMPKEY _on_p_sel_rel,
                     --OCOMPKEY _with_p_rel ] ] ].

grow_up_v2 := v_particle_le &
  [ STEM < "grow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_grow_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

guarantee_v1 := v_ditrans_le &
  [ STEM < "guarantee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guarantee_v_rel" ].

handy_a1 := adj_intrans_le &
  [ STEM < "handy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handy_rel" ].

hang_around_v1 := v_particle_le &
  [ STEM < "hang" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hang_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

haul_n1 := n_intr_le &
  [ STEM < "haul" >,
    SYNSEM.LKEYS.KEYREL.PRED "_haul_rel" ].

head_up_v1 := v_particle_np_le &
  [ STEM < "head" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_head_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

headed_a1 := adj_intrans_le &
  [ STEM < "headed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_headed_isect_rel" ].

heed_v1 := v_np_trans_le &
  [ STEM < "heed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heed_rel" ].

help_out_v1 := v_particle_np_le &
  [ STEM < "help" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_help_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

immediately_deg := adv_degree_spec_jov_le &
  [ STEM < "immediately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_immediately_deg_rel" ].

immediately_m_deg := adv_degree_spec_m_le &
  [ STEM < "immediately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_immediately_m_deg_rel" ].

incoming_tide_n1 := n_intr_le &
  [ STEM < "incoming", "tide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incoming_tide_rel" ].

inside_a1 := adj_intrans_le &
  [ STEM < "inside" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inside_isect_rel" ].

inviting_a1 := adj_intrans_le &
  [ STEM < "inviting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inviting_rel" ].

lecture_free_a1 := adj_intrans_le &
  [ STEM < "lecture", "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lecture_free_rel" ].

like_isect := adj_intrans_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_mod_rel" ].

mainly_isect := adj_intrans_le &
  [ STEM < "mainly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mainly_isect_rel" ].

medium_a1 := adj_intrans_le &
  [ STEM < "medium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_medium_isect_rel" ].

midday_n1 := n_intr_le &
  [ STEM < "midday" >,
    SYNSEM.LKEYS.KEYREL.PRED "_midday_rel" ].

move_n1 := n_intr_le &
  [ STEM < "move" >,
    SYNSEM.LKEYS.KEYREL.PRED "_move_n_rel" ].

need_n1 := n_mass_count_ppof_le &
  [ STEM < "need" >,
    SYNSEM.LKEYS.KEYREL.PRED "_need_n_rel" ].

non_local_a1 := adj_intrans_le &
  [ STEM < "non", "local" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_local_isect_rel" ].

notice_n1 := n_mass_count_le &
  [ STEM < "notice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notice_n_rel" ].

nuisance_n1 := n_intr_le &
  [ STEM < "nuisance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nuisance_rel" ].

one_armed_a1 := adj_intrans_le &
  [ STEM < "one", "armed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_one_armed_rel" ].

one_eyed_a1 := adj_intrans_le &
  [ STEM < "one", "eyed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_one_eyed_rel" ].

ore_n1 := n_intr_le &
  [ STEM < "ore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ore_rel" ].

pack_in_v1 := v_particle_np_le &
  [ STEM < "pack" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pack_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

page_n1 := n_intr_le &
  [ STEM < "page" >,
    SYNSEM.LKEYS.KEYREL.PRED "_page_n_rel" ].

park_n1 := n_intr_le &
  [ STEM < "park" >,
    SYNSEM.LKEYS.KEYREL.PRED "_park_n_rel" ].

part_v1 := v_np_trans_le &
  [ STEM < "part" >,
    SYNSEM.LKEYS.KEYREL.PRED "_part_v_rel" ].

particularly_deg := adv_degree_spec_v_le &
  [ STEM < "particularly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_particularly_deg_rel" ].

pass_on_v2 := v_particle_np_pp_to_le &
  [ STEM < "pass" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pass_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

past_a1 := adj_intrans_le &
  [ STEM < "past" >,
    SYNSEM.LKEYS.KEYREL.PRED "_past_isect_rel" ].

past := p_le &
  [ STEM < "past" >,
    SYNSEM.LKEYS.KEYREL.PRED _past_p_rel ].

past_adv1 := pp_le &
  [ STEM < "past" >,
    SYNSEM.LKEYS.KEYREL.PRED _past_p_rel ].

pessimistic := adj_intrans_le &
  [ STEM < "pessimistic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pessimistic_rel" ].

physical := adj_intrans_le &
  [ STEM < "physical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_physical_rel" ].

pick_out_v1 := v_particle_np_le &
  [ STEM < "pick" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pick_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

pictorial := adj_intrans_le &
  [ STEM < "pictorial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pictorial_rel" ].

pin_down_to_v1 := v_particle_np_pp_to_le &
  [ STEM < "pin" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pin_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

pin_down_v1 := v_particle_np_le &
  [ STEM < "pin" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pin_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

plaster_v1 := v_np_trans_le &
  [ STEM < "plaster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plaster_v_rel" ].

plunge_into_v13 := v_empty_prep_intrans_le &
  [ STEM < "plunge" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_plunge_into_rel",
             LKEYS.--COMPKEY _into_p_sel_rel ] ].

plunge_v1 := v_unerg_le &
  [ STEM < "plunge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plunge_into_rel" ].

pop_down_v2 := v_particle_le &
  [ STEM < "pop" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pop_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

postponement_n1 := n_ppof_le &
  [ STEM < "postponement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_postponement_rel" ].

price_v1 := v_np_trans_le &
  [ STEM < "price" >,
    SYNSEM.LKEYS.KEYREL.PRED "_price_v_rel" ].

print_out_v1 := v_particle_np_le &
  [ STEM < "print" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_print_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

prior_a1 := adj_intrans_le &
  [ STEM < "prior" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prior_rel" ].

profit_from_v1 := v_empty_prep_intrans_le &
  [ STEM < "profit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_profit_from_rel",
             LKEYS.--COMPKEY _from_p_sel_rel ] ].

pull_off_v1 := v_particle_np_le &
  [ STEM < "pull" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pull_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

pull_up_v1 := v_particle_np_le &
  [ STEM < "pull" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pull_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

race_v1 := v_np_trans_le &
  [ STEM < "race" >,
    SYNSEM.LKEYS.KEYREL.PRED "_race_v_rel" ].

rat_n1 := n_intr_le &
  [ STEM < "rat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rat_rel" ].

rather_adv1 := adv_vp_pre_bse_le &
  [ STEM < "rather" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rather_scop_rel" ].

recommend_v1 := v_to*_trans_le &
  [ STEM < "recommend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recommend_rel" ].

remotely_adv1 := adv_int_vp_post_le &
  [ STEM < "remotely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remotely_rel" ].

renovate_v1 := v_np_trans_le &
  [ STEM < "renovate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_renovate_rel" ].

rent_v1 := v_np_trans_le &
  [ STEM < "rent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rent_v_rel" ].

report_v13 := v_empty_prep_intrans_le &
  [ STEM < "report" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_report_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

respect_n1 := n_mass_le &
  [ STEM < "respect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_respect_n_rel" ].

result_v2 := v_unacc_le &
  [ STEM < "result" >,
    SYNSEM.LKEYS.KEYREL.PRED "_result_v_rel" ].

result_in_v2 := v_empty_prep_intrans_le &
  [ STEM < "result" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_result_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

retire_v1 := v_unerg_le &
  [ STEM < "retire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_retire_rel" ].

romp_around_v1 := v_particle_le &
  [ STEM < "romp" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_romp_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

sacrifice_v1 := v_np_trans_le &
  [ STEM < "sacrifice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sacrifice_v_rel" ].

scared_isect := adj_intrans_le &
  [ STEM < "scared" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scared_rel" ].

see_around_v1 := v_np_prep_particle_only_le &
  [ STEM < "see" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_see_around_rel",
             LKEYS.--OCOMPKEY _around_p_sel_rel ] ].

see_through_v1 := v_empty_prep_intrans_le &
  [ STEM < "see" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_see_through_rel",
             LKEYS.--COMPKEY _through_p_sel_rel ] ].

separate_v1 := v_np*_trans_le &
  [ STEM < "separate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_separate_v_rel" ].

separate_v2 := v_np*_prep_trans_le &
  [ STEM < "separate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_separate_v_rel",
             LKEYS.--OCOMPKEY _from_p_rel ] ].

separate_out_v1 := v_particle_np_pp_from_le &
  [ STEM < "narrow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_separate_v_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

settle_down_v1 := v_particle_le &
  [ STEM < "settle" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_settle_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

settle_in_v1 := v_particle_le &
  [ STEM < "settle" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_settle_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

shoot_for_v1 := v_empty_prep_trans_le &
  [ STEM < "shoot" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_shoot_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

shot_adj := adj_intrans_le &
  [ STEM < "shot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shot_isect_rel" ].

showing_n1 := n_ppof_le &
  [ STEM < "showing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_showing_rel" ].

skip_out_v2 := v_particle_le &
  [ STEM < "skip" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_skip_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

smell_n1 := n_ppof_le &
  [ STEM < "smell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smell_n_rel" ].

spare_v1 := v_ditrans_only_le &
  [ STEM < "spare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spare_v_rel" ].

stain_v1 := v_np_trans_le &
  [ STEM < "stain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stain_v_rel" ].

standard_adj := adj_intrans_le &
  [ STEM < "standard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_standard_isect_rel" ].

stay_over_v2 := v_particle_le &
  [ STEM < "stay" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stay_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

sterile_a1 := adj_intrans_le &
  [ STEM < "sterile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sterile_rel" ].

stick_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "stick" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stick_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

stop_in_v1 := v_particle_le &
  [ STEM < "stop" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stop_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

stop_over_v1 := v_particle_le &
  [ STEM < "stop" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stop_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

stray_v1 := v_unerg_le &
  [ STEM < "stray" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stray_v_rel" ].

strengthen_v1 := v_np_trans_le &
  [ STEM < "strengthen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strengthen_rel" ].

strenuous_a1 := adj_intrans_le &
  [ STEM < "strenuous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strenuous_rel" ].

stretch_out_v2 := v_particle_le &
  [ STEM < "stretch" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stretch_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

stretch_over_v2 := v_particle_le &
  [ STEM < "stretch" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stretch_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

style_v1 := v_np_trans_le &
  [ STEM < "style" >,
    SYNSEM.LKEYS.KEYREL.PRED "_style_v_rel" ].

submerge_v1 := v_unerg_le &
  [ STEM < "submerge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_submerge_rel" ].

sunbathe_v1 := v_unerg_le &
  [ STEM < "sunbathe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunbathe_rel" ].

support_v1 := v_np_trans_le &
  [ STEM < "support" >,
    SYNSEM.LKEYS.KEYREL.PRED "_support_rel" ].

surf_v1 := v_unerg_le &
  [ STEM < "surf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surf_v_rel" ].

take_around_v1 := v_np_prep_particle_only_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_around_rel",
             LKEYS.--OCOMPKEY _around_p_sel_rel ] ].

temporal_isect := adj_intrans_le &
  [ STEM < "temporal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_temporal_rel" ].

that_deg := adv_degree_spec_div_tt_le &
  [ STEM < "that" >,
    SYNSEM.LKEYS.KEYREL.PRED "_that_deg_rel" ].

this_deg :=  adv_degree_spec_div_tt_le &
  [ STEM < "this" >,
    SYNSEM.LKEYS.KEYREL.PRED "_this_deg_rel" ].

through_a1 := adj_attr_intrans_le &
  [ STEM < "through" >,
    SYNSEM.LKEYS.KEYREL.PRED "_through_adj_rel" ].

thru_a1 := adj_attr_intrans_le &
  [ STEM < "thru" >,
    SYNSEM.LKEYS.KEYREL.PRED "_through_adj_rel" ].

throw_out_v1 := v_particle_np_le &
  [ STEM < "throw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_throw_out_part_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

toast_v1 := v_np*_trans_le &
  [ STEM < "toast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toast_v_rel" ].

throw_out_v2 := v_empty_prep_trans_le &
  [ STEM < "throw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_throw_out_rel",
             LKEYS.--OCOMPKEY _of_p_sel_rel ] ].

trace_back_v1 := v_empty_prep_trans_le &
  [ STEM < "trace" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_trace_back_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

treat_v1 := v_empty_prep_trans_le &
  [ STEM < "treat" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_treat_to_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

treat_v2 := v_np_trans_le &
  [ STEM < "treat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_treat_v_rel" ].

truly_deg := adv_degree_spec_v_le &
  [ STEM < "truly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_truly_deg_rel" ].

unconsidered_isect := adj_intrans_le &
  [ STEM < "unconsidered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unconsidered_rel" ].

unimaginable_a1 := adj_intrans_le &
  [ STEM < "unimaginable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unimaginable_rel" ].

unsophisticated_a1 := adj_intrans_le &
  [ STEM < "unsophisticated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsophisticated_rel" ].

vague_a1 := adj_intrans_le &
  [ STEM < "vague" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vague_rel" ].

wall_n2 := n_ppof_le &
  [ STEM < "wall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wall_rel" ].

warrant_v1 := v_np_trans_le &
  [ STEM < "warrant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warrant_v_rel" ].

wash_v1 := v_np_trans_le &
  [ STEM < "wash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wash_v_rel" ].

water_n2 := n_ppof_le &
  [ STEM < "water" >,
    SYNSEM.LKEYS.KEYREL.PRED "_water_n_rel" ].

whirlpool_n1 := n_ppof_le &
  [ STEM < "whirlpool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whirlpool_rel" ].

wind_up_v1 := v_particle_le &
  [ STEM < "wind" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wind_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

workaholic_a1 := adj_intrans_le &
  [ STEM < "workaholic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workaholic_rel" ].

architecturally_adv1 := adv_int_vp_post_le &
  [ STEM < "architecturally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_architecturally_rel" ].

artificially := adv_int_vp_le &
  [ STEM < "artificially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_artificially_rel" ].

athletically := adv_int_vp_le &
  [ STEM < "athletically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_athletically_rel" ].

automatically := adv_int_vp_le &
  [ STEM < "automatically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_automatically_rel" ].

biologically := adv_int_vp_le &
  [ STEM < "biologically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_biologically_rel" ].

blindly := adv_int_vp_le &
  [ STEM < "blindly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blindly_rel" ].

brightly := adv_int_vp_le &
  [ STEM < "brightly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brightly_rel" ].

brilliantly := adv_int_vp_le &
  [ STEM < "brilliantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brilliantly_rel" ].

busily := adv_int_vp_le &
  [ STEM < "busily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_busily_rel" ].

calmly := adv_int_vp_le &
  [ STEM < "calmly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calmly_rel" ].

catastrophically := adv_int_vp_le &
  [ STEM < "catastrophically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_catastrophically_rel" ].

characteristically := adv_int_vp_le &
  [ STEM < "characteristically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_characteristically_rel" ].

cheaply := adv_int_vp_le &
  [ STEM < "cheaply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheaply_rel" ].

classically := adv_int_vp_le &
  [ STEM < "classically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_classically_rel" ].

cleanly := adv_int_vp_le &
  [ STEM < "cleanly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cleanly_rel" ].

clumsily := adv_int_vp_le &
  [ STEM < "clumsily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clumsily_rel" ].

coincidingly := adv_int_vp_le &
  [ STEM < "coincidingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coincidingly_rel" ].

coldly := adv_int_vp_le &
  [ STEM < "coldly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coldly_rel" ].

colorfully := adv_int_vp_le &
  [ STEM < "colorfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_colorfully_rel" ].

comfortably := adv_int_vp_le &
  [ STEM < "comfortably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comfortably_rel" ].

commonly := adv_int_vp_le &
  [ STEM < "commonly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_commonly_rel" ].

communally := adv_int_vp_le &
  [ STEM < "communally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_communally_rel" ].

comparatively := adv_int_vp_le &
  [ STEM < "comparatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comparatively_rel" ].

compatibly := adv_int_vp_le &
  [ STEM < "compatibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compatibly_rel" ].

considerably := adv_int_vp_le &
  [ STEM < "considerably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_considerably_rel" ].

constructively := adv_int_vp_le &
  [ STEM < "constructively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_constructively_rel" ].

contemplatively := adv_int_vp_le &
  [ STEM < "contemplatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contemplatively_rel" ].

contemporarily := adv_int_vp_le &
  [ STEM < "contemporarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contemporarily_rel" ].

coolly := adv_int_vp_le &
  [ STEM < "coolly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coolly_rel" ].

cooperatively := adv_int_vp_le &
  [ STEM < "cooperatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cooperatively_rel" ].

corporately := adv_int_vp_le &
  [ STEM < "corporately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_corporately_rel" ].

correspondingly := adv_int_vp_le &
  [ STEM < "correspondingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_correspondingly_rel" ].

cosily := adv_int_vp_le &
  [ STEM < "cosily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cosily_rel" ].

critically := adv_int_vp_le &
  [ STEM < "critically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_critically_rel" ].

daily_a1 := adj_intrans_le &
  [ STEM < "daily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_daily_rel" ].

darkly := adv_int_vp_le &
  [ STEM < "darkly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_darkly_rel" ].

dismissively := adv_int_vp_le &
  [ STEM < "dismissively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dismissively_rel" ].

domestically := adv_int_vp_le &
  [ STEM < "domestically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_domestically_rel" ].

dreadfully := adv_int_vp_le &
  [ STEM < "dreadfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dreadfully_rel" ].

drily := adv_int_vp_le &
  [ STEM < "drily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drily_rel" ].

ecologically := adv_int_vp_le &
  [ STEM < "ecologically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ecologically_rel" ].

egoistically := adv_int_vp_le &
  [ STEM < "egoistically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_egoistically_rel" ].

elegantly := adv_int_vp_le &
  [ STEM < "elegantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elegantly_rel" ].

enthusiastically := adv_int_vp_le &
  [ STEM < "enthusiastically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enthusiastically_rel" ].

entirely_deg := adv_degree_spec_v_le &
  [ STEM < "entirely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_entirely_rel" ].

environmentally := adv_int_vp_le &
  [ STEM < "environmentally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_environmentally_rel" ].

equally := adv_int_vp_le &
  [ STEM < "equally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_equally_rel" ].

euphorically := adv_int_vp_le &
  [ STEM < "euphorically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_euphorically_rel" ].

exactly := adv_int_vp_le &
  [ STEM < "exactly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exactly_rel" ].

exceptionally := adv_int_vp_le &
  [ STEM < "exceptionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exceptionally_rel" ].

fabulously := adv_int_vp_le &
  [ STEM < "fabulously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fabulously_rel" ].

federally := adv_int_vp_le &
  [ STEM < "federally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_federally_rel" ].

festively := adv_int_vp_le &
  [ STEM < "festively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_festively_rel" ].

financially := adv_int_vp_le &
  [ STEM < "financially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_financially_rel" ].

firmly := adv_int_vp_le &
  [ STEM < "firmly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_firmly_rel" ].

follow_up_n1 := n_intr_le &
  [ STEM < "follow", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_follow_up_n_rel" ].

follow_up_n2 := n_intr_le &
  [ STEM < "follow", "-", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_follow_up_n_rel" ].

formally := adv_int_vp_le &
  [ STEM < "formally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_formally_rel" ].

generously := adv_int_vp_le &
  [ STEM < "generously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_generously_rel" ].

german_speaking_a1 := adj_intrans_le &
  [ STEM < "german", "speaking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_german_speaking_rel" ].

gratefully := adv_int_vp_le &
  [ STEM < "gratefully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gratefully_rel" ].

hastily := adv_int_vp_le &
  [ STEM < "hastily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hastily_rel" ].

hectically := adv_int_vp_le &
  [ STEM < "hectically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hectically_rel" ].

helpfully := adv_int_vp_le &
  [ STEM < "helpfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_helpfully_rel" ].

helplessly := adv_int_vp_le &
  [ STEM < "helplessly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_helplessly_rel" ].

historically := adv_int_vp_le &
  [ STEM < "historically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_historically_rel" ].

hopelessly := adv_int_vp_le &
  [ STEM < "hopelessly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hopelessly_rel" ].

imperatively := adv_int_vp_le &
  [ STEM < "imperatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imperatively_rel" ].

impractically := adv_int_vp_le &
  [ STEM < "impractically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impractically_rel" ].

inaccurately := adv_int_vp_le &
  [ STEM < "inaccurately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inaccurately_rel" ].

inconveniently := adv_int_vp_le &
  [ STEM < "inconveniently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inconveniently_rel" ].

indifferently := adv_int_vp_le &
  [ STEM < "indifferently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indifferently_rel" ].

ineffectively := adv_int_vp_le &
  [ STEM < "ineffectively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ineffectively_rel" ].

inopportunely := adv_int_vp_le &
  [ STEM < "inopportunely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inopportunely_rel" ].

insignificantly := adv_int_vp_le &
  [ STEM < "insignificantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insignificantly_rel" ].

intelligently := adv_int_vp_le &
  [ STEM < "intelligently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intelligently_rel" ].

intimately := adv_int_vp_le &
  [ STEM < "intimately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intimately_rel" ].

intolerably := adv_int_vp_le &
  [ STEM < "intolerablely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intolerably_rel" ].

kindly := adv_int_vp_le &
  [ STEM < "kindly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kindly_rel" ].

luxuriously := adv_int_vp_le &
  [ STEM < "luxuriously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_luxuriously_rel" ].

madly := adv_int_vp_le &
  [ STEM < "madly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_madly_rel" ].

medium_range_a1 := adj_intrans_le &
  [ STEM < "medium", "range" >,
    SYNSEM.LKEYS.KEYREL.PRED "_medium_range_rel" ].

mildly := adv_int_vp_le &
  [ STEM < "mildly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mildly_rel" ].

moderately := adv_int_vp_le &
  [ STEM < "moderately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moderately_rel" ].

mutually := adv_int_vp_le &
  [ STEM < "mutually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mutually_rel" ].

nastily := adv_int_vp_le &
  [ STEM < "nastily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nastily_rel" ].

natively := adv_int_vp_le &
  [ STEM < "natively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_natively_rel" ].

negatively := adv_int_vp_le &
  [ STEM < "negatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negatively_rel" ].

negligibly := adv_int_vp_le &
  [ STEM < "negligibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negligibly_rel" ].

nonrefundably := adv_int_vp_le &
  [ STEM < "nonrefundably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonrefundably_rel" ].

on_a1 := adj_pred_intrans_le &
  [ STEM < "on" >,
    SYNSEM.LKEYS.KEYREL.PRED "_on_isect_rel" ].

openly := adv_int_vp_le &
  [ STEM < "openly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_openly_rel" ].

oppressively := adv_int_vp_le &
  [ STEM < "oppressively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oppressively_rel" ].

optionally := adv_int_vp_le &
  [ STEM < "optionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optionally_rel" ].

outwardly := adv_int_vp_le &
  [ STEM < "outwardly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outwardly_rel" ].

outrageously := adv_int_vp_le &
  [ STEM < "outrageously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outrageously_rel" ].

permanently := adv_int_vp_le &
  [ STEM < "permanently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_permanently_rel" ].

politely := adv_int_vp_le &
  [ STEM < "politely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_politely_rel" ].

preciously := adv_int_vp_le &
  [ STEM < "preciously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preciously_rel" ].

pressingly := adv_int_vp_le &
  [ STEM < "pressingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pressingly_rel" ].

presumably := adv_int_vp_le &
  [ STEM < "presumably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presumably_rel" ].

professionally := adv_int_vp_le &
  [ STEM < "professionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_professionally_rel" ].

promisingly := adv_int_vp_le &
  [ STEM < "promisingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promisingly_rel" ].

qualitatively := adv_int_vp_le &
  [ STEM < "qualitatively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_qualitatively_rel" ].

reciprocally := adv_int_vp_le &
  [ STEM < "reciprocally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reciprocally_rel" ].

regrettably := adv_int_vp_le &
  [ STEM < "regrettably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regrettably_rel" ].

reliably := adv_int_vp_le &
  [ STEM < "reliably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reliably_rel" ].

reportedly := adv_int_vp_le &
  [ STEM < "reportedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reportedly_rel" ].

responsibly := adv_int_vp_le &
  [ STEM < "responsibly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_responsibly_rel" ].

romantically := adv_int_vp_le &
  [ STEM < "romantically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_romantically_rel" ].

rosily := adv_int_vp_le &
  [ STEM < "rosily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rosily_rel" ].

rough_adj := adj_intrans_le &
  [ STEM < "rough" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rough_isect_rel" ].

roughly := adv_int_vp_le &
  [ STEM < "roughly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roughly_rel" ].

sceptically := adv_int_vp_le &
  [ STEM < "sceptically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sceptically_rel" ].

sincerely := adv_int_vp_le &
  [ STEM < "sincerely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sincerely_rel" ].

smartly := adv_int_vp_le &
  [ STEM < "smartly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_smartly_rel" ].

soulfully := adv_int_vp_le &
  [ STEM < "soulfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soulfully_rel" ].

sourly := adv_int_vp_le &
  [ STEM < "sourly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sourly_rel" ].

sporadically := adv_int_vp_le &
  [ STEM < "sporadically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sporadically_rel" ].

straight_adv := adv_int_vp_le &
  [ STEM < "straight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_straight_adv_rel" ].

strenuously := adv_int_vp_le &
  [ STEM < "strenuously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strenuously_rel" ].

substantially := adv_int_vp_le &
  [ STEM < "substantially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_substantially_rel" ].

sunnily := adv_int_vp_le &
  [ STEM < "sunnily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunnily_rel" ].

temporarily := adv_int_vp_le &
  [ STEM < "temporarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_temporarily_rel" ].

tensely := adv_int_vp_le &
  [ STEM < "tensely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tensely_rel" ].

tepidly := adv_int_vp_le &
  [ STEM < "tepidly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tepidly_rel" ].

tiresomely := adv_int_vp_le &
  [ STEM < "tiresomely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiresomely_rel" ].

tragically := adv_int_vp_le &
  [ STEM < "tragically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tragically_rel" ].

typically := adv_int_vp_le &
  [ STEM < "typically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_typically_rel" ].

unacceptably := adv_int_vp_le &
  [ STEM < "unacceptably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unacceptably_rel" ].

uncomfortably := adv_int_vp_le &
  [ STEM < "uncomfortably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uncomfortably_rel" ].

uninterestingly := adv_int_vp_le &
  [ STEM < "uninterestingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uninterestingly_rel" ].

unnecessarily := adv_le &
  [ STEM < "unnecessarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unnecessarily_rel" ].

unproblematically := adv_int_vp_le &
  [ STEM < "unproblematically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unproblematically_rel" ].

unproductively := adv_int_vp_le &
  [ STEM < "unproductively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unproductively_rel" ].

unrealistically := adv_int_vp_le &
  [ STEM < "unrealistically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unrealistically_rel" ].

unselfishly := adv_int_vp_le &
  [ STEM < "unselfishly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unselfishly_rel" ].

unsuitably := adv_int_vp_le &
  [ STEM < "unsuitably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsuitably_rel" ].

upward := adv_int_vp_le &
  [ STEM < "upward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upward_adv_rel" ].

variably := adv_int_vp_le &
  [ STEM < "variably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_variably_rel" ].

voluntarily := adv_int_vp_le &
  [ STEM < "voluntarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_voluntarily_rel" ].

involuntarily := adv_int_vp_le &
  [ STEM < "involuntarily" >,
    SYNSEM.LKEYS.KEYREL.PRED "_involuntarily_rel" ].

weakly := adv_int_vp_le &
  [ STEM < "weakly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weakly_rel" ].

widely := adv_int_vp_le &
  [ STEM < "widely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_widely_rel" ].

worriedly := adv_int_vp_le &
  [ STEM < "worriedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worriedly_rel" ].

known_isect := adj_attr_intrans_le &
  [ STEM < "known" >,
    SYNSEM.LKEYS.KEYREL.PRED "_known_rel" ].

missing_a1 := adj_attr_intrans_le &
  [ STEM < "missing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_missing_rel" ].

preceding_a1 := adj_attr_intrans_le &
  [ STEM < "preceding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preceding_rel" ].

remaining_a1 := adj_attr_intrans_le &
  [ STEM < "remaining" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remaining_rel" ].

swimming_a1 := adj_attr_intrans_le &
  [ STEM < "swimming" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swimming_rel" ].

coinciding_isect := adj_attr_intrans_le &
  [ STEM < "coinciding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coinciding_rel" ].

writing_isect := adj_attr_intrans_le &
  [ STEM < "writing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_writing_rel" ].

added_a1 := adj_attr_intrans_le &
  [ STEM < "added" >,
    SYNSEM.LKEYS.KEYREL.PRED "_added_rel" ].

scheduled_a1 := adj_attr_intrans_le &
  [ STEM < "scheduled" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scheduled_rel" ].

started_a1 := adj_attr_intrans_le &
  [ STEM < "started" >,
    SYNSEM.LKEYS.KEYREL.PRED "_started_rel" ].

armed_isect := adj_attr_intrans_le &
  [ STEM < "armed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_armed_rel" ].

based_isect := adj_intrans_le &
  [ STEM < "based" >,
    SYNSEM.LKEYS.KEYREL.PRED "_based_rel" ].

cancelled_isect := adj_attr_intrans_le &
  [ STEM < "cancelled" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cancelled_rel" ].

jammed_isect := adj_attr_intrans_le &
  [ STEM < "jammed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jammed_rel" ].

lengthened_isect := adj_attr_intrans_le &
  [ STEM < "lengthened" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lengthened_rel" ].

predicted_isect := adj_attr_intrans_le &
  [ STEM < "predicted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_predicted_rel" ].

reported_isect := adj_attr_intrans_le &
  [ STEM < "reported" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reported_rel" ].

flabbergasted_a1 := adj_attr_intrans_le &
  [ STEM < "flabbergasted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flabbergasted_rel" ].

priced_a1 := adj_attr_intrans_le &
  [ STEM < "priced" >,
    SYNSEM.LKEYS.KEYREL.PRED "_priced_rel" ].

included_a1 := adj_attr_intrans_le &
  [ STEM < "included" >,
    SYNSEM.LKEYS.KEYREL.PRED "_included_rel" ].

informed_a1 := adj_attr_intrans_le &
  [ STEM < "informed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_informed_rel" ].

integrated_a1 := adj_attr_intrans_le &
  [ STEM < "integrated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_integrated_rel" ].

saved_isect := adj_attr_intrans_le &
  [ STEM < "saved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_saved_rel" ].

you_know_scop := adv_le &
  [ STEM < "you", "know" >,
    SYNSEM.LKEYS.KEYREL.PRED "_you_know_rel" ].

like_deg := adv_degree_spec_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.PRED "_like_deg_rel" ].

like_disc_adv := adv_disc_like_preh_le &
  [ STEM < "like" >,
    SYNSEM.LKEYS.KEYREL.CARG "like" ].

ten_four_root_pre := adv_disc_preh_le &
  [ STEM < "ten", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "ten_four" ].

ten_four_root_post := adv_disc_posth_le &
  [ STEM < "ten", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "ten_four" ].

now_that := p_subconj_le &
  [ STEM < "now", "that" >,
    SYNSEM.LKEYS.KEYREL.PRED "_now_that_rel" ].

CS_nd := n_proper_le &
  [ STEM < "cs" >,
    SYNSEM.LKEYS.KEYREL.CARG "CS" ].

have_cause := v_sorb_le &
  [ STEM < "have" >,
    SYNSEM.LKEYS.KEYREL.PRED "_have_cause_rel" ].

work_out_v2 := v_particle_le &
  [ STEM < "work" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_work_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

sometime_n1 := n_generic_pro_adv_le &
  [ STEM < "sometime" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

sometime_n2 := n_generic_pro_adv_le &
  [ STEM < "some", "time" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

anytime_n1 := n_generic_pro_adv_nom_le &
  [ STEM < "anytime" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

anyplace_n1 := n_generic_pro_adv_le &
  [ STEM < "anyplace" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

anyplace_n2 := n_generic_pro_adv_le &
  [ STEM < "any", "place" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

anywhere_n1 := n_generic_pro_adv_le &
  [ STEM < "anywhere" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

anywhere_n2 := n_generic_pro_adv_le &
  [ STEM < "any", "where" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED any_q_rel ] ].

everywhere_n1 := n_generic_pro_adv_le &
  [ STEM < "everywhere" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED every_q_rel ] ].

everywhere_n2 := n_generic_pro_adv_le &
  [ STEM < "every", "where" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED every_q_rel ] ].

nowhere_n1 := n_generic_pro_adv_le &
  [ STEM < "nowhere" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED no_q_rel ] ].

nowhere_n2 := n_generic_pro_adv_le &
  [ STEM < "no", "where" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED no_q_rel ] ].

someplace_n1 := n_generic_pro_adv_le &
  [ STEM < "someplace" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

someplace_n2 := n_generic_pro_adv_le &
  [ STEM < "some", "place" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

somewhere_n1 := n_generic_pro_adv_le &
  [ STEM < "somewhere" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

somewhere_n2 := n_generic_pro_adv_le &
  [ STEM < "some", "where" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

someday_n1 := n_generic_pro_adv_le &
  [ STEM < "someday" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALTKEYREL.PRED some_q_rel ] ].

all_the_way_deg := adv_degree_spec_le &
  [ STEM < "all", "the", "way" >,
    SYNSEM.LKEYS.KEYREL.PRED "_all_the_way_deg_rel" ].

some_more_adv1 := adv_int_vp_le &
  [ STEM < "some", "more" >,
    SYNSEM.LKEYS.KEYREL.PRED "_some_more_rel" ].

so_cp := s_compl_phrase_le &
  [ STEM < "so" > ].

why_cp := s_compl_wh_phrase_le &
  [ STEM < "why" >,
    SYNSEM.LKEYS [ KEYREL.PRED _for_p_rel,
                   ALTKEYREL.PRED "reason_rel" ] ].

how_cp := s_compl_wh_phrase_le &
  [ STEM < "how" >,
    SYNSEM.LKEYS [ KEYREL.PRED unspec_manner_rel,
                   ALTKEYREL.PRED "_way_n_rel" ] ].

good_buddy_n1 := n_proper_le &
  [ STEM < "good", "buddy" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_buddy" ].

x_to_y_np_pl_to := n_x_to_y_plur_le &
  [ STEM < "to" > ].

x_to_y_np_sg_to := n_x_to_y_sg_le &
  [ STEM < "to" > ].

x_to_y_np_sg_through := n_x_to_y_sg_le &
  [ STEM < "through" > ].

x_to_y_np_pl_- := n_x_to_y_plur_le &
  [ STEM < "-" > ].

x_to_y_np_sg_- := n_x_to_y_sg_le &
  [ STEM < "-" > ].

x_to_y_adj_to := adj_x_to_y_le &
  [ STEM < "to" > ].

x_to_y_adj_- := adj_x_to_y_le &
  [ STEM < "-" > ].

cashier_n1 := n_intr_le &
  [ STEM < "cashier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cashier_rel" ].

suite_n1 := n_intr_le &
  [ STEM < "suite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suite_rel" ].

bundesbahn_n1 := n_intr_le &
  [ STEM < "bundesbahn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bundesbahn_rel" ].

james := n_proper_le &
  [ STEM < "james" >,
    SYNSEM.LKEYS.KEYREL.CARG "james" ].

rickhoff := n_proper_le &
  [ STEM < "rickhoff" >,
    SYNSEM.LKEYS.KEYREL.CARG "rickhoff" ].

atlantic_n1 := n_intr_named_le &
  [ STEM < "atlantic" >,
    SYNSEM.LKEYS.KEYREL.CARG "atlantic" ].

Master_Card_n1 := n_proper_le &
  [ STEM < "master", "card" >,
    SYNSEM.LKEYS.KEYREL.CARG "MasterCard" ].

Master_Card_n2 := n_proper_le &
  [ STEM < "mastercard" >,
    SYNSEM.LKEYS.KEYREL.CARG "MasterCard" ].

American_Express_n1 := n_proper_le &
  [ STEM < "american", "express" >,
    SYNSEM.LKEYS.KEYREL.CARG "American_Express" ].

American_Express_n2 := n_proper_le &
  [ STEM < "amex" >,
    SYNSEM.LKEYS.KEYREL.CARG "American_Express" ].

Visa := n_proper_le &
  [ STEM < "visa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Visa" ].

section_n1 := n_ppof_le &
  [ STEM < "section" >,
    SYNSEM.LKEYS.KEYREL.PRED "_section_rel" ].

bahncard_n1 := n_intr_le &
  [ STEM < "bahn", "card" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bahn_card_rel" ].

peter := n_proper_le &
  [ STEM < "peter" >,
    SYNSEM.LKEYS.KEYREL.CARG "peter" ].

griechstrasse := n_proper_le &
  [ STEM < "griechstrasse" >,
    SYNSEM.LKEYS.KEYREL.CARG "griechstrasse" ].

colgate := n_proper_le &
  [ STEM < "colgate" >,
    SYNSEM.LKEYS.KEYREL.CARG "colgate" ].

signature_n1 := n_intr_le &
  [ STEM < "signature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_signature_rel" ].

mhm_root_pre := adv_disc_preh_le &
  [ STEM < "mhm" >,
    SYNSEM.LKEYS.KEYREL.CARG "mhm" ].

mhm_root_post := adv_disc_posth_le &
  [ STEM < "mhm" >,
    SYNSEM.LKEYS.KEYREL.CARG "mhm" ].

dammtor := n_proper_le &
  [ STEM < "dammtor" >,
    SYNSEM.LKEYS.KEYREL.CARG "dammtor" ].

lyle := n_proper_le &
  [ STEM < "lyle" >,
    SYNSEM.LKEYS.KEYREL.CARG "lyle" ].

scapoff := n_proper_le &
  [ STEM < "scapoff" >,
    SYNSEM.LKEYS.KEYREL.CARG "scapoff" ].

British_Airways_n1 := n_proper_le &
  [ STEM < "british", "airways" >,
    SYNSEM.LKEYS.KEYREL.CARG "BritishAirways" ].

putis := n_proper_le &
  [ STEM < "putis" >,
    SYNSEM.LKEYS.KEYREL.CARG "putis" ].

rothenbaumchaussee := n_proper_le &
  [ STEM < "rothenbaumchaussee" >,
    SYNSEM.LKEYS.KEYREL.CARG "rothenbaumchaussee" ].

player_n1 := n_ppof_le &
  [ STEM < "player" >,
    SYNSEM.LKEYS.KEYREL.PRED "_player_rel" ].

thompson := n_proper_le &
  [ STEM < "thompson" >,
    SYNSEM.LKEYS.KEYREL.CARG "thompson" ].

enjoyable := adj_intrans_le &
  [ STEM < "enjoyable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enjoyable_rel" ].

bashford := n_proper_le &
  [ STEM < "bashford" >,
    SYNSEM.LKEYS.KEYREL.CARG "bashford" ].

berg := n_proper_le &
  [ STEM < "berg" >,
    SYNSEM.LKEYS.KEYREL.CARG "berg" ].

jessica := n_proper_le &
  [ STEM < "jessica" >,
    SYNSEM.LKEYS.KEYREL.CARG "jessica" ].

anne := n_proper_le &
  [ STEM < "anne" >,
    SYNSEM.LKEYS.KEYREL.CARG "anne" ].

railroad_n1 := n_intr_le &
  [ STEM < "railroad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_railroad_rel" ].

conductor_n1 := n_ppof_le &
  [ STEM < "conductor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conductor_rel" ].

logistics_n1 := n_plur_ppcomp_le &
  [ STEM < "logistics" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_logistics_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

meier := n_proper_le &
  [ STEM < "meier" >,
    SYNSEM.LKEYS.KEYREL.CARG "meier" ].

than_adj := p_compar_than_le &
  [ STEM < "than" >,
    SYNSEM.LKEYS.KEYREL.PRED _than_p_compar_rel ].

oh_one := adj_minute_posth_le &
  [ STEM < "oh", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "01" ].

oh_two := adj_minute_posth_le &
  [ STEM < "oh", "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "02" ].

oh_three := adj_minute_posth_le &
  [ STEM < "oh", "three" >,
    SYNSEM.LKEYS.KEYREL.CARG "03" ].

oh_four := adj_minute_posth_le &
  [ STEM < "oh", "four" >,
    SYNSEM.LKEYS.KEYREL.CARG "04" ].

oh_five := adj_minute_posth_le &
  [ STEM < "oh", "five" >,
    SYNSEM.LKEYS.KEYREL.CARG "05" ].

oh_six := adj_minute_posth_le &
  [ STEM < "oh", "six" >,
    SYNSEM.LKEYS.KEYREL.CARG "06" ].

oh_seven := adj_minute_posth_le &
  [ STEM < "oh", "seven" >,
    SYNSEM.LKEYS.KEYREL.CARG "07" ].

oh_eight := adj_minute_posth_le &
  [ STEM < "oh", "eight" >,
    SYNSEM.LKEYS.KEYREL.CARG "08" ].

oh_nine := adj_minute_posth_le &
  [ STEM < "oh", "nine" >,
    SYNSEM.LKEYS.KEYREL.CARG "09" ].

double_sized_a1 := adj_intrans_le &
  [ STEM < "double", "sized" >,
    SYNSEM.LKEYS.KEYREL.PRED "_double_sized_rel" ].

uh_huh_root_pre := adv_disc_preh_le &
  [ STEM < "uh", "huh" >,
    SYNSEM.LKEYS.KEYREL.CARG "uh_huh" ].

uh_huh_root_post := adv_disc_posth_le &
  [ STEM < "uh", "huh" >,
    SYNSEM.LKEYS.KEYREL.CARG "uh_huh" ].

Amanda := n_proper_le &
  [ STEM < "amanda" >,
    SYNSEM.LKEYS.KEYREL.CARG "amanda" ].

Courtney := n_proper_le &
  [ STEM < "courtney" >,
    SYNSEM.LKEYS.KEYREL.CARG "courtney" ].

Debbie := n_proper_le &
  [ STEM < "debbie" >,
    SYNSEM.LKEYS.KEYREL.CARG "debbie" ].

Locurner := n_intr_named_le &
  [ STEM < "locurner" >,
    SYNSEM.LKEYS.KEYREL.CARG "locurner" ].

Locurner_Hof := n_intr_named_le &
  [ STEM < "locurner", "hof" >,
    SYNSEM.LKEYS.KEYREL.CARG "locurner_hof" ].

Noehre := n_intr_named_le &
  [ STEM < "noehre" >,
    SYNSEM.LKEYS.KEYREL.CARG "noehre" ].

noehre_hof := n_intr_named_le &
  [ STEM < "noehre", "hof" >,
    SYNSEM.LKEYS.KEYREL.CARG "noehre_hof" ].

noehre_hanover := n_intr_named_le &
  [ STEM < "noehre", "hanover" >, 
   SYNSEM.LKEYS.KEYREL.CARG "noehre_hanover" ].

schlosshotel := n_intr_named_le &
  [ STEM < "schlosshotel" >,
    SYNSEM.LKEYS.KEYREL.CARG "schlosshotel" ].

schlosshotel_hanover := n_intr_named_le &
  [ STEM < "schlosshotel", "hanover" >, 
   SYNSEM.LKEYS.KEYREL.CARG "schlosshotel_hanover" ].

Sean := n_proper_le &
  [ STEM < "sean" >,
     SYNSEM.LKEYS.KEYREL.CARG "sean" ].

Vivian := n_proper_le &
  [ STEM < "vivian" >,
    SYNSEM.LKEYS.KEYREL.CARG "vivian" ].

Aubrey := n_proper_le &
  [ STEM < "aubrey" >,
    SYNSEM.LKEYS.KEYREL.CARG "aubrey" ].

Carol := n_proper_le &
  [ STEM < "carol" >,
    SYNSEM.LKEYS.KEYREL.CARG "carol" ].

Emerson := n_proper_le &
  [ STEM < "emerson" >,
    SYNSEM.LKEYS.KEYREL.CARG "emerson" ].

Gavula := n_proper_le &
  [ STEM < "gavula" >,
    SYNSEM.LKEYS.KEYREL.CARG "gavula" ].

Georgengarten := n_intr_named_le &
  [ STEM < "georgengarten" >,
    SYNSEM.LKEYS.KEYREL.CARG "georgengarten" ].

Gilbert := n_proper_le &
  [ STEM < "gilbert" >,
    SYNSEM.LKEYS.KEYREL.CARG "gilbert" ].

Gilbert_and_Sullivan := n_proper_le &
  [ STEM < "gilbert", "and", "sullivan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gilbert_and_Sullivan" ].

Gizla := n_proper_le &
  [ STEM < "gizla" >,
    SYNSEM.LKEYS.KEYREL.CARG "gizla" ].

Guerma := n_proper_le &
  [ STEM < "guerma" >,
    SYNSEM.LKEYS.KEYREL.CARG "guerma" ].

Hillary := n_proper_le &
  [ STEM < "hillary" >,
    SYNSEM.LKEYS.KEYREL.CARG "hillary" ].

Jay := n_proper_le &
  [ STEM < "jay" >,
    SYNSEM.LKEYS.KEYREL.CARG "jay" ].

Jim := n_proper_le &
  [ STEM < "jim" >,
    SYNSEM.LKEYS.KEYREL.CARG "jim" ].

Johnny := n_proper_le &
  [ STEM < "johnny" >,
    SYNSEM.LKEYS.KEYREL.CARG "johnny" ].

Johnson := n_proper_le &
  [ STEM < "johnson" >,
    SYNSEM.LKEYS.KEYREL.CARG "johnson" ].

Kavorkian := n_proper_le &
  [ STEM < "kavorkian" >,
    SYNSEM.LKEYS.KEYREL.CARG "kavorkian" ].

Lola := n_proper_le &
  [ STEM < "lola" >,
    SYNSEM.LKEYS.KEYREL.CARG "lola" ].

Manuel := n_proper_le &
  [ STEM < "manuel" >,
    SYNSEM.LKEYS.KEYREL.CARG "manuel" ].

Minnesota := n_proper_le &
  [ STEM < "minnesota" >,
    SYNSEM.LKEYS.KEYREL.CARG "minnesota" ].

Paula := n_proper_le &
  [ STEM < "paula" >,
    SYNSEM.LKEYS.KEYREL.CARG "paula" ].

Pawlowski := n_proper_le &
  [ STEM < "pawlowski" >,
    SYNSEM.LKEYS.KEYREL.CARG "pawlowski" ].

Royal := n_intr_named_le &
  [ STEM < "royal" >,
    SYNSEM.LKEYS.KEYREL.CARG "royal" ].

Royal_Hanover := n_intr_named_le &
  [ STEM < "royal", "hanover" >,
    SYNSEM.LKEYS.KEYREL.CARG "royal_hanover" ].

Schloss := n_intr_named_le &
  [ STEM < "schloss" >,
    SYNSEM.LKEYS.KEYREL.CARG "schloss" ].

Susanne := n_proper_le &
  [ STEM < "susanne" >,
    SYNSEM.LKEYS.KEYREL.CARG "susanne" ].

Susie := n_proper_le &
  [ STEM < "susie" >,
    SYNSEM.LKEYS.KEYREL.CARG "susie" ].

Suzanne := n_proper_le &
  [ STEM < "suzanne" >,
    SYNSEM.LKEYS.KEYREL.CARG "suzanne" ].

Tiffany := n_proper_le &
  [ STEM < "tiffany" >,
    SYNSEM.LKEYS.KEYREL.CARG "tiffany" ].

Victoria := n_proper_le &
  [ STEM < "victoria" >,
    SYNSEM.LKEYS.KEYREL.CARG "victoria" ].

mm_root_pre := adv_disc_preh_le &
  [ STEM < "mm" >,
    SYNSEM.LKEYS.KEYREL.CARG "mm" ].

mm_root_post := adv_disc_posth_le &
  [ STEM < "mm" >,
    SYNSEM.LKEYS.KEYREL.CARG "mm" ].

shucks_root_pre := adv_disc_preh_le &
  [ STEM < "shucks" >,
    SYNSEM.LKEYS.KEYREL.CARG "shucks" ].

shucks_root_post := adv_disc_posth_le &
  [ STEM < "shucks" >,
    SYNSEM.LKEYS.KEYREL.CARG "shucks" ].

allot_v1 := v_to_trans_le &
  [ STEM < "allot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allot_rel" ].

anxious_a1 := adj_intrans_le &
  [ STEM < "anxious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anxious_rel" ].

anxious_a2 := adj_reg_equi_le &
  [ STEM < "anxious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anxious_rel" ].

army_n1 := n_ppof_le &
  [ STEM < "army" >,
    SYNSEM.LKEYS.KEYREL.PRED "_army_rel" ].

bench_n1 := n_intr_le &
  [ STEM < "bench" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bench_n_rel" ].

brain_n1 := n_ppof_le &
  [ STEM < "brain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brain_n_rel" ].

burn_v1 := v_np_trans_le &
  [ STEM < "burn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_burn_v_rel" ].

cheat_v1 := v_np_trans_le &
  [ STEM < "cheat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheat_v_rel" ].

congratulations_n1 := n_plur_le &
  [ STEM < "congratulations" >,
    SYNSEM.LKEYS.KEYREL.PRED "_congratulations_rel" ].

constitute_v1 := v_np_trans_le &
  [ STEM < "constitute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_constitute_rel" ].

darn_root_pre := adv_disc_preh_le &
  [ STEM < "darn" >,
    SYNSEM.LKEYS.KEYREL.CARG "darn" ].

darn_root_post := adv_disc_posth_le &
  [ STEM < "darn" >,
    SYNSEM.LKEYS.KEYREL.CARG "darn" ].

dang_root_pre := adv_disc_preh_le &
  [ STEM < "dang" >,
    SYNSEM.LKEYS.KEYREL.CARG "dang" ].

dang_root_post := adv_disc_posth_le &
  [ STEM < "dang" >,
    SYNSEM.LKEYS.KEYREL.CARG "dang" ].

e_mail_n1 := n_mass_count_ppof_le &
  [ STEM < "e", "mail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_email_n_rel" ].

e_mail_n2 := n_mass_count_ppof_le &
  [ STEM < "e", "-", "mail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_email_n_rel" ].

favorite_n1 := n_ppof_le &
  [ STEM < "favorite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_favorite_n_rel" ].

frame_n1 := n_ppof_le &
  [ STEM < "frame" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frame_n_rel" ].

freedom_n1 := n_ppof_le &
  [ STEM < "freedom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_freedom_rel" ].

functional_a1 := adj_intrans_le &
  [ STEM < "functional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_functional_rel" ].

hanovarian_n1 := n_intr_le &
  [ STEM < "hanovarian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hanovarian_n_rel" ].

hoot_n1 := n_intr_le &
  [ STEM < "hoot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hoot_n_rel" ].

lean_v1 := v_empty_prep_intrans_le &
  [ STEM < "lean" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lean_towards_rel",
             LKEYS.--COMPKEY _towards_p_sel_rel ] ].

lean_v2 := v_empty_prep_intrans_le &
  [ STEM < "lean" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lean_toward_rel",
             LKEYS.--COMPKEY _toward_p_sel_rel ] ].

lean_v3 := v_unerg_le &
  [ STEM < "lean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lean_towards_rel" ].

optimistic_a1 := adj_intrans_le &
  [ STEM < "optimistic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optimistic_rel" ].

pair_n1 := n_ppof_le &
  [ STEM < "pair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pair_n_rel" ].

Prinzenhof := n_intr_named_le &
  [ STEM < "prinzenhof" >,
    SYNSEM.LKEYS.KEYREL.CARG "prinzenhof" ].

regional_a1 := adj_intrans_le &
  [ STEM < "regional" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regional_rel" ].

restful_a1 := adj_intrans_le &
  [ STEM < "restful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_restful_rel" ].

sing_v1 := v_unerg_le &
  [ STEM < "sing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sing_rel" ].

sing_v2 := v_np_trans_le &
  [ STEM < "sing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sing_rel" ].

socialize_v1 := v_unerg_le &
  [ STEM < "socialize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_socialize_rel" ].

strain_v1 := v_np_trans_le &
  [ STEM < "strain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strain_v_rel" ].

sun_n1 := n_intr_le &
  [ STEM < "sun" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sun_rel" ].

tone_down_v1 := v_particle_np_le &
  [ STEM < "tone" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tone_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

tour_v1 := v_np_trans_le &
  [ STEM < "tour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tour_v_rel" ].

unreschedulable_a1 := adj_intrans_le &
  [ STEM < "unreschedulable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unreschedulable_rel" ].

zoom_v1 := v_prep_intrans_unsp_le &
  [ STEM < "zoom" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_zoom_v_rel",
             LKEYS.--COMPKEY dir_rel ] ].

LA_n1 := n_proper_le &
  [ STEM < "la" >,
    SYNSEM.LKEYS.KEYREL.CARG "LA" ].

USofA_n1 := n_intr_named_le &
  [ STEM < "us", "of", "a" >,
    SYNSEM.LKEYS.KEYREL.CARG "USofA" ].

set_up_n1 := n_mass_le &
  [ STEM < "set", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_set_up_n_rel" ].

gone_a1 := adj_intrans_le &
  [ STEM < "gone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gone_isect_rel" ].

cut_into_v1 := v_prep_intrans_le &
  [ STEM < "cut" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cut_v_rel",
             LKEYS.--COMPKEY _into_p_rel ] ].

live_a1 := adj_intrans_le &
  [ STEM < "live" >,
    SYNSEM.LKEYS.KEYREL.PRED "_live_isect_rel" ].

stomach_v1 := v_np_trans_le &
  [ STEM < "stomach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stomach_v_rel" ].

in_bed := pp_idiom_le &
  [ STEM < "in", "bed" >,
    SYNSEM.LKEYS [ KEYREL.PRED _in_p_rel,
                   ALTKEYREL.PRED "_bed_rel" ] ].

do_about_v1 := v_np_prep_trans_le &
  [ STEM < "do" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_do_rel",
             LKEYS.--OCOMPKEY _about_p_rel ] ].

do_with_v1 := v_np_prep_trans_le &
  [ STEM < "do" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_do_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

line_up_v1 := v_particle_np_le &
  [ STEM < "line" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_line_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

decide_v3 := v_cp_fin_inf_non_trans_le &
  [ STEM < "decide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decide_rel" ].

correct_root_pre := adv_disc_preh_le &
  [ STEM < "correct" >,
    SYNSEM.LKEYS.KEYREL.CARG "correct" ].

correct_root_post := adv_disc_posth_le &
  [ STEM < "correct" >,
    SYNSEM.LKEYS.KEYREL.CARG "correct" ].

leave_over_v1 := v_particle_np_le &
  [ STEM < "leave" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_leave_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].
Asian_a1 := adj_intrans_le &
  [ STEM < "asian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_asian_rel" ].

Asian_n1 := n_intr_le &
  [ STEM < "asian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_asian_n_rel" ].

boston := n_proper_le &
  [ STEM < "boston" >,
    SYNSEM.LKEYS.KEYREL.CARG "boston" ].

Diners_Club_n1 := n_proper_le &
  [ STEM < "diners", "club" >,
    SYNSEM.LKEYS.KEYREL.CARG "Diners_Club" ].

Indian_a1 := adj_intrans_le &
  [ STEM < "indian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indian_rel" ].

Indian_n1 := n_intr_le &
  [ STEM < "indian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indian_n_rel" ].

Indian_n2 := n_proper_le &
  [ STEM < "indian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Indian" ].

Ireland_n1 := n_proper_le &
  [ STEM < "ireland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ireland" ].

labor_day := n_holiday_le &
  [ STEM < "labor", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "labor_day" ].

San_Diego_n1 := n_proper_le &
  [ STEM < "san", "diego" >,
    SYNSEM.LKEYS.KEYREL.CARG "San_Diego" ].

Volkswagen_n1 := n_proper_le &
  [ STEM < "volkswagen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Volkswagen" ].

agreeably_adv1 := adv_int_vp_post_le &
  [ STEM < "agreeably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_agreeably_rel" ].

amaze_v1 := v_np_trans_le &
  [ STEM < "amaze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amaze_rel" ].

anxiously_adv1 := adv_int_vp_post_le &
  [ STEM < "anxiously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anxiously_rel" ].

apartment_n1 := n_ppof_le &
  [ STEM < "apartment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apartment_rel" ].

architect_n1 := n_intr_le &
  [ STEM < "architect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_architect_rel" ].

audit_v1 := v_np_trans_le &
  [ STEM < "audit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_audit_rel" ].

avantgarde_adj := adj_intrans_le &
  [ STEM < "avantgarde" >,
    SYNSEM.LKEYS.KEYREL.PRED "_avantgarde_adj_rel" ].

babe_n1 := n_intr_le &
  [ STEM < "babe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_babe_rel" ].

background_n1 := n_ppof_le &
  [ STEM < "background" >,
    SYNSEM.LKEYS.KEYREL.PRED "_background_rel" ].

bake_v1 := v_np_trans_le &
  [ STEM < "bake" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bake_v_rel" ].

baseball_n1 := n_mass_count_le &
  [ STEM < "baseball" >,
    SYNSEM.LKEYS.KEYREL.PRED "_baseball_rel" ].

bikini_n1 := n_intr_le &
  [ STEM < "bikini" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bikini_rel" ].

blood_n := n_mass_le &
  [ STEM < "blood" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blood_rel" ].

body_n1 := n_ppof_le &
  [ STEM < "body" >,
    SYNSEM.LKEYS.KEYREL.PRED "_body_rel" ].

bone_n1 := n_ppof_le &
  [ STEM < "bone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bone_rel" ].

brand_n1 := n_ppcomp_le &
  [ STEM < "brand" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_brand_rel",
             LKEYS.--COMPKEY _of_p_nbar_rel ] ].

buff_adj := adj_intrans_le &
  [ STEM < "buff" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buff_isect_rel" ].

bulky_adj := adj_intrans_le &
  [ STEM < "bulky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bulky_rel" ].

bulkier := adj_comp_le &
  [ STEM < "bulkier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bulky_rel" ].

bullet_n1 := n_intr_le &
  [ STEM < "bullet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bullet_rel" ].

bureau_n1 := n_ppof_le &
  [ STEM < "bureau" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bureau_rel" ].

butt_n1 := n_ppof_le &
  [ STEM < "butt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_butt_n_rel" ].

chiropractor_n1 := n_intr_le &
  [ STEM < "chiropractor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chiropractor_rel" ].

clothes_n1 := n_plur_le &
  [ STEM < "clothes" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clothes_rel" ].

college_n1 := n_mass_count_ppof_le &
  [ STEM < "college" >,
    SYNSEM.LKEYS.KEYREL.PRED "_college_rel" ].

cookie_n1 := n_ppof_le &
  [ STEM < "cookie" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cookie_rel" ].

couch_n1 := n_ppof_le &
  [ STEM < "couch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_couch_rel" ].

crappy_adj := adj_intrans_le &
  [ STEM < "crappy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crappy_rel" ].

cuisine_n1 := n_ppof_le &
  [ STEM < "cuisine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cuisine_rel" ].

cute_adj := adj_intrans_le &
  [ STEM < "cute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cute_rel" ].

dad_n1 := n_intr_le &
  [ STEM < "dad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dad_rel" ].

dad_n2 := n_proper_le &
  [ STEM < "dad" >,
    SYNSEM.LKEYS.KEYREL.CARG "dad" ].

database_n1 := n_ppof_le &
  [ STEM < "database" >,
    SYNSEM.LKEYS.KEYREL.PRED "_database_rel" ].

define_v1 := v_np_trans_le &
  [ STEM < "define" >,
    SYNSEM.LKEYS.KEYREL.PRED "_define_rel" ].

delightful_adj := adj_intrans_le &
  [ STEM < "delightful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delightful_rel" ].

dictionary_n1 := n_ppof_le &
  [ STEM < "dictionary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dictionary_rel" ].

discount_v1 := v_np_trans_le &
  [ STEM < "discount" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discount_v_rel" ].

district_n1 := n_ppof_le &
  [ STEM < "district" >,
    SYNSEM.LKEYS.KEYREL.PRED "_district_rel" ].

dribs_n1 := n_plur_le &
  [ STEM < "dribs" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dribs_rel" ].

drabs_n1 := n_plur_le &
  [ STEM < "drabs" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drabs_rel" ].

economical_adj := adj_intrans_le &
  [ STEM < "economical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_economical_rel" ].

economically_adv1 := adv_int_vp_post_le &
  [ STEM < "economically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_economically_rel" ].

noonish := n_approx_hour_le &
  [ STEM < "noonish" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

twelvish := n_approx_hour_le &
  [ STEM < "twelvish" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

elevenish := n_approx_hour_le &
  [ STEM < "elevenish" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

tenish := n_approx_hour_le &
  [ STEM < "tenish" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

nineish := n_approx_hour_le &
  [ STEM < "nineish" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

eightish_a1 := n_approx_hour_le &
  [ STEM < "eightish" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

sevenish_a1 := n_approx_hour_le &
  [ STEM < "sevenish" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

sixish := n_approx_hour_le &
  [ STEM < "sixish" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

fiveish := n_approx_hour_le &
  [ STEM < "fiveish" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

fourish := n_approx_hour_le &
  [ STEM < "fourish" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

threeish := n_approx_hour_le &
  [ STEM < "threeish" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

twoish := n_approx_hour_le &
  [ STEM < "twoish" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

oneish := n_approx_hour_le &
  [ STEM < "oneish" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

approx_thirty_minute := adj_approx_minute_le &
  [ STEM < "thirtyish" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

enjoyably_adv1 := adv_int_vp_post_le &
  [ STEM < "enjoyably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enjoyably_rel" ].

forgive_v1 := v_np_trans_le &
  [ STEM < "forgive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forgive_rel" ].

frill_n1 := n_intr_le &
  [ STEM < "frill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frill_rel" ].

frothy_adj := adj_intrans_le &
  [ STEM < "frothy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frothy_rel" ].

functionally_adv1 := adv_int_vp_post_le &
  [ STEM < "functionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_functionally_rel" ].

genital_n1 := n_intr_le &
  [ STEM < "genital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_genital_rel" ].

grind_n1 := n_intr_le &
  [ STEM < "grind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grind_n_rel" ].

grind_v1 := v_np_trans_le &
  [ STEM < "grind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grind_v_rel" ].

haircut_n1 := n_intr_le &
  [ STEM < "haircut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_haircut_rel" ].

halter_n1 := n_intr_le &
  [ STEM < "halter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_halter_rel" ].

hay_n := n_mass_le &
  [ STEM < "hay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hay_rel" ].

herpes_n1 := n_plur_le &
  [ STEM < "herpes" >,
    SYNSEM.LKEYS.KEYREL.PRED "_herpes_rel" ].

hospital_n1 := n_intr_le &
  [ STEM < "hospital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hospital_rel" ].

impressed_a1 := adj_trans_le &
  [ STEM < "impressed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_impressed_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

in_law_n1 := n_intr_le &
  [ STEM < "in", "law" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_law_rel" ].

jeez_root_pre := adv_disc_preh_le &
  [ STEM < "jeez" >,
    SYNSEM.LKEYS.KEYREL.CARG "jeez" ].

jeez_root_post := adv_disc_posth_le &
  [ STEM < "jeez" >,
    SYNSEM.LKEYS.KEYREL.CARG "jeez" ].

joke_v2 := v_cp_prop*_non_trans_le &
  [ STEM < "joke" >,
    SYNSEM.LKEYS.KEYREL.PRED "_joke_v_rel" ].

junky_adj := adj_intrans_le &
  [ STEM < "junky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_junky_rel" ].

king_size_a1 := adj_intrans_le &
  [ STEM < "king", "size" >,
    SYNSEM.LKEYS.KEYREL.PRED "_king_size_rel" ].

laptop_n1 := n_intr_le &
  [ STEM < "laptop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laptop_rel" ].

laptop_n2 := n_intr_le &
  [ STEM < "lap", "top" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laptop_rel" ].

limousine_n1 := n_intr_le &
  [ STEM < "limousine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_limousine_rel" ].

listing_n1 := n_ppof_le &
  [ STEM < "listing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_listing_rel" ].

mental_adj := adj_intrans_le &
  [ STEM < "mental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mental_rel" ].

mentally_adv1 := adv_int_vp_post_le &
  [ STEM < "mentally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mentally_rel" ].

mid_range_a1 := adj_intrans_le &
  [ STEM < "mid", "range" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mid_range_rel" ].

neck_n1 := n_ppof_le &
  [ STEM < "neck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neck_rel" ].

nightcap_n1 := n_intr_le &
  [ STEM < "nightcap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nightcap_rel" ].

nonstop_adj := adj_intrans_le &
  [ STEM < "nonstop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonstop_rel" ].

notebook_n1 := n_ppof_le &
  [ STEM < "notebook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notebook_rel" ].

optimistically_a1 := adv_int_vp_le &
  [ STEM < "optimistically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optimistically_rel" ].

outlet_n1 := n_intr_le &
  [ STEM < "outlet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outlet_n_rel" ].

partake_of_v1 := v_empty_prep_intrans_le &
  [ STEM < "partake" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_partake_of_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

picnic_n1 := n_intr_le &
  [ STEM < "picnic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_picnic_n_rel" ].

planner_n1 := n_intr_le &
  [ STEM < "planner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_planner_rel" ].

plant_n1 := n_ppof_le &
  [ STEM < "plant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plant_n_rel" ].

pooch_n1 := n_intr_le &
  [ STEM < "pooch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pooch_rel" ].

prelim_n1 := n_intr_le &
  [ STEM < "prelim" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prelim_rel" ].

pretend_v1 := v_cp_prop_non_trans_le &
  [ STEM < "pretend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretend_rel" ].

pricey_adj := adj_intrans_le &
  [ STEM < "pricey" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pricey_rel" ].

procrastinator_n1 := n_intr_le &
  [ STEM < "procrastinator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_procrastinator_rel" ].

quarterly_adv1 := adv_int_vp_post_le &
  [ STEM < "quarterly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quarterly_adv_rel" ].

quarterly_a1 := adj_intrans_le &
  [ STEM < "quarterly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quarterly_rel" ].

questionnaire_n1 := n_intr_le &
  [ STEM < "questionnaire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_questionnaire_rel" ].

raunchy_a1 := adj_intrans_le &
  [ STEM < "raunchy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_raunchy_rel" ].

readjust_v13 := v_np*_trans_le &
  [ STEM < "readjust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_readjust_rel" ].

readjust_to_v1 := v_prep_intrans_le &
  [ STEM < "readjust" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_readjust_to_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

recreational_a1 := adj_intrans_le &
  [ STEM < "recreational" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recreational_rel" ].

regionally_adv1 := adv_int_vp_post_le &
  [ STEM < "regionally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regionally_rel" ].

restfully_adv1 := adv_int_vp_post_le &
  [ STEM < "restfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_restfully_rel" ].

scar_n1 := n_intr_le &
  [ STEM < "scar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scar_n_rel" ].

shepherd_n1 := n_intr_le &
  [ STEM < "shepherd" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shepherd_rel" ].

shirt_n1 := n_intr_le &
  [ STEM < "shirt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shirt_rel" ].

significant_a1 := adj_intrans_le &
  [ STEM < "significant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_significant_rel" ].

significantly_adv1 := adv_int_vp_post_le &
  [ STEM < "significantly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_significantly_rel" ].

sore_a1 := adj_intrans_le &
  [ STEM < "sore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sore_rel" ].

split_v1 := v_np_trans_le &
  [ STEM < "split" >,
    SYNSEM.LKEYS.KEYREL.PRED "_split_v_rel" ].

subtitle_n1 := n_ppof_le &
  [ STEM < "subtitle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subtitle_n_rel" ].

subtitle_v1 := v_np_trans_le &
  [ STEM < "subtitle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subtitle_v_rel" ].

surgery_n := n_mass_count_le &
  [ STEM < "surgery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surgery_rel" ].

swimmer_n1 := n_intr_le &
  [ STEM < "swimmer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swimmer_rel" ].

tack_n1 := n_intr_le &
  [ STEM < "tack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tack_n_rel" ].

tan_n1 := n_intr_le &
  [ STEM < "tan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tan_n_rel" ].

tooth_n1 := n_intr_le &
  [ STEM < "tooth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tooth_rel" ].

thong_n1 := n_intr_le &
  [ STEM < "thong" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thong_rel" ].

tighter := adj_comp_le &
  [ STEM < "tighter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tight_rel" ].

tightest := adj_superl_le &
  [ STEM < "tightest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tight_rel" ].

tightest_prd := adj_superl_prd_le &
  [ STEM < "the", "tightest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tight_rel" ].

tissue_n1 := n_intr_le &
  [ STEM < "tissue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tissue_rel" ].

toot_n1 := n_ppof_le &
  [ STEM < "toot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toot_n_rel" ].

tournament_n1 := n_ppof_le &
  [ STEM < "tournament" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tournament_rel" ].

toy_n1 := n_intr_le &
  [ STEM < "toy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toy_n_rel" ].

treatment_n1 := n_mass_count_ppof_le &
  [ STEM < "treatment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_treatment_rel" ].

unshaven_a1 := adj_intrans_le &
  [ STEM < "unshaven" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unshaven_rel" ].

unusually_deg := adv_degree_spec_v_le &
  [ STEM < "unusually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unusually_deg_rel" ].

voucher_n1 := n_intr_le &
  [ STEM < "voucher" >,
    SYNSEM.LKEYS.KEYREL.PRED "_voucher_rel" ].

war_n := n_mass_count_le &
  [ STEM < "war" >,
    SYNSEM.LKEYS.KEYREL.PRED "_war_n_rel" ].

whip_v1 := v_np_trans_le &
  [ STEM < "whip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whip_v_rel" ].

whoa_root_pre := adv_disc_preh_le &
  [ STEM < "whoa" >,
    SYNSEM.LKEYS.KEYREL.CARG "whoa" ].

whoa_root_post := adv_disc_posth_le &
  [ STEM < "whoa" >,
    SYNSEM.LKEYS.KEYREL.CARG "whoa" ].

perspective_n1 := n_intr_le &
  [ STEM < "perspective" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perspective_rel" ].

fathers_day := n_holiday_le &
  [ STEM < "father", "s", "day" >,
    SYNSEM.LKEYS.KEYREL.CARG "fathers_day" ].

Jal_n1 := n_proper_le &
  [ STEM < "jal" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jal" ].

Kansai_n1 := n_proper_le &
  [ STEM < "kansai" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kansai" ].

air_v1 := v_np_trans_le &
  [ STEM < "air" >,
    SYNSEM.LKEYS.KEYREL.PRED "_air_v_rel" ].

alcohol_n1 := n_intr_le &
  [ STEM < "alcohol" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alcohol_rel" ].

all_the_way := adv_int_vp_le &
  [ STEM < "all", "the", "way" >,
    SYNSEM.LKEYS.KEYREL.PRED "_all_the_way_scop_rel" ].

annoyed_a1 := adj_intrans_le &
  [ STEM < "annoyed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annoyed_rel" ].

arm_n1 := n_intr_le &
  [ STEM < "arm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arm_rel" ].

ashamed_a1 := adj_intrans_le &
  [ STEM < "ashamed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ashamed_rel" ].

attract_v1 := v_np_trans_le &
  [ STEM < "attract" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attract_rel" ].

auction_v1 := v_np_trans_le &
  [ STEM < "auction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_auction_v_rel" ].

bash_v1 := v_np_trans_le &
  [ STEM < "bash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bash_rel" ].

bearable_a1 := adj_intrans_le &
  [ STEM < "bearable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bearable_rel" ].

belch_v1 := v_unerg_le &
  [ STEM < "belch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_belch_rel" ].

bloom_v1 := v_unerg_le &
  [ STEM < "bloom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bloom_rel" ].

blow_up_v1 := v_particle_np_le &
  [ STEM < "blow" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_blow_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

bridge_n1 := n_intr_le &
  [ STEM < "bridge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bridge_rel" ].

bridge_v1 := v_np_trans_le &
  [ STEM < "bridge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bridge_v_rel" ].

briefing_n1 := n_ppof_le &
  [ STEM < "briefing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_briefing_rel" ].

campsite_n1 := n_intr_le &
  [ STEM < "campsite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_campsite_rel" ].

chaotic_a1 := adj_intrans_le &
  [ STEM < "chaotic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chaotic_rel" ].

chat_v1 := v_empty_prep_intrans_le &
  [ STEM < "chat" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_chat_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

chat_v2 := v_unerg_le &
  [ STEM < "chat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chat_about_rel" ].

circumscribe_v13 := v_np_trans_le &
  [ STEM < "circumscribe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circumscribe_rel" ].

cocktail_n1 := n_intr_le &
  [ STEM < "cocktail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cocktail_rel" ].

commercial_a1 := adj_intrans_le &
  [ STEM < "commercial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_commercial_rel" ].

compensate_v13 := v_np_trans_le &
  [ STEM < "compensate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compensate_rel" ].

confirmed_a1 := adj_intrans_le &
  [ STEM < "confirmed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confirmed_rel" ].

crack_up_v2 := v_particle_le &
  [ STEM < "crack" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_crack_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

crafty_a1 := adj_intrans_le &
  [ STEM < "crafty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crafty_rel" ].

creeps_n1 := n_plur_le &
  [ STEM < "creeps" >,
    SYNSEM.LKEYS.KEYREL.PRED "_creeps_rel" ].

criterion_n1 := n_intr_le &
  [ STEM < "criterion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_criterion_rel" ].

dangerous_a1 := adj_intrans_le &
  [ STEM < "dangerous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dangerous_rel" ].

decorate_v1 := v_np*_trans_le &
  [ STEM < "decorate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_decorate_rel" ].

deduct_v1 := v_np_trans_le &
  [ STEM < "deduct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deduct_rel" ].

demanding_a1 := adj_intrans_le &
  [ STEM < "demanding" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demanding_rel" ].

direct_v1 := v_np_trans_le &
  [ STEM < "direct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_direct_v_rel" ].

discriminate_v1 := v_np*_trans_le &
  [ STEM < "discriminate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discriminate_rel" ].

dither_v1 := v_unerg_le &
  [ STEM < "dither" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dither_rel" ].

dramatic_a1 := adj_intrans_le &
  [ STEM < "dramatic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dramatic_rel" ].

economic_a1 := adj_intrans_le &
  [ STEM < "economic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_economic_rel" ].

elitist_a1 := adj_intrans_le &
  [ STEM < "elitist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elitist_rel" ].

enclose_v1 := v_np_trans_le &
  [ STEM < "enclose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enclose_rel" ].

endlessly := adv_vp_le &
  [ STEM < "endlessly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_endlessly_rel" ].

envious_a1 := adj_intrans_le &
  [ STEM < "envious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_envious_rel" ].

expenditure_n1 := n_ppof_le &
  [ STEM < "expenditure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expenditure_rel" ].

fancy_a1 := adj_intrans_le &
  [ STEM < "fancy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fancy_rel" ].

fee_n1 := n_intr_le &
  [ STEM < "fee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fee_rel" ].

fog_n := n_mass_le &
  [ STEM < "fog" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fog_rel" ].

foresight_n := n_mass_le &
  [ STEM < "foresight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foresight_rel" ].

freshen_up_v1 := v_particle_le &
  [ STEM < "freshen" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_freshen_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

fulfill_v1 := v_np_trans_le &
  [ STEM < "fulfill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fulfil_rel" ].

gas_n := n_mass_count_le &
  [ STEM < "gas" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gas_rel" ].

gateway_n1 := n_intr_le &
  [ STEM < "gateway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gateway_rel" ].

gene_n1 := n_intr_le &
  [ STEM < "gene" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gene_rel" ].

get_along_v1 := v_particle_le &
  [ STEM < "get" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_get_along_rel",
             LKEYS.--COMPKEY _along_p_sel_rel ] ].

grade_v1 := v_np_trans_le &
  [ STEM < "grade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grade_rel" ].

habit_n1 := n_ppof_le &
  [ STEM < "habit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_habit_rel" ].

homeland_n1 := n_intr_le &
  [ STEM < "homeland" >,
    SYNSEM.LKEYS.KEYREL.PRED "_homeland_rel" ].

horror_n1 := n_ppof_le &
  [ STEM < "horror" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horror_rel" ].

hostel_n1 := n_intr_le &
  [ STEM < "hostel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hostel_rel" ].

humane_a1 := adj_intrans_le &
  [ STEM < "humane" >,
    SYNSEM.LKEYS.KEYREL.PRED "_humane_rel" ].

illness_n := n_mass_count_le &
  [ STEM < "illness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_illness_rel" ].

info_n1 := n_mass_ppcomp_le &
  [ STEM < "info" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_info_rel",
             LKEYS.--COMPKEY _on_p_rel ] ].

inspired_a1 := adj_intrans_le &
  [ STEM < "inspired" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inspired_rel" ].

interestingly := adv_int_vp_le &
  [ STEM < "interestingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interestingly_rel" ].

internet_n1 := n_intr_le &
  [ STEM < "internet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_internet_rel" ].

intersection_n1 := n_intr_le &
  [ STEM < "intersection" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intersection_rel" ].

intoxication_n1 := n_mass_le &
  [ STEM < "intoxication" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intoxication_rel" ].

lesson_n1 := n_intr_le &
  [ STEM < "lesson" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lesson_rel" ].

limp_v1 := v_unerg_le &
  [ STEM < "limp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_limp_v_rel" ].

link_v1 := v_np_trans_le &
  [ STEM < "link" >,
    SYNSEM.LKEYS.KEYREL.PRED "_link_v_rel" ].

link_v2 := v_np_prep_trans_le &
  [ STEM < "link" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_link_v_rel",
             LKEYS.--OCOMPKEY _to_p_rel ] ].

lodge_n1 := n_intr_le &
  [ STEM < "lodge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lodge_rel" ].

madness_n := n_mass_le &
  [ STEM < "madness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_madness_rel" ].

marry_v1 := v_np*_trans_le &
  [ STEM < "marry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_marry_rel" ].

meaning_n1 := n_mass_count_le &
  [ STEM < "meaning" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meaning_rel" ].

meat_n1 := n_mass_count_le &
  [ STEM < "meat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meat_rel" ].

negotiation_n1 := n_ppof_le &
  [ STEM < "negotiation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negotiation_rel" ].

nominate_v1 := v_np_trans_le &
  [ STEM < "nominate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nominate_rel" ].

north_german_a1 := adj_intrans_le &
  [ STEM < "north", "german" >,
    SYNSEM.LKEYS.KEYREL.PRED "_north_german_rel" ].

nose_n1 := n_ppof_le &
  [ STEM < "nose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nose_rel" ].

notorious_a1 := adj_intrans_le &
  [ STEM < "notorious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notorious_rel" ].

open_air_a1 := adj_intrans_le &
  [ STEM < "open", "air" >,
    SYNSEM.LKEYS.KEYREL.PRED "_open_air_rel" ].

operetta_n1 := n_ppof_le &
  [ STEM < "operetta" >,
    SYNSEM.LKEYS.KEYREL.PRED "_operetta_rel" ].

orchestra_n1 := n_ppof_le &
  [ STEM < "orchestra" >,
    SYNSEM.LKEYS.KEYREL.PRED "_orchestra_rel" ].

overtired_a1 := adj_intrans_le &
  [ STEM < "overtired" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overtired_rel" ].

pant_v1 := v_unerg_le &
  [ STEM < "pant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pant_rel" ].

passe_a1 := adj_intrans_le &
  [ STEM < "passe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_passe_rel" ].

passionate_a1 := adj_intrans_le &
  [ STEM < "passionate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_passionate_rel" ].

peace_n1 := n_mass_le &
  [ STEM < "peace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peace_rel" ].

philharmonic_n1 := n_ppof_le &
  [ STEM < "philharmonic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_philharmonic_rel" ].

pile_n1 := n_ppof_le &
  [ STEM < "pile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pile_rel" ].

pinch_v1 := v_np_trans_le &
  [ STEM < "pinch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pinch_rel" ].

pipe_n1 := n_intr_le &
  [ STEM < "pipe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pipe_rel" ].

piste_n1 := n_intr_le &
  [ STEM < "piste" >,
    SYNSEM.LKEYS.KEYREL.PRED "_piste_rel" ].

rail_n1 := n_intr_le &
  [ STEM < "rail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rail_rel" ].

rank_n1 := n_mass_count_le &
  [ STEM < "rank" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rank_rel" ].

recipe_n1 := n_ppof_le &
  [ STEM < "recipe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recipe_rel" ].

reconstruct_v1 := v_np_trans_le &
  [ STEM < "reconstruct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reconstruct_rel" ].

reconstruction_n1 := n_ppof_le &
  [ STEM < "reconstruction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reconstruction_rel" ].

reimburse_v1 := v_empty_prep*_trans_le &
  [ STEM < "reimburse" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reimburse_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

relate_v1 := v_empty_prep_trans_le &
  [ STEM < "relate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_relate_to_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

renovation_n1 := n_ppof_le &
  [ STEM < "renovation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_renovation_rel" ].

repair_v1 := v_np_trans_le &
  [ STEM < "repair" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repair_v_rel" ].

reside_v1 := v_unerg_le &
  [ STEM < "reside" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reside_rel" ].

roller_skate_n1 := n_intr_le &
  [ STEM < "roller", "skate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roller_skate_rel" ].

rope_n1 := n_mass_count_le &
  [ STEM < "rope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rope_rel" ].

rouse_v1 := v_np_trans_le &
  [ STEM < "rouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rouse_rel" ].

seater_n1 := n_intr_le &
  [ STEM < "seater" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seater_rel" ].

secret_a1 := adj_intrans_le &
  [ STEM < "secret" >,
    SYNSEM.LKEYS.KEYREL.PRED "_secret_rel" ].

sect_n1 := n_intr_le &
  [ STEM < "sect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sect_rel" ].

sentence_n1 := n_intr_le &
  [ STEM < "sentence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sentence_rel" ].

separation_n1 := n_mass_count_le &
  [ STEM < "separation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_separation_rel" ].

sherry_n1 := n_mass_count_le &
  [ STEM < "sherry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sherry_rel" ].

shortage_n1 := n_ppof_le &
  [ STEM < "shortage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shortage_rel" ].

shut_down_v1 := v_particle_np_le &
  [ STEM < "shut" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_shut_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

sign_v1 := v_np*_trans_le &
  [ STEM < "sign" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sign_v_rel" ].

snore_v1 := v_unerg_le &
  [ STEM < "snore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_snore_rel" ].

snow_n1 := n_mass_count_le &
  [ STEM < "snow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_snow_n_rel" ].

song_n1 := n_ppof_le &
  [ STEM < "song" >,
    SYNSEM.LKEYS.KEYREL.PRED "_song_rel" ].

speed_v1 := v_unerg_le &
  [ STEM < "speed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_speed_v_rel" ].

speed_up_v1 := v_particle_np_le &
  [ STEM < "speed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_speed_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

speed_up_v2 := v_particle_le &
  [ STEM < "speed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_speed_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

stamp_on_v1 := v_particle_np_le &
  [ STEM < "stamp" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_stamp_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

stopover_n1 := n_intr_le &
  [ STEM < "stopover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stopover_rel" ].

stronghold_n1 := n_intr_le &
  [ STEM < "stronghold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stronghold_rel" ].

stubborn_a1 := adj_intrans_le &
  [ STEM < "stubborn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stubborn_rel" ].

stuff_v1 := v_np_trans_le &
  [ STEM < "stuff" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stuff_v_rel" ].

subarea_n1 := n_ppof_le &
  [ STEM < "subarea" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subarea_rel" ].

subscription_n1 := n_ppcomp_le &
  [ STEM < "subscription" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_subscription_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

suburban_a1 := adj_intrans_le &
  [ STEM < "suburban" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suburbian_rel" ].

suitcase_n1 := n_ppof_le &
  [ STEM < "suitcase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suitcase_rel" ].

sunbeam_n1 := n_intr_le &
  [ STEM < "sunbeam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunbeam_rel" ].

surname_n1 := n_intr_le &
  [ STEM < "surname" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surname_rel" ].

survive_v1 := v_np_trans_le &
  [ STEM < "survive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_survive_rel" ].

sweat_v1 := v_unerg_le &
  [ STEM < "sweat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sweat_rel" ].

sweat_out_v1 := v_particle_np_le &
  [ STEM < "sweat" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sweat_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

taboo_n1 := n_intr_le &
  [ STEM < "taboo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taboo_rel" ].

talk_into_v1 := v_empty_prep_intrans_le &
  [ STEM < "talk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_talk_v_rel",
             LKEYS.--COMPKEY _into_p_sel_rel ] ].

tear_open_v1 := v_particle_np_le &
  [ STEM < "tear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tear_open_rel",
             LKEYS.--COMPKEY _open_j_sel_rel ] ].

tearjerker_n1 := n_intr_le &
  [ STEM < "tearjerker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tearjerker_rel" ].

tent_n1 := n_ppof_le &
  [ STEM < "tent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tent_rel" ].

theatrical_a1 := adj_intrans_le &
  [ STEM < "theatrical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_theatrical_rel" ].

transport_n1 := n_mass_le &
  [ STEM < "transport" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transport_rel" ].

traveller_n1 := n_intr_le &
  [ STEM < "traveller" >,
    SYNSEM.LKEYS.KEYREL.PRED "_traveller_rel" ].

turbulence_n1 := n_mass_le &
  [ STEM < "turbulence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_turbulence_rel" ].

twiddle_v1 := v_np_trans_le &
  [ STEM < "twiddle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_twiddle_rel" ].

unconscious_a1 := adj_intrans_le &
  [ STEM < "unconscious" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unconscious_rel" ].

unique_a1 := adj_intrans_le &
  [ STEM < "unique" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unique_rel" ].

used_a1 := adj_trans_oblig_le &
  [ STEM < "used" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_used_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

used_a2 := adj_intrans_le &
  [ STEM < "used" >,
    SYNSEM.LKEYS.KEYREL.PRED "_used_adj_rel" ].

warm-up_n1 := n_intr_le &
  [ STEM < "warm", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_up_rel" ].

weakness_n1 := n_mass_count_le &
  [ STEM < "weakness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weakness_rel" ].

web_n1 := n_ppof_le &
  [ STEM < "web" >,
    SYNSEM.LKEYS.KEYREL.PRED "_web_rel" ].

will_n1 := n_intr_le &
  [ STEM < "will" >,
    SYNSEM.LKEYS.KEYREL.PRED "_will_rel" ].

wind_n1 := n_mass_count_ppof_le &
  [ STEM < "wind" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wind_n_rel" ].

woody_a1 := adj_intrans_le &
  [ STEM < "woody" >,
    SYNSEM.LKEYS.KEYREL.PRED "_woody_rel" ].

wrecked_a1 := adj_intrans_le &
  [ STEM < "wrecked" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wrecked_rel" ].

yellow_a1 := adj_intrans_le &
  [ STEM < "yellow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yellow_rel" ].

attach_v1 := v_empty_prep_trans_le &
  [ STEM < "attach" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_attach_to_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

aversion_n1 := n_ppcomp_le &
  [ STEM < "aversion" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_aversion_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

habitually := adv_int_vp_le &
  [ STEM < "habitually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_habitually_rel" ].

slip_v1 := v_unerg_le &
  [ STEM < "slip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slip_v_rel" ].

lunch_time_n2 := n_mealtime_le &
  [ STEM < "lunchtime" >,
    SYNSEM.LKEYS.KEYREL.PRED _lunchtime_rel ].

out_a1 := adj_intrans_le &
  [ STEM < "out" >,
    SYNSEM.LKEYS.KEYREL.PRED "_out_adj_rel" ].

british_a1 := adj_intrans_le &
  [ STEM < "british" >,
    SYNSEM.LKEYS.KEYREL.PRED "_british_isect_rel" ].

verbmobil := n_proper_le &
  [ STEM < "verbmobil" >,
    SYNSEM.LKEYS.KEYREL.CARG "verbmobil" ].

accident_n1 := n_intr_le &
  [ STEM < "accident" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accident_rel" ].

acclimatize_v1 := v_np_trans_le &
  [ STEM < "acclimatize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acclimatize_rel" ].

acknowledgement_n1 := n_ppof_le &
  [ STEM < "acknowledgement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acknowledgement_rel" ].

acquainted_a1 := adj_intrans_le &
  [ STEM < "acquainted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acquainted_rel" ].

action_n1 := n_ppof_le &
  [ STEM < "action" >,
    SYNSEM.LKEYS.KEYREL.PRED "_action_rel" ].

addict_n1 := n_intr_le &
  [ STEM < "addict" >,
    SYNSEM.LKEYS.KEYREL.PRED "_addict_rel" ].

ailment_n1 := n_intr_le &
  [ STEM < "ailment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ailment_rel" ].

anthropology_n1 := n_intr_le &
  [ STEM < "anthropology" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anthropology_rel" ].

appetite_n1 := n_intr_le &
  [ STEM < "appetite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appetite_rel" ].

apprentice_n1 := n_intr_le &
  [ STEM < "apprentice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apprentice_rel" ].

bathroom_n1 := n_intr_le &
  [ STEM < "bathroom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bathroom_rel" ].

bestseller_n1 := n_intr_le &
  [ STEM < "bestseller" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bestseller_rel" ].

bidder_n1 := n_intr_le &
  [ STEM < "bidder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bidder_rel" ].

booklet_n1 := n_ppof_le &
  [ STEM < "booklet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_booklet_rel" ].

button_n1 := n_intr_le &
  [ STEM < "button" >,
    SYNSEM.LKEYS.KEYREL.PRED "_button_rel" ].

candidate_n1 := n_intr_le &
  [ STEM < "candidate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_candidate_rel" ].

catalogue_n1 := n_ppof_le &
  [ STEM < "catalogue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_catalogue_rel" ].

cent_n1 := n_intr_le &
  [ STEM < "cent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cent_rel" ].

chairman_n1 := n_ppof_le &
  [ STEM < "chairman" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chairman_rel" ].

chemistry_n1 := n_ppof_le &
  [ STEM < "chemistry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chemistry_rel" ].

cigarette_n1 := n_intr_le &
  [ STEM < "cigarette" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cigarette_n_rel" ].

clarinet_n1 := n_intr_le &
  [ STEM < "clarinet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clarinet_rel" ].

classic_n1 := n_intr_le &
  [ STEM < "classic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_classic_rel" ].

cognac_n1 := n_mass_count_le &
  [ STEM < "cognac" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cognac_rel" ].

column_n1 := n_ppof_le &
  [ STEM < "column" >,
    SYNSEM.LKEYS.KEYREL.PRED "_column_rel" ].

commencement_n1 := n_ppof_le &
  [ STEM < "commencement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_commencement_rel" ].

commuter_n1 := n_intr_le &
  [ STEM < "commuter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_commuter_rel" ].

companion_n1 := n_intr_le &
  [ STEM < "companion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_companion_rel" ].

completion_n1 := n_ppof_le &
  [ STEM < "completion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_completion_rel" ].

confidence_n1 := n_mass_count_le &
  [ STEM < "confidence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confidence_rel" ].

consultancy_n1 := n_intr_le &
  [ STEM < "consultancy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consultancy_rel" ].

controller_n1 := n_ppof_le &
  [ STEM < "controller" >,
    SYNSEM.LKEYS.KEYREL.PRED "_controller_rel" ].

convertible_n1 := n_intr_le &
  [ STEM < "convertible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convertible_rel" ].

counteroffer_n1 := n_intr_le &
  [ STEM < "counteroffer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counteroffer_rel" ].

cousin_n1 := n_ppof_le &
  [ STEM < "cousin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cousin_rel" ].

disco_n1 := n_intr_le &
  [ STEM < "disco" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disco_rel" ].

dream_n1 := n_intr_le &
  [ STEM < "dream" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dream_n_rel" ].

dream_v1 := v_unerg_le &
  [ STEM < "dream" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dream_v_rel" ].

espresso_n1 := n_intr_le &
  [ STEM < "espresso" >,
    SYNSEM.LKEYS.KEYREL.PRED "_espresso_rel" ].

exposition_n1 := n_ppof_le &
  [ STEM < "exposition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exposition_rel" ].

fan_n1 := n_ppof_le &
  [ STEM < "fan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fan_rel" ].

fatigue_n1 :=  n_mass_le &
  [ STEM < "fatigue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fatigue_rel" ].

fireworks_n1 := n_plur_le &
  [ STEM < "fireworks" >,
    SYNSEM.LKEYS.KEYREL.PRED "_firework_rel" ].

formula_n1 := n_intr_le &
  [ STEM < "formula" >,
    SYNSEM.LKEYS.KEYREL.PRED "_formula_rel" ].

freak_n1 := n_intr_le &
  [ STEM < "freak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_freak_rel" ].

frequency_n1 := n_ppof_le &
  [ STEM < "frequency" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frequency_rel" ].

girl_n1 := n_intr_le &
  [ STEM < "girl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_girl_rel" ].

guidebook_n1 := n_ppof_le &
  [ STEM < "guidebook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guidebook_rel" ].

headquarters_n1 := n_ppof_le &
  [ STEM < "headquarters" >,
    SYNSEM.LKEYS.KEYREL.PRED "_headquarters_rel" ].

helicopter_n1 := n_ppof_le &
  [ STEM < "helicopter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_helicopter_rel" ].

household_n1 := n_ppof_le &
  [ STEM < "household" >,
    SYNSEM.LKEYS.KEYREL.PRED "_household_rel" ].

hydrobiology_n1 := n_mass_le &
  [ STEM < "hydrobiology" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hydrobiology_rel" ].

idiot_n1 := n_intr_le &
  [ STEM < "idiot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_idiot_rel" ].

ignoramus_n1 := n_intr_le &
  [ STEM < "ignoramus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ignoramus_rel" ].

impoliteness_n1 := n_intr_le &
  [ STEM < "impoliteness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impoliteness_rel" ].

improvement_n1 := n_intr_le &
  [ STEM < "improvement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_improvement_rel" ].

incompatibility_n1 := n_ppof_le &
  [ STEM < "incompatibility" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incompatibility_rel" ].

instinct_n1 := n_ppof_le &
  [ STEM < "instinct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instinct_rel" ].

itinerary_n1 := n_intr_le &
  [ STEM < "itinerary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_itinerary_rel" ].

law_n1 := n_ppof_le &
  [ STEM < "law" >,
    SYNSEM.LKEYS.KEYREL.PRED "_law_rel" ].

leniency_n1 := n_mass_le &
  [ STEM < "leniency" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leniency_rel" ].

locomotive_n1 := n_intr_le &
  [ STEM < "locomotive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_locomotive_rel" ].

lotto_n1 := n_intr_le &
  [ STEM < "lotto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lotto_rel" ].

mass_n1 := n_ppof_le &
  [ STEM < "mass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mass_rel" ].

oath_n1 := n_ppof_le &
  [ STEM < "oath" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oath_rel" ].

panic_n1 := n_mass_le &
  [ STEM < "panic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_panic_rel" ].

penny_n1 := n_intr_le &
  [ STEM < "penny" >,
    SYNSEM.LKEYS.KEYREL.PRED "_penny_rel" ].

poet_n1 := n_intr_le &
  [ STEM < "poet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_poet_rel" ].

possession_n1 := n_ppof_le &
  [ STEM < "possession" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possession_rel" ].

poverty_n1 := n_mass_le &
  [ STEM < "poverty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_poverty_rel" ].

rack_n1 := n_ppof_le &
  [ STEM < "rack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rack_rel" ].

radio_n1 := n_intr_le &
  [ STEM < "radio" >,
    SYNSEM.LKEYS.KEYREL.PRED "_radio_n_rel" ].

registration_n1 := n_ppof_le &
  [ STEM < "registration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_registration_rel" ].

reunion_n1 := n_ppof_le &
  [ STEM < "reunion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reunion_rel" ].

riser_n1 := n_intr_le &
  [ STEM < "riser" >,
    SYNSEM.LKEYS.KEYREL.PRED "_riser_rel" ].

roster_n1 := n_ppof_le &
  [ STEM < "roster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roster_rel" ].

rota_n1 := n_intr_le &
  [ STEM < "rota" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rota_rel" ].

rotation_n1 := n_ppof_le &
  [ STEM < "rotation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rotation_rel" ].

shipment_n1 := n_mass_count_ppof_le &
  [ STEM < "shipment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shipment_rel" ].

shipment_n2 := n_mass_count_ppto_le &
  [ STEM < "shipment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shipment_rel" ].

shock_n1 := n_ppof_le &
  [ STEM < "shock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shock_n_rel" ].

snob_n1 := n_intr_le &
  [ STEM < "snob" >,
    SYNSEM.LKEYS.KEYREL.PRED "_snob_rel" ].

subdivision_n1 := n_ppof_le &
  [ STEM < "subdivision" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subdivision_rel" ].

synthesis_n1 := n_ppof_le &
  [ STEM < "synthesis" >,
    SYNSEM.LKEYS.KEYREL.PRED "_synthesis_rel" ].

telesales_n1 := n_plur_le &
  [ STEM < "telesales" >,
    SYNSEM.LKEYS.KEYREL.PRED "_telesales_rel" ].

terminal_n1 := n_intr_le &
  [ STEM < "terminal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_terminal_rel" ].

thumb_n1 := n_intr_le &
  [ STEM < "thumb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thumb_rel" ].

travelogue_n1 := n_intr_le &
  [ STEM < "travelogue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travelogue_rel" ].

trial_n1 := n_intr_le &
  [ STEM < "trial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trial_rel" ].

triple_n1 := n_ppof_le &
  [ STEM < "triple" >,
    SYNSEM.LKEYS.KEYREL.PRED "_triple_rel" ].

virus_n1 := n_intr_le &
  [ STEM < "virus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_virus_rel" ].

wave_n1 := n_ppof_le &
  [ STEM < "wave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wave_rel" ].

whisper_n1 := n_intr_le &
  [ STEM < "whisper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whisper_n_rel" ].

wing_n1 := n_ppof_le &
  [ STEM < "wing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wing_rel" ].

yawn_n1 := n_intr_le &
  [ STEM < "yawn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yawn_rel" ].

yen_n1 := n_mass_count_le &
  [ STEM < "yen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yen_rel" ].

yen_n2 := n_plur_le &
  [ STEM < "yen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yen_rel" ].

arranging_n1 := n_intr_le &
  [ STEM < "arranging" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arranging_rel" ].

driving_n1 := n_intr_le &
  [ STEM < "driving" >,
    SYNSEM.LKEYS.KEYREL.PRED "_driving_rel" ].

fixing_n1 := n_intr_le &
  [ STEM < "fixing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fixing_rel" ].

hearing_n1 := n_intr_le &
  [ STEM < "hearing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hearing_rel" ].

making_n1 := n_intr_le &
  [ STEM < "making" >,
    SYNSEM.LKEYS.KEYREL.PRED "_making_rel" ].

outing_n1 := n_intr_le &
  [ STEM < "outing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outing_rel" ].

midsummer_n1 := n_intr_le &
  [ STEM < "midsummer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_midsummer_rel" ].

superstition_n1 := n_intr_le &
  [ STEM < "superstition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_superstition_rel" ].

slash_n1 := n_intr_le &
  [ STEM < "slash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slash_n_rel" ].

concert-goer_n1 := n_intr_le &
  [ STEM < "concert", "goer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concertgoer_rel" ].

concert-goer_n2 := n_intr_le &
  [ STEM < "concertgoer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concertgoer_rel" ].

happening_artist_n1 := n_intr_le &
  [ STEM < "happening", "artist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_happening_artist_rel" ].

ad_hoc_a1 := adj_intrans_le &
  [ STEM < "ad", "hoc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ad_hoc_rel" ].

adjacent_a1 := adj_intrans_le &
  [ STEM < "adjacent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adjacent_rel" ].

advantageous_a1 := adj_intrans_le &
  [ STEM < "advantageous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advantageous_rel" ].

allergic_a1 := adj_intrans_le &
  [ STEM < "allergic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allergic_rel" ].

arduous_a1 := adj_intrans_le &
  [ STEM < "arduous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arduous_rel" ].

averse_a1 := adj_intrans_le &
  [ STEM < "averse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_averse_rel" ].

binary_a1 := adj_intrans_le &
  [ STEM < "binary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_binary_rel" ].

bleary_eyed_a1 := adj_intrans_le &
  [ STEM < "bleary", "eyed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bleary_eyed_rel" ].

christmassy_a1 := adj_intrans_le &
  [ STEM < "christmassy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_christmassy_rel" ].

chronological_a1 := adj_intrans_le &
  [ STEM < "chronological" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chronological_rel" ].

clueless_a1 := adj_intrans_le &
  [ STEM < "clueless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clueless_rel" ].

communicative_a1 := adj_intrans_le &
  [ STEM < "communicative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_communicative_rel" ].

conclusive_a1 := adj_intrans_le &
  [ STEM < "conclusive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_conclusive_rel" ].

confined_a1 := adj_intrans_le &
  [ STEM < "confined" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confined_rel" ].

congruent_a1 := adj_intrans_le &
  [ STEM < "congruent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_congruent_rel" ].

convivial_a1 := adj_intrans_le &
  [ STEM < "convivial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_convivial_rel" ].

cramped_a1 := adj_intrans_le &
  [ STEM < "cramped" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cramped_rel" ].

darned_a1 := adj_intrans_le &
  [ STEM < "darned" >,
    SYNSEM.LKEYS.KEYREL.PRED "_darned_rel" ].

diverse_a1 := adj_intrans_le &
  [ STEM < "diverse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_diverse_rel" ].

dizzy_a1 := adj_intrans_le &
  [ STEM < "dizzy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dizzy_rel" ].

eastern_a1 := adj_intrans_le &
  [ STEM < "eastern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eastern_rel" ].

eco_friendly_a1 := adj_intrans_le &
  [ STEM < "eco", "friendly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eco_friendly_rel" ].

germany_internal_a1 := adj_intrans_le &
  [ STEM < "germany", "internal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_germany_internal_rel" ].

habitual_a1 := adj_intrans_le &
  [ STEM < "habitual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_habitual_rel" ].

hairy_a1 := adj_intrans_le &
  [ STEM < "hairy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hairy_rel" ].

hidden_a1 := adj_intrans_le &
  [ STEM < "hidden" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hidden_rel" ].

homebound_a1 := adj_intrans_le &
  [ STEM < "homebound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_homebound_rel" ].

humanitarian_a1 := adj_intrans_le &
  [ STEM < "humanitarian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_humanitarian_rel" ].

hydrophobic_a1 := adj_intrans_le &
  [ STEM < "hydrophobic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hydrophobic_rel" ].

indiscreet_a1 := adj_intrans_le &
  [ STEM < "indiscreet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indiscreet_rel" ].

internal_a1 := adj_intrans_le &
  [ STEM < "internal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_internal_rel" ].

manageable_a1 := adj_intrans_le &
  [ STEM < "manageable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manageable_rel" ].

mobile_a1 := adj_intrans_le &
  [ STEM < "mobile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mobile_isect_rel" ].

moderate_a1 := adj_intrans_le &
  [ STEM < "moderate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moderate_adj_rel" ].

movable_a1 := adj_intrans_le &
  [ STEM < "movable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_movable_rel" ].

negotiatable_a1 := adj_intrans_le &
  [ STEM < "negotiatable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negotiable_rel" ].

negotiable_a1 := adj_intrans_le &
  [ STEM < "negotiable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_negotiable_rel" ].

numerous_a1 := adj_intrans_le &
  [ STEM < "numerous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_numerous_rel" ].

obsessed_a1 := adj_intrans_le &
  [ STEM < "obsessed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obsessed_rel" ].

operative_a1 := adj_intrans_le &
  [ STEM < "operative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_operative_rel" ].

passable_a1 := adj_intrans_le &
  [ STEM < "passable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_passable_rel" ].

peeved_a1 := adj_intrans_le &
  [ STEM < "peeved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peeved_rel" ].

performance_oriented_a1 := adj_intrans_le &
  [ STEM < "performance", "oriented" >,
    SYNSEM.LKEYS.KEYREL.PRED "_performance_oriented_rel" ].

photographic_a1 := adj_intrans_le &
  [ STEM < "photographic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_photographic_rel" ].

pliable_a1 := adj_intrans_le &
  [ STEM < "pliable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pliable_rel" ].

preventive_a1 := adj_intrans_le &
  [ STEM < "preventive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preventive_rel" ].

scientific_a1 := adj_intrans_le &
  [ STEM < "scientific" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scientific_rel" ].

second_mentioned_a1 := adj_intrans_le &
  [ STEM < "second", "mentioned" >,
    SYNSEM.LKEYS.KEYREL.PRED "_second_mentioned_rel" ].

sensitive_a1 := adj_trans_le &
  [ STEM < "sensitive" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sensitive_to_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

showy_a1 := adj_intrans_le &
  [ STEM < "showy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_showy_rel" ].

speechless_a1 := adj_intrans_le &
  [ STEM < "speechless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_speechless_rel" ].

stuffy_a1 := adj_intrans_le &
  [ STEM < "stuffy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stuffy_rel" ].

suburbian_a1 := adj_intrans_le &
  [ STEM < "suburbian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suburbian_isect_rel" ].

superficial_a1 := adj_intrans_le &
  [ STEM < "superficial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_superficial_rel" ].

thin_a1 := adj_intrans_le &
  [ STEM < "thin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thin_rel" ].

touristic_a1 := adj_intrans_le &
  [ STEM < "touristic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_touristic_rel" ].

treasured_a1 := adj_intrans_le &
  [ STEM < "treasured" >,
    SYNSEM.LKEYS.KEYREL.PRED "_treasured_rel" ].

tuckered_out_a1 := adj_intrans_le &
  [ STEM < "tuckered", "out" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tuckered_out_rel" ].

dining_a1 := adj_intrans_le &
  [ STEM < "dining" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dining_rel" ].

apropos_a1 := adj_intrans_le &
  [ STEM < "apropos" >,
    SYNSEM.LKEYS.KEYREL.PRED "_apropos_rel" ].

unchristian_a1 := adj_intrans_le &
  [ STEM < "unchristian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unchristian_rel" ].

unconcentrated_a1 := adj_intrans_le &
  [ STEM < "unconcentrated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unconcentrated_rel" ].

understandable_a1 := adj_intrans_le &
  [ STEM < "understandable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_understandable_rel" ].

unlimited_a1 := adj_intrans_le &
  [ STEM < "unlimited" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unlimited_rel" ].

violet_a1 := adj_intrans_le &
  [ STEM < "violet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_violet_rel" ].

worth := adj_irreg_np_trans_le &
  [ STEM < "worth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worth_rel" ].

back_out_of_v1 := v_particle_empty_pp_le &
  [ STEM < "back" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_back_out_rel",
             LKEYS [ --COMPKEY _out_p_sel_rel,
                     --OCOMPKEY _of_p_sel_rel ] ] ].

back_out_v1 := v_particle_le &
  [ STEM < "back" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_back_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

bring_down_v1 := v_particle_np_le &
  [ STEM < "bring" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bring_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

crisp_up_v1 := v_particle_np_le &
  [ STEM < "crisp" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_crisp_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

drag_out_v1 := v_particle_np_le &
  [ STEM < "drag" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_drag_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

fritter_away_v1 := v_particle_np_le &
  [ STEM < "fritter" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fritter_away_rel",
             LKEYS.--COMPKEY _away_p_sel_rel ] ].

hand_over_v1 := v_particle_np_le &
  [ STEM < "hand" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hand_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

iron_out_v1 := v_particle_np_le &
  [ STEM < "iron" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_iron_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

knock_out_v1 := v_particle_np_le &
  [ STEM < "knock" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_knock_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

rough_out_v1 := v_particle_np_le &
  [ STEM < "rough" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rough_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

round_off_v1 := v_particle_np_le &
  [ STEM < "round" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_round_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

run_around_v1 := v_particle_le &
  [ STEM < "run" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_run_around_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

rust_in_v1 := v_particle_le &
  [ STEM < "rust" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rust_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

tangle_up_v1 := v_particle_np_le &
  [ STEM < "tangle" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tangle_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

throw_in_v1 := v_particle_np_le &
  [ STEM < "throw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_throw_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

tick_off_v1 := v_particle_np_le &
  [ STEM < "tick" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tick_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

wear_out_v1 := v_particle_np_le &
  [ STEM < "wear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wear_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

adjourn_v1 := v_np_trans_le &
  [ STEM < "adjourn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adjourn_rel" ].

admire_v1 := v_np_trans_le &
  [ STEM < "admire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_admire_rel" ].

bewitch_v1 := v_np_trans_le &
  [ STEM < "bewitch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bewitch_rel" ].

brew_v1 := v_np_trans_le &
  [ STEM < "brew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brew_rel" ].

bridle_v1 := v_empty_prep_intrans_le &
  [ STEM < "bridle" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bridle_at_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

compress_v1 := v_np_trans_le &
  [ STEM < "compress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compress_rel" ].

contribute_v1 := v_np_trans_le &
  [ STEM < "contribute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contribute_rel" ].

deepen_v1 := v_np_trans_le &
  [ STEM < "deepen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deepen_rel" ].

delete_v1 := v_np_trans_le &
  [ STEM < "delete" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delete_rel" ].

delight_v1 := v_np_trans_le &
  [ STEM < "delight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delight_v_rel" ].

deliver_v1 := v_np*_trans_le &
  [ STEM < "deliver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deliver_v_rel" ].

deliver_v2 := v_empty_to_trans*_le &
  [ STEM < "deliver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deliver_v_rel" ].

disrupt_v1 := v_np_trans_le &
  [ STEM < "disrupt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disrupt_rel" ].

flabbergast_v1 := v_np_trans_le &
  [ STEM < "flabbergast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flabbergast_rel" ].

insert_v1 := v_np_trans_le &
  [ STEM < "insert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_insert_rel" ].

inspire_v1 := v_np_trans_le &
  [ STEM < "inspire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inspire_rel" ].

integrate_v1 := v_np_trans_le &
  [ STEM < "integrate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_integrate_rel" ].

remark_v1 := v_cp_prop*_non_trans_le &
  [ STEM < "remark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remark_v_rel" ].

scour_v1 := v_np_trans_le &
  [ STEM < "scour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scour_rel" ].

shock_v1 := v_np_trans_le &
  [ STEM < "shock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shock_v_rel" ].

squash_v1 := v_np_trans_le &
  [ STEM < "squash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_squash_rel" ].

steal_v1 := v_np_trans_le &
  [ STEM < "steal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_steal_rel" ].

survey_v1 := v_np_trans_le &
  [ STEM < "survey" >,
    SYNSEM.LKEYS.KEYREL.PRED "_survey_v_rel" ].

swallow_v1 := v_np*_trans_le &
  [ STEM < "swallow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swallow_v_rel" ].

tax_v1 := v_np_trans_le &
  [ STEM < "tax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tax_rel" ].

whisper_v1 := v_np_trans_le &
  [ STEM < "whisper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whisper_v_rel" ].

vary_v1 := v_np_trans_le &
  [ STEM < "vary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vary_cause_v_rel" ].

confer_v1 := v_unerg_le &
  [ STEM < "confer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confer_rel" ].

dive_v1 := v_unerg_le &
  [ STEM < "dive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dive_rel" ].

grumble_v1 := v_unerg_le &
  [ STEM < "grumble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grumble_rel" ].

jut_v1 := v_unerg_le &
  [ STEM < "jut" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jut_rel" ].

leap_v1 := v_np*_trans_le &
  [ STEM < "leap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leap_v_rel" ].

leap_over_v1 := v_empty_prep_intrans_le &
  [ STEM < "leap" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_leap_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

mature_v1 := v_unerg_le &
  [ STEM < "mature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mature_v_rel" ].

moan_v1 := v_unerg_le &
  [ STEM < "moan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moan_rel" ].

administratively_adv1 := adv_int_vp_post_le &
  [ STEM < "administratively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_administratively_rel" ].

admittedly_adv1 := adv_int_vp_post_le &
  [ STEM < "admittedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_admittedly_rel" ].

advantageously_adv1 := adv_int_vp_post_le &
  [ STEM < "advantageously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advantageously_rel" ].

deliciously_adv1 := adv_int_vp_post_le &
  [ STEM < "deliciously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deliciously_rel" ].

delightfully_adv1 := adv_int_vp_post_le &
  [ STEM < "delightfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delightfully_rel" ].

distinctly_adv1 := adv_int_vp_post_le &
  [ STEM < "distinctly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distinctly_rel" ].

famously_adv1 := adv_int_vp_post_le &
  [ STEM < "famously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_famously_rel" ].

indiscreetly_adv1 := adv_int_vp_post_le &
  [ STEM < "indiscreetly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indiscreetly_rel" ].

internally_adv1 := adv_int_vp_post_le &
  [ STEM < "internally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_internally_rel" ].

intolerably_adv1 := adv_int_vp_post_le &
  [ STEM < "intolerably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intolerably_rel" ].

manageably_adv1 := adv_int_vp_post_le &
  [ STEM < "manageably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manageably_rel" ].

pessimistically_adv1 := adv_int_vp_post_le &
  [ STEM < "pessimistically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pessimistically_rel" ].

receptively_adv1 := adv_int_vp_post_le &
  [ STEM < "receptively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_receptively_rel" ].

scientifically_adv1 := adv_int_vp_post_le &
  [ STEM < "scientifically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scientifically_rel" ].

sensitively_adv1 := adv_int_vp_post_le &
  [ STEM < "sensitively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sensitively_rel" ].

sonorously_adv1 := adv_int_vp_post_le &
  [ STEM < "sonorously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sonorously_rel" ].

subsequently_adv1 := adv_int_vp_post_le &
  [ STEM < "subsequently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subsequently_rel" ].

superficially_adv1 := adv_int_vp_post_le &
  [ STEM < "superficially" >,
    SYNSEM.LKEYS.KEYREL.PRED "_superficially_rel" ].

unbelievably_adv := adv_s_pre_le &
  [ STEM < "unbelievably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unbelievably_rel" ].

unbelievably_deg := adv_degree_spec_v_le &
  [ STEM < "unbelievably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unbelievably_deg_rel" ].

by_gum_root_pre := adv_disc_preh_le &
  [ STEM < "by", "gum" >,
    SYNSEM.LKEYS.KEYREL.CARG "by_gum" ].

by_gum_root_post := adv_disc_posth_le &
  [ STEM < "by", "gum" >,
    SYNSEM.LKEYS.KEYREL.CARG "by_gum" ].

sixtieth := adj_bare_unspecified_ord_two_le &
  [ STEM < "sixtieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "60" ].

seventieth := adj_bare_unspecified_ord_two_le &
  [ STEM < "seventieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "70" ].

ninetieth := adj_bare_unspecified_ord_two_le &
  [ STEM < "ninetieth" >,
    SYNSEM.LKEYS.KEYREL.CARG "90" ].

day_dream_v1 := v_unerg_le &
  [ STEM < "day", "dream" >,
    SYNSEM.LKEYS.KEYREL.PRED "_day_dream_rel" ].

day_dream_v2 := v_unerg_le &
  [ STEM < "day", "-", "dream" >,
    SYNSEM.LKEYS.KEYREL.PRED "_day_dream_rel" ].

double_check_v1 := v_unerg_le &
  [ STEM < "double", "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_double_check_v_rel" ].

double_check_v2 := v_np_trans_le &
  [ STEM < "double", "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_double_check_v_rel" ].

flip_flop_v1 := v_unerg_le &
  [ STEM < "flip", "flop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flip_flop_v_rel" ].

water_ski_v1 := v_unerg_le &
  [ STEM < "water", "ski" >,
    SYNSEM.LKEYS.KEYREL.PRED "_water_ski_v_rel" ].

twentyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "twentyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "20" ].

thirtyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "thirtyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "30" ].

fortyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "fortyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "40" ].

fiftyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "fiftyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "50" ].

sixtyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "sixtyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "60" ].

seventyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "seventyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "70" ].

eightyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "eightyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "80" ].

ninetyish_approx := adj_approx_bare_unspecified_card_le & 
  [  STEM < "ninetyish" >,
     SYNSEM.LKEYS.KEYREL.CARG "90" ].

had_better_aux := va_modal_pos_le & 
  [ STEM < "had", "better" >,
    SYNSEM.LKEYS.KEYREL.PRED _had_better_rel ].

had_better_cx := va_modal_pos_cx_le &
  [ STEM < "d", "better" >,
    SYNSEM.LKEYS.KEYREL.PRED _had_better_rel ].

had_better_cx_2 := va_modal_pos_cx_le &
  [ STEM < "'d", "better" >,
    SYNSEM.LKEYS.KEYREL.PRED _had_better_rel ].

better_aux := va_modal_pos_noninv_le & 
  [ STEM < "better" >,
    SYNSEM.LKEYS.KEYREL.PRED _had_better_rel ].

secondly_adv1 := adv_s_pre_le &
  [ STEM < "secondly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_secondly_rel" ].

thirdly_adv1 := adv_s_pre_le &
  [ STEM < "thirdly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thirdly_rel" ].

depending_a1 := adj_trans_le &
  [ STEM < "depending" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_depending_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

act_n1 := n_ppof_le &
  [ STEM < "act" >,
    SYNSEM.LKEYS.KEYREL.PRED "_act_n_rel" ].

along_a1 := adj_pred_intrans_le &
  [ STEM < "along" >,
    SYNSEM.LKEYS.KEYREL.PRED "_along_isect_rel" ].

care_about_v1 := v_empty_prep_intrans_le &
  [ STEM < "care" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_care_about_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

charm_v1 := v_np_trans_le &
  [ STEM < "charm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charm_v_rel" ].

chip_n1 := n_intr_le &
  [ STEM < "chip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chip_n_rel" ].

clear_v1 := v_np*_trans_le &
  [ STEM < "clear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clear_v_rel" ].

closely_deg := adv_degree_spec_v_le &
  [ STEM < "closely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_close_deg_rel" ].

content_v1 := v_empty_prep_trans_le &
  [ STEM < "content" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_content_refl_with_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

copy_n1 := n_ppof_le &
  [ STEM < "copy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_copy_n_rel" ].

drag_v1 := v_np_trans_le &
  [ STEM < "drag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drag_rel" ].

draw_v1 := v_np_trans_le &
  [ STEM < "draw" >,
    SYNSEM.LKEYS.KEYREL.PRED "_draw_v_rel" ].

east_a1 := adj_trans_le &
  [ STEM < "east" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_east_j_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

north_a1 := adj_trans_le &
  [ STEM < "north" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_north_j_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

south_a1 := adj_trans_le &
  [ STEM < "south" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_south_j_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

west_a1 := adj_trans_le &
  [ STEM < "west" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_west_j_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

exemplary_a1 := adj_intrans_le &
  [ STEM < "exemplary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exemplary_rel" ].

extra_n1 := n_intr_le &
  [ STEM < "extra" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extra_n_rel" ].

feel_like_v1 := v_prep_intrans_le &
  [ STEM < "feel" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_feel_like_rel",
             LKEYS.--COMPKEY _like_p_rel ] ].

frame_v1 := v_np_trans_le &
  [ STEM < "frame" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frame_v_rel" ].

gain_n1 := n_ppof_le &
  [ STEM < "gain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gain_n_rel" ].

guess_n1 := n_intr_le &
  [ STEM < "guess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guess_n_rel" ].

in_fact_adv1 := adv_vp_aux_le &
  [ STEM < "in", "fact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_fact_rel" ].

in_fact_adv2 := adv_s_le &
  [ STEM < "in", "fact" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_fact_rel" ].

inside_n1 := n_ppof_le &
  [ STEM < "inside" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inside_n_rel" ].

lag_behind_v2 := v_particle_le &
  [ STEM < "lag" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_lag_behind_rel",
             LKEYS.--COMPKEY _behind_p_sel_rel ] ].

mess_v1 := v_empty_prep_intrans_le &
  [ STEM < "mess" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mess_with_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

mobile_n1 := n_intr_le &
  [ STEM < "mobile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mobile_rel" ].

non_local_n1 := n_intr_le &
  [ STEM < "non", "local" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_local_n_rel" ].

number_v1 := v_np_trans_le &
  [ STEM < "number" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_v_rel" ].

overlap_n1 := n_ppof_le &
  [ STEM < "overlap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overlap_n_rel" ].

place_v1 := v_np_prep_trans_dors_le &
  [ STEM < "place" >,
    SYNSEM.LKEYS.KEYREL.PRED "_place_v_rel" ].

raise_n1 := n_ppof_le &
  [ STEM < "raise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_raise_n_rel" ].

roughly_adv1 := adv_int_vp_post_le &
  [ STEM < "roughly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roughly_adv_rel" ].

sail_n1 := n_intr_le &
  [ STEM < "sail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sail_n_rel" ].

same_n1 := n_intr_le &
  [ STEM < "same" >,
    SYNSEM.LKEYS.KEYREL.PRED "_same_n_rel" ].

ski_n1 := n_intr_le &
  [ STEM < "ski" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ski_n_rel" ].

snow_v1 := v_atrans_le &
  [ STEM < "snow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_snow_v_rel" ].

tackle_n1 := n_intr_le &
  [ STEM < "tackle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tackle_n_rel" ].

test_v1 := v_np_trans_le &
  [ STEM < "test" >,
    SYNSEM.LKEYS.KEYREL.PRED "_test_v_rel" ].

unusually_adv1 := adv_int_vp_post_le &
  [ STEM < "unusually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unusually_rel" ].

up_a1 := adj_intrans_le &
  [ STEM < "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_up_adj_rel" ].

wedge_v1 := v_np_trans_le &
  [ STEM < "wedge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wedge_v_rel" ].

pretty_much_deg := adv_degree_spec_v_le &
  [ STEM < "pretty", "much" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretty_much_deg_rel" ].

pretty_well_deg := adv_degree_spec_v_le &
  [ STEM < "pretty", "well" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretty_well_deg_rel" ].

pretty_much_adv := adv_int_vp_pre_le &
  [ STEM < "pretty", "much" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretty_much_adv_rel" ].

pretty_well_adv := adv_int_vp_pre_le &
  [ STEM < "pretty", "well" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretty_well_adv_rel" ].

first_adv1 := adv_int_vp_le &
  [ STEM < "first" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_rel" ].

first_adv2 := adv_s_pre_le &
  [ STEM < "first" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_rel" ].

sir_ttl := n_title_unsp_le &
  [ STEM < "sir" >,
    SYNSEM.LKEYS.KEYREL.CARG "sir" ].

sir_n1 := n_intr_le &
  [ STEM < "sir" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sir_n_rel" ].

maybe_adv2 := adv_vp_post_le &
  [ STEM < "maybe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maybe_rel" ].

maybe_deg := adv_degree_spec_m_le &
  [ STEM < "maybe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maybe_deg_rel" ].

mid_isect := adj_attr_intrans_le &
  [ STEM < "mid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mid_j_rel" ].

mid_isect_dash := adj_attr_intrans_le &
  [ STEM < "mid", "-" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mid_j_rel" ].

alright_a1 := adj_intrans_le &
  [ STEM < "alright" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allright_adj_rel" ].

all_right_a1 := adj_intrans_le &
  [ STEM < "all", "right" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allright_adj_rel" ].

check_n := n_ppof_le &
  [ STEM < "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_n_rel" ].

but_not_1 := conj_complex_but_not_le &
  [ STEM < "but", "not" > ].

you_know_disc := adv_disc_like_le &
  [ STEM < "you", "know" >,
    SYNSEM.LKEYS.KEYREL.CARG "you_know" ].

I_guess_disc := adv_disc_like_le &
  [ STEM < "I", "guess" >,
    SYNSEM.LKEYS.KEYREL.CARG "i_guess" ].

lets_say_disc := adv_disc_like_le &
  [ STEM < "let's", "say" >,
    SYNSEM.LKEYS.KEYREL.CARG "lets_say" ].

lets_say_2_disc := adv_disc_like_le &
  [ STEM < "let", "s", "say" >,
    SYNSEM.LKEYS.KEYREL.CARG "lets_say" ].

lets_say_3_disc := adv_disc_like_le &
  [ STEM < "let", "us", "say" >,
    SYNSEM.LKEYS.KEYREL.CARG "lets_say" ].

noon_min := xp_pm_le &
  [ STEM < "noon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pm_rel" ].

in_between_a1 := adj_intrans_le &
  [ STEM < "in", "between" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_between_adj_rel" ].

and_num := conj_and_num_le &
  [ STEM < "and" > ].

and_fract := conj_and_fract_le &
  [ STEM < "and" > ].

burden_v1 := v_np_trans_le &
  [ STEM < "burden" >,
    SYNSEM.LKEYS.KEYREL.PRED "_burden_v_rel" ].

equip_v1 := v_np_trans_le &
  [ STEM < "equip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_equip_rel" ].

lie_mental_v1 := v_unerg_le &
  [ STEM < "lie" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lie_mental_rel" ].

simply_deg := adv_degree_spec_v_le &
  [ STEM < "simply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_simply_deg_rel" ].

trace_n1 := n_ppof_le &
  [ STEM < "trace" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trace_n_rel" ].

lit-company := n_proper_unk_le &
  [ STEM < "literalcompany" >,
    SYNSEM.LKEYS.KEYREL.CARG "lit-co" ].

lit-person := n_proper_unk_le &
  [ STEM < "literalperson" >,
    SYNSEM.LKEYS.KEYREL.CARG "lit-pers" ].

lit-ptname := n_proper_unk_le &
  [ STEM < "literalpn" >,
    SYNSEM.LKEYS.KEYREL.CARG "lit-ptname" ].

lit-ptname_2 := n_intr_unk_le &
  [ STEM < "literalpn" >,
    SYNSEM.LKEYS.KEYREL.PRED "unk_rel" ].

lit-address := n_proper_unk_le &
  [ STEM < "literaladdress" >,
    SYNSEM.LKEYS.KEYREL.CARG "lit-address" ].

lit-amount := n_proper_unk_le &
  [ STEM < "literalamount" >,
    SYNSEM.LKEYS.KEYREL.CARG "lit-amount" ].

lit-rate := n_proper_unk_le &
  [ STEM < "literalrate" >,
    SYNSEM.LKEYS.KEYREL.CARG "lit-rate" ].

unsubscribe_v1 := v_np_trans_le &
  [ STEM < "unsubscribe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsubscribe_rel" ].

subscribe_v1 := v_np*_trans_le &
  [ STEM < "subscribe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subscribe_rel" ].

mail_v1 := v_ditrans_le &
  [ STEM < "mail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mail_v_rel" ].

mail_v2 := v_np_trans_le &
  [ STEM < "mail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mail_v_rel" ].

sample_n1 := n_ppof_le &
  [ STEM < "sample" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sample_n_rel" ].

file_n1 := n_ppof_le &
  [ STEM < "file" >,
    SYNSEM.LKEYS.KEYREL.PRED "_file_n_rel" ].

device_n1 := n_ppof_le &
  [ STEM < "device" >,
    SYNSEM.LKEYS.KEYREL.PRED "_device_rel" ].

device_title := n_title_le &
  [ STEM < "device" >,
    SYNSEM.LKEYS.KEYREL.PRED "_device_rel" ].

respond_v1 := v_empty_prep_intrans_le &
  [ STEM < "respond" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_respond_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

respond_v2 := v_unerg_le &
  [ STEM < "respond" >,
    SYNSEM.LKEYS.KEYREL.PRED "_respond_rel" ].

newsletter_n1 := n_ppof_le &
  [ STEM < "newsletter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_newsletter_rel" ].

anyvalue_n1 := n_proper_nale &
  [ STEM < "anyvalue" > ].

website_n1 := n_ppof_le &
  [ STEM < "website" >,
    SYNSEM.LKEYS.KEYREL.PRED "_website_rel" ].

website_n2 := n_ppof_le &
  [ STEM < "web", "-", "site" >,
    SYNSEM.LKEYS.KEYREL.PRED "_website_rel" ].

spam_n1 := n_mass_count_le &
  [ STEM < "spam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spam_n_rel" ].

sender_n1 := n_ppof_le &
  [ STEM < "sender" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sender_rel" ].

mailing_n1 := n_intr_le &
  [ STEM < "mailing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mailing_n_rel" ].

emailing_n1 := n_intr_le &
  [ STEM < "emailing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_emailing_n_rel" ].

emailing_n2 := n_intr_le &
  [ STEM < "e", "mailing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_emailing_n_rel" ].

mailbox_n1 := n_intr_le &
  [ STEM < "mailbox" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mailbox_rel" ].

id_n1 := n_intr_le &
  [ STEM < "id" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ident_rel" ].

Finland := n_proper_le &
  [ STEM < "finland" >,
    SYNSEM.LKEYS.KEYREL.CARG "finland" ].

electronic_a1 := adj_intrans_le &
  [ STEM < "electronic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_electronic_rel" ].

duplicate_a1 := adj_intrans_le &
  [ STEM < "duplicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_duplicate_adj_rel" ].

duplicate_v1 := v_np_trans_le &
  [ STEM < "duplicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_duplicate_v_rel" ].

duplicate_n1 := n_intr_le &
  [ STEM < "duplicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_duplicate_n_rel" ].

correspondence_n1 := n_mass_le &
  [ STEM < "correspondence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_correspondence_rel" ].

converter_n1 := n_intr_le &
  [ STEM < "converter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_converter_rel" ].

cd_n1 := n_intr_le &
  [ STEM < "cd" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cd_rel" ].

user_n1 := n_ppof_le &
  [ STEM < "user" >,
    SYNSEM.LKEYS.KEYREL.PRED "_user_rel" ].

unit_n1 := n_ppof_le &
  [ STEM < "unit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unit_rel" ].

unit_title := n_title_le &
  [ STEM < "unit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unit_rel" ].

replacement_n1 := n_mass_count_ppof_le &
  [ STEM < "replacement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_replacement_rel" ].

rectify_v1 := v_np_trans_le &
  [ STEM < "rectify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rectify_rel" ].

recipient_n1 := n_ppof_le &
  [ STEM < "recipient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recipient_rel" ].

query_n1 := n_intr_le &
  [ STEM < "query" >,
    SYNSEM.LKEYS.KEYREL.PRED "_query_rel" ].

posting_n1 := n_intr_le &
  [ STEM < "posting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_posting_rel" ].

notification_n1 := n_mass_count_cpcomp_fin_le &
  [ STEM < "notification" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notification_h_rel" ].

monitor_n1 := n_intr_le &
  [ STEM < "monitor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_monitor_n_rel" ].

medical_a1 := adj_intrans_le &
  [ STEM < "medical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_medical_rel" ].

medical_n1 := n_intr_le &
  [ STEM < "medical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_medical_n_rel" ].

dental_a1 := adj_intrans_le &
  [ STEM < "dental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dental_rel" ].

dental_n1 := n_intr_le &
  [ STEM < "dental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dental_n_rel" ].

extraordinary_a1 := adj_intrans_le &
  [ STEM < "extraordinary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extraordinary_rel" ].

engineering_n1 := n_mass_le &
  [ STEM < "engineering" >,
    SYNSEM.LKEYS.KEYREL.PRED "_engineering_rel" ].

character_n1 := n_intr_le &
  [ STEM < "character" >,
    SYNSEM.LKEYS.KEYREL.PRED "_character_rel" ].

cdrom_n1 := n_intr_le &
  [ STEM < "cdrom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cdrom_rel" ].

cdrom_n2 := n_intr_le &
  [ STEM < "cd", "rom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cdrom_rel" ].

campaign_n1 := n_intr_le &
  [ STEM < "campaign" >,
    SYNSEM.LKEYS.KEYREL.PRED "_campaign_n_rel" ].

awareness_n1 := n_mass_le &
  [ STEM < "awareness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awareness_rel" ].

automated_a1 := adj_intrans_le &
  [ STEM < "automated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_automated_rel" ].

sil_vous_plait_root_pre := adv_disc_preh_le &
  [ STEM < "s", "il", "vous", "plait" >,
    SYNSEM.LKEYS.KEYREL.CARG "sil_vous_plait"].

sil_vous_plait_root_post := adv_disc_posth_le &
  [ STEM < "s", "il", "vous", "plait" >,
    SYNSEM.LKEYS.KEYREL.CARG "sil_vous_plait"].

spammer_n1 := n_intr_le &
  [ STEM < "spammer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spammer_rel" ].

soft_a1 := adj_intrans_le &
  [ STEM < "soft" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soft_rel" ].

softer := adj_comp_le &
  [ STEM < "softer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soft_rel" ].

softest_a1 := adj_superl_le &
  [ STEM < "softest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soft_rel" ].

softest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "softest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soft_rel" ].

server_n1 := n_intr_le &
  [ STEM < "server" >,
    SYNSEM.LKEYS.KEYREL.PRED "_server_rel" ].

simulator_n1 := n_intr_le &
  [ STEM < "simulator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_simulator_rel" ].

semiconductor_n1 := n_intr_le &
  [ STEM < "semiconductor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_semiconductor_rel" ].

route_v1 := v_np_trans_le &
  [ STEM < "route" >,
    SYNSEM.LKEYS.KEYREL.PRED "_route_v_rel" ].

post_v1 := v_np_trans_le &
  [ STEM < "post" >,
    SYNSEM.LKEYS.KEYREL.PRED "_post_v_rel" ].

post_v2 := v_np_prep_trans_le &
  [ STEM < "post" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_post_v_rel",
             LKEYS.--OCOMPKEY _to_p_rel ] ].

tougher := adj_comp_le &
  [ STEM < "tougher" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tough_adj_rel" ].

fall_prd_v1 := v_subj_equi_prd_adj_le &
  [ STEM < "fall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fall_state_rel" ].

good_afternoon_gr_pre := adv_disc_preh_grt_le &
  [ STEM < "good", "afternoon" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_afternoon" ].

good_afternoon_gr_post := adv_disc_posth_grt_le &
  [ STEM < "good", "afternoon" >,
    SYNSEM.LKEYS.KEYREL.CARG "good_afternoon" ].

wonder_v2 := v_unerg_le &
  [ STEM < "wonder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wonder_v_rel" ].

wait_v2 := v_subj_equi_le &
  [ STEM < "wait" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wait_v_rel" ].

wait_v3 := v_cp_inf_le &
  [ STEM < "wait" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wait_v_rel" ].

wait_v4 := v_empty_prep_intrans_le &
  [ STEM < "wait" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wait_v_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

three_d_cinema := n_intr_le &
  [ STEM < "three", "d", "cinema" >,
    SYNSEM.LKEYS.KEYREL.PRED "_three_d_cinema_rel" ].

why_vp := comp_why_vp_le &
  [ STEM < "why" >,
    SYNSEM.LKEYS.KEYREL.PRED "_why_xp_rel" ].

why_n_or_p := comp_how_about_n_or_p_le &
  [ STEM < "why" >,
    SYNSEM.LKEYS.KEYREL.PRED "_why_xp_rel" ].

why_not_vp := comp_why_vp_le &
  [ STEM < "why", "not" >,
    SYNSEM.LKEYS.KEYREL.PRED "_why_not_xp_rel" ].

why_not_n_or_p := comp_how_about_n_or_p_le &
  [ STEM < "why", "not" >,
    SYNSEM.LKEYS.KEYREL.PRED "_why_not_xp_rel" ].

fly_v2 := v_np_trans_le &
  [ STEM < "fly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fly_rel" ].

whatever_root_pre := adv_disc_preh_le &
  [ STEM < "whatever" >,
    SYNSEM.LKEYS.KEYREL.CARG "whatever" ].

whatever_root_post := adv_disc_posth_le &
  [ STEM < "whatever" >,
    SYNSEM.LKEYS.KEYREL.CARG "whatever" ].

x_to_y_np_until := n_x_to_y_sg_le &
  [ STEM < "until" > ].

sized_a1 := adj_intrans_le &
  [ STEM < "sized" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sized_rel" ].

oldest_a1 := adj_superl_le &
  [ STEM < "oldest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_old_j_rel" ].

oldest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "oldest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_old_j_rel" ].

first_class_a2 := adj_pred_intrans_le &
  [ STEM < "first" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_class_rel" ].

no_longer := adv_int_vp_aux_le &
  [ STEM < "no", "longer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_no_longer_rel" ].

sign_on_v2 := v_particle_le &
  [ STEM < "sign" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sign_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

sign_off_v2 := v_particle_le &
  [ STEM < "sign" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sign_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

ask_v4 := v_subj_equi_le &
  [ STEM < "ask" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ask_rel" ].

request_v2 := v_subj_equi_le &
  [ STEM < "request" >,
    SYNSEM.LKEYS.KEYREL.PRED "_request_v_rel" ].

request_v3 := v_cp_subj_le &
  [ STEM < "request" >,
    SYNSEM.LKEYS.KEYREL.PRED "_request_v_rel" ].

demand_v3 := v_subj_equi_le &
  [ STEM < "demand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demand_v_rel" ].

demand_v4 := v_cp_subj_le &
  [ STEM < "demand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demand_v_rel" ].

any_more_det := det_part_pl_mass_le &
  [ STEM < "any", "more" >,
    SYNSEM.LKEYS.KEYREL.PRED _any_more_q_rel ].

no_more_det := det_part_pl_mass_le &
  [ STEM < "no", "more" >,
    SYNSEM.LKEYS.KEYREL.PRED _no_more_q_rel ].

some_more_det := det_part_pl_mass_le &
  [ STEM < "some", "more" >,
    SYNSEM.LKEYS.KEYREL.PRED _some_more_q_rel ].

make_sure_v1 := v_subj_equi_prd_le &
  [ STEM < "make" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_make_be_rel",
             LKEYS.--COMPKEY abstr_sure_rel ] ].

note_v2 := v_cp_prop_non_trans_le &
  [ STEM < "note" >,
    SYNSEM.LKEYS.KEYREL.PRED "_note_v_rel" ].

sign_up_v1 := v_particle_np_le &
  [ STEM < "sign" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sign_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

sign_up_v2 := v_particle_le &
  [ STEM < "sign" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sign_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

measure_v1 := v_np_trans_le &
  [ STEM < "measure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_measure_v_rel" ].

increase_v2 := v_np_trans_le &
  [ STEM < "increase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_increase_cause_v_rel" ].

miss_v2 := v_unerg_le &
  [ STEM < "miss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_miss_rel" ].

design_n1 := n_ppof_le &
  [ STEM < "design" >,
    SYNSEM.LKEYS.KEYREL.PRED "_design_n_rel" ].

update_n1 := n_ppof_le &
  [ STEM < "update" >,
    SYNSEM.LKEYS.KEYREL.PRED "_update_n_rel" ].

dispatch_n1 := n_ppof_le &
  [ STEM < "dispatch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dispatch_n_rel" ].

put_out_v1 := v_particle_np_le &
  [ STEM < "put" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_put_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

return_v2 := v_np_trans_le &
  [ STEM < "return" >,
    SYNSEM.LKEYS.KEYREL.PRED "_return_v_rel" ].

return_v3 := v_np_prep_trans_le &
  [ STEM < "return" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_return_v_rel",
             LKEYS.--OCOMPKEY _to_p_rel ] ].

return_v4 := v_np_prep_trans_le &
  [ STEM < "return" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_return_v_rel",
             LKEYS.--OCOMPKEY _for_p_rel ] ].

postcard_n1 := n_ppof_le &
  [ STEM < "postcard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_postcard_rel" ].

online_nom1 := n_adv_pl_le &
  [ STEM < "online" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _online_j_rel ] ].

online_nom2 := n_adv_pl_le &
  [ STEM < "on", "line" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _online_j_rel ] ].

online_nom3 := n_adv_pl_le &
  [ STEM < "on", "-", "line" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _online_j_rel ] ].

offline_nom1 := n_adv_pl_le &
  [ STEM < "offline" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _offline_j_rel ] ].

offline_nom2 := n_adv_pl_le &
  [ STEM < "off", "line" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _offline_j_rel ] ].

offline_nom3 := n_adv_pl_le &
  [ STEM < "off", "-", "line" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _offline_j_rel ] ].

you_guys := n_pers_pro_you_le &
  [ STEM < "you", "guys" > ].

you_people := n_pers_pro_you_le &
  [ STEM < "you", "people" > ].

teach_v2 := v_obj_equi_le &
  [ STEM < "teach" >,
    SYNSEM.LKEYS.KEYREL.PRED "_teach_rel" ].

alert_n1 := n_intr_le &
  [ STEM < "alert" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alert_n_rel" ].

meanwhile_adv2 := adv_s_pre_le &
  [ STEM < "meanwhile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meanwhile_rel" ].

download_n1 := n_ppof_le &
  [ STEM < "down", "load" >,
    SYNSEM.LKEYS.KEYREL.PRED "_download_n_rel" ].

download_n2 := n_ppof_le &
  [ STEM < "download" >,
    SYNSEM.LKEYS.KEYREL.PRED "_download_n_rel" ].

download_v1 := v_np_trans_le &
  [ STEM < "down", "load" >,
    SYNSEM.LKEYS.KEYREL.PRED "_download_v_rel" ].

download_v2 := v_np_trans_le &
  [ STEM < "download" >,
    SYNSEM.LKEYS.KEYREL.PRED "_download_v_rel" ].

garbled_a1 := adj_intrans_le &
  [ STEM < "garbled" >,
    SYNSEM.LKEYS.KEYREL.PRED "_garbled_rel" ].

above_a1 := adj_intrans_le &
  [ STEM < "above" >,
    SYNSEM.LKEYS.KEYREL.PRED "_above_adj_rel" ].

amend_v1 := v_np*_trans_le &
  [ STEM < "amend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amend_rel" ].

listed_a1 := adj_intrans_le &
  [ STEM < "listed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_listed_rel" ].

atm_n1 := n_intr_le &
  [ STEM < "atm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_atm_rel" ].

checking_n1 := n_mass_le &
  [ STEM < "checking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_checking_rel" ].

neighborhood_n1 := n_ppof_le &
  [ STEM < "neighborhood" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neighborhood_rel" ].

maiden_n1 := n_intr_le &
  [ STEM < "maiden" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maiden_rel" ].

deposit_v1 := v_np_trans_le &
  [ STEM < "deposit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deposit_v_rel" ].

deposit_v2 := v_np_prep_trans_le &
  [ STEM < "deposit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_deposit_v_rel",
             LKEYS.--OCOMPKEY _into_p_rel ] ].

Disneyland_nd := n_proper_le &
  [ STEM < "disneyland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Disneyland" ].

ssn_n1 := n_intr_le &
  [ STEM < "ssn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ssn_rel" ].

identical_a1 := adj_trans_le &
  [ STEM < "identical" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_identical_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

peddle_v1 := v_np_trans_le &
  [ STEM < "peddle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peddle_rel" ].

proof_n1 := n_mass_count_ppof_le &
  [ STEM < "proof" >,
    SYNSEM.LKEYS.KEYREL.PRED "_proof_rel" ].

southeast_n1 := n_ppof_le &
  [ STEM < "southeast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_southeast_n_rel" ].

southeast_n2 := n_adv_pl_le &
  [ STEM < "southeast" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _southeast_j_rel ] ].

southeast_isect := adj_intrans_le &
  [ STEM < "southeast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_southeast_j_rel" ].

southwest_n1 := n_ppof_le &
  [ STEM < "southwest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_southwest_n_rel" ].

southwest_n2 := n_adv_pl_le &
  [ STEM < "southwest" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _southwest_j_rel ] ].

southwest_isect := adj_intrans_le &
  [ STEM < "southwest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_southwest_j_rel" ].

northeast_n1 := n_ppof_le &
  [ STEM < "northeast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northeast_n_rel" ].

northeast_n2 := n_ppof_le &
  [ STEM < "north", "east" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northeast_n_rel" ].

northeast_n3 := n_adv_pl_le &
  [ STEM < "northeast" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _northeast_j_rel ] ].

northeast_isect := adj_intrans_le &
  [ STEM < "northeast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northeast_j_rel" ].

northwest_n1 := n_ppof_le &
  [ STEM < "northwest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northwest_n_rel" ].

northwest_n2 := n_adv_pl_le &
  [ STEM < "northwest" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _northwest_j_rel ] ].

northwest_isect := adj_intrans_le &
  [ STEM < "northwest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northwest_j_rel" ].

northcentral_isect := adj_intrans_le &
  [ STEM < "northcentral" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northcentral_j_rel" ].

tunnel_n1 := n_intr_le &
  [ STEM < "tunnel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tunnel_rel" ].

brown_adj := adj_intrans_le &
  [ STEM < "brown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brown_rel" ].

woods_n1 := n_plur_le &
  [ STEM < "woods" >,
    SYNSEM.LKEYS.KEYREL.PRED "_woods_rel" ].

motorcycle_n1 := n_intr_le &
  [ STEM < "motorcycle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_motorcycle_rel" ].

truck_n1 := n_intr_le &
  [ STEM < "truck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_truck_n_rel" ].

grey_adj := adj_intrans_le &
  [ STEM < "grey" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grey_rel" ].

freeway_n1 := n_intr_le &
  [ STEM < "freeway" >,
    SYNSEM.LKEYS.KEYREL.PRED "_freeway_rel" ].

purple_adj := adj_intrans_le &
  [ STEM < "purple" >,
    SYNSEM.LKEYS.KEYREL.PRED "_purple_rel" ].

climb_v13 := v_np*_trans_le &
  [ STEM < "climb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_climb_v_rel" ].

climb_n1 := n_intr_le &
  [ STEM < "climb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_climb_n_rel" ].

fuel_v13 := v_np_trans_le &
  [ STEM < "fuel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fuel_v_rel" ].

fuel_n := n_mass_count_le &
  [ STEM < "fuel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fuel_n_rel" ].

lock_n1 := n_intr_le &
  [ STEM < "lock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lock_n_rel" ].

optimize_v13 := v_np*_trans_le &
  [ STEM < "optimize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_optimize_rel" ].

hover_v1 := v_unerg_le &
  [ STEM < "hover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hover_rel" ].

height_n1 := n_ppof_le &
  [ STEM < "height" >,
    SYNSEM.LKEYS.KEYREL.PRED "_height_rel" ].

pass_n1 := n_intr_le &
  [ STEM < "pass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pass_n_rel" ].

orange_adj := adj_intrans_le &
  [ STEM < "orange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_orange_adj_rel" ].

actually_root := adv_disc_posth_le &
  [ STEM < "actually" >,
    SYNSEM.LKEYS.KEYREL.CARG "actually" ].

two_thousand_one := n_year_le &
  [ STEM < "two", "thousand", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "2001" ].

two-thousand_one_2 := n_year_le &
  [ STEM < "2001" >,
    SYNSEM.LKEYS.KEYREL.CARG "2001" ].

two-thousand_one_3 := n_year_le &
  [ STEM < "two", "thousand", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "2001" ].

two-thousand_one_4 := n_year_le &
  [ STEM < "two", "thousand", "and", "one" >,
    SYNSEM.LKEYS.KEYREL.CARG "2001" ].

two_thousand_two := n_year_le &
  [ STEM < "two", "thousand", "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "2002" ].

two-thousand_two_2 := n_year_le &
  [ STEM < "2002" >,
    SYNSEM.LKEYS.KEYREL.CARG "2002" ].

two_thousand_two_3 := n_year_le &
  [ STEM < "two", "thousand", "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "2002" ].

two-thousand_two_4 := n_year_le &
  [ STEM < "two", "thousand", "and", "two" >,
    SYNSEM.LKEYS.KEYREL.CARG "2002" ].

together_a1 := adj_pred_intrans_le &
  [ STEM < "together" >,
    SYNSEM.LKEYS.KEYREL.PRED "_together_adj_rel" ].

earlier_adv := n_comp_adv_le &
  [ STEM < "earlier" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED "_early_rel" ] ].

later_adv := n_comp_adv_le &
  [ STEM < "later" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED "_late_rel" ] ].

sooner_adv := n_comp_adv_le &
  [ STEM < "sooner" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED "_soon_rel" ] ].

mistakenly_adv1 := adv_int_vp_le &
  [ STEM < "mistakenly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mistakenly_rel" ].

swear_v1 := v_unerg_le &
  [ STEM < "swear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swear_rel" ].

swear_v2 := v_pp_cp_le &
  [ STEM < "swear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_swear_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

electricity_n1 := n_mass_ppcomp_le &
  [ STEM < "electricity" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_electricity_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

electric_n1 := n_mass_le &
  [ STEM < "electric" >,
    SYNSEM.LKEYS.KEYREL.PRED "_electric_n_rel" ].

electric_adj := adj_intrans_le &
  [ STEM < "electric" >,
    SYNSEM.LKEYS.KEYREL.PRED "_electric_adj_rel" ].

lockup_n1 := n_intr_le &
  [ STEM < "lockup" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lockup_n_rel" ].

supply_n1 := n_mass_count_le &
  [ STEM < "supply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supply_n_rel" ].

supply_v1 := v_np_trans_le &
  [ STEM < "supply" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supply_v_rel" ].

reader_n1 := n_ppof_le &
  [ STEM < "reader" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reader_rel" ].

abreast_a1 := adj_trans_le &
  [ STEM < "abreast" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_abreast_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

abuse_n1 := n_ppof_le &
  [ STEM < "abuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abuse_n_rel" ].

abuse_v1 := v_np_trans_le &
  [ STEM < "abuse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_abuse_v_rel" ].

acknowledge_v1 := v_np*_trans_le &
  [ STEM < "acknowledge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acknowledge_v_rel" ].

acknowledge_v2 := v_cp_prop_non_trans_le &
  [ STEM < "acknowledge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acknowledge_v_rel" ].

admin_n1 := n_intr_le &
  [ STEM < "admin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_admin_rel" ].

alignment_n1 := n_ppof_le &
  [ STEM < "alignment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alignment_rel" ].

alter_v1 := v_np*_trans_le &
  [ STEM < "alter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alter_rel" ].

amplifier_n1 := n_ppof_le &
  [ STEM < "amplifier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amplifier_rel" ].

app_n1 := n_intr_le &
  [ STEM < "app" >,
    SYNSEM.LKEYS.KEYREL.PRED "_app_rel" ].

arrow_n1 := n_intr_le &
  [ STEM < "arrow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arrow_rel" ].

asap_adv1 := adv_int_vp_post_le &
  [ STEM < "asap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_asap_rel" ].

automation_n1 := n_mass_ppcomp_le &
  [ STEM < "automation" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_automation_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

baby_n1 := n_intr_le &
  [ STEM < "baby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_baby_rel" ].

bombard_v1 := v_np_trans_le &
  [ STEM < "bombard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bombard_rel" ].

broad_a1 := adj_intrans_le &
  [ STEM < "broad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_broad_rel" ].

broader := adj_comp_le &
  [ STEM < "broader" >,
    SYNSEM.LKEYS.KEYREL.PRED "_broad_rel" ].

broadest_a1 := adj_superl_le &
  [ STEM < "broadest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_broad_rel" ].

broadest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "broadest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_broad_rel" ].

taller := adj_comp_le &
  [ STEM < "taller" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tall_rel" ].

tallest_a1 := adj_superl_le &
  [ STEM < "tallest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tall_rel" ].

tallest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "tallest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tall_rel" ].

channel_n1 := n_ppof_le &
  [ STEM < "channel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_channel_n_rel" ].

channel_v1 := v_np_trans_le &
  [ STEM < "channel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_channel_v_rel" ].

channel_v2 := v_np_prep_trans_dors_le &
  [ STEM < "channel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_channel_v_rel" ].

charitable_a1 := adj_intrans_le &
  [ STEM < "charitable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charitable_rel" ].

chore_n1 := n_intr_le &
  [ STEM < "chore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chore_rel" ].

circuit_n1 := n_intr_le &
  [ STEM < "circuit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circuit_rel" ].

cite_v1 := v_np_trans_le &
  [ STEM < "cite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cite_rel" ].

cluttered_a1 := adj_intrans_le &
  [ STEM < "cluttered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cluttered_rel" ].

comment_n1 := n_intr_le &
  [ STEM < "comment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comment_n_rel" ].

comment_v1 := v_empty_prep_intrans_le &
  [ STEM < "comment" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_comment_v_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

comment_v2 := v_unerg_le &
  [ STEM < "comment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comment_v_rel" ].

communicate_with_v1 := v_empty_prep_intrans_le &
  [ STEM < "communicate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_communicate_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

communicate_v1 := v_unerg_le &
  [ STEM < "communicate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_communicate_rel" ].

confidential_a1 := adj_intrans_le &
  [ STEM < "confidential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confidential_rel" ].

confidentiality_n1 := n_mass_le &
  [ STEM < "confidentiality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_confidentiality_rel" ].

coverage_n1 := n_mass_ppcomp_le &
  [ STEM < "coverage" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_coverage_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

deluge_v1 := v_np_trans_le &
  [ STEM < "deluge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deluge_v_rel" ].

deluge_n1 := n_ppof_le &
  [ STEM < "deluge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deluge_n_rel" ].

demo_n1 := n_ppof_le &
  [ STEM < "demo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demo_n_rel" ].

demo_v1 := v_to*_trans_le &
  [ STEM < "demo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_demo_v_rel" ].

designation_n1 := n_ppof_le &
  [ STEM < "designation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_designation_rel" ].

developer_n1 := n_ppof_le &
  [ STEM < "developer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_developer_rel" ].

deviation_n1 := n_ppcomp_le &
  [ STEM < "deviation" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_deviation_rel",
             LKEYS.--COMPKEY _from_p_rel ] ].

digital_a1 := adj_intrans_le &
  [ STEM < "digital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_digital_rel" ].

disclose_v1 := v_to*_trans_le &
  [ STEM < "disclose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disclose_rel" ].

display_v1 := v_to*_trans_le &
  [ STEM < "display" >,
    SYNSEM.LKEYS.KEYREL.PRED "_display_v_rel" ].

display_n1 := n_mass_count_ppof_le &
  [ STEM < "display" >,
    SYNSEM.LKEYS.KEYREL.PRED "_display_n_rel" ].

division_n1 := n_mass_count_ppof_le &
  [ STEM < "division" >,
    SYNSEM.LKEYS.KEYREL.PRED "_division_rel" ].

employment_n1 := n_mass_le &
  [ STEM < "employment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_employment_rel" ].

enquiry_n1 := n_intr_le &
  [ STEM < "enquiry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enquiry_rel" ].

erase_v1 := v_np_trans_le &
  [ STEM < "erase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_erase_rel" ].

estimation_n1 := n_mass_ppcomp_le &
  [ STEM < "estimation" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_estimation_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

Europe_n1 := n_proper_le &
  [ STEM < "europe" >,
    SYNSEM.LKEYS.KEYREL.CARG "Europe" ].

Asia_n1 := n_proper_le &
  [ STEM < "asia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Asia" ].

Africa_n1 := n_proper_le &
  [ STEM < "africa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Africa" ].

South_America_n1 := n_proper_le &
  [ STEM < "south", "america" >,
    SYNSEM.LKEYS.KEYREL.CARG "South_America" ].

North_America_n1 := n_proper_le &
  [ STEM < "north", "america" >,
    SYNSEM.LKEYS.KEYREL.CARG "North_America" ].

Antarctica_n1 := n_proper_le &
  [ STEM < "antarctica" >,
    SYNSEM.LKEYS.KEYREL.CARG "Antarctica" ].

feedback_n1 := n_mass_le &
  [ STEM < "feedback" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feedback_rel" ].

file_v1 := v_np_trans_le &
  [ STEM < "file" >,
    SYNSEM.LKEYS.KEYREL.PRED "_file_v_rel" ].

format_v1 := v_np_trans_le &
  [ STEM < "format" >,
    SYNSEM.LKEYS.KEYREL.PRED "_format_v_rel" ].

funky_a1 := adj_intrans_le &
  [ STEM < "funky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_funky_rel" ].

fuzzy_a1 := adj_intrans_le &
  [ STEM < "fuzzy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fuzzy_rel" ].

garbage_n1 := n_mass_le &
  [ STEM < "garbage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_garbage_rel" ].

genius_n1 := n_intr_le &
  [ STEM < "genius" >,
    SYNSEM.LKEYS.KEYREL.PRED "_genius_rel" ].

halt_n1 := n_intr_le &
  [ STEM < "halt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_halt_n_rel" ].

halt_v1 := v_np*_trans_le &
  [ STEM < "halt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_halt_v_rel" ].

hardware_n1 := n_mass_le &
  [ STEM < "hardware" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hardware_rel" ].

header_n1 := n_ppof_le &
  [ STEM < "header" >,
    SYNSEM.LKEYS.KEYREL.PRED "_header_rel" ].

horizontal_a1 := adj_intrans_le &
  [ STEM < "horizontal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_horizontal_rel" ].

housing_n1 := n_mass_le &
  [ STEM < "housing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_housing_rel" ].

inbox_n1 := n_intr_le &
  [ STEM < "inbox" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inbox_rel" ].
  
incomprehensible_a1 := adj_intrans_le &
  [ STEM < "incomprehensible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incomprehensible_rel" ].

incorporate_v1 := v_np_trans_le &
  [ STEM < "incorporate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incorporate_rel" ].

incorporate_v2 := v_np_prep_trans_le &
  [ STEM < "incorporate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_incorporate_rel",
             LKEYS.--OCOMPKEY _into_p_rel ] ].

increasingly_deg := adv_degree_spec_v_le &
  [ STEM < "increasingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_increasingly_deg_rel" ].

input_n1 := n_intr_le &
  [ STEM < "input" >,
    SYNSEM.LKEYS.KEYREL.PRED "_input_n_rel" ].
  
input_n2 := n_mass_count_ppto_le &
  [ STEM < "input" >,
    SYNSEM.LKEYS.KEYREL.PRED "_input_n_rel" ].
  
input_v1 := v_np_trans_le &
  [ STEM < "input" >,
    SYNSEM.LKEYS.KEYREL.PRED "_input_v_rel" ].

input_v2 := v_np_prep_trans_le &
  [ STEM < "input" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_input_v_rel",
             LKEYS.--OCOMPKEY _to_p_rel ] ].

inspection_n1 := n_ppof_le &
  [ STEM < "inspection" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inspection_rel" ].

instrumentation_n1 := n_intr_le &
  [ STEM < "instrumentation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_instrumentation_rel" ].
     
intent_n1 := n_ppof_le &
  [ STEM < "intent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intent_n_rel" ].

intent_a1 := adj_trans_le &
  [ STEM < "intent" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_intent_a_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

invalid_a1 := adj_intrans_le &
  [ STEM < "invalid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invalid_rel" ].

isp_n1 := n_intr_le &
  [ STEM < "isp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_isp_rel" ].
     
issue_v1 := v_ditrans_le &
  [ STEM < "issue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_issue_v_rel" ].

jury_n1 := n_ppof_le &
  [ STEM < "jury" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jury_rel" ].

legally := adv_int_vp_le &
  [ STEM < "legally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_legally_rel" ].

illegally := adv_int_vp_le &
  [ STEM < "illegally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_illegally_rel" ].

logoppof:= n_intr_le &
  [ STEM < "logo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_logo_rel" ].
     
log_n1 := n_ppof_le &
  [ STEM < "log" >,
    SYNSEM.LKEYS.KEYREL.PRED "_log_n_rel" ].

log_v1 := v_np_trans_le &
  [ STEM < "log" >,
    SYNSEM.LKEYS.KEYREL.PRED "_log_v_rel" ].

loudspeaker_n1 := n_intr_le &
  [ STEM < "loudspeaker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loudspeaker_rel" ].
     
mailer_n1 := n_intr_le &
  [ STEM < "mailer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mailer_rel" ].

Malaysia_n1 := n_proper_le &
  [ STEM < "malaysia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Malaysia" ].

manual_n1 := n_ppof_le &
  [ STEM < "manual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manual_n_rel" ].

manual_a1 := adj_intrans_le &
  [ STEM < "manual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manual_a_rel" ].

manufacturer_n1 := n_ppof_le &
  [ STEM < "manufacturer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manufacturer_rel" ].

margin_n1 := n_ppof_le &
  [ STEM < "margin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_margin_rel" ].

maternity_n1 := n_mass_le &
  [ STEM < "maternity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maternity_rel" ].

membership_n1 := n_mass_count_le &
  [ STEM < "membership" >,
    SYNSEM.LKEYS.KEYREL.PRED "_membership_rel" ].

merchandise_n1 := n_mass_le &
  [ STEM < "merchandise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_merchandise_rel" ].

mistransmission_n1 := n_mass_count_le &
  [ STEM < "mistransmission" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mistransmission_rel" ].

needful_a1 := adj_intrans_le &
  [ STEM < "needful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_needful_rel" ].

notification_n2 := n_ppof_le &
  [ STEM < "notification" >,
    SYNSEM.LKEYS.KEYREL.PRED "_notification_rel" ].

periodically := adv_int_vp_le &
  [ STEM < "periodically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_periodically_rel" ].

privilege_n1 := n_ppof_le &
  [ STEM < "privilege" >,
    SYNSEM.LKEYS.KEYREL.PRED "_privilege_rel" ].

privileged_a1 := adj_intrans_le &
  [ STEM < "privileged" >,
    SYNSEM.LKEYS.KEYREL.PRED "_privileged_rel" ].

provider_n1 := n_ppof_le &
  [ STEM < "provider" >,
    SYNSEM.LKEYS.KEYREL.PRED "_provider_rel" ].

publication_n1 := n_mass_count_le &
  [ STEM < "publication" >,
    SYNSEM.LKEYS.KEYREL.PRED "_publication_rel" ].

pun_n1 := n_intr_le &
  [ STEM < "pun" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pun_rel" ].

punish_v1 := v_np_trans_le &
  [ STEM < "punish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_punish_rel" ].

radical_a1 := adj_intrans_le &
  [ STEM < "radical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_radical_rel" ].

receiver_n1 := n_ppof_le &
  [ STEM < "receiver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_receiver_rel" ].

receptionist_n1 := n_intr_le &
  [ STEM < "receptionist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_receptionist_rel" ].

reinstatement_n1 := n_mass_ppcomp_le &
  [ STEM < "reinstatement" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reinstatement_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

relay_n1 := n_ppof_le &
  [ STEM < "relay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relay_n_rel" ].

relay_v1 := v_ditrans_le &
  [ STEM < "relay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relay_v_rel" ].

release_n1 := n_ppof_le &
  [ STEM < "release" >,
    SYNSEM.LKEYS.KEYREL.PRED "_release_n_rel" ].

release_v1 := v_to*_trans_le &
  [ STEM < "release" >,
    SYNSEM.LKEYS.KEYREL.PRED "_release_v_rel" ].

resemble_v2 := v_np_non_trans_le &
  [ STEM < "resemble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resemble_rel" ].

resign_v1 := v_np*_non_trans_le &
  [ STEM < "resign" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resign_rel" ].

sector_n1 := n_ppof_le &
  [ STEM < "sector" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sector_rel" ].

string_n1 := n_ppof_le &
  [ STEM < "string" >,
    SYNSEM.LKEYS.KEYREL.PRED "_string_n_rel" ].

string_v1 := v_empty_prep_intrans_le &
  [ STEM < "string" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_string_v_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

subscriber_n1 := n_ppcomp_le &
  [ STEM < "subscriber" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_subscriber_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

surface_n1 := n_ppof_le &
  [ STEM < "surface" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surface_n_rel" ].

surface_v1 := v_unerg_le &
  [ STEM < "surface" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surface_v_rel" ].

symbol_n1 := n_ppof_le &
  [ STEM < "symbol" >,
    SYNSEM.LKEYS.KEYREL.PRED "_symbol_rel" ].

tv_n2 := n_intr_le &
  [ STEM < "t", "v" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tv_rel" ].

target_n1 := n_ppof_le &
  [ STEM < "target" >,
    SYNSEM.LKEYS.KEYREL.PRED "_target_n_rel" ].

target_v1 := v_np_trans_le &
  [ STEM < "target" >,
    SYNSEM.LKEYS.KEYREL.PRED "_target_v_rel" ].

thankful_a1 := adj_trans_le &
  [ STEM < "thankful" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_thankful_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

typo_n1 := n_intr_le &
  [ STEM < "typo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_typo_rel" ].

unsolicited_a1 := adj_intrans_le &
  [ STEM < "unsolicited" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsolicited_rel" ].

voltage_n1 := n_ppof_le &
  [ STEM < "voltage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_voltage_rel" ].

waive_v1 := v_np_trans_le &
  [ STEM < "waive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_waive_rel" ].

waiver_n1 := n_ppof_le &
  [ STEM < "waiver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_waiver_rel" ].

watt_n1 := n_intr_le &
  [ STEM < "watt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_watt_rel" ].

wireless_a1 := adj_intrans_le &
  [ STEM < "wireless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wireless_rel" ].

Alabama_n1 := n_proper_le &
  [ STEM < "alabama" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alabama" ].

Alabama_n2 := n_proper_abb_le &
  [ STEM < "ab" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alabama" ].

Alaska_n1 := n_proper_le &
  [ STEM < "alaska" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alaska" ].

Alaska_n2 := n_proper_abb_le &
  [ STEM < "al" >,
    SYNSEM.LKEYS.KEYREL.CARG "Alaska" ].

Arizona_n1 := n_proper_le &
  [ STEM < "arizona" >,
    SYNSEM.LKEYS.KEYREL.CARG "Arizona" ].

Arizona_n2 := n_proper_abb_le &
  [ STEM < "az" >,
    SYNSEM.LKEYS.KEYREL.CARG "Arizona" ].

Arkansas_n1 := n_proper_le &
  [ STEM < "arkansas" >,
    SYNSEM.LKEYS.KEYREL.CARG "Arkansas" ].

Arkansas_n2 := n_proper_abb_le &
  [ STEM < "ar" >,
    SYNSEM.LKEYS.KEYREL.CARG "Arkansas" ].

California_n2 := n_proper_abb_le &
  [ STEM < "ca" >,
    SYNSEM.LKEYS.KEYREL.CARG "California" ].

Colorado_n1 := n_proper_le &
  [ STEM < "colorado" >,
    SYNSEM.LKEYS.KEYREL.CARG "Colorado" ].

Colorado_n2 := n_proper_abb_le &
  [ STEM < "co" >,
    SYNSEM.LKEYS.KEYREL.CARG "Colorado" ].

Connecticut_n1 := n_proper_le &
  [ STEM < "connecticut" >,
    SYNSEM.LKEYS.KEYREL.CARG "Connecticut" ].

Connecticut_n2 := n_proper_abb_le &
  [ STEM < "cn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Connecticut" ].

Delaware_n1 := n_proper_le &
  [ STEM < "delaware" >,
    SYNSEM.LKEYS.KEYREL.CARG "Delaware" ].

Delaware_n2 := n_proper_abb_le &
  [ STEM < "de" >,
    SYNSEM.LKEYS.KEYREL.CARG "Delaware" ].

Florida_n1 := n_proper_le &
  [ STEM < "florida" >,
    SYNSEM.LKEYS.KEYREL.CARG "Florida" ].

Florida_n2 := n_proper_abb_le &
  [ STEM < "fl" >,
    SYNSEM.LKEYS.KEYREL.CARG "Florida" ].

Georgia_n1 := n_proper_le &
  [ STEM < "georgia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Georgia" ].

Georgia_n2 := n_proper_abb_le &
  [ STEM < "ga" >,
    SYNSEM.LKEYS.KEYREL.CARG "Georgia" ].

Hawaii_n1 := n_proper_le &
  [ STEM < "hawaii" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hawaii" ].

Hawaii_n2 := n_proper_abb_le &
  [ STEM < "hi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hawaii" ].

Idaho_n1 := n_proper_le &
  [ STEM < "idaho" >,
    SYNSEM.LKEYS.KEYREL.CARG "Idaho" ].

Idaho_n2 := n_proper_abb_le &
  [ STEM < "id" >,
    SYNSEM.LKEYS.KEYREL.CARG "Idaho" ].

Illinois_n1 := n_proper_le &
  [ STEM < "illinois" >,
    SYNSEM.LKEYS.KEYREL.CARG "Illinois" ].

Illinois_n2 := n_proper_abb_le &
  [ STEM < "il" >,
    SYNSEM.LKEYS.KEYREL.CARG "Illinois" ].

Indiana_n1 := n_proper_le &
  [ STEM < "indiana" >,
    SYNSEM.LKEYS.KEYREL.CARG "Indiana" ].

Iowa_n1 := n_proper_le &
  [ STEM < "iowa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Iowa" ].

Iowa_n2 := n_proper_abb_le &
  [ STEM < "ia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Iowa" ].

Kansas_n1 := n_proper_le &
  [ STEM < "kansas" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kansas" ].

Kansas_n2 := n_proper_abb_le &
  [ STEM < "ks" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kansas" ].

Kentucky_n1 := n_proper_le &
  [ STEM < "kentucky" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kentucky" ].

Kentucky_n2 := n_proper_abb_le &
  [ STEM < "ky" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kentucky" ].

Louisiana_n1 := n_proper_le &
  [ STEM < "louisiana" >,
    SYNSEM.LKEYS.KEYREL.CARG "Louisiana" ].

Louisiana_n2 := n_proper_abb_le &
  [ STEM < "la" >,
    SYNSEM.LKEYS.KEYREL.CARG "Louisiana" ].

Maine_n1 := n_proper_le &
  [ STEM < "maine" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maine" ].

Maryland_n1 := n_proper_le &
  [ STEM < "maryland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maryland" ].

Maryland_n2 := n_proper_abb_le &
  [ STEM < "md" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maryland" ].

Massachusetts_n1 := n_proper_le &
  [ STEM < "massachusetts" >,
    SYNSEM.LKEYS.KEYREL.CARG "Massachusetts" ].

Massachusetts_n2 := n_proper_abb_le &
  [ STEM < "ma" >,
    SYNSEM.LKEYS.KEYREL.CARG "Massachusetts" ].

Michigan_n1 := n_proper_le &
  [ STEM < "michigan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Michigan" ].

Michigan_n2 := n_proper_abb_le &
  [ STEM < "mi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Michigan" ].

Minnesota_n1 := n_proper_le &
  [ STEM < "minnesota" >,
    SYNSEM.LKEYS.KEYREL.CARG "Minnesota" ].

Minnesota_n2 := n_proper_abb_le &
  [ STEM < "mn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Minnesota" ].

Mississippi_n1 := n_proper_le &
  [ STEM < "mississippi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mississippi" ].

Mississippi_n2 := n_proper_abb_le &
  [ STEM < "ms" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mississippi" ].

Missouri_n1 := n_proper_le &
  [ STEM < "missouri" >,
    SYNSEM.LKEYS.KEYREL.CARG "Missouri" ].

Missouri_n2 := n_proper_abb_le &
  [ STEM < "mo" >,
    SYNSEM.LKEYS.KEYREL.CARG "Missouri" ].

Montana_n1 := n_proper_le &
  [ STEM < "montana" >,
    SYNSEM.LKEYS.KEYREL.CARG "Montana" ].

Montana_n2 := n_proper_abb_le &
  [ STEM < "mt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Montana" ].

Nebraska_n1 := n_proper_le &
  [ STEM < "nebraska" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nebraska" ].

Nebraska_n2 := n_proper_abb_le &
  [ STEM < "ne" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nebraska" ].

Nevada_n1 := n_proper_le &
  [ STEM < "nevada" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nevada" ].

Nevada_n2 := n_proper_abb_le &
  [ STEM < "nv" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nevada" ].

Newhampshire_n1 := n_proper_le &
  [ STEM < "new", "hampshire" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newhampshire" ].

Newhampshire_n2 := n_proper_abb_le &
  [ STEM < "nh" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newhampshire" ].

Newjersey_n1 := n_proper_le &
  [ STEM < "new", "jersey" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newjersey" ].

Newjersey_n2 := n_proper_abb_le &
  [ STEM < "nj" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newjersey" ].

Newmexico_n1 := n_proper_le &
  [ STEM < "new", "mexico" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newmexico" ].

Newmexico_n2 := n_proper_abb_le &
  [ STEM < "nm" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newmexico" ].

Newyork_n1 := n_proper_le &
  [ STEM < "new", "york" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newyork" ].

Newyork_n2 := n_proper_abb_le &
  [ STEM < "ny" >,
    SYNSEM.LKEYS.KEYREL.CARG "Newyork" ].

Northcarolina_n1 := n_proper_le &
  [ STEM < "north", "carolina" >,
    SYNSEM.LKEYS.KEYREL.CARG "Northcarolina" ].

Northcarolina_n2 := n_proper_abb_le &
  [ STEM < "nc" >,
    SYNSEM.LKEYS.KEYREL.CARG "Northcarolina" ].

Northdakota_n1 := n_proper_le &
  [ STEM < "north", "dakota" >,
    SYNSEM.LKEYS.KEYREL.CARG "Northdakota" ].

Northdakota_n2 := n_proper_abb_le &
  [ STEM < "nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "Northdakota" ].

Ohio_n1 := n_proper_le &
  [ STEM < "ohio" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ohio" ].

Ohio_n2 := n_proper_abb_le &
  [ STEM < "oh" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ohio" ].

Oklahoma_n1 := n_proper_le &
  [ STEM < "oklahoma" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oklahoma" ].

Oklahoma_n2 := n_proper_abb_le &
  [ STEM < "ok" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oklahoma" ].

Oregon_n1 := n_proper_le &
  [ STEM < "oregon" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oregon" ].

Oregon_n2 := n_proper_abb_le &
  [ STEM < "or" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oregon" ].

Pennsylvania_n1 := n_proper_le &
  [ STEM < "pennsylvania" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pennsylvania" ].

Pennsylvania_n2 := n_proper_abb_le &
  [ STEM < "pa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pennsylvania" ].

Rhodeisland_n1 := n_proper_le &
  [ STEM < "rhode", "island" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rhodeisland" ].

Rhodeisland_n2 := n_proper_abb_le &
  [ STEM < "ri" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rhodeisland" ].

Southcarolina_n1 := n_proper_le &
  [ STEM < "south", "carolina" >,
    SYNSEM.LKEYS.KEYREL.CARG "Southcarolina" ].

Southcarolina_n2 := n_proper_abb_le &
  [ STEM < "sc" >,
    SYNSEM.LKEYS.KEYREL.CARG "Southcarolina" ].

Southdakota_n1 := n_proper_le &
  [ STEM < "south", "dakota" >,
    SYNSEM.LKEYS.KEYREL.CARG "Southdakota" ].

Southdakota_n2 := n_proper_abb_le &
  [ STEM < "sd" >,
    SYNSEM.LKEYS.KEYREL.CARG "Southdakota" ].

Tennessee_n1 := n_proper_le &
  [ STEM < "tennessee" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tennessee" ].

Tennessee_n2 := n_proper_abb_le &
  [ STEM < "tn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tennessee" ].

Texas_n1 := n_proper_le &
  [ STEM < "texas" >,
    SYNSEM.LKEYS.KEYREL.CARG "Texas" ].

Texas_n2 := n_proper_abb_le &
  [ STEM < "tx" >,
    SYNSEM.LKEYS.KEYREL.CARG "Texas" ].

Utah_n1 := n_proper_le &
  [ STEM < "utah" >,
    SYNSEM.LKEYS.KEYREL.CARG "Utah" ].

Utah_n2 := n_proper_abb_le &
  [ STEM < "ut" >,
    SYNSEM.LKEYS.KEYREL.CARG "Utah" ].

Vermont_n1 := n_proper_le &
  [ STEM < "vermont" >,
    SYNSEM.LKEYS.KEYREL.CARG "Vermont" ].

Vermont_n2 := n_proper_abb_le &
  [ STEM < "vt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Vermont" ].

Virginia_n1 := n_proper_le &
  [ STEM < "virginia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Virginia" ].

Virginia_n2 := n_proper_abb_le &
  [ STEM < "va" >,
    SYNSEM.LKEYS.KEYREL.CARG "Virginia" ].

Washington_n1 := n_proper_le &
  [ STEM < "washington" >,
    SYNSEM.LKEYS.KEYREL.CARG "Washington" ].

Washington_n2 := n_proper_abb_le &
  [ STEM < "wa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Washington" ].

Washingtondc_n1 := n_proper_le &
  [ STEM < "washington", "dc" >,
    SYNSEM.LKEYS.KEYREL.CARG "Washingtondc" ].

Washingtondc_n2 := n_proper_abb_le &
  [ STEM < "dc" >,
    SYNSEM.LKEYS.KEYREL.CARG "Washingtondc" ].

Washingtondc_n3 := n_proper_abb_le &
  [ STEM < "d.c." >,
    SYNSEM.LKEYS.KEYREL.CARG "Washingtondc" ].

Washingtondc_n4 := n_proper_abb_le &
  [ STEM < "d", "c" >,
    SYNSEM.LKEYS.KEYREL.CARG "Washingtondc" ].

Washingtondc_n5 := n_proper_abb_le &
  [ STEM < "d", ".", "c", "." >,
    SYNSEM.LKEYS.KEYREL.CARG "Washingtondc" ].

Washingtondc_n6 := n_proper_abb_le &
  [ STEM < "d-c" >,
    SYNSEM.LKEYS.KEYREL.CARG "Washingtondc" ].

Washingtondc_n7 := n_proper_abb_le &
  [ STEM < "d", "-", "c" >,
    SYNSEM.LKEYS.KEYREL.CARG "Washingtondc" ].

Westvirginia_n1 := n_proper_le &
  [ STEM < "west", "virginia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Westvirginia" ].

Westvirginia_n2 := n_proper_abb_le &
  [ STEM < "wv" >,
    SYNSEM.LKEYS.KEYREL.CARG "Westvirginia" ].

Wisconsin_n1 := n_proper_le &
  [ STEM < "wisconsin" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wisconsin" ].

Wisconsin_n2 := n_proper_abb_le &
  [ STEM < "wi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wisconsin" ].

Wyoming_n1 := n_proper_le &
  [ STEM < "wyoming" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wyoming" ].

Wyoming_n2 := n_proper_abb_le &
  [ STEM < "wy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Wyoming" ].

signup_n1 := n_intr_le &
  [ STEM < "sign", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sign_up_n_rel" ].

bonus_n1 := n_ppof_le &
  [ STEM < "bonus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bonus_rel" ].

in_order_a1 := adj_pred_intrans_le &
  [ STEM < "in", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_order_rel" ].

number_title := n_title_le &
  [ STEM < "number" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb_title := n_title_le &
  [ STEM < "no" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb_title_2 := n_title_le &
  [ STEM < "no", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb2_title := n_title_le &
  [ STEM < "num" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

number_abb2_title_2 := n_title_le &
  [ STEM < "num", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

utility_n1 := n_intr_le &
  [ STEM < "utility" >,
    SYNSEM.LKEYS.KEYREL.PRED "_utility_rel" ].

label_n1 := n_ppof_le &
  [ STEM < "label" >,
    SYNSEM.LKEYS.KEYREL.PRED "_label_n_rel" ].

label_v1 := v_np_trans_le &
  [ STEM < "label" >,
    SYNSEM.LKEYS.KEYREL.PRED "_label_v_rel" ].

break_down_v1 := v_particle_np_le &
  [ STEM < "break" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_break_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

break_down_v2 := v_particle_le &
  [ STEM < "break" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_break_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

break_up_v1 := v_particle_np_le &
  [ STEM < "break" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_break_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

break_up_v2 := v_particle_le &
  [ STEM < "break" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_break_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

better_adv1 := adv_vp_post_le &
  [ STEM < "better" >,
    SYNSEM.LKEYS.KEYREL.PRED "_better_adv_rel" ].

best_adv1 := adv_int_vp_le &
  [ STEM < "best" >,
    SYNSEM.LKEYS.KEYREL.PRED "_best_adv_rel" ].

the_best_adv1 := adv_vp_post_le &
  [ STEM < "the", "best" >,
    SYNSEM.LKEYS.KEYREL.PRED "_best_adv_rel" ].

quicker_adv1 := adv_vp_post_le &
  [ STEM < "quicker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quicker_adv_rel" ].

promise_v2 := v_np_non_trans_le &
  [ STEM < "promise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promise_v_rel" ].

promise_v3 := v_unerg_le &
  [ STEM < "promise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promise_v_rel" ].

promise_v4 := v_ditrans_le &
  [ STEM < "promise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promise_v_rel" ].

promise_v5 := v_cp_prop_non_trans_le &
  [ STEM < "promise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_promise_v_rel" ].

attempt_v1 := v_np_trans_le &
  [ STEM < "attempt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attempt_v_rel" ].

attempt_v2 := v_subj_equi_le &
  [ STEM < "attempt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attempt_v_rel" ].

average_n1 := n_ppof_le &
  [ STEM < "average" >,
    SYNSEM.LKEYS.KEYREL.PRED "_average_n_rel" ].

average_a1 := adj_intrans_le &
  [ STEM < "average" >,
    SYNSEM.LKEYS.KEYREL.PRED "_average_adj_rel" ].

average_v1 := v_np*_trans_le &
  [ STEM < "average" >,
    SYNSEM.LKEYS.KEYREL.PRED "_average_v_rel" ].

banking_n1 := n_mass_le &
  [ STEM < "banking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_banking_rel" ].

baseline_n1 := n_intr_le &
  [ STEM < "baseline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_baseline_rel" ].

chart_n1 := n_ppof_le &
  [ STEM < "chart" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chart_n_rel" ].

chart_v1 := v_np*_trans_le &
  [ STEM < "chart" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chart_v_rel" ].

coast_n1 := n_ppof_le &
  [ STEM < "coast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coast_n_rel" ].

coast_v1 := v_unerg_le &
  [ STEM < "coast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coast_v_rel" ].

competition_n1 := n_mass_le &
  [ STEM < "competition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_competition_rel" ].

comprise_v1 := v_np_trans_le &
  [ STEM < "comprise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_comprise_rel" ].

compute_v1 := v_np_trans_le &
  [ STEM < "compute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compute_rel" ].

debit_n1 := n_intr_le &
  [ STEM < "debit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_debit_n_rel" ].

debit_v1 := v_np_trans_le &
  [ STEM < "debit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_debit_v_rel" ].

default_n1 := n_intr_le &
  [ STEM < "default" >,
    SYNSEM.LKEYS.KEYREL.PRED "_default_n_rel" ].

default_v1 := v_empty_prep_intrans_le &
  [ STEM < "default" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_default_v_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

default_v2 := v_unerg_le &
  [ STEM < "default" >,
    SYNSEM.LKEYS.KEYREL.PRED "_default_v_rel" ].

dept_n1 := n_intr_le &
  [ STEM < "dept" >,
    SYNSEM.LKEYS.KEYREL.PRED "_department_rel" ].

deregulate_v1 := v_np_trans_le &
  [ STEM < "deregulate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deregulate_rel" ].

desktop_n1 := n_intr_le &
  [ STEM < "desktop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_desktop_rel" ].

detail_v1 := v_np_trans_le &
  [ STEM < "detail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_detail_v_rel" ].

digit_n1 := n_intr_le &
  [ STEM < "digit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_digit_rel" ].

discomfort_n1 := n_mass_count_ppof_le &
  [ STEM < "discomfort" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discomfort_rel" ].

distributor_n1 := n_ppof_le &
  [ STEM < "distributor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distributor_rel" ].

electrical_a1 := adj_intrans_le &
  [ STEM < "electrical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_electrical_rel" ].

enter_v1 := v_np*_trans_le &
  [ STEM < "enter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enter_rel" ].

explanatory_a1 := adj_intrans_le &
  [ STEM < "explanatory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_explanatory_rel" ].

fluctuate_v1 := v_unerg_le &
  [ STEM < "fluctuate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fluctuate_rel" ].

furnish_v1 := v_to*_trans_le &
  [ STEM < "furnish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_furnish_rel" ].

generate_v1 := v_np_trans_le &
  [ STEM < "generate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_generate_rel" ].

generation_n1 := n_mass_count_ppof_le &
  [ STEM < "generation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_generation_rel" ].

highest_a1 := adj_superl_le &
  [ STEM < "highest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_rel" ].

highest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "highest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_rel" ].

hour_n2 := n_temp_ppcomp_hour_le &
  [ STEM < "hr" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hour_rel" ].

hydroelectric_a1 := adj_intrans_le &
  [ STEM < "hydroelectric" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hydroelectric_rel" ].

identification_n1 := n_mass_ppcomp_le &
  [ STEM < "identification" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_identification_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

incentive_n1 := n_ppcomp_le &
  [ STEM < "incentive" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_incentive_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

incomplete_a1 := adj_intrans_le &
  [ STEM < "incomplete" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incomplete_rel" ].

initial_v1 := v_np_trans_le &
  [ STEM < "initial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_initial_v_rel" ].

initial_a1 := adj_intrans_le &
  [ STEM < "initial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_initial_adj_rel" ].

initial_n1 := n_ppof_le &
  [ STEM < "initial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_initial_n_rel" ].

invoice_v1 := v_np_trans_le &
  [ STEM < "invoice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invoice_v_rel" ].

invoice_n1 := n_ppcomp_le &
  [ STEM < "invoice" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_invoice_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

legislate_v1 := v_np_trans_le &
  [ STEM < "legislate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_legislate_rel" ].

method_n1 := n_ppof_le &
  [ STEM < "method" >,
    SYNSEM.LKEYS.KEYREL.PRED "_method_rel" ].

monopoly_n1 := n_ppcomp_le &
  [ STEM < "monopoly" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_monopoly_rel",
             LKEYS.--COMPKEY _on_p_rel ] ].

net_n1 := n_intr_le &
  [ STEM < "net" >,
    SYNSEM.LKEYS.KEYREL.PRED "_net_n_rel" ].

net_v1 := v_ditrans_only_le &
  [ STEM < "net" >,
    SYNSEM.LKEYS.KEYREL.PRED "_net_v_rel" ].

nuclear_a1 := adj_intrans_le &
  [ STEM < "nuclear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nuclear_rel" ].

penalty_n1 := n_ppcomp_le &
  [ STEM < "penalty" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_penalty_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

percentage_n1 := n_ppof_le &
  [ STEM < "percentage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_percentage_rel" ].

project_v1 := v_np_trans_le &
  [ STEM < "project" >,
    SYNSEM.LKEYS.KEYREL.PRED "_project_v_rel" ].

prompt_v1 := v_np_trans_le &
  [ STEM < "prompt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prompt_v_rel" ].

prompt_a1 := adj_intrans_le &
  [ STEM < "prompt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prompt_adj_rel" ].

prompt_n1 := n_ppof_le &
  [ STEM < "prompt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prompt_n_rel" ].

quote_v1 := v_np_trans_le &
  [ STEM < "quote" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quote_v_rel" ].

quote_n1 := n_ppof_le &
  [ STEM < "quote" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quote_n_rel" ].

reality_n1 := n_mass_ppcomp_le &
  [ STEM < "reality" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reality_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

renewable_a1 := adj_intrans_le &
  [ STEM < "renewable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_renewable_rel" ].

resident_n1 := n_ppof_le &
  [ STEM < "resident" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resident_n_rel" ].

resident_a1 := adj_intrans_le &
  [ STEM < "resident" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resident_adj_rel" ].

residential_a1 := adj_intrans_le &
  [ STEM < "residential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_residential_rel" ].

response_n1 := n_intr_le &
  [ STEM < "response" >,
    SYNSEM.LKEYS.KEYREL.PRED "_response_rel" ].

response_n2 := n_mass_count_ppto_le &
  [ STEM < "response" >,
    SYNSEM.LKEYS.KEYREL.PRED "_response_rel" ].

seasonal_a1 := adj_intrans_le &
  [ STEM < "seasonal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seasonal_rel" ].

snail_n1 := n_intr_le &
  [ STEM < "snail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_snail_rel" ].

solar_a1 := adj_intrans_le &
  [ STEM < "solar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solar_adj_rel" ].

solar_n1 := n_intr_le &
  [ STEM < "solar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solar_n_rel" ].

subject_v1 := v_to_trans_le &
  [ STEM < "subject" >,
    SYNSEM.LKEYS.KEYREL.PRED "_subject_v_rel" ].

supplier_n1 := n_ppof_le &
  [ STEM < "supplier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supplier_rel" ].

transition_n1 := n_ppof_le &
  [ STEM < "transition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transition_n_rel" ].

transmission_n1 := n_mass_count_ppof_le &
  [ STEM < "transmission" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transmission_rel" ].

usage_n1 := n_mass_ppcomp_le &
  [ STEM < "usage" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_usage_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

utilize_v1 := v_np_trans_le &
  [ STEM < "utilize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_utilize_rel" ].

zip_n1 := n_mass_le &
  [ STEM < "zip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_zip_nothing_rel" ].

zip_v1 := v_np_trans_le &
  [ STEM < "zip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_zip_v_rel" ].

cs_n1 := n_proper_le &
  [ STEM < "c", "s" >,
    SYNSEM.LKEYS.KEYREL.CARG "CS" ].

cs_n2 := n_proper_le &
  [ STEM < "cs" >,
    SYNSEM.LKEYS.KEYREL.CARG "CS" ].

cs_n3 := n_proper_le &
  [ STEM < "c", "-", "s" >,
    SYNSEM.LKEYS.KEYREL.CARG "CS" ].

camcorder_n1 := n_intr_le &
  [ STEM < "camcorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_camcorder_rel" ].

battery_n1 := n_intr_le &
  [ STEM < "battery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_battery_rel" ].

toshiba_n1 := n_proper_le &
  [ STEM < "toshiba" >,
    SYNSEM.LKEYS.KEYREL.CARG "Toshiba" ].

verizon_n1 := n_proper_le &
  [ STEM < "verizon" >,
    SYNSEM.LKEYS.KEYREL.CARG "Verizon" ].

acer_n1 := n_proper_le &
  [ STEM < "acer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Acer" ].

agfa_n1 := n_proper_le &
  [ STEM < "agfa" >,
    SYNSEM.LKEYS.KEYREL.CARG "Agfa" ].

sony_n1 := n_proper_le &
  [ STEM < "sony" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sony" ].

texas_instruments_n1 := n_proper_le &
  [ STEM < "texas", "instruments" >,
    SYNSEM.LKEYS.KEYREL.CARG "Texas_Instruments" ].

micron_n1 := n_proper_le &
  [ STEM < "micron" >,
    SYNSEM.LKEYS.KEYREL.CARG "Micron" ].

hitachi_n1 := n_proper_le &
  [ STEM < "hitachi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hitachi" ].

kyocera_n1 := n_proper_le &
  [ STEM < "kyocera" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kyocera" ].

pioneer_n1 := n_proper_le &
  [ STEM < "pioneer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pioneer" ].

JVC_n1 := n_proper_le &
  [ STEM < "jvc" >,
    SYNSEM.LKEYS.KEYREL.CARG "JVC" ].

portege_n1 := n_proper_le &
  [ STEM < "portege" >,
    SYNSEM.LKEYS.KEYREL.CARG "Portege" ].

canon_n1 := n_proper_le &
  [ STEM < "canon" >,
    SYNSEM.LKEYS.KEYREL.CARG "Canon" ].

pentax_n1 := n_proper_le &
  [ STEM < "pentax" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pentax" ].

johnson_and_johnson_n1 := n_proper_le &
  [ STEM < "johnson", "and", "johnson" >,
    SYNSEM.LKEYS.KEYREL.CARG "Johnson_and_Johnson" ].

johnson_and_johnson_n2 := n_proper_le &
  [ STEM < "johnson", "&", "johnson" >,
    SYNSEM.LKEYS.KEYREL.CARG "Johnson_and_Johnson" ].

lithium_n1 := n_intr_le &
  [ STEM < "lithium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lithium_rel" ].

camera_n1 := n_intr_le &
  [ STEM < "camera" >,
    SYNSEM.LKEYS.KEYREL.PRED "_camera_rel" ].

rescue_v1 := v_np_trans_le &
  [ STEM < "rescue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rescue_v_rel" ].

how_come_c1 := how_compl_mc_le &
  [ STEM < "how", "come" >,
    SYNSEM.LKEYS [ KEYREL.PRED _for_p_rel,
                   ALTKEYREL.PRED "reason_rel" ] ].

stay_prd_v1 := v_subj_equi_prd_le &
  [ STEM < "stay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stay_prd_rel" ].

unreliable_a1 := adj_intrans_le &
  [ STEM < "unreliable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unreliable_rel" ].

out_of_state_a1 := adj_intrans_le &
  [ STEM < "out", "of", "state" >,
    SYNSEM.LKEYS.KEYREL.PRED "_out_of_state_rel" ].

overdraft_n1 := n_intr_le &
  [ STEM < "overdraft" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overdraft_rel" ].

interest_n1 := n_mass_count_ppin_le &
  [ STEM < "interest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interest_n_rel" ].

interest_n2 := n_mass_ppcomp_le &
  [ STEM < "interest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_interest_n_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

loan_n1 := n_intr_le &
  [ STEM < "loan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loan_n_rel" ].

loan_v1 := v_ditrans_le &
  [ STEM < "loan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loan_v_rel" ].

mortgage_v1 := v_np_trans_le &
  [ STEM < "mortgage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mortgage_v_rel" ].

mortgage_n1 := n_intr_le &
  [ STEM < "mortgage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mortgage_n_rel" ].

equity_n1 := n_mass_le &
  [ STEM < "equity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_equity_rel" ].

insure_v1 := v_empty_prep*_trans_le &
  [ STEM < "insure" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_insure_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

fully_deg := adv_degree_spec_v_le &
  [ STEM < "fully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_full_deg_rel" ].

qualify_v1 := v_empty_prep_intrans_le &
  [ STEM < "qualify" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_qualify_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

qualify_v2 := v_unerg_le &
  [ STEM < "qualify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_qualify_for_rel" ].

prequalify_v1 := v_empty_prep_intrans_le &
  [ STEM < "prequalify" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_prequalify_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

prequalify_v2 := v_unerg_le &
  [ STEM < "prequalify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prequalify_for_rel" ].

qualify_v3 := v_empty_prep*_trans_le &
  [ STEM < "qualify" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_qualify_for_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

prequalify_v3 := v_empty_prep_trans_le &
  [ STEM < "prequalify" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_prequalify_for_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

yall := n_pers_pro_you_le &
  [ STEM < "y'all" > ].

yall_2 := n_pers_pro_you_le &
  [ STEM < "y", "'all" > ].

yall_3 := n_pers_pro_you_le &
  [ STEM < "y", "all" > ].

yall_root_1_pre := adv_disc_preh_le &
  [ STEM < "y'all" >,
    SYNSEM.LKEYS.KEYREL.CARG "yall" ].

yall_root_1_post := adv_disc_posth_le &
  [ STEM < "y'all" >,
    SYNSEM.LKEYS.KEYREL.CARG "yall" ].

yall_root_2_pre := adv_disc_preh_le &
  [ STEM < "y", "all" >,
    SYNSEM.LKEYS.KEYREL.CARG "yall" ].

yall_root_2_post := adv_disc_posth_le &
  [ STEM < "y", "all" >,
    SYNSEM.LKEYS.KEYREL.CARG "yall" ].

gently_adv1 := adv_int_vp_le &
  [ STEM < "gently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gently_rel" ].

blow_v1 := v_np_trans_le &
  [ STEM < "blow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blow_v2_rel" ].

unscrew_v1 := v_np_trans_le &
  [ STEM < "unscrew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unscrew_rel" ].

draw_dir_v1 := v_np_prep_trans_dors_le &
  [ STEM < "draw" >,
    SYNSEM.LKEYS.KEYREL.PRED "_draw_v_rel" ].

liquid_n1 := n_mass_count_le &
  [ STEM < "liquid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_liquid_rel" ].

dropper_n1 := n_intr_le &
  [ STEM < "dropper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dropper_rel" ].

tilt_v1 := v_np_trans_le &
  [ STEM < "tilt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tilt_v_rel" ].

tilt_n1 := n_ppof_le &
  [ STEM < "tilt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tilt_n_rel" ].

nostril_n1 := n_ppof_le &
  [ STEM < "nostril" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nostril_rel" ].

store_v1 := v_np_trans_le &
  [ STEM < "store" >,
    SYNSEM.LKEYS.KEYREL.PRED "_store_v_rel" ].

store_v2 := v_np_prep_trans_dors_le &
  [ STEM < "store" >,
    SYNSEM.LKEYS.KEYREL.PRED "_store_v_rel" ].

although_prd := p_subconj_prd_le &
  [ STEM < "although" >,
    SYNSEM.LKEYS.KEYREL.PRED "_although_rel" ].

as_if_prd := p_subconj_prd_le &
  [ STEM < "as", "if" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_if_rel" ].

as_though_prd := p_subconj_prd_le &
  [ STEM < "as", "though" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_though_rel" ].

as_prd := p_subconj_prd_v_or_p_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_prd_rel" ].

if_prd := p_subconj_prd_le &
  [ STEM < "if" >,
    SYNSEM.LKEYS.KEYREL.PRED "_if_c_then_rel" ].

once_prd := p_subconj_prd_le &
  [ STEM < "once" >,
    SYNSEM.LKEYS.KEYREL.PRED "_once_subord_rel" ].

though_prd := p_subconj_prd_le &
  [ STEM < "though" >,
    SYNSEM.LKEYS.KEYREL.PRED "_though_rel" ].

unless_prd := p_subconj_prd_le &
  [ STEM < "unless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unless_rel" ].

while_prd := p_subconj_prd_le &
  [ STEM < "while" >,
    SYNSEM.LKEYS.KEYREL.PRED "_while_rel" ].

when_subord_prd := p_subconj_prd_le &
  [ STEM < "when" >,
    SYNSEM.LKEYS.KEYREL.PRED "_when_subord_rel" ].

knee_n1 := n_ppof_le &
  [ STEM < "knee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_knee_n_rel" ].

leftover_a1 := adj_attr_intrans_le &
  [ STEM < "leftover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leftover_rel" ].

pharmacist_n1 := n_intr_le &
  [ STEM < "pharmacist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pharmacist_rel" ].

medicine_n1 := n_mass_count_le &
  [ STEM < "medicine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_medicine_rel" ].

and_conj_amp := conj_complex_amp_le &
  [ STEM < "&" > ].

and_conj_2_amp := conj_complex_amp_both_le &
  [ STEM < "&" > ].

null_a1 := adj_intrans_le &
  [ STEM < "null" >,
    SYNSEM.LKEYS.KEYREL.PRED "_null_rel" ].

void_a1 := adj_intrans_le &
  [ STEM < "void" >,
    SYNSEM.LKEYS.KEYREL.PRED "_void_a_rel" ].

delivery_n1 := n_mass_count_ppof_le &
  [ STEM < "delivery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delivery_rel" ].

address_n1 := n_ppof_appos_le &
  [ STEM < "address" >,
    SYNSEM.LKEYS.KEYREL.PRED "_address_n_rel" ].

disable_v1 := v_np_trans_le &
  [ STEM < "disable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disable_rel" ].

inactivity_n1 := n_mass_le &
  [ STEM < "inactivity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inactivity_rel" ].

cluster_n1 := n_ppof_le &
  [ STEM < "cluster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cluster_n_rel" ].

online_a1 := adj_intrans_le &
  [ STEM < "online" >,
    SYNSEM.LKEYS.KEYREL.PRED "_online_a_rel" ].

online_a2 := adj_intrans_le &
  [ STEM < "on", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_online_a_rel" ].

online_a3 := adj_intrans_le &
  [ STEM < "on", "-", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_online_a_rel" ].

dvd_n1 := n_intr_le &
  [ STEM < "dvd" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dvd_rel" ].

return_n1 := n_mass_count_ppof_le &
  [ STEM < "return" >,
    SYNSEM.LKEYS.KEYREL.PRED "_return_n_rel" ].

retailer_n1 := n_ppof_le &
  [ STEM < "retailer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_retailer_rel" ].

policy_n1 := n_mass_count_ppof_le &
  [ STEM < "policy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_policy_rel" ].

policy_n2 := n_ppcomp_oblig_le &
  [ STEM < "policy" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_policy_rel",
             LKEYS.--COMPKEY _on_p_rel ] ].

bottom_line_n1 := n_ppof_le &
  [ STEM < "bottom", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bottom_line_rel" ].

appear_v3 := v_expl_it_subj_pp_cp_le &
  [ STEM < "appear" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appear_rel" ].

kwh_n1 := n_mass_count_le &
  [ STEM < "kwh" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kwh_rel" ].

etc_conj := etc_conj_le &
  [ STEM < "etc" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED "_and_c_rel" ].

etc_conj_2 := etc_conj_le &
  [ STEM < "etc." >,
    SYNSEM.LKEYS.ALTKEYREL.PRED "_and_c_rel" ].

etc_conj_3 := etc_conj_le &
  [ STEM < "etc", "." >,
    SYNSEM.LKEYS.ALTKEYREL.PRED "_and_c_rel" ].

rain_n1 := n_mass_le &
  [ STEM < "rain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rain_n_rel" ].

allocation_n1 := n_mass_count_ppof_le &
  [ STEM < "allocation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allocation_rel" ].

allotment_n1 := n_mass_count_le &
  [ STEM < "allotment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_allotment_rel" ].

sell_v3 := v_np_trans_le &
  [ STEM < "sell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sell_rel" ].

other_than_p := p_le &
  [ STEM < "other", "than" >,
    SYNSEM.LKEYS.KEYREL.PRED _other_than_rel ].

tax_n1 := n_mass_count_le &
  [ STEM < "tax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tax_n_rel" ].

leave_n1 := n_mass_le &
  [ STEM < "leave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leave_n_rel" ].

spanish_a1 := adj_intrans_le &
  [ STEM < "spanish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spanish_rel" ].

Spanish_n1 := n_proper_le &
  [ STEM < "spanish" >,
    SYNSEM.LKEYS.KEYREL.CARG "Spanish" ].

Spanish_n2 := n_intr_le &
  [ STEM < "spanish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spanish_n_rel" ].

Spain_n1 := n_proper_le &
  [ STEM < "spain" >,
    SYNSEM.LKEYS.KEYREL.CARG "Spain" ].

resend_v1 := v_np_trans_le &
  [ STEM < "resend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resend_rel" ].

resend_v2 := v_ditrans_only_le &
  [ STEM < "resend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resend_rel" ].

resend_v3 := v_empty_to_trans_le &
  [ STEM < "resend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resend_rel" ].

resend_to_v1 := v_prep_intrans_le &
  [ STEM < "resend" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_resend_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].


work_related_isect := adj_intrans_le &
  [ STEM < "work", "related" >,
    SYNSEM.LKEYS.KEYREL.PRED "_work_related_rel" ].

drop_v3 := v_ditrans_le &
  [ STEM < "drop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drop_cause_v_rel" ].

IRA_n1 := n_proper_le &
  [ STEM < "ira" >,
    SYNSEM.LKEYS.KEYREL.CARG "ira" ].

please_abb_adv3 := adv_vp_aux_le &
  [ STEM < "pls" >,
    SYNSEM.LKEYS.KEYREL.PRED "_please_adv_rel" ].

please_abb_adv4 := adv_int_vp_post_le &
  [ STEM < "pls" >,
    SYNSEM.LKEYS.KEYREL.PRED "_please_adv_rel" ].

ship_v1 := v_unacc_le &
  [ STEM < "ship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ship_v_rel" ].

ship_v2 := v_np*_trans_le &
  [ STEM < "ship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ship_cause_v_rel" ].

ship_v3 := v_ditrans_only_le &
  [ STEM < "ship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ship_cause_v_rel" ].

ship_v4 := v_empty_to_trans_le &
  [ STEM < "ship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ship_cause_v_rel" ].

carry_on_n1 := n_intr_le &
  [ STEM < "carry", "on" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carry_on_n_rel" ].

s-and-h_n1 := n_intr_le &
  [ STEM < "shipping", "and", "handling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shipping_and_handling_rel" ].

s-and-h_n2 := n_intr_le &
  [ STEM < "shipping", "&", "handling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shipping_and_handling_rel" ].

language_n1 := n_mass_count_le &
  [ STEM < "language" >,
    SYNSEM.LKEYS.KEYREL.PRED "_language_rel" ].

print_v2 := v_np_prep_trans_le &
  [ STEM < "print" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_print_v_rel",
             LKEYS.--OCOMPKEY _onto_p_rel ] ].

turn_around_n1 := n_mass_le &
  [ STEM < "turn", "around" >,
    SYNSEM.LKEYS.KEYREL.PRED "_turn_around_n_rel" ].

fly_over_v1 := v_particle_le &
  [ STEM < "fly" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fly_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

inventory_n1 := n_mass_ppcomp_le &
  [ STEM < "inventory" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_inventory_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

ability_n1 := n_intr_le &
  [ STEM < "ability" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ability_rel" ].

ability_n2 := n_vpcomp_le &
  [ STEM < "ability" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ability_h_rel" ].

USD_n1 := n_plur_le &
  [ STEM < "USD" >,
    SYNSEM.LKEYS.KEYREL.PRED "_USD_rel" ].

scramble_n1 := n_intr_le &
  [ STEM < "scramble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scramble_n_rel" ].

receive_off_v2 := v_particle_np_le &
  [ STEM < "receive" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_receive_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

place_v2 := v_np_trans_le &
  [ STEM < "place" >,
    SYNSEM.LKEYS.KEYREL.PRED "_place_v_rel" ].

at_once_adv1 := adv_int_vp_le &
  [ STEM < "at", "once" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_once_rel" ].

vary_v2 := v_unacc_le &
  [ STEM < "vary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vary_v_rel" ].

write_back_v1 := v_particle_np_le &
  [ STEM < "write" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_write_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

write_back_v2 := v_particle_le &
  [ STEM < "write" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_write_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

also_adv3 := adv_vp_post_le &
  [ STEM < "also" >,
    SYNSEM.LKEYS.KEYREL.PRED "_also_rel" ].

refund_v1 := v_ditrans_le &
  [ STEM < "refund" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refund_v_rel" ].

refund_v2 := v_np_trans_le &
  [ STEM < "refund" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refund_v_rel" ].

refund_v3 := v_unerg_le &
  [ STEM < "refund" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refund_v_rel" ].

refund_v4 := v_np_prep_trans_le &
  [ STEM < "refund" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_refund_v_rel",
             LKEYS.--OCOMPKEY _for_p_rel ] ].

transmit_v1 := v_np_trans_le &
  [ STEM < "transmit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transmit_rel" ].

transmit_v2 := v_np_prep_trans_le &
  [ STEM < "transmit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_transmit_rel", 
             LKEYS.--OCOMPKEY _to_p_rel ] ].

for_the_most_part_adv1 := adv_int_vp_le &
  [ STEM < "for", "the", "most", "part" >,
    SYNSEM.LKEYS.KEYREL.PRED "_for_the_most_part_rel" ].

in_person_adv1 := adv_vp_post_le &
  [ STEM < "in", "person" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_person_rel" ].

durable_a1 := adj_intrans_le &
  [ STEM < "durable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_durable_rel" ].

cauthorization_n1 := n_mass_count_ppof_le &
  [ STEM < "authorization" >,
    SYNSEM.LKEYS.KEYREL.PRED "_authorization_rel" ].

above_adv1 := pp_le &
  [ STEM < "above" >,
    SYNSEM.LKEYS.KEYREL.PRED _above_adv_rel ].

below_adv1 := pp_le &
  [ STEM < "below" >,
    SYNSEM.LKEYS.KEYREL.PRED _below_adv_rel ].

write_v2 := v_ditrans_le &
  [ STEM < "write" >,
    SYNSEM.LKEYS.KEYREL.PRED "_write_rel" ].

write_v3 := v_empty_prep_intrans_le &
  [ STEM < "write" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_write_about_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

write_v4 := v_unerg_le &
  [ STEM < "write" >,
    SYNSEM.LKEYS.KEYREL.PRED "_write_about_rel" ].

issue_v2 := v_np_trans_le &
  [ STEM < "issue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_issue_v_rel" ].

coupon_n1 := n_intr_le &
  [ STEM < "coupon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coupon_rel" ].

own_n1 := n_intr_poss_le &
  [ STEM < "own" >,
    SYNSEM.LKEYS.KEYREL.PRED "_own_n_rel" ].

own_a1 := adj_poss_le &
  [ STEM < "own" >,
    SYNSEM.LKEYS.KEYREL.PRED "_own_adj_rel" ].

zipper_n1 := n_intr_le &
  [ STEM < "zipper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_zipper_rel" ].

fabric_n1 := n_mass_count_le &
  [ STEM < "fabric" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fabric_rel" ].

vertical_a1 := adj_intrans_le &
  [ STEM < "vertical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vertical_rel" ].

currently_a2 := adv_int_vp_post_le &
  [ STEM < "currently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_currently_rel" ].

whether_or_not_c_fin := comp_whether_fin_le &
  [ STEM < "whether", "or", "not" > ].

whether_or_not_c_inf := comp_whether_inf_le &
  [ STEM < "whether", "or", "not" > ].

ecommerce_n1 := n_mass_le &
  [ STEM < "ecommerce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ecommerce_rel" ].

ecommerce_n2 := n_mass_le &
  [ STEM < "e", "commerce" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ecommerce_rel" ].

check_v3 := v_cp_fin_inf_non_trans_le &
  [ STEM < "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_v_rel" ].

check_v4 := v_subj_equi_le &
  [ STEM < "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_v_rel" ].

verify_v1 := v_np_trans_le &
  [ STEM < "verify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_verify_rel" ].

verify_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "verify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_verify_rel" ].

Silicon_Valley_n1 := n_proper_le &
  [ STEM < "silicon", "valley" >,
    SYNSEM.LKEYS.KEYREL.CARG "Silicon_Valley" ].

not_yet_adv1 := adv_vp_aux_le &
  [ STEM < "not", "yet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_not_yet_rel" ].

not_as_yet_adv1 := adv_vp_pre_le &
  [ STEM < "not", "as", "yet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_not_as_yet_rel" ].

you_all := n_pers_pro_you_le &
  [ STEM < "you", "all" > ].

refund_n1 := n_ppof_le &
  [ STEM < "refund" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refund_n_rel" ].

placement_n1 := n_ppof_le &
  [ STEM < "placement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_placement_rel" ].

hold_off_v2 := v_particle_le &
  [ STEM < "hold" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hold_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

order_n1 := n_mass_count_ppof_le &
  [ STEM < "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_n_rel" ].

order_abb_n1 := n_intr_le &
  [ STEM < "ord" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_n_rel" ].

order_ttl := n_title_le &
  [ STEM < "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_n_rel" ].

order_abb_ttl := n_title_le &
  [ STEM < "ord" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_n_rel" ].

order_abb_ttl_2 := n_title_le &
  [ STEM < "ord", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_n_rel" ].

order_status_n1 := n_mass_count_ppof_le &
  [ STEM < "order", "-", "status" >,
    SYNSEM.LKEYS.KEYREL.PRED "_order_status_n_rel" ].

guarantee_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "guarantee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guarantee_v_rel" ].

guarantee_v3 := v_np_trans_le &
  [ STEM < "guarantee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guarantee_v_rel" ].

email_v2 := v_np*_trans_le &
  [ STEM < "email" >,
    SYNSEM.LKEYS.KEYREL.PRED "_email_v_rel" ].

e_mail_v1 := v_ditrans_le &
  [ STEM < "e", "mail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_email_v_rel" ].

e_mail_v2 := v_np*_trans_le &
  [ STEM < "e", "mail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_email_v_rel" ].

backpack_n1 := n_intr_le &
  [ STEM < "backpack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_backpack_rel" ].

white_n1 := n_mass_count_le &
  [ STEM < "white" >,
    SYNSEM.LKEYS.KEYREL.PRED "_white_n_rel" ].

black_n1 := n_mass_count_le &
  [ STEM < "black" >,
    SYNSEM.LKEYS.KEYREL.PRED "_black_n_rel" ].

blue_n1 := n_mass_count_le &
  [ STEM < "blue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blue_n_rel" ].

red_n2 := n_mass_count_le &
  [ STEM < "red" >,
    SYNSEM.LKEYS.KEYREL.PRED "_red_n_rel" ].

green_n1 := n_mass_count_le &
  [ STEM < "green" >,
    SYNSEM.LKEYS.KEYREL.PRED "_green_n_rel" ].

yellow_n1 := n_mass_count_le &
  [ STEM < "yellow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yellow_n_rel" ].

brown_n2 := n_mass_count_le &
  [ STEM < "brown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brown_n_rel" ].

purple_n1 := n_mass_count_le &
  [ STEM < "purple" >,
    SYNSEM.LKEYS.KEYREL.PRED "_purple_n_rel" ].

orange_n1 := n_mass_count_le &
  [ STEM < "orange" >,
    SYNSEM.LKEYS.KEYREL.PRED "_orange_n_rel" ].

grey_n1 := n_mass_count_le &
  [ STEM < "grey" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grey_n_rel" ].

gray_n1 := n_mass_count_le &
  [ STEM < "gray" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grey_n_rel" ].

silver_n1 := n_mass_count_le &
  [ STEM < "silver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_silver_n_rel" ].

silver_isect := adj_intrans_le &
  [ STEM < "silver" >,
    SYNSEM.LKEYS.KEYREL.PRED "_silver_adj_rel" ].

canvas_n1 := n_mass_count_le &
  [ STEM < "canvas" >,
    SYNSEM.LKEYS.KEYREL.PRED "_canvas_n_rel" ].

color_n1 := n_mass_count_le &
  [ STEM < "color" >,
    SYNSEM.LKEYS.KEYREL.PRED "_color_n_rel" ].

colour_n1 := n_mass_count_le &
  [ STEM < "colour" >,
    SYNSEM.LKEYS.KEYREL.PRED "_color_n_rel" ].

status_n1 := n_mass_count_ppof_le &
  [ STEM < "status" >,
    SYNSEM.LKEYS.KEYREL.PRED "_status_rel" ].

alternate_a1 := adj_intrans_le &
  [ STEM < "alternate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alternate_adj_rel" ].

cloud_n1 := n_ppof_le &
  [ STEM < "cloud" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloud_n_rel" ].

cloud_v1 := v_np_trans_le &
  [ STEM < "cloud" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloud_v_rel" ].

as_eq_deg := as_degree_spec_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_deg_rel" ].

as_eq_nc_deg := comp_degree_spec_nc_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_deg_rel" ].

as_comp_prep := p_noslash_prtcl_le &
  [ STEM < "as" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_p_comp_rel ].

as_possible_pp := pp_as_adj_le &
  [ STEM < "as", "possible" > ].

once_deg := adv_degree_spec_v_le &
  [ STEM < "once" >,
    SYNSEM.LKEYS.KEYREL.PRED "_once_deg_rel" ].

twice_deg := adv_degree_spec_v_le &
  [ STEM < "twice" >,
    SYNSEM.LKEYS.KEYREL.PRED "_twice_deg_rel" ].

check_ttl := n_title_le &
  [ STEM < "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_check_n_rel" ].

health_n1 := n_mass_le &
  [ STEM < "health" >,
    SYNSEM.LKEYS.KEYREL.PRED "_health_rel" ].

US_n2 := n_intr_named_le &
  [ STEM < "u", "s" >,
    SYNSEM.LKEYS.KEYREL.CARG "US" ].

fiscal_a1 := adj_intrans_le &
  [ STEM < "fiscal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fiscal_rel" ].

income_n1 := n_mass_count_le &
  [ STEM < "income" >,
    SYNSEM.LKEYS.KEYREL.PRED "_income_rel" ].

ownership_n1 := n_ppof_le &
  [ STEM < "ownership" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ownership_rel" ].

transcript_n1 := n_ppof_le &
  [ STEM < "transcript" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transcript_rel" ].

investor_n1 := n_intr_le &
  [ STEM < "investor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_investor_rel" ].

flow_n1 := n_mass_count_ppof_le &
  [ STEM < "flow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flow_n_rel" ].

flow_v1 := v_unerg_le &
  [ STEM < "flow" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flow_v_rel" ].

of_interest_a1 := adj_trans_le &
  [ STEM < "of", "interest" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_of_interest_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

quarter_n3 := n_ppof_le &
  [ STEM < "quarter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quarter_temp_rel" ].

working_a1 := adj_attr_intrans_le &
  [ STEM < "working" >,
    SYNSEM.LKEYS.KEYREL.PRED "_working_rel" ].

share_n1 := n_ppof_le &
  [ STEM < "share" >,
    SYNSEM.LKEYS.KEYREL.PRED "_share_n_rel" ].

profit_n1 := n_mass_count_le &
  [ STEM < "profit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profit_n_rel" ].

double_bill_v1 := v_empty_prep*_trans_le &
  [ STEM < "double", "bill" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_double_bill_v_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

synchronize_v1 := v_empty_prep_trans_le &
  [ STEM < "synchronize" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_synchronize_v_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

synchronize_v2 := v_empty_prep_intrans_le &
  [ STEM < "synchronize" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_synchronize_v_rel",
             LKEYS.--OCOMPKEY _with_p_sel_rel ] ].

synchronize_v3 := v_np_trans_le &
  [ STEM < "synchronize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_synchronize_v_rel" ].

pay_n1 := n_mass_le &
  [ STEM < "pay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pay_n_rel" ].

pretty_a1 := adj_intrans_le &
  [ STEM < "pretty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pretty_adj_rel" ].

consolidate_v1 := v_np_trans_le &
  [ STEM < "consolidate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consolidate_rel" ].

residence_n1 := n_ppof_le &
  [ STEM < "residence" >,
    SYNSEM.LKEYS.KEYREL.PRED "_residence_rel" ].

as_of_yet_adv1 := adv_int_vp_post_le &
  [ STEM < "as", "of", "yet" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_of_yet_rel ].

a_per_p := p_nbar_comp_nmod_le &
  [ STEM < "a" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_per_rel ].

an_per_p := p_nbar_comp_nmod_le &
  [ STEM < "an" >,
    SYNSEM.LKEYS.KEYREL.PRED _a_per_rel ].

advertisement_n1 := n_intr_le &
  [ STEM < "advertisement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advertisement_rel" ].

ad_n1 := n_intr_le &
  [ STEM < "ad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ad_n_rel" ].

yet_adv2 := adv_s_pre_word_nospec_le &
  [ STEM < "yet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yet_scop_rel" ].

skeptical_a1 := adj_reg_cp_le &
  [ STEM < "skeptical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_skeptical_rel" ].

wrong_adv1 := adv_int_vp_post_le &
  [ STEM < "wrong" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wrong_adv_rel" ].

record_n1 := n_mass_count_ppof_le &
  [ STEM < "record" >,
    SYNSEM.LKEYS.KEYREL.PRED "_record_n_rel" ].

back_order_n1 := n_mass_count_ppof_le &
  [ STEM < "back", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_back_order_n_rel" ].

back_order_n2 := n_mass_count_ppof_le &
  [ STEM < "backorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_back_order_n_rel" ].

back_order_v1 := v_np*_trans_le &
  [ STEM < "back", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_back_order_v_rel" ].

back_order_v2 := v_np*_trans_le &
  [ STEM < "back", "-", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_back_order_v_rel" ].

so_a1 := adj_pred_intrans_le &
  [ STEM < "so" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_adj_rel" ].

regretfully_adv1 := adv_int_vp_le &
  [ STEM < "regretfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_regretfully_rel" ].

special_n1 := n_intr_le &
  [ STEM < "special" >,
    SYNSEM.LKEYS.KEYREL.PRED "_special_n_rel" ].

above_n1 := n_intr_le &
  [ STEM < "above" >,
    SYNSEM.LKEYS.KEYREL.PRED "_above_n_rel" ].

rather_than_conj := conj_complex_rather_le &
  [ STEM < "rather", "than" > ].

instead_of := conj_complex_instead_le &
  [ STEM < "instead", "of" > ].

rectangular_a1 := adj_intrans_le &
  [ STEM < "rectangular" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rectangular_rel" ].

square_a1 := adj_intrans_le &
  [ STEM < "square" >,
    SYNSEM.LKEYS.KEYREL.PRED "_square_adj_rel" ].

best_of_all_adv1 := adv_s_pre_le &
  [ STEM < "best", "of", "all" >,
    SYNSEM.LKEYS.KEYREL.PRED "_best_of_all_rel" ].

addressee_n1 := n_ppof_le &
  [ STEM < "addressee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_addressee_rel" ].

intend_for_v1 := v_empty_prep_trans_le &
  [ STEM < "intend" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_intend_for_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

intend_for_v2 := v_oeq_pp_inf_le &
  [ STEM < "intend" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_intend_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

up_front_a1 := adj_trans_le &
  [ STEM < "up", "front" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_up_front_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].


others_n1 := n_plur_ppcomp_le &
  [ STEM < "others" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_others_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

as_to_p1 := p_reg_le &
  [ STEM < "as", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_to_p_rel ].

as_to_prtcl := p_prtcl_le &
  [ STEM < "as", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _as_to_p_sel_rel ].

wonder_v3 := v_np_trans_le &
  [ STEM < "wonder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wonder_v_rel" ].

ring_n1 := n_ppof_le &
  [ STEM < "ring" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ring_n_rel" ].

amythest_n1 := n_intr_le &
  [ STEM < "amythest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amythest_rel" ].

or_what_adv1 := adv_int_vp_post_le &
  [ STEM < "or", "what" >,
    SYNSEM.LKEYS.KEYREL.PRED _or_what_rel ].

hold_up_v1 := v_particle_np_le &
  [ STEM < "hold" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hold_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

hold_up_on_v1 := v_particle_pp_le &
  [ STEM < "hold" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hold_up_rel",
             LKEYS [ --COMPKEY _up_p_sel_rel,
                     --OCOMPKEY _on_p_rel ] ] ].

have_yet_v1 := v_ssr_particle_le &
  [ STEM < "have" >,
    SYNSEM.LKEYS.--COMPKEY _yet_r_rel ].

have_back_v1 := v_particle_np_le &
  [ STEM < "have" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_have_v_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

ebags_n1 := n_proper_le &
  [ STEM < "e", "bags" >,
    SYNSEM.LKEYS.KEYREL.CARG "e-bags" ].

ebags_n2 := n_proper_le &
  [ STEM < "e", "bag" >,
    SYNSEM.LKEYS.KEYREL.CARG "e-bags" ].

lit-email_2 := n_proper_le &
  [ STEM < "emailersatz" > ].

okay_n1 := n_intr_le &
  [ STEM < "okay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_n_rel" ].

okay_n2 := n_intr_le &
  [ STEM < "ok" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_n_rel" ].

okay_n3 := n_intr_le &
  [ STEM < "o", "k" >,
    SYNSEM.LKEYS.KEYREL.PRED "_okay_n_rel" ].

click_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "click" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_click_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

click_v2 := v_unerg_le &
  [ STEM < "click" >,
    SYNSEM.LKEYS.KEYREL.PRED "_click_on_rel" ].

mtn_view_n1 := n_proper_le &
  [ STEM < "mountain", "view" >,
    SYNSEM.LKEYS.KEYREL.CARG "mountain_view" ].

check_on_v1 := v_empty_prep_intrans_le &
  [ STEM < "check" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_check_on_rel",
             LKEYS.--COMPKEY _on_p_sel_rel ] ].

check_up_on_v1 := v_particle_empty_pp_le &
  [ STEM < "check" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_check_up_on_rel",
             LKEYS [ --COMPKEY _up_p_sel_rel,
                     --OCOMPKEY _on_p_sel_rel ] ] ].

san_jose_n1 := n_proper_le &
  [ STEM < "san", "jose" >,
    SYNSEM.LKEYS.KEYREL.CARG "san_jose" ].

menlo_park_n1 := n_proper_le &
  [ STEM < "menlo", "park" >,
    SYNSEM.LKEYS.KEYREL.CARG "menlo_park" ].

cupertino_n1 := n_proper_le &
  [ STEM < "cupertino" >,
    SYNSEM.LKEYS.KEYREL.CARG "cupertino" ].

sunnyvale_n1 := n_proper_le &
  [ STEM < "sunnyvale" >,
    SYNSEM.LKEYS.KEYREL.CARG "sunnyvale" ].

atherton_n1 := n_proper_le &
  [ STEM < "atherton" >,
    SYNSEM.LKEYS.KEYREL.CARG "atherton" ].

woodside_n1 := n_proper_le &
  [ STEM < "woodside" >,
    SYNSEM.LKEYS.KEYREL.CARG "woodside" ].

los_altos_n1 := n_proper_le &
  [ STEM < "los", "altos" >,
    SYNSEM.LKEYS.KEYREL.CARG "los_altos" ].

los_altos_hills_n1 := n_proper_le &
  [ STEM < "los", "altos", "hills" >,
    SYNSEM.LKEYS.KEYREL.CARG "los_altos_hills" ].

redwood_city_n1 := n_proper_le &
  [ STEM < "redwood", "city" >,
    SYNSEM.LKEYS.KEYREL.CARG "redwood_city" ].

sfo_n1 := n_proper_le &
  [ STEM < "sfo" >,
    SYNSEM.LKEYS.KEYREL.CARG "sfo" ].

berkeley_n1 := n_proper_le &
  [ STEM < "berkeley" >,
    SYNSEM.LKEYS.KEYREL.CARG "berkeley" ].

travelers_check_n1 := n_intr_le &
  [ STEM < "traveler's", "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travelers_check_rel" ].

travelers_check_n2 := n_intr_le &
  [ STEM < "traveler", "s", "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travelers_check_rel" ].

travelers_check_n3 := n_intr_le &
  [ STEM < "traveler", "'s", "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travelers_check_rel" ].

travelers_cheque_n1 := n_intr_le &
  [ STEM < "traveler's", "cheque" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travelers_check_rel" ].

travelers_cheque_n2 := n_intr_le &
  [ STEM < "traveler", "s", "cheque" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travelers_check_rel" ].

travelers_cheque_n3 := n_intr_le &
  [ STEM < "traveler", "'s", "cheque" >,
    SYNSEM.LKEYS.KEYREL.PRED "_travelers_check_rel" ].

cashiers_check_n1 := n_intr_le &
  [ STEM < "cashier's", "check" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cashiers_check_rel" ].

electronically_adv1 := adv_int_vp_le &
  [ STEM < "electronically" >,
    SYNSEM.LKEYS.KEYREL.PRED "_electronically_rel" ].

acme_n1 := n_proper_le &
  [ STEM < "acme" >,
    SYNSEM.LKEYS.KEYREL.CARG "acme" ].

amazon_n1 := n_proper_le &
  [ STEM < "amazon" >,
    SYNSEM.LKEYS.KEYREL.CARG "amazon" ].

payable_a1 := adj_trans_le &
  [ STEM < "payable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_payable_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

total_v1 := v_np_non_trans_le &
  [ STEM < "total" >,
    SYNSEM.LKEYS.KEYREL.PRED "_total_v_rel" ].

total_n1 := n_ppof_le &
  [ STEM < "total" >,
    SYNSEM.LKEYS.KEYREL.PRED "_total_n_rel" ].

date_v1 := v_ditrans_only_le &
  [ STEM < "date" >,
    SYNSEM.LKEYS.KEYREL.PRED "_date_v_rel" ].

Canadian_n1 := n_intr_le &
  [ STEM < "canadian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_canadian_n_rel" ].

canadian_a1 := adj_intrans_le &
  [ STEM < "canadian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_canadian_isect_rel" ].

Mexican_n1 := n_intr_le &
  [ STEM < "mexican" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mexican_n_rel" ].

Mexican_n2 := n_proper_le &
  [ STEM < "mexican" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mexican" ].

Belgian_n1 := n_intr_le &
  [ STEM < "belgian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_belgian_n_rel" ].

belgian_a1 := adj_intrans_le &
  [ STEM < "belgian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_belgian_isect_rel" ].

Belgian_n2 := n_proper_le &
  [ STEM < "belgian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Belgian" ].

buck_money_n1 := n_ppof_le &
  [ STEM < "buck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buck_money_rel" ].

lire_money_n1 := n_mass_count_le &
  [ STEM < "lire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lire_rel" ].

lire_money_n2 := n_plur_le &
  [ STEM < "lire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lire_rel" ].

lira_n1 := n_mass_count_le &
  [ STEM < "lira" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lire_rel" ].

lira_n2 := n_plur_le &
  [ STEM < "lira" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lire_rel" ].

franc_n1 := n_intr_le &
  [ STEM < "franc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_franc_rel" ].

frank_money_n1 := n_intr_le &
  [ STEM < "frank" >,
    SYNSEM.LKEYS.KEYREL.PRED "_franc_rel" ].

peso_n1 := n_intr_le &
  [ STEM < "peso" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peso_rel" ].

shekel_n1 := n_intr_le &
  [ STEM < "shekel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shekel_rel" ].

ruble_n1 := n_intr_le &
  [ STEM < "ruble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ruble_rel" ].

drachma_n1 := n_intr_le &
  [ STEM < "drachma" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drachma_rel" ].

drachma_n2 := n_plur_le &
  [ STEM < "drachma" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drachma_rel" ].

money_market_n1 := n_mass_le &
  [ STEM < "money", "market" >,
    SYNSEM.LKEYS.KEYREL.PRED "_money_market_rel" ].

mma_n1 := n_mass_le &
  [ STEM < "mma" >,
    SYNSEM.LKEYS.KEYREL.PRED "_money_market_rel" ].

mma_n2 := n_mass_le &
  [ STEM < "m", "m", "a" >,
    SYNSEM.LKEYS.KEYREL.PRED "_money_market_rel" ].

money_back_guarantee_n1 := n_ppof_le &
  [ STEM < "money", "back", "guarantee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_money_back_guarantee_rel" ].

make_out_v2 := v_particle_np_pp_to_le &
  [ STEM < "make" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_make_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

worth_p := p_ppcomp*_le &
  [ STEM < "worth" >,
    SYNSEM.LKEYS.KEYREL.PRED _worth_p_rel ].

worth_n1 := n_ppof_le &
  [ STEM < "worth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worth_n_rel" ].

traveler_n1 := n_intr_le &
  [ STEM < "traveler" >,
    SYNSEM.LKEYS.KEYREL.PRED "_traveler_rel" ].

billion := adj_bare_specified_card_billion_le & 
  [ STEM < "billion" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000000" ].

billion_comps := adj_complemented_specified_card_billion_le & 
  [ STEM < "billion" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000000" ].

trillion := adj_bare_specified_card_trillion_le & 
  [ STEM < "trillion" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000000" ].

trillion_comps := adj_complemented_specified_card_trillion_le & 
  [ STEM < "trillion" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000000" ].

want_prd := v_obj_equi_non_trans_prd_le &
  [ STEM < "want" >,
    SYNSEM.LKEYS.KEYREL.PRED "_want_v_rel"  ].

want_into_v1 := v_subj_equi_prd_prep_le &
  [ STEM < "want" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_want_v_rel",
             LKEYS.--COMPKEY _into_p_rel ] ].

want_back_v1 := v_particle_np_le &
  [ STEM < "want" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_want_v_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

heater_n1 := n_intr_le &
  [ STEM < "heater" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heater_rel" ].

offpeak_a1 := adj_intrans_le &
  [ STEM < "offpeak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offpeak_isect_rel" ].

offpeak_a2 := adj_intrans_le &
  [ STEM < "off", "peak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offpeak_isect_rel" ].

filing_n1 := n_intr_le &
  [ STEM < "filing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_filing_rel" ].

sec_n1 := n_intr_le &
  [ STEM < "sec" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sec_rel" ].

sec_n2 := n_intr_le &
  [ STEM < "securities", "and", "exchange", "commission" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sec_rel" ].

please_root := adv_disc_please_le &
  [ STEM < "please" >,
    SYNSEM.LKEYS.KEYREL.CARG "please" ].

please_abb_root := adv_disc_please_le &
  [ STEM < "pls" >,
    SYNSEM.LKEYS.KEYREL.CARG "please" ].

proxy_n1 := n_ppof_le &
  [ STEM < "proxy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_proxy_rel" ].

stockholder_n1 := n_ppof_le &
  [ STEM < "stockholder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stockholder_rel" ].

revenue_n1 := n_mass_count_le &
  [ STEM < "revenue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revenue_rel" ].

assurance_n1 := n_mass_count_cpcomp_fin_le &
  [ STEM < "assurance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assurance_rel" ].

hear_back_from_v1 := v_particle_empty_pp*_le &
  [ STEM < "hear" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hear_back_from_rel",
             LKEYS [ --COMPKEY _back_p_sel_rel,
                     --OCOMPKEY _from_p_sel_rel ] ] ].

shipping_out_n1 := n_mass_ppcomp_le &
  [ STEM < "shipping", "out" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_shipping_out_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

track_down_v1 := v_particle_np_le &
  [ STEM < "track" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_track_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

finish_n1 := n_intr_le &
  [ STEM < "finish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finish_n_rel" ].

inch_n1 := n_meas_ppof_le &
  [ STEM < "inch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inch_rel" ].

try_and_fin_v1 := v_subj_equi_and_fin_le &
  [ STEM < "try" >,
    SYNSEM.LKEYS.KEYREL.PRED "_try_v_rel" ].

try_and_bse_v1 := v_subj_equi_and_bse_le &
  [ STEM < "try" >,
    SYNSEM.LKEYS.KEYREL.PRED "_try_v_rel" ].

try_prp_v1 := v_subj_equi_prp_le &
  [ STEM < "try" >,
    SYNSEM.LKEYS.KEYREL.PRED "_try_v_rel" ].

and_c_nonprop := comp_inf_and_le &
  [ STEM < "and" > ].

pound_sign_title := n_title_le &
  [ STEM < "#" >,
    SYNSEM.LKEYS.KEYREL.PRED "_number_n_rel" ].

password_n1 := n_ppof_le &
  [ STEM < "password" >,
    SYNSEM.LKEYS.KEYREL.PRED "_password_rel" ].

incorrect_a1 := adj_intrans_le &
  [ STEM < "incorrect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incorrect_rel" ].

incorrectly := adv_int_vp_le &
  [ STEM < "incorrectly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incorrectly_rel" ].

statistical_a1 := adj_intrans_le &
  [ STEM < "statistical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_statistical_rel" ].

id_ttl := n_title_le &
  [ STEM < "id" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ident_rel" ].

account_title := n_title_le &
  [ STEM < "account" >,
    SYNSEM.LKEYS.KEYREL.PRED "_account_n_rel" ].

dutch_a1 := adj_intrans_le &
  [ STEM < "dutch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dutch_rel" ].

Dutch_n1 := n_proper_le &
  [ STEM < "dutch" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dutch" ].

dutch_n2 := n_mass_count_le &
  [ STEM < "dutch" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dutch_n_rel" ].

sucky_isect := adj_intrans_le &
  [ STEM < "sucky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sucky_rel" ].

equivalent_a1 := adj_trans_le &
  [ STEM < "equivalent" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_equivalent_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

finance_n1 := n_mass_count_le &
  [ STEM < "finance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finance_n_rel" ].

finance_v1 := v_np_trans_le &
  [ STEM < "finance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finance_v_rel" ].

guilder_n1 := n_intr_le &
  [ STEM < "guilder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guilder_rel" ].

Korea_n1 := n_proper_le &
  [ STEM < "korea" >,
    SYNSEM.LKEYS.KEYREL.CARG "Korea" ].

Mexico_n1 := n_proper_le &
  [ STEM < "mexico" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mexico" ].

paycheck_n := n_intr_le &
  [ STEM < "paycheck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_paycheck_rel" ].

payback_n1 := n_intr_le &
  [ STEM < "payback" >,
    SYNSEM.LKEYS.KEYREL.PRED "_payback_n_rel" ].

payback_n2 := n_intr_le &
  [ STEM < "pay", "-", "back" >,
    SYNSEM.LKEYS.KEYREL.PRED "_payback_n_rel" ].

unsupported_a1 := adj_intrans_le &
  [ STEM < "unsupported" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsupported_rel" ].

withdrawal_n1 := n_mass_count_ppof_le &
  [ STEM < "withdrawal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_withdrawal_rel" ].

inactive_a1 := adj_intrans_le &
  [ STEM < "inactive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inactive_rel" ].

deactivate_v1 := v_np_trans_le &
  [ STEM < "deactivate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deactivate_rel" ].

deactivate_v2 := v_np_trans_le &
  [ STEM < "de", "activate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deactivate_rel" ].

unknown_a1 := adj_intrans_le &
  [ STEM < "unknown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unknown_rel" ].

rob_v1 := v_np_trans_le &
  [ STEM < "rob" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rob_v_rel" ].

transaction_n1 := n_mass_count_ppof_le &
  [ STEM < "transaction" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transaction_rel" ].

cash_v1 := v_np_trans_le &
  [ STEM < "cash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cash_v_rel" ].

cash_in_v1 := v_particle_np_le &
  [ STEM < "cash" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cash_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

dollarsign_n1 := n_numcomp_le &
  [ STEM < "$" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dollar_rel" ].

usdsign_n1 := n_numcomp_le &
  [ STEM < "USD" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dollar_rel" ].

dmarksign_n1 := n_numcomp_le &
  [ STEM < "dm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deutschmark_rel" ].

frfrancsign_n1 := n_numcomp_le &
  [ STEM < "ff" >,
    SYNSEM.LKEYS.KEYREL.PRED "_franc_rel" ].

FF_n1 := n_plur_le &
  [ STEM < "ff" >,
    SYNSEM.LKEYS.KEYREL.PRED "_franc_rel" ].

stolen_a1 := adj_intrans_le &
  [ STEM < "stolen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stolen_rel" ].

equivalent_n1 := n_ppof_le &
  [ STEM < "equivalent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_equivalent_n_rel" ].

surprised_a1 := adj_trans_le &
  [ STEM < "surprised" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_surprised_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

in_charge_a1 := adj_trans_le &
  [ STEM < "in", "charge" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_in_charge_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

currency_ersatz_n1 := n_numcomp_le &
  [ STEM < "currencyersatz" > ].

feed_v1 := v_ditrans_le &
  [ STEM < "feed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feed_v_rel" ].

feed_v2 := v_np_trans_le &
  [ STEM < "feed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feed_v_rel" ].

feed_n1 := n_mass_count_le &
  [ STEM < "feed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feed_n_rel" ].

numvalcard1digit := adj_bare_unspecified_card_one_le & 
  [ STEM < "OneDigitErsatz" > ].

numvalcard2digit := adj_bare_unspecified_card_two_le & 
  [ STEM < "TwoDigitErsatz" > ].

numvalcard3digit := adj_bare_unspecified_card_three_le & 
  [ STEM < "ThreeDigitErsatz" > ].

numvalcard4digit := adj_bare_unspecified_card_three_le & 
  [ STEM < "FourDigitErsatz" > ].

numvalcard5digit := adj_bare_unspecified_card_three_le & 
  [ STEM < "FiveDigitErsatz" > ].

numvalcard6digit := adj_bare_unspecified_card_six_le & 
  [ STEM < "SixDigitErsatz" > ].

numvalcard7digit := adj_bare_unspecified_card_six_le & 
  [ STEM < "SevenDigitErsatz" > ].

numvalcard8digit := adj_bare_unspecified_card_six_le & 
  [ STEM < "EightDigitErsatz" > ].

numvalcard9digit := adj_bare_unspecified_card_nine_le & 
  [ STEM < "NineDigitErsatz" > ].

numvalcard10digit := adj_bare_unspecified_card_nine_le & 
  [ STEM < "TenDigitErsatz" > ].

numvalcard11digit := adj_bare_unspecified_card_nine_le & 
  [ STEM < "ElevenDigitErsatz" > ].

numvalcard12digit := adj_bare_unspecified_card_twelve_le & 
  [ STEM < "TwelveDigitErsatz" > ].

numvalcard13PlusDigit := adj_bare_unspecified_card_twelve_le & 
  [ STEM < "ThirteenPlusDigitErsatz" > ].

numvaldomval := n_day_of_month_le &
  [ STEM < "DateValue" >,
    SYNSEM.LKEYS.KEYREL.CARG "DateValue" ].

numvaldomcardval := n_day_of_month_card_le &
  [ STEM < "DateValue" >,
    SYNSEM.LKEYS.KEYREL.CARG "DateValue" ].

numvaldet := det_one_le &
  [ STEM < "Digits1Ersatz" > ].

numvalyofc4digit := n_year_le &
  [ STEM < "FourDigitErsatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "fourdigitersatz" ].

numvalyofc90 := n_year_le &
  [ STEM < "90" >,
    SYNSEM.LKEYS.KEYREL.CARG "90" ].

numvalyofc91 := n_year_le &
  [ STEM < "91" >,
    SYNSEM.LKEYS.KEYREL.CARG "91" ].

numvalyofc92 := n_year_le &
  [ STEM < "92" >,
    SYNSEM.LKEYS.KEYREL.CARG "92" ].

numvalyofc93 := n_year_le &
  [ STEM < "93" >,
    SYNSEM.LKEYS.KEYREL.CARG "93" ].

numvalyofc94 := n_year_le &
  [ STEM < "94" >,
    SYNSEM.LKEYS.KEYREL.CARG "94" ].

numvalyofc95 := n_year_le &
  [ STEM < "95" >,
    SYNSEM.LKEYS.KEYREL.CARG "95" ].

numvalyofc96 := n_year_le &
  [ STEM < "96" >,
    SYNSEM.LKEYS.KEYREL.CARG "96" ].

numvalyofc97 := n_year_le &
  [ STEM < "97" >,
    SYNSEM.LKEYS.KEYREL.CARG "97" ].

numvalyofc98 := n_year_le &
  [ STEM < "98" >,
    SYNSEM.LKEYS.KEYREL.CARG "98" ].

numvalyofc99 := n_year_le &
  [ STEM < "99" >,
    SYNSEM.LKEYS.KEYREL.CARG "99" ].

dofw-date := n_day_of_week_le &
  [ STEM < "DateErsatz" > ].

dofw-dateval := n_day_of_week_le &
  [ STEM < "DateValue" > ].

month-date := n_month_le &
  [ STEM < "DateErsatz" > ].

month-dateval := n_month_le &
  [ STEM < "DateValue" > ].

year-ersatz := n_year_le &
  [ STEM < "YearErsatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "yearersatz" ].

clocktime-ersatz := n_hour_le &
  [ STEM < "ClocktimeErsatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "clocktimeersatz" ].

email-ersatz := n_proper_le &
  [ STEM < "EmailErsatz" > ].

phone-ersatz := n_proper_le &
  [ STEM < "3-4numberersatz" > ].

number-ersatz := n_proper_le &
  [ STEM < "numberersatz" > ].

web-ersatz := n_proper_le &
  [ STEM < "webersatz" > ].

wrappedweb-ersatz := n_proper_le &
  [ STEM < "wrappedwebersatz" > ].

encounter_v1 := v_np_trans_le &
  [ STEM < "encounter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_encounter_v_rel" ].

encounter_n1 := n_ppof_le &
  [ STEM < "encounter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_encounter_n_rel" ].

webmaster_n1 := n_ppof_le &
  [ STEM < "webmaster" >,
    SYNSEM.LKEYS.KEYREL.PRED "_webmaster_rel" ].

quarantine_v1 := v_np_trans_le &
  [ STEM < "quarantine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quarantine_v_rel" ].

quarantine_n1 := n_mass_count_ppof_le &
  [ STEM < "quarantine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quarantine_n_rel" ].

zero-th := adj_bare_unspecified_ord_one_le &
  [ STEM < "0th" >,
    SYNSEM.LKEYS.KEYREL.CARG "0" ].

Ord1Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "1st" >,
    SYNSEM.LKEYS.KEYREL.CARG "1" ].

Ord2Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "2nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "2" ].

Ord3Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "3rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "3" ].

Ord4Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "4th" >,
    SYNSEM.LKEYS.KEYREL.CARG "4" ].

Ord5Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "5th" >,
    SYNSEM.LKEYS.KEYREL.CARG "5" ].

Ord6Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "6th" >,
    SYNSEM.LKEYS.KEYREL.CARG "6" ].

Ord7Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "7th" >,
    SYNSEM.LKEYS.KEYREL.CARG "7" ].

Ord8Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "8th" >,
    SYNSEM.LKEYS.KEYREL.CARG "8" ].

Ord9Ersatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "9th" >,
    SYNSEM.LKEYS.KEYREL.CARG "9" ].

Ord10Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "10th" >,
    SYNSEM.LKEYS.KEYREL.CARG "10" ].

Ord11Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "11th" >,
    SYNSEM.LKEYS.KEYREL.CARG "11" ].

Ord12Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "12th" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

Ord13Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "13th" >,
    SYNSEM.LKEYS.KEYREL.CARG "13" ].

Ord14Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "14th" >,
    SYNSEM.LKEYS.KEYREL.CARG "14" ].

Ord15Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "15th" >,
    SYNSEM.LKEYS.KEYREL.CARG "15" ].

Ord16Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "16th" >,
    SYNSEM.LKEYS.KEYREL.CARG "16" ].

Ord17Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "17th" >,
    SYNSEM.LKEYS.KEYREL.CARG "17" ].

Ord18Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "18th" >,
    SYNSEM.LKEYS.KEYREL.CARG "18" ].

Ord19Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "19th" >,
    SYNSEM.LKEYS.KEYREL.CARG "19" ].

Ord20Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "20th" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

Ord21Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "21st" >,
    SYNSEM.LKEYS.KEYREL.CARG "21" ].

Ord22Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "22nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "22" ].

Ord23Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "23rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "23" ].

Ord24Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "24th" >,
    SYNSEM.LKEYS.KEYREL.CARG "24" ].

Ord25Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "25th" >,
    SYNSEM.LKEYS.KEYREL.CARG "25" ].

Ord26Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "26th" >,
    SYNSEM.LKEYS.KEYREL.CARG "26" ].

Ord27Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "27th" >,
    SYNSEM.LKEYS.KEYREL.CARG "27" ].

Ord28Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "28th" >,
    SYNSEM.LKEYS.KEYREL.CARG "28" ].

Ord29Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "29th" >,
    SYNSEM.LKEYS.KEYREL.CARG "29" ].

Ord30Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "30th" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

Ord31Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "31st" >,
    SYNSEM.LKEYS.KEYREL.CARG "31" ].

Ord32Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "32nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "32" ].

Ord33Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "33rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "33" ].

Ord34Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "34th" >,
    SYNSEM.LKEYS.KEYREL.CARG "34" ].

Ord35Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "35th" >,
    SYNSEM.LKEYS.KEYREL.CARG "35" ].

Ord36Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "36th" >,
    SYNSEM.LKEYS.KEYREL.CARG "36" ].

Ord37Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "37th" >,
    SYNSEM.LKEYS.KEYREL.CARG "37" ].

Ord38Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "38th" >,
    SYNSEM.LKEYS.KEYREL.CARG "38" ].

Ord39Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "39th" >,
    SYNSEM.LKEYS.KEYREL.CARG "39" ].

Ord40Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "40th" >,
    SYNSEM.LKEYS.KEYREL.CARG "40" ].

Ord41Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "41st" >,
    SYNSEM.LKEYS.KEYREL.CARG "41" ].

Ord42Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "42nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "42" ].

Ord43Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "43rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "43" ].

Ord44Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "44th" >,
    SYNSEM.LKEYS.KEYREL.CARG "44" ].

Ord45Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "45th" >,
    SYNSEM.LKEYS.KEYREL.CARG "45" ].

Ord46Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "46th" >,
    SYNSEM.LKEYS.KEYREL.CARG "46" ].

Ord47Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "47th" >,
    SYNSEM.LKEYS.KEYREL.CARG "47" ].

Ord48Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "48th" >,
    SYNSEM.LKEYS.KEYREL.CARG "48" ].

Ord49Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "49th" >,
    SYNSEM.LKEYS.KEYREL.CARG "49" ].

Ord50Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "50th" >,
    SYNSEM.LKEYS.KEYREL.CARG "50" ].

Ord51Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "51st" >,
    SYNSEM.LKEYS.KEYREL.CARG "51" ].

Ord52Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "52nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "52" ].

Ord53Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "53rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "53" ].

Ord54Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "54th" >,
    SYNSEM.LKEYS.KEYREL.CARG "54" ].

Ord55Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "55th" >,
    SYNSEM.LKEYS.KEYREL.CARG "55" ].

Ord56Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "56th" >,
    SYNSEM.LKEYS.KEYREL.CARG "56" ].

Ord57Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "57th" >,
    SYNSEM.LKEYS.KEYREL.CARG "57" ].

Ord58Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "58th" >,
    SYNSEM.LKEYS.KEYREL.CARG "58" ].

Ord59Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "59th" >,
    SYNSEM.LKEYS.KEYREL.CARG "59" ].

Ord60Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "60th" >,
    SYNSEM.LKEYS.KEYREL.CARG "60" ].

Ord61Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "61st" >,
    SYNSEM.LKEYS.KEYREL.CARG "61" ].

Ord62Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "62nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "62" ].

Ord63Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "63rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "63" ].

Ord64Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "64th" >,
    SYNSEM.LKEYS.KEYREL.CARG "64" ].

Ord65Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "65th" >,
    SYNSEM.LKEYS.KEYREL.CARG "65" ].

Ord66Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "66th" >,
    SYNSEM.LKEYS.KEYREL.CARG "66" ].

Ord67Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "67th" >,
    SYNSEM.LKEYS.KEYREL.CARG "67" ].

Ord68Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "68th" >,
    SYNSEM.LKEYS.KEYREL.CARG "68" ].

Ord69Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "69th" >,
    SYNSEM.LKEYS.KEYREL.CARG "69" ].

Ord70Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "70th" >,
    SYNSEM.LKEYS.KEYREL.CARG "70" ].

Ord71Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "71st" >,
    SYNSEM.LKEYS.KEYREL.CARG "71" ].

Ord72Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "72nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "72" ].

Ord73Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "73rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "73" ].

Ord74Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "74th" >,
    SYNSEM.LKEYS.KEYREL.CARG "74" ].

Ord75Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "75th" >,
    SYNSEM.LKEYS.KEYREL.CARG "75" ].

Ord76Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "76th" >,
    SYNSEM.LKEYS.KEYREL.CARG "76" ].

Ord77Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "77th" >,
    SYNSEM.LKEYS.KEYREL.CARG "77" ].

Ord78Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "78th" >,
    SYNSEM.LKEYS.KEYREL.CARG "78" ].

Ord79Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "79th" >,
    SYNSEM.LKEYS.KEYREL.CARG "79" ].

Ord80Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "80th" >,
    SYNSEM.LKEYS.KEYREL.CARG "80" ].

Ord81Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "81st" >,
    SYNSEM.LKEYS.KEYREL.CARG "81" ].

Ord82Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "82nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "82" ].

Ord83Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "83rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "83" ].

Ord84Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "84th" >,
    SYNSEM.LKEYS.KEYREL.CARG "84" ].

Ord85Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "85th" >,
    SYNSEM.LKEYS.KEYREL.CARG "85" ].

Ord86Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "86th" >,
    SYNSEM.LKEYS.KEYREL.CARG "86" ].

Ord87Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "87th" >,
    SYNSEM.LKEYS.KEYREL.CARG "87" ].

Ord88Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "88th" >,
    SYNSEM.LKEYS.KEYREL.CARG "88" ].

Ord89Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "89th" >,
    SYNSEM.LKEYS.KEYREL.CARG "89" ].

Ord90Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "90th" >,
    SYNSEM.LKEYS.KEYREL.CARG "90" ].

Ord91Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "91st" >,
    SYNSEM.LKEYS.KEYREL.CARG "91" ].

Ord92Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "92nd" >,
    SYNSEM.LKEYS.KEYREL.CARG "92" ].

Ord93Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "93rd" >,
    SYNSEM.LKEYS.KEYREL.CARG "93" ].

Ord94Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "94th" >,
    SYNSEM.LKEYS.KEYREL.CARG "94" ].

Ord95Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "95th" >,
    SYNSEM.LKEYS.KEYREL.CARG "95" ].

Ord96Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "96th" >,
    SYNSEM.LKEYS.KEYREL.CARG "96" ].

Ord97Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "97th" >,
    SYNSEM.LKEYS.KEYREL.CARG "97" ].

Ord98Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "98th" >,
    SYNSEM.LKEYS.KEYREL.CARG "98" ].

Ord99Ersatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "99th" >,
    SYNSEM.LKEYS.KEYREL.CARG "99" ].

OneDigitOrdErsatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "OneDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

TwoDigitOrdErsatz := adj_bare_unspecified_ord_two_le &
  [ STEM < "TwoDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

ThreeDigitOrdErsatz := adj_bare_unspecified_ord_three_le &
  [ STEM < "ThreeDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

FourDigitOrdErsatz := adj_bare_unspecified_ord_three_le &
  [ STEM < "FourDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

FiveDigitOrdErsatz := adj_bare_unspecified_ord_three_le &
  [ STEM < "FiveDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

SixDigitOrdErsatz := adj_bare_unspecified_ord_six_le &
  [ STEM < "SixDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

SevenDigitOrdErsatz := adj_bare_unspecified_ord_six_le &
  [ STEM < "SevenDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

EightDigitOrdErsatz := adj_bare_unspecified_ord_six_le &
  [ STEM < "EightDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

NineDigitOrdErsatz := adj_bare_unspecified_ord_nine_le &
  [ STEM < "NineDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

TenDigitOrdErsatz := adj_bare_unspecified_ord_nine_le &
  [ STEM < "TenDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

ElevenDigitOrdErsatz := adj_bare_unspecified_ord_nine_le &
  [ STEM < "ElevenDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

TwelveDigitOrdErsatz := adj_bare_unspecified_ord_twelve_le &
  [ STEM < "TwelveDigitOrdErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

ThirteenPlusDigitErsatz := adj_bare_unspecified_ord_twelve_le &
  [ STEM < "ThirteenPlusDigitErsatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

DecimalErsatz := adj_bare_unspecified_card_three_le &
  [ STEM < "DecimalErsatz" > ].

FractionErsatz := adj_bare_unspecified_card_three_le &
  [ STEM < "FractionErsatz" > ].

CurrencyErsatzAUD := n_numcomp_le &
  [ STEM < "CurrencyErsatzAUD" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzATS := n_numcomp_le &
  [ STEM < "CurrencyErsatzATS" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzBEF := n_numcomp_le &
  [ STEM < "CurrencyErsatzBEF" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzCND := n_numcomp_le &
  [ STEM < "CurrencyErsatzCND" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzCNY := n_numcomp_le &
  [ STEM < "CurrencyErsatzCNY" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzGBP := n_numcomp_le &
  [ STEM < "CurrencyErsatzGBP" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzEUR := n_numcomp_le &
  [ STEM < "CurrencyErsatzEUR" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzFIM := n_numcomp_le &
  [ STEM < "CurrencyErsatzFIM" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzFRF := n_numcomp_le &
  [ STEM < "CurrencyErsatzFRF" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzDEM := n_numcomp_le &
  [ STEM < "CurrencyErsatzDEM" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzGRD := n_numcomp_le &
  [ STEM < "CurrencyErsatzGRD" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzHKD := n_numcomp_le &
  [ STEM < "CurrencyErsatzHKD" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzIEP := n_numcomp_le &
  [ STEM < "CurrencyErsatzIEP" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzILS := n_numcomp_le &
  [ STEM < "CurrencyErsatzILS" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzITL := n_numcomp_le &
  [ STEM < "CurrencyErsatzITL" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzJPY := n_numcomp_le &
  [ STEM < "CurrencyErsatzJPY" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzKRW := n_numcomp_le &
  [ STEM < "CurrencyErsatzKRW" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzMYR := n_numcomp_le &
  [ STEM < "CurrencyErsatzMYR" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzMXP := n_numcomp_le &
  [ STEM < "CurrencyErsatzMXP" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzNLG := n_numcomp_le &
  [ STEM < "CurrencyErsatzNLG" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzNZD := n_numcomp_le &
  [ STEM < "CurrencyErsatzNZD" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzNOK := n_numcomp_le &
  [ STEM < "CurrencyErsatzNOK" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzPTE := n_numcomp_le &
  [ STEM < "CurrencyErsatzPTE" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzSUR := n_numcomp_le &
  [ STEM < "CurrencyErsatzSUR" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzSGD := n_numcomp_le &
  [ STEM < "CurrencyErsatzSGD" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzESP := n_numcomp_le &
  [ STEM < "CurrencyErsatzESP" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzSEK := n_numcomp_le &
  [ STEM < "CurrencyErsatzSEK" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzCHF := n_numcomp_le &
  [ STEM < "CurrencyErsatzCHF" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzTWD := n_numcomp_le &
  [ STEM < "CurrencyErsatzTWD" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzTHB := n_numcomp_le &
  [ STEM < "CurrencyErsatzTHB" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzINR := n_numcomp_le &
  [ STEM < "CurrencyErsatzINR" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzPKR := n_numcomp_le &
  [ STEM < "CurrencyErsatzPKR" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzARP := n_numcomp_le &
  [ STEM < "CurrencyErsatzARP" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzBRL := n_numcomp_le &
  [ STEM < "CurrencyErsatzBRL" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzCLP := n_numcomp_le &
  [ STEM < "CurrencyErsatzCLP" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzCZK := n_numcomp_le &
  [ STEM < "CurrencyErsatzCZK" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzEGP := n_numcomp_le &
  [ STEM < "CurrencyErsatzEGP" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzZAR := n_numcomp_le &
  [ STEM < "CurrencyErsatzZAR" >,
    SYNSEM.LKEYS.KEYREL.PRED "gen_currency_rel" ].

CurrencyErsatzDollarSymb := n_numcomp_le &
  [ STEM < "CurrencyErsatzDollarSymb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dollar_rel" ].

CurrencyErsatzUSD := n_numcomp_le &
  [ STEM < "CurrencyErsatzUSD" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dollar_rel" ].

recent_a1 := adj_intrans_le &
  [ STEM < "recent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recent_rel" ].

nonexistent_a1 := adj_intrans_le &
  [ STEM < "nonexistent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nonexistent_rel" ].

backorder_v1 := v_np*_trans_le &
  [ STEM < "backorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_back_order_v_rel" ].

Australia_n1 := n_proper_le &
  [ STEM < "australia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Australia" ].

australian_a1 := adj_intrans_le &
  [ STEM < "australian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_australian_rel" ].

Austria_n1 := n_proper_le &
  [ STEM < "austria" >,
    SYNSEM.LKEYS.KEYREL.CARG "Austria" ].

austrian_a1 := adj_intrans_le &
  [ STEM < "austrian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_austrian_rel" ].

shilling_n1 := n_intr_le &
  [ STEM < "shilling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shilling_rel" ].

schilling_n1 := n_intr_le &
  [ STEM < "schilling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shilling_rel" ].

Belgium_n1 := n_proper_le &
  [ STEM < "belgium" >,
    SYNSEM.LKEYS.KEYREL.CARG "Belgium" ].

Canada_n1 := n_proper_le &
  [ STEM < "canada" >,
    SYNSEM.LKEYS.KEYREL.CARG "Canada" ].

renmimbi_n1 := n_intr_le &
  [ STEM < "renmimbi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_renmimbi_rel" ].

renmimbi_n2 := n_plur_le &
  [ STEM < "renmimbi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_renmimbi_rel" ].

Denmark_n1 := n_proper_le &
  [ STEM < "denmark" >,
    SYNSEM.LKEYS.KEYREL.CARG "Denmark" ].

danish_a1 := adj_intrans_le &
  [ STEM < "danish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_danish_rel" ].

Danish_n1 := n_proper_le &
  [ STEM < "danish" >,
    SYNSEM.LKEYS.KEYREL.CARG "Danish" ].

Danish_n2 := n_intr_le &
  [ STEM < "danish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_danish_n_rel" ].

krone_n1 := n_intr_le &
  [ STEM < "krone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_krone_rel" ].

krone_n2 := n_plur_le &
  [ STEM < "krone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_krone_rel" ].

England_n1 := n_proper_le &
  [ STEM < "england" >,
    SYNSEM.LKEYS.KEYREL.CARG "England" ].

ecu_n1 := n_intr_le &
  [ STEM < "ecu" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ecu_rel" ].

finnish_a1 := adj_intrans_le &
  [ STEM < "finnish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finnish_rel" ].

Finnish_n1 := n_proper_le &
  [ STEM < "finnish" >,
    SYNSEM.LKEYS.KEYREL.CARG "Finnish" ].

Finnish_n2 := n_intr_le &
  [ STEM < "finnish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_finnish_n_rel" ].

markka_n1 := n_intr_le &
  [ STEM < "markka" >,
    SYNSEM.LKEYS.KEYREL.PRED "_markka_rel" ].

markka_n2 := n_plur_le &
  [ STEM < "markka" >,
    SYNSEM.LKEYS.KEYREL.PRED "_markka_rel" ].

hongkong_n1 := n_proper_le &
  [ STEM < "hong", "kong" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hong_Kong" ].

irish_a1 := adj_intrans_le &
  [ STEM < "irish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_irish_rel" ].

Irish_n1 := n_proper_le &
  [ STEM < "irish" >,
    SYNSEM.LKEYS.KEYREL.CARG "Irish" ].

Irish_n2 := n_intr_le &
  [ STEM < "irish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_irish_n_rel" ].

punt_n1 := n_intr_le &
  [ STEM < "punt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_punt_n_rel" ].

israeli_a1 := adj_intrans_le &
  [ STEM < "israeli" >,
    SYNSEM.LKEYS.KEYREL.PRED "_israeli_rel" ].

Israeli_n1 := n_proper_le &
  [ STEM < "israeli" >,
    SYNSEM.LKEYS.KEYREL.CARG "Israeli" ].

Israeli_n2 := n_intr_le &
  [ STEM < "israeli" >,
    SYNSEM.LKEYS.KEYREL.PRED "_israeli_n_rel" ].

israel_n1 := n_proper_le &
  [ STEM < "israel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Israel" ].

SouthKorea_n1 := n_proper_le &
  [ STEM < "south", "korea" >,
    SYNSEM.LKEYS.KEYREL.CARG "South_Korea" ].

NorthKorea_n1 := n_proper_le &
  [ STEM < "north", "korea" >,
    SYNSEM.LKEYS.KEYREL.CARG "North_Korea" ].

southkorean_a1 := adj_intrans_le &
  [ STEM < "south", "korean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_south_korean_rel" ].

Southkorean_n1 := n_proper_le &
  [ STEM < "south", "korean" >,
    SYNSEM.LKEYS.KEYREL.CARG "South_korean" ].

Southkorean_n2 := n_intr_le &
  [ STEM < "south", "korean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_south_korean_n_rel" ].

northkorean_a1 := adj_intrans_le &
  [ STEM < "north", "korean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_north_korean_rel" ].

Northkorean_n1 := n_proper_le &
  [ STEM < "north", "korean" >,
    SYNSEM.LKEYS.KEYREL.CARG "North_korean" ].

Northkorean_n2 := n_intr_le &
  [ STEM < "north", "korean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_north_korean_n_rel" ].

korean_a1 := adj_intrans_le &
  [ STEM < "korean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_korean_rel" ].

korean_n1 := n_proper_le &
  [ STEM < "korean" >,
    SYNSEM.LKEYS.KEYREL.CARG "_korean" ].

korean_n2 := n_intr_le &
  [ STEM < "korean" >,
    SYNSEM.LKEYS.KEYREL.PRED "_korean_n_rel" ].

won_n1 := n_intr_le &
  [ STEM < "won" >,
    SYNSEM.LKEYS.KEYREL.PRED "_won_n_rel" ].

malaysian_a1 := adj_intrans_le &
  [ STEM < "malaysian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_malaysian_rel" ].

Malaysian_n1 := n_proper_le &
  [ STEM < "malaysian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Malaysian" ].

Malaysian_n2 := n_intr_le &
  [ STEM < "malaysian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_malaysian_n_rel" ].

ringgit_n1 := n_intr_le &
  [ STEM < "ringgit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ringgit_rel" ].

ringgit_n2 := n_plur_le &
  [ STEM < "ringgit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ringgit_rel" ].

new_zealand_n1 := n_proper_le &
  [ STEM < "new", "zealand" >,
    SYNSEM.LKEYS.KEYREL.CARG "New_zealand" ].

norwegian_a1 := adj_intrans_le &
  [ STEM < "norwegian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_norwegian_rel" ].

Norwegian_n1 := n_proper_le &
  [ STEM < "norwegian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Norwegian" ].

Norwegian_n2 := n_intr_le &
  [ STEM < "norwegian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_norwegian_n_rel" ].

portugal_n1 := n_proper_le &
  [ STEM < "portugal" >,
    SYNSEM.LKEYS.KEYREL.CARG "Portugal" ].

portuguese_a1 := adj_intrans_le &
  [ STEM < "portuguese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_portuguese_rel" ].

Portuguese_n1 := n_proper_le &
  [ STEM < "portuguese" >,
    SYNSEM.LKEYS.KEYREL.CARG "Portuguese" ].

Portuguese_n2 := n_plur_le &
  [ STEM < "portuguese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_portuguese_n_rel" ].

escudo_n1 := n_intr_le &
  [ STEM < "escudo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_escudo_rel" ].

russia_n1 := n_proper_le &
  [ STEM < "russia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Russia" ].

russian_a1 := adj_intrans_le &
  [ STEM < "russian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_russian_rel" ].

Russian_n1 := n_proper_le &
  [ STEM < "russian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Russian" ].

Russian_n2 := n_intr_le &
  [ STEM < "russian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_russian_n_rel" ].

singapore_n1 := n_proper_le &
  [ STEM < "singapore" >,
    SYNSEM.LKEYS.KEYREL.CARG "Singapore" ].

singaporian_a1 := adj_intrans_le &
  [ STEM < "singaporian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_singaporian_rel" ].

Singaporian_n1 := n_proper_le &
  [ STEM < "singaporian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Singaporian" ].

Singaporian_n2 := n_intr_le &
  [ STEM < "singaporian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_singaporian_n_rel" ].

peseta_n1 := n_intr_le &
  [ STEM < "peseta" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peseta_rel" ].

sweden_n1 := n_proper_le &
  [ STEM < "sweden" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sweden" ].

swedish_a1 := adj_intrans_le &
  [ STEM < "swedish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swedish_rel" ].

Swedish_n1 := n_proper_le &
  [ STEM < "swedish" >,
    SYNSEM.LKEYS.KEYREL.CARG "Swedish" ].

Swedish_n2 := n_intr_le &
  [ STEM < "swedish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swedish_n_rel" ].

krona_n1 := n_intr_le &
  [ STEM < "krona" >,
    SYNSEM.LKEYS.KEYREL.PRED "_krona_rel" ].

krona_n2 := n_plur_le &
  [ STEM < "krona" >,
    SYNSEM.LKEYS.KEYREL.PRED "_krona_rel" ].

switzerland_n1 := n_proper_le &
  [ STEM < "switzerland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Switzerland" ].

swiss_a1 := adj_intrans_le &
  [ STEM < "swiss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swiss_rel" ].

Swiss_n1 := n_proper_le &
  [ STEM < "swiss" >,
    SYNSEM.LKEYS.KEYREL.CARG "Swiss" ].

Swiss_n2 := n_intr_le &
  [ STEM < "swiss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swiss_n_rel" ].

taiwan_n1 := n_proper_le &
  [ STEM < "taiwan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Taiwan" ].

taiwanese_a1 := adj_intrans_le &
  [ STEM < "taiwanese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taiwanese_rel" ].

Taiwanese_n1 := n_proper_le &
  [ STEM < "taiwanese" >,
    SYNSEM.LKEYS.KEYREL.CARG "Taiwanese" ].

Taiwanese_n2 := n_plur_le &
  [ STEM < "taiwanese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taiwanese_n_rel" ].

thailand_n1 := n_proper_le &
  [ STEM < "thailand" >,
    SYNSEM.LKEYS.KEYREL.CARG "Thailand" ].

baht_n1 := n_intr_le &
  [ STEM < "baht" >,
    SYNSEM.LKEYS.KEYREL.PRED "_baht_rel" ].

baht_n2 := n_plur_le &
  [ STEM < "baht" >,
    SYNSEM.LKEYS.KEYREL.PRED "_baht_rel" ].

india_n1 := n_proper_le &
  [ STEM < "india" >,
    SYNSEM.LKEYS.KEYREL.CARG "India" ].

rupee_n1 := n_intr_le &
  [ STEM < "rupee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rupee_rel" ].

pakistan_n1 := n_proper_le &
  [ STEM < "pakistan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pakistan" ].

pakistani_a1 := adj_intrans_le &
  [ STEM < "pakistani" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pakistani_rel" ].

Pakistani_n1 := n_proper_le &
  [ STEM < "pakistani" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pakistani" ].

Pakistani_n2 := n_intr_le &
  [ STEM < "pakistani" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pakistani_n_rel" ].

Triple_a_n1 := n_proper_le &
  [ STEM < "triple", "a" >,
    SYNSEM.LKEYS.KEYREL.CARG "Triple_a" ].

Dallas_n1 := n_proper_le &
  [ STEM < "dallas" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dallas" ].

catalog_n1 := n_ppof_le &
  [ STEM < "catalog" >,
    SYNSEM.LKEYS.KEYREL.PRED "_catalogue_rel" ].

packet_n1 := n_ppof_le &
  [ STEM < "packet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_packet_n_rel" ].

East_Palo_alto_n1 := n_proper_le &
  [ STEM < "east", "palo", "alto" >,
    SYNSEM.LKEYS.KEYREL.CARG "east_palo_alto" ].

Santa_Clara_n1 := n_proper_le &
  [ STEM < "santa", "clara" >,
    SYNSEM.LKEYS.KEYREL.CARG "santa_clara" ].

Santa_Cruz_n1 := n_proper_le &
  [ STEM < "santa", "cruz" >,
    SYNSEM.LKEYS.KEYREL.CARG "santa_cruz" ].

Monterey_n1 := n_proper_le &
  [ STEM < "monterey" >,
    SYNSEM.LKEYS.KEYREL.CARG "monterey" ].

Half_Moon_Bay_n1 := n_proper_le &
  [ STEM < "half", "moon", "bay" >,
    SYNSEM.LKEYS.KEYREL.CARG "half_moon_bay" ].

Santa_Barbara_n1 := n_proper_le &
  [ STEM < "santa", "barbara" >,
    SYNSEM.LKEYS.KEYREL.CARG "santa_barbara" ].

Mendocino_n1 := n_proper_le &
  [ STEM < "mendocino" >,
    SYNSEM.LKEYS.KEYREL.CARG "mendocino" ].

numvalcard3digit3digit := n_proper_le &
  [ STEM < "threedigitersatz", "threedigitersatz" > ].

numvalcard3digit-3digit := n_proper_le &
  [ STEM < "threedigitersatz", "-", "threedigitersatz" > ].

numvalcard3digit4digit := n_proper_le &
  [ STEM < "threedigitersatz", "fourdigitersatz" > ].

numvalcard3digit-4digit := n_proper_le &
  [ STEM < "threedigitersatz", "-", "fourdigitersatz" > ].

numvalcard4digit4digit := n_proper_le &
  [ STEM < "fourdigitersatz", "fourdigitersatz" > ].

numvalcard4digit-4digit := n_proper_le &
  [ STEM < "fourdigitersatz", "-", "fourdigitersatz" > ].

send_back_v1 := v_particle_np_le &
  [ STEM < "send" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_send_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

deliverable_a1 := adj_intrans_le &
  [ STEM < "deliverable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_deliverable_rel" ].

nondeliverable_a1 := adj_intrans_le &
  [ STEM < "nondeliverable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nondeliverable_rel" ].

undeliverable_a1 := adj_intrans_le &
  [ STEM < "undeliverable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undeliverable_rel" ].

nondelivery_n1 := n_mass_count_ppof_le &
  [ STEM < "nondelivery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nondelivery_rel" ].

such_a1 := adj_attr_intrans_le &
  [ STEM < "such" >,
    SYNSEM.LKEYS.KEYREL.PRED "_such_adj_rel" ].

exist_v2 := v_there_le &
  [ STEM < "exist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exist_v_there_rel" ].

one_or_more_d1 := det_part_pl_le &
  [ STEM < "one", "or", "more" >,
    SYNSEM.LKEYS.KEYREL.PRED _one_or_more_q_rel ].

authorize_v1 := v_obj_equi_le &
  [ STEM < "authorize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_authorize_rel" ].

authorize_v2 := v_np_trans_le &
  [ STEM < "authorize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_authorize_rel" ].

sterling_money_n1 := n_plur_le &
  [ STEM < "sterling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pound_sterling_rel" ].

pound_sterling_n1 := n_intr_sg_le &
  [ STEM < "pound", "sterling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pound_sterling_rel" ].

pounds_sterling_n1 := n_plur_le &
  [ STEM < "pounds", "sterling" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pound_sterling_rel" ].

crown_n1 := n_intr_le &
  [ STEM < "crown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crown_n_rel" ].

crown_v1 := v_np_trans_le &
  [ STEM < "crown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crown_v_rel" ].

crown_v2 := v_ditrans_only_le &
  [ STEM < "crown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crown_v_rel" ].

mailboxidersatz := n_proper_le &
  [ STEM < "mailboxidersatz" > ].

mailboxnameersatz := n_proper_unk_le &
  [ STEM < "mailboxnameersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "mailboxname" ].

myco := n_proper_le &
  [ STEM < "myco" >,
    SYNSEM.LKEYS.KEYREL.CARG "myco" ].

pentabulous := n_proper_le &
  [ STEM < "pentabulous" >,
    SYNSEM.LKEYS.KEYREL.CARG "pentabulous" ].

minimessenger := n_proper_le &
  [ STEM < "minimessenger" >,
    SYNSEM.LKEYS.KEYREL.CARG "minimessenger" ].

minimessenger_2 := n_proper_le &
  [ STEM < "mini", "messenger" >,
    SYNSEM.LKEYS.KEYREL.CARG "minimessenger" ].

musicgal := n_proper_le &
  [ STEM < "musicgal" >,
    SYNSEM.LKEYS.KEYREL.CARG "musicgal" ].

musicgal_2 := n_proper_le &
  [ STEM < "music", "gal" >,
    SYNSEM.LKEYS.KEYREL.CARG "musicgal" ].

taper_v1 := v_unerg_le &
  [ STEM < "taper" >,
    SYNSEM.LKEYS.KEYREL.PRED "_taper_v_rel" ].

taper_off_v1 := v_particle_le &
  [ STEM < "taper" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_taper_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

thunderstorm_n1 := n_intr_le &
  [ STEM < "thunderstorm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thunderstorm_rel" ].

high_n1 := n_mass_count_ppof_le &
  [ STEM < "high" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_n_rel" ].

gust_n1 := n_ppof_le &
  [ STEM < "gust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gust_n_rel" ].

mph_n1 := n_intr_unspec_le &
  [ STEM < "mph" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mph_rel" ].

flurry_n1 := n_ppof_le &
  [ STEM < "flurry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flurry_n_rel" ].

windy_a1 := adj_intrans_le &
  [ STEM < "windy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_rel" ].

windy_a2 := adj_atrans_le &
  [ STEM < "windy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_expl_rel" ].

cloudy_a1 := adj_intrans_le &
  [ STEM < "cloudy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_rel" ].

cloudy_a2 := adj_atrans_le &
  [ STEM < "cloudy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_expl_rel" ].

rainy_a1 := adj_intrans_le &
  [ STEM < "rainy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_rel" ].

rainy_a2 := adj_atrans_le &
  [ STEM < "rainy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_expl_rel" ].

freeze_v1 := v_np_trans_le &
  [ STEM < "freeze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_freeze_cause_v_rel" ].

freeze_v2 := v_unacc_le &
  [ STEM < "freeze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_freeze_v_rel" ].

drizzle_v1 := v_atrans_le &
  [ STEM < "drizzle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drizzle_v_rel" ].

drizzle_n1 := n_mass_le &
  [ STEM < "drizzle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_drizzle_n_rel" ].

temperature_n1 := n_mass_count_ppof_le &
  [ STEM < "temperature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_temperature_n_rel" ].

sleet_n1 := n_mass_le &
  [ STEM < "sleet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sleet_n_rel" ].

accumulate_v1 := v_np_trans_le &
  [ STEM < "accumulate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accumulate_v2_rel" ].

accumulate_v2 := v_unacc_le &
  [ STEM < "accumulate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accumulate_v_rel" ].

accumulation_n1 := n_mass_count_ppof_le &
  [ STEM < "accumulation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accumulation_rel" ].

diminish_v1 := v_np_trans_le &
  [ STEM < "diminish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_diminish_cause_v_rel" ].

diminish_v2 := v_unacc_le &
  [ STEM < "diminish" >,
    SYNSEM.LKEYS.KEYREL.PRED "_diminish_v_rel" ].

chill_n1 := n_ppof_le &
  [ STEM < "chill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chill_n_rel" ].

chill_v1 := v_np_trans_le &
  [ STEM < "chill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chill_v_rel" ].

teen_n1 := n_intr_le &
  [ STEM < "teen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_teen_rel" ].

glaze_n1 := n_ppof_le &
  [ STEM < "glaze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_glaze_n_rel" ].

glaze_over_v1 := v_empty_prep_intrans_le &
  [ STEM < "glaze" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_glaze_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

precipitation_n1 := n_mass_ppcomp_le &
  [ STEM < "precipitation" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_precipitation_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

northward_a1 := adj_intrans_le &
  [ STEM < "northward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northward_rel" ].

northward_n1 := n_adv_event_le &
  [ STEM < "northward" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _northward_rel ] ].

southward_a1 := adj_intrans_le &
  [ STEM < "southward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_southward_rel" ].

southward_n1 := n_adv_event_le &
  [ STEM < "southward" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _southward_rel ] ].

eastward_a1 := adj_intrans_le &
  [ STEM < "eastward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eastward_rel" ].

eastward_n1 := n_adv_event_le &
  [ STEM < "eastward" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _eastward_rel ] ].

westward_a1 := adj_intrans_le &
  [ STEM < "westward" >,
    SYNSEM.LKEYS.KEYREL.PRED "_westward_rel" ].

westward_n1 := n_adv_event_le &
  [ STEM < "westward" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _westward_rel ] ].

brisk_a1 := adj_intrans_le &
  [ STEM < "brisk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brisk_rel" ].

northerly_a1 := adj_intrans_le &
  [ STEM < "northerly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northerly_rel" ].

southerly_a1 := adj_intrans_le &
  [ STEM < "southerly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_southerly_rel" ].

easterly_a1 := adj_intrans_le &
  [ STEM < "easterly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_easterly_rel" ].

westerly_a1 := adj_intrans_le &
  [ STEM < "westerly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_westerly_rel" ].

variably_deg := adv_degree_spec_le &
  [ STEM < "variably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_variably_deg_rel" ].

breezy_a1 := adj_intrans_le &
  [ STEM < "breezy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_rel" ].

breezy_a2 := adj_atrans_le &
  [ STEM < "breezy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_expl_rel" ].

foggy_a1 := adj_intrans_le &
  [ STEM < "foggy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_rel" ].

foggy_a2 := adj_atrans_le &
  [ STEM < "foggy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_expl_rel" ].

wet_a1 := adj_intrans_le &
  [ STEM < "wet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_rel" ].

wet_a2 := adj_atrans_le &
  [ STEM < "wet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_expl_rel" ].

blustery_a1 := adj_intrans_le &
  [ STEM < "blustery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blustery_rel" ].

blustery_a2 := adj_atrans_le &
  [ STEM < "blustery" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blustery_expl_rel" ].

chilly_a1 := adj_intrans_le &
  [ STEM < "chilly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_rel" ].

chilly_a2 := adj_atrans_le &
  [ STEM < "chilly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_expl_rel" ].

colder_a1 := adj_comp_le &
  [ STEM < "colder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_rel" ].

colder_a2 := adj_atrans_comp_le &
  [ STEM < "colder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_expl_rel" ].

coldest_a1 := adj_superl_le &
  [ STEM < "coldest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_rel" ].

coldest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "coldest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_rel" ].

coldest_a2 := adj_atrans_superl_le &
  [ STEM < "coldest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_expl_rel" ].

coldest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "coldest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_expl_rel" ].

warmer_a1 := adj_comp_le &
  [ STEM < "warmer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_rel" ].

warmer_a2 := adj_atrans_comp_le &
  [ STEM < "warmer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_expl_rel" ].

warmest_a1 := adj_superl_le &
  [ STEM < "warmest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_rel" ].

warmest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "warmest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_rel" ].

warmest_a2 := adj_atrans_superl_le &
  [ STEM < "warmest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_expl_rel" ].

warmest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "warmest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warm_expl_rel" ].

hotter_a1 := adj_comp_le &
  [ STEM < "hotter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_rel" ].

hotter_a2 := adj_atrans_comp_le &
  [ STEM < "hotter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_expl_rel" ].

hottest_a1 := adj_superl_le &
  [ STEM < "hottest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_rel" ].

hottest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "hottest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_rel" ].

hottest_a2 := adj_atrans_superl_le &
  [ STEM < "hottest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_expl_rel" ].

hottest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "hottest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hot_expl_rel" ].

cooler_a1 := adj_comp_le &
  [ STEM < "cooler" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_rel" ].

cooler_a2 := adj_atrans_comp_le &
  [ STEM < "cooler" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_expl_rel" ].

coolest_a1 := adj_superl_le &
  [ STEM < "coolest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_rel" ].

coolest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "coolest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_rel" ].

coolest_a2 := adj_atrans_superl_le &
  [ STEM < "coolest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_expl_rel" ].

coolest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "coolest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_expl_rel" ].

windier_a1 := adj_comp_le &
  [ STEM < "windier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_rel" ].

windier_a2 := adj_atrans_comp_le &
  [ STEM < "windier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_expl_rel" ].

windiest_a1 := adj_superl_le &
  [ STEM < "windiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_rel" ].

windiest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "windiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_rel" ].

windiest_a2 := adj_atrans_superl_le &
  [ STEM < "windiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_expl_rel" ].

windiest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "windiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_windy_expl_rel" ].

breezier_a1 := adj_comp_le &
  [ STEM < "breezier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_rel" ].

breezier_a2 := adj_atrans_comp_le &
  [ STEM < "breezier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_expl_rel" ].

breeziest_a1 := adj_superl_le &
  [ STEM < "breeziest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_rel" ].

breeziest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "breeziest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_rel" ].

breeziest_a2 := adj_atrans_superl_le &
  [ STEM < "breeziest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_expl_rel" ].

breeziest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "breeziest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breezy_expl_rel" ].

chillier_a1 := adj_comp_le &
  [ STEM < "chillier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_rel" ].

chillier_a2 := adj_atrans_comp_le &
  [ STEM < "chillier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_expl_rel" ].

chilliest_a1 := adj_superl_le &
  [ STEM < "chilliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_rel" ].

chilliest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "chilliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_rel" ].

chilliest_a2 := adj_atrans_superl_le &
  [ STEM < "chilliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_expl_rel" ].

chilliest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "chilliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chilly_expl_rel" ].

foggier_a1 := adj_comp_le &
  [ STEM < "foggier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_rel" ].

foggier_a2 := adj_atrans_comp_le &
  [ STEM < "foggier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_expl_rel" ].

foggiest_a1 := adj_superl_le &
  [ STEM < "foggiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_rel" ].

foggiest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "foggiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_rel" ].

foggiest_a2 := adj_atrans_superl_le &
  [ STEM < "foggiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_expl_rel" ].

foggiest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "foggiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foggy_expl_rel" ].

rainier_a1 := adj_comp_le &
  [ STEM < "rainier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_rel" ].

rainier_a2 := adj_atrans_comp_le &
  [ STEM < "rainier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_expl_rel" ].

rainiest_a1 := adj_superl_le &
  [ STEM < "rainiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_rel" ].

rainiest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "rainiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_rel" ].

rainiest_a2 := adj_atrans_superl_le &
  [ STEM < "rainiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_expl_rel" ].

rainiest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "rainiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rainy_expl_rel" ].

wetter_a1 := adj_comp_le &
  [ STEM < "wetter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_rel" ].

wetter_a2 := adj_atrans_comp_le &
  [ STEM < "wetter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_expl_rel" ].

wettest_a1 := adj_superl_le &
  [ STEM < "wettest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_rel" ].

wettest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "wettest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_rel" ].

wettest_a2 := adj_atrans_superl_le &
  [ STEM < "wettest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_expl_rel" ].

wettest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "wettest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wet_expl_rel" ].

drier_a1 := adj_comp_le &
  [ STEM < "drier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_adj_rel" ].

drier_a2 := adj_atrans_comp_le &
  [ STEM < "drier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_expl_rel" ].

driest_a1 := adj_superl_le &
  [ STEM < "driest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_adj_rel" ].

driest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "driest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_adj_rel" ].

driest_a2 := adj_atrans_superl_le &
  [ STEM < "driest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_expl_rel" ].

driest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "driest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dry_expl_rel" ].

cloudier_a1 := adj_comp_le &
  [ STEM < "cloudier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_rel" ].

cloudier_a2 := adj_atrans_comp_le &
  [ STEM < "cloudier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_expl_rel" ].

cloudiest_a1 := adj_superl_le &
  [ STEM < "cloudiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_rel" ].

cloudiest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "cloudiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_rel" ].

cloudiest_a2 := adj_atrans_superl_le &
  [ STEM < "cloudiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_expl_rel" ].

cloudiest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "cloudiest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudy_expl_rel" ].

sunnier_a1 := adj_comp_le &
  [ STEM < "sunnier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_rel" ].

sunnier_a2 := adj_atrans_comp_le &
  [ STEM < "sunnier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_expl_rel" ].

sunniest_a1 := adj_superl_le &
  [ STEM < "sunniest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_rel" ].

sunniest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "sunniest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_rel" ].

sunniest_a2 := adj_atrans_superl_le &
  [ STEM < "sunniest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_expl_rel" ].

sunniest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "sunniest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunny_expl_rel" ].

milder_a1 := adj_comp_le &
  [ STEM < "milder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_rel" ].

milder_a2 := adj_atrans_comp_le &
  [ STEM < "milder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_expl_rel" ].

mildest_a1 := adj_superl_le &
  [ STEM < "mildest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_rel" ].

mildest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "mildest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_rel" ].

mildest_a2 := adj_atrans_superl_le &
  [ STEM < "mildest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_expl_rel" ].

mildest_a2_prd := adj_atrans_superl_prd_le &
  [ STEM < "the", "mildest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mild_expl_rel" ].

stronger_a1 := adj_comp_le &
  [ STEM < "stronger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strong_rel" ].

strongest_a1 := adj_superl_le &
  [ STEM < "strongest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strong_rel" ].

strongest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "strongest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strong_rel" ].

weaker_a1 := adj_comp_le &
  [ STEM < "weaker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weak_rel" ].

weakest_a1 := adj_superl_le &
  [ STEM < "weakest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weak_rel" ].

weakest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "weakest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weak_rel" ].

locally_deg := adv_degree_spec_v_le &
  [ STEM < "locally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_locally_deg_rel" ].

pocket_n1 := n_ppof_le &
  [ STEM < "pocket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pocket_n_rel" ].

pocket_v1 := v_np_trans_le &
  [ STEM < "pocket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pocket_v_rel" ].

valley_n1 := n_ppof_le &
  [ STEM < "valley" >,
    SYNSEM.LKEYS.KEYREL.PRED "_valley_rel" ].

midmorning_n1 := n_intr_le &
  [ STEM < "midmorning" >,
    SYNSEM.LKEYS.KEYREL.PRED "_midmorning_rel" ].

midevening_n1 := n_intr_le &
  [ STEM < "midevening" >,
    SYNSEM.LKEYS.KEYREL.PRED "_midevening_rel" ].

flood_n1 := n_ppof_le &
  [ STEM < "flood" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flood_n_rel" ].

flood_v1 := v_np_trans_le &
  [ STEM < "flood" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flood_cause_v_rel" ].

flood_v2 := v_unacc_le &
  [ STEM < "flood" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flood_v_rel" ].

20s_n1 := n_plur_xmod_le &
  [ STEM < "20s" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

twenties_n1 := n_plur_xmod_le &
  [ STEM < "twenties" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

30s_n1 := n_plur_xmod_le &
  [ STEM < "30s" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

thirties_n1 := n_plur_xmod_le &
  [ STEM < "thirties" >,
    SYNSEM.LKEYS.KEYREL.CARG "30" ].

40s_n1 := n_plur_xmod_le &
  [ STEM < "40s" >,
    SYNSEM.LKEYS.KEYREL.CARG "40" ].

forties_n1 := n_plur_xmod_le &
  [ STEM < "forties" >,
    SYNSEM.LKEYS.KEYREL.CARG "40" ].

50s_n1 := n_plur_xmod_le &
  [ STEM < "50s" >,
    SYNSEM.LKEYS.KEYREL.CARG "50" ].

fifties_n1 := n_plur_xmod_le &
  [ STEM < "fifties" >,
    SYNSEM.LKEYS.KEYREL.CARG "50" ].

60s_n1 := n_plur_xmod_le &
  [ STEM < "60s" >,
    SYNSEM.LKEYS.KEYREL.CARG "60" ].

sixties_n1 := n_plur_xmod_le &
  [ STEM < "sixties" >,
    SYNSEM.LKEYS.KEYREL.CARG "60" ].

70s_n1 := n_plur_xmod_le &
  [ STEM < "70s" >,
    SYNSEM.LKEYS.KEYREL.CARG "70" ].

seventies_n1 := n_plur_xmod_le &
  [ STEM < "seventies" >,
    SYNSEM.LKEYS.KEYREL.CARG "70" ].

80s_n1 := n_plur_xmod_le &
  [ STEM < "80s" >,
    SYNSEM.LKEYS.KEYREL.CARG "80" ].

eighties_n1 := n_plur_xmod_le &
  [ STEM < "eighties" >,
    SYNSEM.LKEYS.KEYREL.CARG "80" ].

90s_n1 := n_plur_xmod_le &
  [ STEM < "90s" >,
    SYNSEM.LKEYS.KEYREL.CARG "90" ].

nineties_n1 := n_plur_xmod_le &
  [ STEM < "nineties" >,
    SYNSEM.LKEYS.KEYREL.CARG "90" ].

100s_n1 := n_plur_xmod_le &
  [ STEM < "100s" >,
    SYNSEM.LKEYS.KEYREL.CARG "100" ].

hundreds_n1 := n_plur_xmod_le &
  [ STEM < "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "100" ].

200s_n1 := n_plur_xmod_le &
  [ STEM < "200s" >,
    SYNSEM.LKEYS.KEYREL.CARG "200" ].

two_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "two", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "200" ].

300s_n1 := n_plur_xmod_le &
  [ STEM < "300s" >,
    SYNSEM.LKEYS.KEYREL.CARG "300" ].

three_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "three", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "300" ].

400s_n1 := n_plur_xmod_le &
  [ STEM < "400s" >,
    SYNSEM.LKEYS.KEYREL.CARG "400" ].

four_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "four", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "400" ].

500s_n1 := n_plur_xmod_le &
  [ STEM < "500s" >,
    SYNSEM.LKEYS.KEYREL.CARG "500" ].

five_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "five", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "500" ].

600s_n1 := n_plur_xmod_le &
  [ STEM < "600s" >,
    SYNSEM.LKEYS.KEYREL.CARG "600" ].

six_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "six", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "600" ].

700s_n1 := n_plur_xmod_le &
  [ STEM < "700s" >,
    SYNSEM.LKEYS.KEYREL.CARG "700" ].

seven_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "seven", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "700" ].

800s_n1 := n_plur_xmod_le &
  [ STEM < "800s" >,
    SYNSEM.LKEYS.KEYREL.CARG "800" ].

eight_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "eight", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "800" ].

900s_n1 := n_plur_xmod_le &
  [ STEM < "900s" >,
    SYNSEM.LKEYS.KEYREL.CARG "900" ].

nine_hundreds_n1 := n_plur_xmod_le &
  [ STEM < "nine", "hundreds" >,
    SYNSEM.LKEYS.KEYREL.CARG "900" ].

1000s_n1 := n_plur_xmod_le &
  [ STEM < "1000s" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000" ].

thousands_n1 := n_plur_xmod_le &
  [ STEM < "thousands" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000" ].

millions_n1 := n_plur_xmod_le &
  [ STEM < "millions" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000" ].

billions_n1 := n_plur_xmod_le &
  [ STEM < "billions" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000000" ].

trillions_n1 := n_plur_xmod_le &
  [ STEM < "trillions" >,
    SYNSEM.LKEYS.KEYREL.CARG "1000000000000" ].

dozens_n1 := n_plur_xmod_le &
  [ STEM < "dozens" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

scores_n1 := n_plur_xmod_le &
  [ STEM < "scores" >,
    SYNSEM.LKEYS.KEYREL.CARG "20" ].

onedigitplur_n1 := n_plur_xmod_le &
  [ STEM < "onedigitersatz", "s" >,
    SYNSEM.LKEYS.KEYREL.PRED gen_numval_rel ].

twodigitplur_n1 := n_plur_xmod_le &
  [ STEM < "twodigitersatz", "s" >,
    SYNSEM.LKEYS.KEYREL.PRED gen_numval_rel ].

threedigitplur_n1 := n_plur_xmod_le &
  [ STEM < "threedigitersatz", "s" >,
    SYNSEM.LKEYS.KEYREL.PRED gen_numval_rel ].

decade_ersatz_n1 := n_plur_xmod_le &
  [ STEM < "decadeersatz" >,
    SYNSEM.LKEYS.KEYREL.PRED gen_numval_rel ].

linger_v1 := v_unacc_le &
  [ STEM < "linger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_linger_v_rel" ].

outlying_a1 := adj_intrans_le &
  [ STEM < "outlying" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outlying_rel" ].

inland_nom := n_adv_event_le &
  [ STEM < "inland" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _inland_adj_rel ] ].

Nashville_n1 := n_proper_le &
  [ STEM < "nashville" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nashville" ].

Atlanta_n1 := n_proper_le &
  [ STEM < "atlanta" >,
    SYNSEM.LKEYS.KEYREL.CARG "Atlanta" ].

Merced_n1 := n_proper_le &
  [ STEM < "merced" >,
    SYNSEM.LKEYS.KEYREL.CARG "Merced" ].

Salinas_n1 := n_proper_le &
  [ STEM < "salinas" >,
    SYNSEM.LKEYS.KEYREL.CARG "Salinas" ].

metro_a1 := adj_intrans_le &
  [ STEM < "metro" >,
    SYNSEM.LKEYS.KEYREL.PRED "_metro_adj_rel" ].

metro_n1 := n_intr_le &
  [ STEM < "metro" >,
    SYNSEM.LKEYS.KEYREL.PRED "_metro_n_rel" ].

metropolitan_a1 := adj_intrans_le &
  [ STEM < "metropolitan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_metropolitan_rel" ].

urban_a1 := adj_intrans_le &
  [ STEM < "urban" >,
    SYNSEM.LKEYS.KEYREL.PRED "_urban_rel" ].

rural_a1 := adj_intrans_le &
  [ STEM < "rural" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rural_rel" ].

foothill_n1 := n_ppof_le &
  [ STEM < "foothill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_foothill_rel" ].

shelter_v1 := v_np_trans_le &
  [ STEM < "shelter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shelter_v_rel" ].

shelter_n1 := n_mass_ppcomp_le &
  [ STEM < "shelter" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_shelter_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

reading_n1 := n_ppof_le &
  [ STEM < "reading" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reading_rel" ].

lowlying_a1 := adj_intrans_le &
  [ STEM < "lowlying" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lowlying_rel" ].

low_lying_a2 := adj_intrans_le &
  [ STEM < "low", "-", "lying" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lowlying_rel" ].

enquire_v1 := v_prep_intrans_le &
  [ STEM < "enquire" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_enquire_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

enquire_v2 := v_unerg_le &
  [ STEM < "enquire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enquire_rel" ].

enquire_v3 := v_prep_intrans_le &
  [ STEM < "enquire" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_enquire_rel",
             LKEYS.--COMPKEY _as_to_p_rel ] ].

enquire_pcv13_2 := v_cp_non_trans_le &
  [ STEM < "enquire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enquire_rel" ].

mislay_v1 := v_np_trans_le &
  [ STEM < "mislay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mislay_rel" ].

turn_out_expl_v1 := v_expl_it_subj_prtcl_cp_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_out_expl_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

turn_over_v1 := v_particle_pp_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_over_rel",
             LKEYS [ --COMPKEY _over_p_sel_rel,
                     --OCOMPKEY _to_p_rel ] ] ].

turn_over_v2 := v_particle_np_le &
  [ STEM < "turn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_turn_over_rel",
             LKEYS.--COMPKEY _over_p_sel_rel ] ].

keen_a2 := adj_reg_equi_le &
  [ STEM < "keen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_keen_rel" ].

mostly_vdeg := adv_degree_spec_v_le &
  [ STEM < "mostly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mostly_vdeg_rel" ].

mostly_mdeg := adv_degree_spec_m_le &
  [ STEM < "mostly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mostly_mdeg_rel" ].

somewhat_vdeg := adv_degree_spec_v_le &
  [ STEM < "somewhat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_somewhat_vdeg_rel" ].

somewhat_mdeg := adv_degree_spec_m_le &
  [ STEM < "somewhat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_somewhat_mdeg_rel" ].

moisture_n1 := n_mass_ppcomp_le &
  [ STEM < "moisture" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_moisture_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

tropical_a1 := adj_intrans_le &
  [ STEM < "tropical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tropical_rel" ].

forecast_n1 := n_mass_count_ppof_le &
  [ STEM < "forecast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forecast_n_rel" ].

forecast_v1 := v_np_trans_le &
  [ STEM < "forecast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forecast_v_rel" ].

forecast_v2 := v_cp_prop_non_trans_le &
  [ STEM < "forecast" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forecast_v_rel" ].

predict_v1 := v_np_trans_le &
  [ STEM < "predict" >,
    SYNSEM.LKEYS.KEYREL.PRED "_predict_rel" ].

predict_v2 := v_cp_prop_non_trans_le &
  [ STEM < "predict" >,
    SYNSEM.LKEYS.KEYREL.PRED "_predict_rel" ].

rumble_n1 := n_ppof_le &
  [ STEM < "rumble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rumble_n_rel" ].

rumble_v1 := v_unerg_le &
  [ STEM < "rumble" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rumble_v_rel" ].

gradual_a1 := adj_intrans_le &
  [ STEM < "gradual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gradual_rel" ].

gradually_adv1 := adv_int_vp_le &
  [ STEM < "gradually" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gradually_rel" ].

seasonable_a1 := adj_intrans_le &
  [ STEM < "seasonable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seasonable_rel" ].

seasonably_adv1 := adv_int_vp_le &
  [ STEM < "seasonably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seasonably_rel" ].

unseasonably_adv1 := adv_int_vp_le &
  [ STEM < "unseasonably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unseasonably_rel" ].

unseasonable_a1 := adj_intrans_le &
  [ STEM < "unseasonable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unseasonable_rel" ].

bitterly_vdeg := adv_degree_spec_v_le &
  [ STEM < "bitterly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bitterly_deg_rel" ].

caution_n1 := n_mass_count_le &
  [ STEM < "caution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_caution_n_rel" ].

caution_v1 := v_np_trans_cp_le &
  [ STEM < "caution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_caution_v_rel" ].

cloudiness_n1 := n_mass_count_le &
  [ STEM < "cloudiness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloudiness_rel" ].

coastal_a1 := adj_intrans_le &
  [ STEM < "coastal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coastal_rel" ].

coat_n1 := n_ppof_le &
  [ STEM < "coat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coat_n_rel" ].

coat_v1 := v_np_trans_le &
  [ STEM < "coat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coat_v_rel" ].

coating_n1 := n_ppof_le &
  [ STEM < "coating" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coating_n_rel" ].

dawn := n_hour_le &
  [ STEM < "dawn" >,
    SYNSEM.LKEYS.KEYREL.CARG "dawn" ].

dusk := n_hour_le &
  [ STEM < "dusk" >,
    SYNSEM.LKEYS.KEYREL.CARG "dusk" ].

daybreak := n_hour_le &
  [ STEM < "daybreak" >,
    SYNSEM.LKEYS.KEYREL.CARG "daybreak" ].

sunrise := n_hour_le &
  [ STEM < "sunrise" >,
    SYNSEM.LKEYS.KEYREL.CARG "sunrise" ].

sunset := n_hour_le &
  [ STEM < "sunset" >,
    SYNSEM.LKEYS.KEYREL.CARG "sunset" ].

dense_a1 := adj_intrans_le &
  [ STEM < "dense" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dense_rel" ].

dot_n1 := n_ppof_le &
  [ STEM < "dot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dot_n_rel" ].

dot_v1 := v_np_trans_le &
  [ STEM < "dot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dot_v_rel" ].

dust_n1 := n_mass_count_ppof_le &
  [ STEM < "dust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dust_n_rel" ].

dust_v1 := v_np_trans_le &
  [ STEM < "dust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dust_v_rel" ].

dusting_n1 := n_ppof_le &
  [ STEM < "dusting" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dusting_n_rel" ].

ease_v1 := v_unerg_le &
  [ STEM < "ease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ease_v_rel" ].

ease_n1 := n_mass_ppcomp_le &
  [ STEM < "ease" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ease_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

expose_v1 := v_to_trans_le &
  [ STEM < "expose" >,
    SYNSEM.LKEYS.KEYREL.PRED "_expose_rel" ].

frigid_a1 := adj_intrans_le &
  [ STEM < "frigid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frigid_rel" ].

frigid_a2 := adj_atrans_le &
  [ STEM < "frigid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_frigid_expl_rel" ].

gust_v1 := v_unerg_le &
  [ STEM < "gust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gust_v_rel" ].

gusty_a1 := adj_intrans_le &
  [ STEM < "gusty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gusty_rel" ].

gusty_a2 := adj_atrans_le &
  [ STEM < "gusty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gusty_expl_rel" ].

hail_n1 := n_mass_count_le &
  [ STEM < "hail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hail_n_rel" ].

hail_v1 := v_atrans_le &
  [ STEM < "hail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hail_v_rel" ].

icing_n1 := n_mass_le &
  [ STEM < "icing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_icing_rel" ].

interstate_n1 := n_intr_le &
  [ STEM < "interstate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interstate_rel" ].

measurable_a1 := adj_intrans_le &
  [ STEM < "measurable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_measurable_rel" ].

northern_a1 := adj_intrans_le &
  [ STEM < "northern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_northern_rel" ].

western_a1 := adj_intrans_le &
  [ STEM < "western" >,
    SYNSEM.LKEYS.KEYREL.PRED "_western_rel" ].

onshore_a1 := adj_intrans_le &
  [ STEM < "onshore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_onshore_rel" ].

onshore_adv1 := adv_vp_post_le &
  [ STEM < "onshore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_onshore_adv_rel" ].

partial_a1 := adj_intrans_le &
  [ STEM < "partial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_partial_rel" ].

patchy_a1 := adj_intrans_le &
  [ STEM < "patchy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_patchy_rel" ].

probability_n1 := n_ppof_le &
  [ STEM < "probability" >,
    SYNSEM.LKEYS.KEYREL.PRED "_probability_rel" ].

rainfall_n1 := n_mass_ppcomp_le &
  [ STEM < "rainfall" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rainfall_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

redevelop_v1 := v_unerg_le &
  [ STEM < "redevelop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_redevelop_rel" ].

redevelop_v2 := v_np_trans_le &
  [ STEM < "redevelop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_redevelop_rel" ].

sky_n1 := n_mass_count_ppof_le &
  [ STEM < "sky" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sky_rel" ].

slope_n1 := n_mass_count_ppof_le &
  [ STEM < "slope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slope_n_rel" ].

slope_v1 := v_unerg_le &
  [ STEM < "slope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slope_v_rel" ].

sprinkle_n1 := n_ppof_le &
  [ STEM < "sprinkle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sprinkle_n_rel" ].

sprinkle_v1 := v_atrans_le &
  [ STEM < "sprinkle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sprinkle_v_rel" ].

thick_a1 := adj_intrans_le &
  [ STEM < "thick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thick_rel" ].

thicken_v1 := v_unerg_le &
  [ STEM < "thicken" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thicken_rel" ].

warmth_n1 := n_mass_ppcomp_le &
  [ STEM < "warmth" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_warmth_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

heat_n1 := n_mass_ppcomp_le &
  [ STEM < "heat" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_heat_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

heat_v1 := v_np_trans_le &
  [ STEM < "heat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_heat_v_rel" ].

widespread_a1 := adj_intrans_le &
  [ STEM < "widespread" >,
    SYNSEM.LKEYS.KEYREL.PRED "_widespread_rel" ].

wee_a1 := adj_intrans_le &
  [ STEM < "wee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wee_rel" ].

burn_off_v1 := v_particle_np_le &
  [ STEM < "burn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_burn_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

burn_off_v2 := v_particle_le &
  [ STEM < "burn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_burn_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

mix_n1 := n_ppof_le &
  [ STEM < "mix" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mix_n_rel" ].

late_adv := n_adv_wspec_le &
  [ STEM < "late" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _late_adv_rel ] ].

late_det_adj := det_next_last_le &
  [ STEM < "late" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _late_next_last_rel ].

annoyed_a2 := adj_reg_that_cp_le &
  [ STEM < "annoyed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_annoyed_rel" ].

concerned_a2 := adj_reg_that_cp_le &
  [ STEM < "concerned" >,
    SYNSEM.LKEYS.KEYREL.PRED "_concerned_rel" ].

worried_a2 := adj_reg_that_cp_le &
  [ STEM < "worried" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worried_rel" ].

bothered_a1 := adj_intrans_le &
  [ STEM < "bothered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bothered_rel" ].

bothered_a2 := adj_reg_that_cp_le &
  [ STEM < "bothered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bothered_rel" ].

troubled_a1 := adj_intrans_le &
  [ STEM < "troubled" >,
    SYNSEM.LKEYS.KEYREL.PRED "_troubled_rel" ].

troubled_a2 := adj_reg_that_cp_le &
  [ STEM < "troubled" >,
    SYNSEM.LKEYS.KEYREL.PRED "_troubled_rel" ].

aware_a2 := adj_reg_that_cp_le &
  [ STEM < "aware" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aware_rel" ].

send_out_v1 := v_particle_np_le &
  [ STEM < "send" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_send_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

send_off_v1 := v_particle_np_le &
  [ STEM < "send" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_send_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

send_in_v1 := v_particle_np_le &
  [ STEM < "send" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_send_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

ship_out_v1 := v_particle_np_le &
  [ STEM < "ship" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ship_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

ship_out_v2 := v_particle_le &
  [ STEM < "ship" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ship_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

ship_back_v1 := v_particle_np_le &
  [ STEM < "ship" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ship_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

mail_out_v1 := v_particle_np_le &
  [ STEM < "mail" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mail_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

mail_in_v1 := v_particle_np_le &
  [ STEM < "mail" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mail_in_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

mail_back_v1 := v_particle_np_le &
  [ STEM < "mail" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mail_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

set_n1 := n_ppof_le &
  [ STEM < "set" >,
    SYNSEM.LKEYS.KEYREL.PRED "_set_n_rel" ].

back_nom := n_adv_event_le &
  [ STEM < "back" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _back_p_rel ] ].

back_deg := adv_degree_spec_v_le &
  [ STEM < "back" >,
    SYNSEM.LKEYS.KEYREL.PRED "_back_deg_rel" ].

wolf_n1 := n_intr_le &
  [ STEM < "wolf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wolf_n_rel" ].

wolf_down_v1 := v_particle_np_le &
  [ STEM < "wolf" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wolf_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

bend_n1 := n_intr_le &
  [ STEM < "bend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bend_n_rel" ].

bend_v1 := v_np_trans_le &
  [ STEM < "bend" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bend_v_rel" ].

bid_n1 := n_intr_le &
  [ STEM < "bid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bid_n_rel" ].

bid_v1 := v_np_trans_le &
  [ STEM < "bid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bid_v_rel" ].

calf_n1 := n_intr_le &
  [ STEM < "calf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calf_n_rel" ].

dwarf_n1 := n_intr_le &
  [ STEM < "dwarf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dwarf_n_rel" ].

dwarf_v1 := v_np_trans_le &
  [ STEM < "dwarf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dwarf_v_rel" ].

echo_n1 := n_intr_le &
  [ STEM < "echo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_echo_n_rel" ].

echo_v1 := v_np_trans_le &
  [ STEM < "echo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_echo_v_rel" ].

elf_n1 := n_intr_le &
  [ STEM < "elf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_elf_n_rel" ].

hero_n1 := n_intr_le &
  [ STEM < "hero" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hero_n_rel" ].

hoof_n1 := n_intr_le &
  [ STEM < "hoof" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hoof_n_rel" ].

knife_n1 := n_intr_le &
  [ STEM < "knife" >,
    SYNSEM.LKEYS.KEYREL.PRED "_knife_n_rel" ].

knife_v1 := v_np_trans_le &
  [ STEM < "knife" >,
    SYNSEM.LKEYS.KEYREL.PRED "_knife_v_rel" ].

leaf_n1 := n_intr_le &
  [ STEM < "leaf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leaf_n_rel" ].

loaf_n1 := n_intr_le &
  [ STEM < "loaf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loaf_n_rel" ].

loaf_v1 := v_np_trans_le &
  [ STEM < "loaf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loaf_v_rel" ].

potato_n1 := n_intr_le &
  [ STEM < "potato" >,
    SYNSEM.LKEYS.KEYREL.PRED "_potato_n_rel" ].

scarf_n1 := n_intr_le &
  [ STEM < "scarf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scarf_n_rel" ].

scarf_down_v1 := v_particle_np_le &
  [ STEM < "scarf" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_scarf_down_rel",
             LKEYS.--COMPKEY _down_p_sel_rel ] ].

sheaf_n1 := n_intr_le &
  [ STEM < "sheaf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sheaf_n_rel" ].

shelf_n1 := n_intr_le &
  [ STEM < "shelf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shelf_n_rel" ].

shelve_v1 := v_np_trans_le &
  [ STEM < "shelve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shelve_v_rel" ].

thief_n1 := n_intr_le &
  [ STEM < "thief" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thief_n_rel" ].

tomato_n1 := n_intr_le &
  [ STEM < "tomato" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tomato_n_rel" ].

torpedo_n1 := n_intr_le &
  [ STEM < "torpedo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_torpedo_n_rel" ].

torpedo_v1 := v_np_trans_le &
  [ STEM < "torpedo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_torpedo_v_rel" ].

veto_n1 := n_intr_le &
  [ STEM < "veto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_veto_n_rel" ].

veto_v1 := v_np_trans_le &
  [ STEM < "veto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_veto_v_rel" ].

wharf_n1 := n_intr_le &
  [ STEM < "wharf" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wharf_n_rel" ].

calm_n1 := n_mass_ppcomp_le &
  [ STEM < "calm" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_calm_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

elsewhere_nom := n_adv_pl_le &
  [ STEM < "elsewhere" >,
    SYNSEM.LKEYS [ KEYREL.PRED _place_n_rel,
                   ALT2KEYREL.PRED _elsewhere_j_rel ] ].

remainder_n1 := n_ppof_unspec_le &
  [ STEM < "remainder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remainder_rel" ].

big_ass_a1 := adj_intrans_le &
  [ STEM < "big", "ass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_big_ass_rel" ].

long_ass_a1 := adj_intrans_le &
  [ STEM < "long", "ass" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_ass_rel" ].

fto_n1 := n_mass_le &
  [ STEM < "fto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fto_rel" ].

and_or_conj_1 := conj_complex_and_or_le &
  [ STEM < "and", "/", "or" > ].

and_or_conj_2 := conj_complex_and_or_le &
  [ STEM < "and/or" > ].

and_or_conj_3 := conj_complex_and_or_le &
  [ STEM < "/" > ].

and_conj_slash := conj_complex_and_le &
  [ STEM < "/" > ].

due_date_n1 := n_mass_count_ppof_le &
  [ STEM < "due", "date" >,
    SYNSEM.LKEYS.KEYREL.PRED "_due_date_rel" ].

damage_n1 := n_mass_ppcomp_le &
  [ STEM < "damage" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_damage_n_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

damage_v1 := v_np_trans_le &
  [ STEM < "damage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_damage_v_rel" ].

suit_n1 := n_ppof_le &
  [ STEM < "suit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suit_n_rel" ].

if_not_adv1 := adv_int_vp_post_le &
  [ STEM < "if", "not" >,
    SYNSEM.LKEYS.KEYREL.PRED "_if_not_rel" ].

if_not_adv2 := adv_s_pre_le &
  [ STEM < "if", "not" >,
    SYNSEM.LKEYS.KEYREL.PRED "_if_not_rel" ].

or_not_adv1 := adv_vp_post_le &
  [ STEM < "or", "not" >,
    SYNSEM.LKEYS.KEYREL.PRED "_or_not_rel" ].

stock_v1 := v_np_trans_le &
  [ STEM < "stock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stock_v_rel" ].

palm_n1 := n_intr_le &
  [ STEM < "palm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_palm_n_rel" ].

palmtop_n1 := n_intr_le &
  [ STEM < "palmtop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_palmtop_rel" ].

palm_top_n1 := n_intr_le &
  [ STEM < "palm", "top" >,
    SYNSEM.LKEYS.KEYREL.PRED "_palmtop_rel" ].

upgrade_v1 := v_np*_trans_le &
  [ STEM < "upgrade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upgrade_v_rel" ].

upgrade_n1 := n_mass_count_ppof_le &
  [ STEM < "upgrade" >,
    SYNSEM.LKEYS.KEYREL.PRED "_upgrade_n_rel" ].

graphics_n1 := n_plur_le &
  [ STEM < "graphics" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graphics_rel" ].

megabyte_n1 := n_ppof_le &
  [ STEM < "megabyte" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megabyte_rel" ].

megabyte_n2 := n_ppof_le &
  [ STEM < "mbyte" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megabyte_rel" ].

megabyte_n3 := n_ppof_le &
  [ STEM < "mb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megabyte_rel" ].

megabyte_n4 := n_ppof_le &
  [ STEM < "mg" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megabyte_rel" ].

megahertz_n1 := n_intr_le &
  [ STEM < "megahertz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megahertz_rel" ].

megahertz_n2 := n_intr_le &
  [ STEM < "mhz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megahertz_rel" ].

meg_n1 := n_ppof_le &
  [ STEM < "meg" >,
    SYNSEM.LKEYS.KEYREL.PRED "_meg_rel" ].

gigabyte_n1 := n_ppof_le &
  [ STEM < "gigabyte" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gigabyte_rel" ].

gigabyte_n2 := n_ppof_le &
  [ STEM < "gbyte" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gigabyte_rel" ].

gigabyte_n3 := n_ppof_le &
  [ STEM < "gb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gigabyte_rel" ].

gigahertz_n1 := n_intr_le &
  [ STEM < "gigahertz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gigahertz_rel" ].

gigahertz_n2 := n_intr_le &
  [ STEM < "ghz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gigahertz_rel" ].

gig_n1 := n_ppof_le &
  [ STEM < "gig" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gig_rel" ].

read_write_a1 := adj_intrans_le &
  [ STEM < "read", "write" >,
    SYNSEM.LKEYS.KEYREL.PRED "_read_write_adj_rel" ].

solar_powered_a1 := adj_intrans_le &
  [ STEM < "solar", "powered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_solar_powered_rel" ].

in_the_way_of := p_reg_le &
  [ STEM < "in", "the", "way", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_the_way_of_rel ].

by_way_of := p_reg_le &
  [ STEM < "by", "way", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _by_way_of_rel ].

zoom_n1 := n_intr_le &
  [ STEM < "zoom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_zoom_n_rel" ].
  
output_n1 := n_mass_count_ppof_le &
  [ STEM < "output" >,
    SYNSEM.LKEYS.KEYREL.PRED "_output_n_rel" ].
  
output_v1 := v_np_trans_le &
  [ STEM < "output" >,
    SYNSEM.LKEYS.KEYREL.PRED "_output_v_rel" ].

output_v2 := v_np_prep_trans_le &
  [ STEM < "output" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_output_v_rel",
             LKEYS. --OCOMPKEY _to_p_rel ] ].

bargain_n1 := n_ppof_le &
  [ STEM < "bargain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bargain_n_rel" ].

portable_n1 := n_intr_le &
  [ STEM < "portable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_portable_n_rel" ].
  
ram_n1 := n_mass_le &
  [ STEM < "ram" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ram_n_rel" ].

ram_v1 := v_np_trans_le &
  [ STEM < "ram" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ram_v_rel" ].

ram_v2 := v_np_prep_trans_dors_le &
  [ STEM < "ram" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ram_v_rel" ].

pda_n1 := n_intr_le &
  [ STEM < "pda" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pda_rel" ].
  
buy_n1 := n_ppof_le &
  [ STEM < "buy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buy_n_rel" ].

capable_a1 := adj_trans_le &
  [ STEM < "capable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_capable_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

customizable_a1 := adj_trans_le &
  [ STEM < "customizable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_customizable_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

built_in_a1 := adj_intrans_le &
  [ STEM < "built", "in" >,
    SYNSEM.LKEYS.KEYREL.PRED "_built_in_rel" ].

built_in_a2 := adj_intrans_le &
  [ STEM < "built", "-", "in" >,
    SYNSEM.LKEYS.KEYREL.PRED "_built_in_rel" ].

boost_n1 := n_ppof_le &
  [ STEM < "boost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boost_n_rel" ].

boost_v1 := v_np_trans_le &
  [ STEM < "boost" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boost_v_rel" ].

special_order_v1 := v_np_trans_le &
  [ STEM < "special", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_special_order_v_rel" ].

special_order_v2 := v_np_trans_le &
  [ STEM < "special", "-", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_special_order_v_rel" ].

brand_new_a1 := adj_intrans_le &
  [ STEM < "brand", "new" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brand_new_rel" ].

brand_new_a2 := adj_intrans_le &
  [ STEM < "brand", "-", "new" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brand_new_rel" ].

handheld_n1 := n_intr_le &
  [ STEM < "handheld" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handheld_n_rel" ].

handheld_n2 := n_intr_le &
  [ STEM < "hand", "held" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handheld_n_rel" ].

handheld_n3 := n_intr_le &
  [ STEM < "hand", "-", "held" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handheld_n_rel" ].

handheld_a1 := adj_intrans_le &
  [ STEM < "handheld" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handheld_adj_rel" ].

darn_a1 := adj_intrans_le &
  [ STEM < "darn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_darn_adj_rel" ].

dang_a1 := adj_intrans_le &
  [ STEM < "dang" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dang_adj_rel" ].

damn_a1 := adj_intrans_le &
  [ STEM < "damn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_damn_adj_rel" ].

more_than_dollar_adj := adj_dollar_le &
  [ STEM < "more", "than" >,
    SYNSEM.LKEYS.KEYREL.PRED "_more_than_dollar_rel" ].

less_than_dollar_adj := adj_dollar_le &
  [ STEM < "less", "than" >,
    SYNSEM.LKEYS.KEYREL.PRED "_less_than_dollar_rel" ].

under_dollar_adj := adj_dollar_le &
  [ STEM < "under" >,
    SYNSEM.LKEYS.KEYREL.PRED "_under_dollar_rel" ].

below_dollar_adj := adj_dollar_le &
  [ STEM < "below" >,
    SYNSEM.LKEYS.KEYREL.PRED "_below_dollar_rel" ].

over_dollar_adj := adj_dollar_le &
  [ STEM < "over" >,
    SYNSEM.LKEYS.KEYREL.PRED "_over_dollar_rel"  ].

above_dollar_adj := adj_dollar_le &
  [ STEM < "above" >,
    SYNSEM.LKEYS.KEYREL.PRED "_above_dollar_rel" ].

at_least_dollar_adj := adj_dollar_le &
  [ STEM < "above" >,
    SYNSEM.LKEYS.KEYREL.PRED "_at_least_dollar_rel" ].

around_dollar_adj := adj_dollar_le &
  [ STEM < "around" >,
    SYNSEM.LKEYS.KEYREL.PRED "_around_dollar_rel" ].

out_of_date_a1 := adj_intrans_le &
  [ STEM < "out", "of", "date" >,
    SYNSEM.LKEYS.KEYREL.PRED "_out_of_date_rel" ].

electronics_n1 := n_mass_le &
  [ STEM < "electronics" >,
    SYNSEM.LKEYS.KEYREL.PRED "_electronics_rel" ].

focus_n1 := n_mass_ppcomp_le &
  [ STEM < "focus" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_focus_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

on_sale_a1 := adj_intrans_le &
  [ STEM < "on", "sale" >,
    SYNSEM.LKEYS.KEYREL.PRED "_on_sale_rel" ].

dash_punct_adv1 := adv_disc_nosem_le &
  [ STEM < "-" > ].

slash_punct_adv1 := conj_complex_or_le &
  [ STEM < "/" > ].

colon_punct_adv1 := adv_disc_nosem_le &
  [ STEM < ":" > ].

colon_verb_v1 := v_cp_non_trans_colon_le &
  [ STEM < ":" > ].

colon_verb_v2 := v_np_non_trans_colon_le &
  [ STEM < ":" > ].

colon_verb_v3 := v_sor_prd_colon_le &
  [ STEM < ":" > ].

colon_verb_v4 := v_unerg_colon_le &
  [ STEM < ":" > ].

page_v1 := v_np_trans_le &
  [ STEM < "page" >,
    SYNSEM.LKEYS.KEYREL.PRED "_page_v_rel" ].

tone_n1 := n_ppof_le &
  [ STEM < "tone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tone_n_rel" ].

cell_n1 := n_ppof_le &
  [ STEM < "cell" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cell_rel" ].

thus_far_adv1 := adv_int_vp_le &
  [ STEM < "thus", "far" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thus_far_rel" ].

in_full_adv1 := adv_int_vp_post_le &
  [ STEM < "in", "full" >,
    SYNSEM.LKEYS.KEYREL.PRED "_in_full_rel" ].

cause_n1 := n_ppof_le &
  [ STEM < "cause" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cause_n_rel" ].

to_date_adv1 := adv_int_vp_post_le &
  [ STEM < "to", "date" >,
    SYNSEM.LKEYS.KEYREL.PRED "_to_date_rel" ].

hold_up_n1 := n_intr_le &
  [ STEM < "hold", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hold_up_n_rel" ].

hold_up_n2 := n_intr_le &
  [ STEM < "holdup" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hold_up_n_rel" ].

breakdown_n1 := n_ppof_le &
  [ STEM < "breakdown" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breakdown_n_rel" ].

breakdown_n2 := n_ppof_le &
  [ STEM < "break", "down" >,
    SYNSEM.LKEYS.KEYREL.PRED "_breakdown_n_rel" ].

dude_root_pre := adv_disc_preh_le &
  [ STEM < "dude" >,
    SYNSEM.LKEYS.KEYREL.CARG "dude" ].

dude_root_post := adv_disc_posth_le &
  [ STEM < "dude" >,
    SYNSEM.LKEYS.KEYREL.CARG "dude" ].

dudes_root_pre := adv_disc_preh_le &
  [ STEM < "dudes" >,
    SYNSEM.LKEYS.KEYREL.CARG "dudes" ].

dudes_root_post := adv_disc_posth_le &
  [ STEM < "dudes" >,
    SYNSEM.LKEYS.KEYREL.CARG "dudes" ].

man_root_pre := adv_disc_preh_le &
  [ STEM < "man" >,
    SYNSEM.LKEYS.KEYREL.CARG "man" ].

man_root_post := adv_disc_posth_le &
  [ STEM < "man" >,
    SYNSEM.LKEYS.KEYREL.CARG "man" ].

folks_root_pre := adv_disc_preh_le &
  [ STEM < "folks" >,
    SYNSEM.LKEYS.KEYREL.CARG "folks" ].

folks_root_post := adv_disc_posth_le &
  [ STEM < "folks" >,
    SYNSEM.LKEYS.KEYREL.CARG "folks" ].

fool_root_pre := adv_disc_preh_le &
  [ STEM < "fool" >,
    SYNSEM.LKEYS.KEYREL.CARG "fool" ].

fool_root_post := adv_disc_posth_le &
  [ STEM < "fool" >,
    SYNSEM.LKEYS.KEYREL.CARG "fool" ].

gentlemen_root_pre := adv_disc_preh_le &
  [ STEM < "gentlemen" >,
    SYNSEM.LKEYS.KEYREL.CARG "gentlemen" ].

gentlemen_root_post := adv_disc_posth_le &
  [ STEM < "gentlemen" >,
    SYNSEM.LKEYS.KEYREL.CARG "gentlemen" ].

ladies_and_gentlemen_root_pre := adv_disc_preh_le &
  [ STEM < "ladies", "and", "gentlemen" >,
    SYNSEM.LKEYS.KEYREL.CARG "ladies_and_gentlemen" ].

ladies_and_gentlemen_root_post := adv_disc_posth_le &
  [ STEM < "ladies", "and", "gentlemen" >,
    SYNSEM.LKEYS.KEYREL.CARG "ladies_and_gentlemen" ].

baby_root_pre := adv_disc_preh_le &
  [ STEM < "baby" >,
    SYNSEM.LKEYS.KEYREL.CARG "baby" ].

baby_root_post := adv_disc_posth_le &
  [ STEM < "baby" >,
    SYNSEM.LKEYS.KEYREL.CARG "baby" ].

babe_root_pre := adv_disc_preh_le &
  [ STEM < "babe" >,
    SYNSEM.LKEYS.KEYREL.CARG "babe" ].

babe_root_post := adv_disc_posth_le &
  [ STEM < "babe" >,
    SYNSEM.LKEYS.KEYREL.CARG "babe" ].

guess_what_root_pre := adv_disc_preh_le &
  [ STEM < "guess", "what" >,
    SYNSEM.LKEYS.KEYREL.CARG "guess_what" ].

guess_what_root_post := adv_disc_posth_le &
  [ STEM < "guess", "what" >,
    SYNSEM.LKEYS.KEYREL.CARG "guess_what" ].

strike_n1 := n_ppof_le &
  [ STEM < "strike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strike_n_rel" ].

distressingly_deg := adv_degree_spec_v_le &
  [ STEM < "distressingly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_distressingly_deg_rel" ].

just_now_adv := adv_int_vp_le &
  [ STEM < "just", "now" >,
    SYNSEM.LKEYS.KEYREL.PRED "_just_now_adv_rel" ].

just_in_time_adv := adv_int_vp_le &
  [ STEM < "just", "in", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_just_in_time_rel" ].

complicated_a1 := adj_intrans_le &
  [ STEM < "complicated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complicated_rel" ].

complicated_a2 := adj_reg_atrans_le &
  [ STEM < "complicated" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complicated_rel" ].

the_hell_wh_adv := wh_the_hell_le &
  [ STEM < "the", "hell" > ].

the_fuck_wh_adv := wh_the_hell_le &
  [ STEM < "the", "fuck" > ].

the_heck_wh_adv := wh_the_hell_le &
  [ STEM < "the", "heck" > ].

on_earth_wh_adv := wh_the_hell_le &
  [ STEM < "on", "earth" > ].

in_the_world_wh_adv := wh_the_hell_le &
  [ STEM < "in", "the", "world" > ].

oh_where_wh_adv := wh_the_hell_le &
  [ STEM < "oh", "where" > ].

exactly_wh_adv := wh_the_hell_le &
  [ STEM < "exactly" > ].

off_of_p := p_reg_le &
  [ STEM < "off", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _off_of_rel ].

take_back_v1 := v_particle_np_le &
  [ STEM < "take" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

take_v2 := v_expl_it_subj_np_cp_le &
  [ STEM < "take" >,
    SYNSEM.LKEYS.KEYREL.PRED "_take_v_2_rel" ].

take_v3 := v_expl_it_subj_np_np_vp_inf_le &
  [ STEM < "take" >,
    SYNSEM.LKEYS.KEYREL.PRED "_take_v_2_rel" ].

take_v4 := v_expl_obj_cp_prop_le &
  [ STEM < "take" >,
    SYNSEM.LKEYS.KEYREL.PRED "_take_v_2_rel" ].

vital_a1 := adj_intrans_le &
  [ STEM < "vital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vital_rel" ].

vital_a2 := adj_reg_atrans_le &
  [ STEM < "vital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vital_rel" ].

vital_a3 := adj_reg_atrans_cp_le &
  [ STEM < "vital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vital_rel" ].

urgent_a1 := adj_intrans_le &
  [ STEM < "urgent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_urgent_rel" ].

urgent_a2 := adj_reg_atrans_le &
  [ STEM < "urgent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_urgent_rel" ].

urgent_a3 := adj_reg_atrans_cp_le &
  [ STEM < "urgent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_urgent_rel" ].

package_v1 := v_np_trans_le &
  [ STEM < "package" >,
    SYNSEM.LKEYS.KEYREL.PRED "_package_v_rel" ].

remains_n1 := n_plur_le &
  [ STEM < "remains" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remains_rel" ].

lading_n1 := n_mass_le &
  [ STEM < "lading" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lading_rel" ].

crack_v1 := v_np_trans_le &
  [ STEM < "crack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crack_v_rel" ].

casing_n1 := n_ppof_le &
  [ STEM < "casing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_casing_rel" ].

screw_up_v1 := v_particle_np_le &
  [ STEM < "screw" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_screw_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

piss_off_v1 := v_particle_np_le &
  [ STEM < "piss" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_piss_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

extreme_n1 := n_ppof_le &
  [ STEM < "extreme" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extreme_n_rel" ].

unsatisfactory_a1 := adj_intrans_le &
  [ STEM < "unsatisfactory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsatisfactory_rel" ].

unsatisfactory_a2 := adj_reg_atrans_le &
  [ STEM < "unsatisfactory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsatisfactory_rel" ].

unsatisfactory_a3 := adj_reg_atrans_cp_le &
  [ STEM < "unsatisfactory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsatisfactory_rel" ].

no_more_adv1 := adv_int_vp_post_le &
  [ STEM < "no", "more" >,
    SYNSEM.LKEYS.KEYREL.PRED _nomore_rel ].

a_lot_adv1 := adv_int_vp_post_le &
  [ STEM < "a", "lot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_lot_adv_rel" ].

a_lot_adv2 := adv_int_vp_post_le &
  [ STEM < "alot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_lot_adv_rel" ].

a_little_adv1 := adv_int_vp_post_le &
  [ STEM < "a", "little" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_little_adv_rel" ].

much_adv := adv_int_vp_post_le &
  [ STEM < "much" >,
    SYNSEM.LKEYS.KEYREL.PRED "_much_adv_rel" ].

reconfirm_v1 := v_np*_trans_le &
  [ STEM < "reconfirm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reconfirm_rel" ].

reconfirm_v2 := v_pp_cp_fin_le &
  [ STEM < "reconfirm" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_reconfirm_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

advanced_a1 := adj_intrans_le &
  [ STEM < "advanced" >,
    SYNSEM.LKEYS.KEYREL.PRED "_advanced_rel" ].

dark_n1 := n_ppof_le &
  [ STEM < "dark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dark_n_rel" ].

on_hand_a1 := adj_intrans_le &
  [ STEM < "on", "hand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_on_hand_rel" ].

left_a1 := adj_intrans_le &
  [ STEM < "left" >,
    SYNSEM.LKEYS.KEYREL.PRED "_left_adj_rel" ].

Windows_n1 := n_proper_le &
  [ STEM < "windows" >,
    SYNSEM.LKEYS.KEYREL.CARG "Windows" ].

Windows_ME_n1 := n_proper_le &
  [ STEM < "windows", "me" >,
    SYNSEM.LKEYS.KEYREL.CARG "Windows_ME" ].

Gateway_n2 := n_proper_le &
  [ STEM < "gateway" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gateway" ].

mileage_n1 := n_mass_ppcomp_le &
  [ STEM < "mileage" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_mileage_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

dual_a1 := adj_intrans_le &
  [ STEM < "dual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dual_rel" ].

PCS_n1 := n_proper_le &
  [ STEM < "PCS" >,
    SYNSEM.LKEYS.KEYREL.CARG "PCS" ].

Samsung_n1 := n_proper_le &
  [ STEM < "Samsung" >,
    SYNSEM.LKEYS.KEYREL.CARG "Samsung" ].

Sprint_n1 := n_proper_le &
  [ STEM < "Sprint" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sprint" ].

digital_analog_a1 := adj_intrans_le &
  [ STEM < "digital", "/", "analog" >,
    SYNSEM.LKEYS.KEYREL.PRED "_digital_analog_rel" ].

analog_digital_a1 := adj_intrans_le &
  [ STEM < "analog", "/", "digital" >,
    SYNSEM.LKEYS.KEYREL.PRED "_digital_analog_rel" ].

vaio_n1 := n_intr_le &
  [ STEM < "vaio" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vaio_rel" ].

bark_v1 := v_unerg_le &
  [ STEM < "bark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bark_v_rel" ].

bark_n1 := n_ppof_le &
  [ STEM < "bark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bark_n_rel" ].

DHL_n1 := n_proper_le &
  [ STEM < "dhl" >,
    SYNSEM.LKEYS.KEYREL.CARG "DHL" ].

FedEx_n1 := n_proper_le &
  [ STEM < "fed", "ex" >,
    SYNSEM.LKEYS.KEYREL.CARG "FedEx" ].

FedEx_n2 := n_proper_le &
  [ STEM < "fedex" >,
    SYNSEM.LKEYS.KEYREL.CARG "FedEx" ].

FedEx_n3 := n_proper_le &
  [ STEM < "federal", "express" >,
    SYNSEM.LKEYS.KEYREL.CARG "FedEx" ].

UPS_n1 := n_proper_le &
  [ STEM < "ups" >,
    SYNSEM.LKEYS.KEYREL.CARG "UPS" ].

UPS_n2 := n_proper_le &
  [ STEM < "united", "parcel", "service" >,
    SYNSEM.LKEYS.KEYREL.CARG "UPS" ].

credit_back_v1 := v_particle_np_le &
  [ STEM < "credit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_credit_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

credit_back_v2 := v_particle_np_pp_to_le &
  [ STEM < "credit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_credit_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

container_n1 := n_ppof_le &
  [ STEM < "container" >,
    SYNSEM.LKEYS.KEYREL.PRED "_container_rel" ].

mere_a1 := adj_attr_intrans_le &
  [ STEM < "mere" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mere_rel" ].

round := p_le &
  [ STEM < "round" >,
    SYNSEM.LKEYS.KEYREL.PRED _around_p_rel ].

make_n1 := n_ppof_le &
  [ STEM < "make" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_n_rel" ].

over_deg := adv_degree_spec_le &
  [ STEM < "over" >,
    SYNSEM.LKEYS.KEYREL.PRED "_over_deg_rel" ].

so_adv2 := adv_int_vp_pre_le &
  [ STEM < "so" >,
    SYNSEM.LKEYS.KEYREL.PRED "_so_adv_rel" ].

write_v5 := v_subj_equi_le &
  [ STEM < "write" >,
    SYNSEM.LKEYS.KEYREL.PRED "_write_rel" ].

write_v6 := v_np_trans_cp_fin_or_inf_le &
  [ STEM < "write" >,
    SYNSEM.LKEYS.KEYREL.PRED "_write_rel" ].

write_v7 := v_pp_cp_le &
  [ STEM < "write" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_write_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

call_v2 := v_subj_equi_le &
  [ STEM < "call" >,
    SYNSEM.LKEYS.KEYREL.PRED "_call_rel" ].

call_v3 := v_obj_equi_prd_le &
  [ STEM < "call" >,
    SYNSEM.LKEYS.KEYREL.PRED "_call_rel" ].

call_v4 := v_np_prep_trans_le &
  [ STEM < "call" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_call_rel",
             LKEYS.--OCOMPKEY _about_p_rel ] ].

model_ttl := n_title_le &
  [ STEM < "model" >,
    SYNSEM.LKEYS.KEYREL.PRED "_model_n_rel" ].

package_ttl := n_title_le &
  [ STEM < "package" >,
    SYNSEM.LKEYS.KEYREL.PRED "_package_n_rel" ].

customer_ttl := n_title_le &
  [ STEM < "customer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_customer_rel" ].

march_v1 := v_unerg_le &
  [ STEM < "march" >,
    SYNSEM.LKEYS.KEYREL.PRED "_march_v_rel" ].

harddisk_n1 := n_mass_le &
  [ STEM < "harddisk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hard_disk_rel" ].

wonder_about_v1 := v_prep_intrans_le &
  [ STEM < "wonder" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wonder_v_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

investigate_v2 := v_cp_ques_fin_inf_non_trans_le &
  [ STEM < "investigate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_investigate_rel" ].

resolution_n1 := n_mass_count_ppof_le &
  [ STEM < "resolution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resolution_rel" ].

high_res_n1 := n_ppof_le &
  [ STEM < "high", "res" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_resolution_rel" ].

high_res_n2 := n_ppof_le &
  [ STEM < "high", "-", "res" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_resolution_rel" ].

high_res_n3 := n_ppof_le &
  [ STEM < "high", "-", "resolution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_high_resolution_rel" ].

specification_n1 := n_ppcomp_le &
  [ STEM < "specification" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_specification_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

spec_n1 := n_ppcomp_le &
  [ STEM < "spec" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_specification_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

lo_root_pre := adv_disc_preh_grt_le &
  [ STEM < "lo" >,
    SYNSEM.LKEYS.KEYREL.CARG "lo" ].

lo_root_post := adv_disc_posth_grt_le &
  [ STEM < "lo" >,
    SYNSEM.LKEYS.KEYREL.CARG "lo" ].

musical_a1 := adj_intrans_le &
  [ STEM < "musical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_musical_adj_rel" ].

FedEx_v1 := v_np_trans_le &
  [ STEM < "fed", "ex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fed_ex_v_rel" ].

FedEx_v1a := v_np_trans_le &
  [ STEM < "fedex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fed_ex_v_rel" ].

fed_ex_v2 := v_ditrans_only_le &
  [ STEM < "fed", "ex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fed_ex_v_rel" ].

fed_ex_v2a := v_ditrans_only_le &
  [ STEM < "fedex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fed_ex_v_rel" ].

fed_ex_v3 := v_empty_to_trans_le &
  [ STEM < "fed", "ex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fed_ex_v_rel" ].

fed_ex_v3b := v_empty_to_trans_le &
  [ STEM < "fedex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fed_ex_v_rel" ].

so_root := adv_disc_preh_le &
  [ STEM < "so" >,
    SYNSEM.LKEYS.KEYREL.CARG "so" ].

and_root := adv_disc_preh_le &
  [ STEM < "and" >,
    SYNSEM.LKEYS.KEYREL.CARG "and" ].

or_root := adv_disc_preh_le &
  [ STEM < "or" >,
    SYNSEM.LKEYS.KEYREL.CARG "or" ].

either_that_or_root := adv_disc_preh_le &
  [ STEM < "either", "that", "or" >,
    SYNSEM.LKEYS.KEYREL.CARG "either_that_or" ].

way_too_deg := adv_degree_spec_v_le &
  [ STEM < "way", "too" >,
    SYNSEM.LKEYS.KEYREL.PRED "_way_too_deg_rel" ].

gotta_v1 := va_modal_pos_noninv_le & 
  [ STEM < "gotta" >,
    SYNSEM.LKEYS.KEYREL.PRED _have_to_rel ].

in_regards_to := p_le &
  [ STEM < "in", "regards", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_regard_to_rel ].

in_regard_to := p_le &
  [ STEM < "in", "regard", "to" >,
    SYNSEM.LKEYS.KEYREL.PRED _in_regard_to_rel ].

fed_up_a1 := adj_intrans_le &
  [ STEM < "fed", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fed_up_rel" ].

any_longer_adv1 := adv_int_vp_post_le &
  [ STEM < "any", "longer" >,
    SYNSEM.LKEYS.KEYREL.PRED _any_longer_rel ].

unlink_v1 := v_np_trans_le &
  [ STEM < "unlink" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unlink_v_rel" ].

hereby_adv1 := adv_vp_pre_le &
  [ STEM < "hereby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hereby_rel" ].

quartet_n1 := n_ppof_le &
  [ STEM < "quartet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quartet_rel" ].

insanity_n1 := n_mass_ppcomp_le &
  [ STEM < "insanity" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_insanity_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

fit_n1 := n_ppof_le &
  [ STEM < "fit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fit_n_rel" ].

not_really := adv_not_le &
  [ STEM < "not", "really" > ].

not_quite := adv_not_le &
  [ STEM < "not", "quite" > ].

not_quite_deg := adv_degree_spec_jov_le &
  [ STEM < "not", "quite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_not+quite_deg_rel" ].

still_not := adv_not_le &
  [ STEM < "still", "not" > ].

rather_not := adv_not_le &
  [ STEM < "rather", "not" > ].

since_adv := adv_int_vp_le &
  [ STEM < "since" >,
    SYNSEM.LKEYS.KEYREL.PRED "_since_adv_rel" ].

word_v1 := v_np_trans_le &
  [ STEM < "word" >,
    SYNSEM.LKEYS.KEYREL.PRED "_word_v_rel" ].

undoubtedly_adv1 := adv_vp_aux_le &
  [ STEM < "undoubtedly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undoubtedly_rel" ].

up_to_date_a1 := adj_intrans_le &
  [ STEM < "up", "to", "date" >,
    SYNSEM.LKEYS.KEYREL.PRED "_up_to_date_rel" ].

up_to_date_a2 := adj_intrans_le &
  [ STEM < "up", "-", "to", "-", "date" >,
    SYNSEM.LKEYS.KEYREL.PRED "_up_to_date_rel" ].

very_much_adv1 := adv_int_vp_le &
  [ STEM < "very", "much" >,
    SYNSEM.LKEYS.KEYREL.PRED "_very_much_adv_rel" ].

damn_v1 := v_np_trans_le &
  [ STEM < "damn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_damn_v_rel" ].

damn_n1 := n_intr_le &
  [ STEM < "damn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_damn_n_rel" ].

wanted_a1 := adj_intrans_le &
  [ STEM < "wanted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wanted_rel" ].

unwanted_a1 := adj_intrans_le &
  [ STEM < "unwanted" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unwanted_rel" ].

slip_n1 := n_ppof_le &
  [ STEM < "slip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_slip_n_rel" ].

forbid_v1 := v_np_trans_le &
  [ STEM < "forbid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forbid_rel" ].

forbid_v2 := v_obj_equi_le &
  [ STEM < "forbid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forbid_rel" ].

therefore_adv1 := adv_vp_pre_le &
  [ STEM < "therefore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_therefore_adv_rel" ].

disappointed_a1 := adj_trans_le &
  [ STEM < "disappointed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_disappointed_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

disappointed_a2 := adj_trans_oblig_le &
  [ STEM < "disappointed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_disappointed_rel",
             LKEYS.--COMPKEY _by_p_sel_rel ] ].

disappointed_a3 := adj_trans_oblig_le &
  [ STEM < "disappointed" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_disappointed_rel",
             LKEYS.--COMPKEY _in_p_sel_rel ] ].

genuinely_adv1 := adv_int_vp_le &
  [ STEM < "genuinely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_genuinely_rel" ].

possess_v1 := v_np_trans_le &
  [ STEM < "possess" >,
    SYNSEM.LKEYS.KEYREL.PRED "_possess_rel" ].

seek_v1 := v_np_trans_le &
  [ STEM < "seek" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seek_v_rel" ].

seek_v2 := v_subj_equi_le &
  [ STEM < "seek" >,
    SYNSEM.LKEYS.KEYREL.PRED "_seek_v_rel" ].

radar_n1 := n_mass_le &
  [ STEM < "radar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_radar_rel" ].

mine_n1 := n_ppof_le &
  [ STEM < "mine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mine_n_rel" ].

yesterday_det := det_yesterday_tomorrow_le &
  [ STEM < "yesterday" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _yesterday_j_rel ].

tomorrow_det := det_yesterday_tomorrow_le &
  [ STEM < "tomorrow" >,
    SYNSEM.LKEYS.ALTKEYREL.PRED _tomorrow_j_rel ].

patiently_adv1 := adv_int_vp_le &
  [ STEM < "patiently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_patiently_rel" ].

forever_adv := n_adv_tm_le &
  [ STEM < "forever" >,
    SYNSEM.LKEYS [ KEYREL.PRED _time_n_rel,
                   ALT2KEYREL.PRED _forever_j_rel ] ].
			       
sub_notebook_n1 := n_ppof_le &
  [ STEM < "subnotebook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sub_notebook_rel" ].

sub_notebook_n2 := n_ppof_le &
  [ STEM < "sub", "notebook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sub_notebook_rel" ].

sub_notebook_n3 := n_ppof_le &
  [ STEM < "sub", "-", "notebook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sub_notebook_rel" ].

schlep_v1 := v_np_trans_le &
  [ STEM < "schlep" >,
    SYNSEM.LKEYS.KEYREL.PRED "_schlep_rel" ].

schlep_around_v1 := v_particle_np_le &
  [ STEM < "schlep" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_schlep_rel",
             LKEYS.--COMPKEY _around_p_sel_rel ] ].

top_of_the_line_a1 := adj_intrans_le &
  [ STEM < "top", "of", "the", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_top_of_the_line_rel" ].

top_of_the_line_a2 := adj_intrans_le &
  [ STEM < "top", "-", "of", "-", "the", "-", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_top_of_the_line_rel" ].

prepaid_a1 := adj_intrans_le &
  [ STEM < "prepaid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prepaid_rel" ].

prepaid_a2 := adj_intrans_le &
  [ STEM < "pre", "-", "paid" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prepaid_rel" ].

triband_n1 := n_intr_le &
  [ STEM < "triband" >,
    SYNSEM.LKEYS.KEYREL.PRED "_triband_rel" ].

triband_n2 := n_intr_le &
  [ STEM < "tri", "band" >,
    SYNSEM.LKEYS.KEYREL.PRED "_triband_rel" ].

triband_n3 := n_intr_le &
  [ STEM < "tri", "-", "band" >,
    SYNSEM.LKEYS.KEYREL.PRED "_triband_rel" ].

lifetime_n1 := n_ppof_le &
  [ STEM < "lifetime" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lifetime_rel" ].

lifetime_n2 := n_ppof_le &
  [ STEM < "life", "-", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lifetime_rel" ].

lightweight_a1 := adj_intrans_le &
  [ STEM < "lightweight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lightweight_rel" ].

lightweight_a2 := adj_intrans_le &
  [ STEM < "light", "-", "weight" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lightweight_rel" ].

first_time_a1 := adj_intrans_le &
  [ STEM < "first", "-", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_first_time_rel" ].

second_hand_a1 := adj_intrans_le &
  [ STEM < "second", "-", "hand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_second_hand_rel" ].

second_hand_a2 := adj_intrans_le &
  [ STEM < "second", "hand" >,
    SYNSEM.LKEYS.KEYREL.PRED "_second_hand_rel" ].

user_friendly_a1 := adj_intrans_le &
  [ STEM < "user", "-", "friendly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_user_friendly_rel" ].

sister_in_law_n1 := n_ppof_le &
  [ STEM < "sister", "-", "in", "-", "law" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sister_in_law_rel" ].

brother_in_law_n1 := n_ppof_le &
  [ STEM < "brother", "-", "in", "-", "law" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brother_in_law_rel" ].

mother_in_law_n1 := n_ppof_le &
  [ STEM < "mother", "-", "in", "-", "law" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mother_in_law_rel" ].

father_in_law_n1 := n_ppof_le &
  [ STEM < "father", "-", "in", "-", "law" >,
    SYNSEM.LKEYS.KEYREL.PRED "_father_in_law_rel" ].

minidisc_n1 := n_intr_le &
  [ STEM < "minidisc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_disc_rel" ].

minidisc_n2 := n_intr_le &
  [ STEM < "mini", "disc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_disc_rel" ].

minidisc_n3 := n_intr_le &
  [ STEM < "mini", "-", "disc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_disc_rel" ].

minidisk_n1 := n_intr_le &
  [ STEM < "mini", "disk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_disc_rel" ].

minidisk_n2 := n_intr_le &
  [ STEM < "minidisk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_disc_rel" ].

minidisk_n3 := n_intr_le &
  [ STEM < "mini", "-", "disk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_disc_rel" ].

minicamcorder_n1 := n_intr_le &
  [ STEM < "minicamcorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_camcorder_rel" ].

minicamcorder_n2 := n_intr_le &
  [ STEM < "mini", "-", "camcorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_camcorder_rel" ].

following_a1 := adj_intrans_le &
  [ STEM < "following" >,
    SYNSEM.LKEYS.KEYREL.PRED "_following_adj_rel" ].

following_n1 := n_ppof_le &
  [ STEM < "following" >,
    SYNSEM.LKEYS.KEYREL.PRED "_following_n_rel" ].

profile_v1 := v_np_trans_le &
  [ STEM < "profile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profile_v_rel" ].

profile_n1 := n_ppof_le &
  [ STEM < "profile" >,
    SYNSEM.LKEYS.KEYREL.PRED "_profile_n_rel" ].

spouse_n1 := n_ppof_le &
  [ STEM < "spouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spouse_rel" ].

ex_spouse_n1 := n_ppof_le &
  [ STEM < "ex", "-", "spouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_spouse_rel" ].

ex_spouse_n2 := n_ppof_le &
  [ STEM < "ex", "spouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_spouse_rel" ].

ex_spouse_n3 := n_ppof_le &
  [ STEM < "ex-spouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_spouse_rel" ].

ex_husband_n1 := n_ppof_le &
  [ STEM < "ex", "-", "husband" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_husband_rel" ].

ex_husband_n2 := n_ppof_le &
  [ STEM < "ex", "husband" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_husband_rel" ].

ex_husband_n3 := n_ppof_le &
  [ STEM < "ex-husband" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_husband_rel" ].

ex_wife_n1 := n_ppof_le &
  [ STEM < "ex", "-", "wife" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_wife_rel" ].

ex_wife_n2 := n_ppof_le &
  [ STEM < "ex", "wife" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_wife_rel" ].

ex_wife_n3 := n_ppof_le &
  [ STEM < "ex-wife" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ex_wife_rel" ].

edit_v1 := v_np_trans_le &
  [ STEM < "edit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_edit_v_rel" ].

edit_n1 := n_ppof_le &
  [ STEM < "edit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_edit_n_rel" ].

beneficiary_n1 := n_ppof_le &
  [ STEM < "beneficiary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beneficiary_n_rel" ].

insurance_n1 := n_mass_ppcomp_le &
  [ STEM < "insurance" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_insurance_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

social_security_n1 := n_mass_ppcomp_le &
  [ STEM < "social", "security" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_social_security_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

social_security_n2 := n_mass_ppcomp_le &
  [ STEM < "ssn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_social_security_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

relocate_v1 := v_np_trans_le &
  [ STEM < "relocate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relocate_rel" ].

relocate_v2 := v_unerg_le &
  [ STEM < "relocate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_relocate_rel" ].

salary_n1 := n_ppof_le &
  [ STEM < "salary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_salary_rel" ].  

physician_n1 := n_ppof_le &
  [ STEM < "physician" >,
    SYNSEM.LKEYS.KEYREL.PRED "_physician_rel" ].

primary_a1 := adj_intrans_le &
  [ STEM < "primary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_primary_rel" ].

secondary_a1 := adj_intrans_le &
  [ STEM < "secondary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_secondary_rel" ].

nationwide_adv := pp_le &
  [ STEM < "nationwide" >,
    SYNSEM.LKEYS.KEYREL.PRED _nationwide_rel ].

I_must_say_root := adv_disc_like_le &
  [ STEM < "I", "must", "say" >,
    SYNSEM.LKEYS.KEYREL.CARG "I_must_say" ].

frustrated_a1 := adj_trans_le &
  [ STEM < "frustrated" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_frustrated_rel",
             LKEYS.--COMPKEY _at_p_sel_rel ] ].

frustrated_a2 := adj_trans_oblig_le &
  [ STEM < "frustrated" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_frustrated_rel",
             LKEYS.--COMPKEY _with_p_sel_rel ] ].

frustrated_a3 := adj_trans_oblig_le &
  [ STEM < "frustrated" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_frustrated_rel",
             LKEYS.--COMPKEY _by_p_sel_rel ] ].

imagery_n1 := n_mass_ppcomp_le &
  [ STEM < "imagery" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_imagery_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

image_n1 := n_ppof_le &
  [ STEM < "image" >,
    SYNSEM.LKEYS.KEYREL.PRED "_image_rel" ].

counter_narcotics_n1 := n_intr_le &
  [ STEM < "counter", "narcotics" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counter_narcotics_rel" ].

counter_narcotics_n2 := n_intr_le &
  [ STEM < "counter", "-", "narcotics" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counter_narcotics_rel" ].

counter_narcotic_a1 := adj_intrans_le &
  [ STEM < "counter", "narcotic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counter_narcotic_rel" ].

counter_narcotic_a2 := adj_intrans_le &
  [ STEM < "counter", "-", "narcotic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counter_narcotic_rel" ].

coincident_a1 := adj_intrans_le &
  [ STEM < "coincident" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coincident_rel" ].

currently_a3 := adv_int_a_or_p_le &
  [ STEM < "currently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_currently_rel" ].

precede_v1 := v_np_trans_le &
  [ STEM < "precede" >,
    SYNSEM.LKEYS.KEYREL.PRED "_precede_rel" ].

intercept_n1 := n_ppof_le &
  [ STEM < "intercept" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intercept_n_rel" ].

intercept_v1 := v_np_trans_le &
  [ STEM < "intercept" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intercept_v_rel" ].

one_digit_hour := n_hour_le &
  [ STEM < "onedigitersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "onedigitersatz" ].

two_digit_hour := n_hour_le &
  [ STEM < "twodigitersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "twodigitersatz" ].

two_digit_day := n_day_of_month_card_le &
  [ STEM < "twodigitersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "twodigitersatz" ].

author_v1 := v_np_trans_le &
  [ STEM < "author" >,
    SYNSEM.LKEYS.KEYREL.PRED "_author_v_rel" ].

author_n1 := n_ppof_le &
  [ STEM < "author" >,
    SYNSEM.LKEYS.KEYREL.PRED "_author_n_rel" ].

cloud_free_a1 := adj_intrans_le &
  [ STEM < "cloud", "-", "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cloud_free_rel" ].

cover_n1 := n_mass_count_ppof_le &
  [ STEM < "cover" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cover_n_rel" ].

;four_digit_hour_n1 := n_four_digit_hour_le &
;  [ STEM < "fourdigitersatz" > ].

basic_a1 := adj_intrans_le &
  [ STEM < "basic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_basic_adj_rel" ].

dock_v1 := v_np_trans_le &
  [ STEM < "dock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dock_v_rel" ].

dock_n1 := n_ppof_le &
  [ STEM < "dock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dock_n_rel" ].

undock_v1 := v_np_trans_le &
  [ STEM < "undock" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undock_v_rel" ].

ashore_adv := pp_le &
  [ STEM < "ashore" >,
    SYNSEM.LKEYS.KEYREL.PRED _ashore_rel ].

wager_v1 := v_np_np_cp_le &
  [ STEM < "wager" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wager_v_rel" ].

wager_n1 := n_cpcomp_fin_le &
  [ STEM < "wager" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wager_n_rel" ].

HSN_n1 := n_proper_le &
  [ STEM < "hsn" >,
    SYNSEM.LKEYS.KEYREL.CARG "HSN" ].

Home_Shopping_Network_n1 := n_proper_le &
  [ STEM < "home", "shopping", "network" >,
    SYNSEM.LKEYS.KEYREL.CARG "Home_Shopping_Network" ].

Trondheim_n1 := n_proper_le &
  [ STEM < "trondheim" >,
    SYNSEM.LKEYS.KEYREL.CARG "Trondheim" ].

Oslo_n1 := n_proper_le &
  [ STEM < "oslo" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oslo" ].

kinda_deg := adv_degree_spec_v_le &
  [ STEM < "kinda" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kind_of_deg_rel" ].

kind_of_deg := adv_degree_spec_v_le &
  [ STEM < "kind", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kind_of_deg_rel" ].

sorta_deg := adv_degree_spec_v_le &
  [ STEM < "sorta" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sort_of_deg_rel" ].

fucking_deg := adv_degree_spec_v_le &
  [ STEM < "fucking" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fucking_deg_rel" ].

effing_deg := adv_degree_spec_v_le &
  [ STEM < "effing" >,
    SYNSEM.LKEYS.KEYREL.PRED "_effing_deg_rel" ].

pre_approved_a1 := adj_intrans_le &
  [ STEM < "pre", "approved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pre_approved_rel" ].

pre_approved_a2 := adj_intrans_le &
  [ STEM < "pre", "-", "approved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pre_approved_rel" ].

ugly_adj := adj_intrans_le &
  [ STEM < "ugly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ugly_rel" ].

signal_n1 := n_ppof_le &
  [ STEM < "signal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_signal_n_rel" ].

signal_v1 := v_np*_trans_le &
  [ STEM < "signal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_signal_v_rel" ].

signal_v2 := v_np*_trans_cp_le &
  [ STEM < "signal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_signal_v_rel" ].

signal_v4 := v_obj_equi_le &
  [ STEM < "signal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_signal_v_rel" ].

sensor_n1 := n_ppof_le &
  [ STEM < "sensor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sensor_rel" ].

sensor_title := n_title_le &
  [ STEM < "sensor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sensor_rel" ].

approved_isect := adj_intrans_le &
  [ STEM < "approved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_approved_rel" ].

non_approved_isect := adj_intrans_le &
  [ STEM < "non", "-", "approved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_approved_rel" ].

non_approved_isect2 := adj_intrans_le &
  [ STEM < "non-approved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_approved_rel" ].

non_approved_isect3 := adj_intrans_le &
  [ STEM < "non", "approved" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_approved_rel" ].

scan_n1 := n_ppof_le &
  [ STEM < "scan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scan_n_rel" ].

scan_v1 := v_np*_trans_le &
  [ STEM < "scan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scan_v_rel" ].

plunge_n1 := n_ppof_le &
  [ STEM < "plunge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plunge_n_rel" ].

as_soon_as_possible_adv1 := adv_int_vp_post_le &
  [ STEM < "as", "soon", "as", "possible" >,
    SYNSEM.LKEYS.KEYREL.PRED "_as_soon_as_possible_rel" ].

desperate_a1 := adj_trans_le &
  [ STEM < "desperate" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_desperate_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

reimbursement_n1 := n_ppof_le &
  [ STEM < "reimbursement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reimbursement_rel" ].

user_manual_n1 := n_ppof_le &
  [ STEM < "user", "manual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_user_manual_rel" ].

users_manual_n2 := n_ppof_le &
  [ STEM < "users", "manual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_user_manual_rel" ].

users_manual_n3 := n_ppof_le &
  [ STEM < "user", "s", "manual" >,
    SYNSEM.LKEYS.KEYREL.PRED "_user_manual_rel" ].

metal_n1 := n_ppof_le &
  [ STEM < "metal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_metal_rel" ].

plate_n1 := n_ppof_le &
  [ STEM < "plate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plate_n_rel" ].

plate_v1 := v_np_trans_le &
  [ STEM < "plate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plate_v_rel" ].

cleaner_n1 := n_ppof_le &
  [ STEM < "cleaner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cleaner_n_rel" ].

hassle_n1 := n_intr_le &
  [ STEM < "hassle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hassle_n_rel" ].

hassle_v1 := v_np_trans_le &
  [ STEM < "hassle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hassle_v_rel" ].

calculator_n1 := n_intr_le &
  [ STEM < "calculator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_calculator_rel" ].

cell_phone_n1 := n_ppof_le &
  [ STEM < "cellphone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cell_phone_rel" ].

customer_abb_n1 := n_ppof_le &
  [ STEM < "cust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_customer_rel" ].

customer_abb_n2 := n_ppof_le &
  [ STEM < "cust." >,
    SYNSEM.LKEYS.KEYREL.PRED "_customer_rel" ].

customer_abb_n3 := n_ppof_le &
  [ STEM < "cust", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_customer_rel" ].

await_v1 := v_np_trans_le &
  [ STEM < "await" >,
    SYNSEM.LKEYS.KEYREL.PRED "_await_rel" ].

reorder_v1 := v_np*_trans_le &
  [ STEM < "reorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reorder_v_rel" ].

csr_n1 := n_ppof_le &
  [ STEM < "csr" >,
    SYNSEM.LKEYS.KEYREL.PRED "_csr_rel" ].

cancelable_a1 := adj_intrans_le &
  [ STEM < "cancelable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cancelable_rel" ].

avail_n1 := n_intr_le &
  [ STEM < "avail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_avail_n_rel" ].

avail_v3 := v_empty_prep_trans_le &
  [ STEM < "avail" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_avail_v_rel",
             LKEYS.--OCOMPKEY _of_p_sel_rel ] ].

needless_a1 := adj_intrans_le &
  [ STEM < "needless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_needless_rel" ].

sue_v1 := v_np*_trans_le &
  [ STEM < "sue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sue_v_rel" ].

thinkpad_n1 := n_intr_le &
  [ STEM < "thinkpad" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thinkpad_rel" ].

clie_n1 := n_intr_le &
  [ STEM < "clie" >,
    SYNSEM.LKEYS.KEYREL.PRED "_clie_rel" ].

dynabook_n1 := n_intr_le &
  [ STEM < "dynabook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dynabook_rel" ].

s40_n1 := n_intr_le &
  [ STEM < "s40" >,
    SYNSEM.LKEYS.KEYREL.PRED "_s40_rel" ].

dc4800_n1 := n_intr_le &
  [ STEM < "dc4800" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dc4800_rel" ].

d2_n1 := n_intr_le &
  [ STEM < "d2" >,
    SYNSEM.LKEYS.KEYREL.PRED "_d2_rel" ].

vendor_n1 := n_ppof_le &
  [ STEM < "vendor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vendor_rel" ].

Motorola_n1 := n_proper_le &
  [ STEM < "motorola" >,
    SYNSEM.LKEYS.KEYREL.CARG "Motorola" ].

Intel_n1 := n_proper_le &
  [ STEM < "intel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Intel" ].

Philips_n1 := n_proper_le &
  [ STEM < "philips" >,
    SYNSEM.LKEYS.KEYREL.CARG "Philips" ].

Rca_n1 := n_proper_le &
  [ STEM < "rca" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rca" ].

Minolta_n1 := n_proper_le &
  [ STEM < "minolta" >,
    SYNSEM.LKEYS.KEYREL.CARG "Minolta" ].

Polaroid_n1 := n_proper_le &
  [ STEM < "polaroid" >,
    SYNSEM.LKEYS.KEYREL.CARG "Polaroid" ].

Sylvania_n1 := n_proper_le &
  [ STEM < "sylvania" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sylvania" ].

Kenmore_n1 := n_proper_le &
  [ STEM < "kenmore" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kenmore" ].

detector_n1 := n_ppof_le &
  [ STEM < "detector" >,
    SYNSEM.LKEYS.KEYREL.PRED "_detector_rel" ].

erroneously_adv1 := adv_int_vp_le &
  [ STEM < "erroneously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_erroneously_rel" ].

cordless_a1 := adj_intrans_le &
  [ STEM < "cordless" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cordless_rel" ].

resubmit_v1 := v_np*_trans_le &
  [ STEM < "resubmit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_resubmit_v_rel" ].

mistype_v1 := v_np*_trans_le &
  [ STEM < "mistype" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mistype_rel" ].

nikon_n1 := n_proper_le &
  [ STEM < "nikon" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nikon" ].

c-technologies_n1 := n_proper_le &
  [ STEM < "c", "-", "technologies" >,
    SYNSEM.LKEYS.KEYREL.CARG "C-Technologies" ].

ericson_n1 := n_proper_le &
  [ STEM < "ericson" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ericson" ].

nokia_n1 := n_proper_le &
  [ STEM < "nokia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nokia" ].

dell_n1 := n_proper_le &
  [ STEM < "dell" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dell" ].

samsonite_n1 := n_proper_le &
  [ STEM < "samsonite" >,
    SYNSEM.LKEYS.KEYREL.CARG "Samsonite" ].

kodak_n1 := n_proper_le &
  [ STEM < "kodak" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kodak" ].

casio_n1 := n_proper_le &
  [ STEM < "casio" >,
    SYNSEM.LKEYS.KEYREL.CARG "Casio" ].

sharp_n1 := n_proper_le &
  [ STEM < "sharp" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sharp" ].

panasonic_n1 := n_proper_le &
  [ STEM < "panasonic" >,
    SYNSEM.LKEYS.KEYREL.CARG "Panasonic" ].

handspring_n1 := n_proper_le &
  [ STEM < "handspring" >,
    SYNSEM.LKEYS.KEYREL.CARG "Handspring" ].

TI_n1 := n_proper_le &
  [ STEM < "ti" >,
    SYNSEM.LKEYS.KEYREL.CARG "TI" ].

olympus_n1 := n_proper_le &
  [ STEM < "olympus" >,
    SYNSEM.LKEYS.KEYREL.CARG "Olympus" ].

supervisor_n1 := n_ppof_le &
  [ STEM < "supervisor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_supervisor_rel" ].

mom_n1 := n_proper_le &
  [ STEM < "mom" >,
    SYNSEM.LKEYS.KEYREL.CARG "mom" ].

cheerfully_adv1 := adv_int_vp_le &
  [ STEM < "cheerfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cheerfully_rel" ].

neglect_v1 := v_np_trans_le &
  [ STEM < "neglect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neglect_v_rel" ].

neglect_v2 := v_subj_equi_le &
  [ STEM < "neglect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neglect_v_rel" ].

neglect_n1 := n_mass_count_ppof_le &
  [ STEM < "neglect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neglect_n_rel" ].

inconvenience_n1 := n_mass_count_ppof_le &
  [ STEM < "inconvenience" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inconvenience_n_rel" ].

inconvenience_v1 := v_obj_equi_le &
  [ STEM < "inconvenience" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inconvenience_v_rel" ].

pertaining_a1 := adj_trans_le &
  [ STEM < "pertaining" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pertaining_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

unfriendly_a1 := adj_intrans_le &
  [ STEM < "unfriendly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unfriendly_rel" ].

bb_n1 := n_intr_le &
  [ STEM < "bb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bb_rel" ].

tecra_n1 := n_intr_le &
  [ STEM < "tecra" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tecra_rel" ].

ephoto_n1 := n_intr_le &
  [ STEM < "ephoto" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ephoto_rel" ].

prism_n1 := n_intr_le &
  [ STEM < "prism" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prism_rel" ].

visor_n1 := n_intr_le &
  [ STEM < "visor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_visor_rel" ].

palmpilot_n1 := n_intr_le &
  [ STEM < "palmpilot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_palm_pilot_rel" ].

palmpilot_n2 := n_intr_le &
  [ STEM < "palm", "pilot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_palm_pilot_rel" ].

pager_n1 := n_intr_le &
  [ STEM < "pager" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pager_rel" ].

gameboy_n1 := n_intr_le &
  [ STEM < "gameboy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gameboy_rel" ].

HP_n1 := n_proper_le &
  [ STEM < "hp" >,
    SYNSEM.LKEYS.KEYREL.CARG "HP" ].

ATT_n1 := n_proper_le &
  [ STEM < "att" >,
    SYNSEM.LKEYS.KEYREL.CARG "ATT" ].

ATandT_n1 := n_proper_le &
  [ STEM < "at", "&", "t" >,
    SYNSEM.LKEYS.KEYREL.CARG "ATT" ].

ATandT_n2 := n_proper_le &
  [ STEM < "at&t" >,
    SYNSEM.LKEYS.KEYREL.CARG "ATT" ].

timely_a1 := adj_intrans_le &
  [ STEM < "timely" >,
    SYNSEM.LKEYS.KEYREL.PRED "_timely_rel" ].

peripheral_a1 := adj_intrans_le &
  [ STEM < "peripheral" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peripheral_adj_rel" ].

peripheral_n1 := n_ppof_le &
  [ STEM < "peripheral" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peripheral_n_rel" ].

consumer_n1 := n_ppof_le &
  [ STEM < "consumer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consumer_rel" ].

retract_v1 := v_np_trans_le &
  [ STEM < "retract" >,
    SYNSEM.LKEYS.KEYREL.PRED "_retract_rel" ].

recredit_v1 := v_empty_prep_trans_le &
  [ STEM < "recredit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_recredit_rel",
             LKEYS.--OCOMPKEY _to_p_sel_rel ] ].

recredit_v2 := v_np_trans_le &
  [ STEM < "recredit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recredit_rel" ].

dryer_n1 := n_ppof_le &
  [ STEM < "dryer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dryer_rel" ].

shine_n1 := n_ppof_le &
  [ STEM < "shine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shine_n_rel" ].

shine_v1 := v_np*_trans_le &
  [ STEM < "shine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shine_v_rel" ].

dead_a1 := adj_intrans_le &
  [ STEM < "dead" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dead_adj_rel" ].

dead_n1 := n_ppof_le &
  [ STEM < "dead" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dead_n_rel" ].

recall_v1 := v_np_trans_le &
  [ STEM < "recall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recall_v_rel" ].

recall_v2 := v_cp_fin_inf_non_trans_le &
  [ STEM < "recall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recall_v_rel" ].

recall_v3 := v_unerg_le &
  [ STEM < "recall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recall_v_rel" ].

recall_n1 := n_mass_count_ppof_le &
  [ STEM < "recall" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recall_n_rel" ].

invariably_adv1 := adv_vp_pre_le &
  [ STEM < "invariably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invariably_rel" ].

invariably_adv2 := adv_s_pre_le &
  [ STEM < "invariably" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invariably_rel" ].

appreciative_a1 := adj_intrans_le &
  [ STEM < "appreciative" >,
    SYNSEM.LKEYS.KEYREL.PRED "_appreciative_rel" ].

legal_a1 := adj_intrans_le &
  [ STEM < "legal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_legal_rel" ].

illegal_a1 := adj_intrans_le &
  [ STEM < "illegal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_illegal_rel" ].

aunt_n1 := n_ppof_le &
  [ STEM < "aunt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aunt_rel" ].

aunt_title := n_title_le &
  [ STEM < "aunt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aunt_rel" ].

uncle_n1 := n_ppof_le &
  [ STEM < "uncle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uncle_rel" ].

uncle_title := n_title_le &
  [ STEM < "uncle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_uncle_rel" ].

cousin_title := n_title_le &
  [ STEM < "cousin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cousin_rel" ].

nephew_n1 := n_ppof_le &
  [ STEM < "nephew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nephew_rel" ].

niece_n1 := n_ppof_le &
  [ STEM < "niece" >,
    SYNSEM.LKEYS.KEYREL.PRED "_niece_rel" ].

vhs_n1 := n_mass_count_ppof_le &
  [ STEM < "vhs" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vhs_rel" ].

tape_n1 := n_mass_count_ppof_le &
  [ STEM < "tape" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tape_n_rel" ].

tape_v1 := v_np*_trans_le &
  [ STEM < "tape" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tape_v_rel" ].

blouse_n1 := n_ppof_le &
  [ STEM < "blouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blouse_rel" ].

dress_n1 := n_ppof_le &
  [ STEM < "dress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dress_n_rel" ].

dress_v1 := v_np*_trans_le &
  [ STEM < "dress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dress_v_rel" ].

skirt_n1 := n_ppof_le &
  [ STEM < "skirt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_skirt_n_rel" ].

skirt_v1 := v_np_trans_le &
  [ STEM < "skirt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_skirt_v_rel" ].

swamp_v1 := v_np_trans_le &
  [ STEM < "swamp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swamp_v_rel" ].

swamp_n1 := n_ppof_le &
  [ STEM < "swamp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swamp_n_rel" ].

tag_n1 := n_ppof_le &
  [ STEM < "tag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tag_n_rel" ].

tag_v1 := v_np_trans_le &
  [ STEM < "tag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tag_v_rel" ].

invisible_a1 := adj_trans_le &
  [ STEM < "invisible" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_invisible_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

visible_a1 := adj_trans_le &
  [ STEM < "visible" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_visible_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

impatient_a1 := adj_trans_le &
  [ STEM < "impatient" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_impatient_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

patient_a1 := adj_intrans_le &
  [ STEM < "patient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_patient_adj_rel" ].

patient_n1 := n_ppof_le &
  [ STEM < "patient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_patient_n_rel" ].

awesome_a1 := adj_intrans_le &
  [ STEM < "awesome" >,
    SYNSEM.LKEYS.KEYREL.PRED "_awesome_rel" ].

fyi_adv := adv_int_vp_le &
  [ STEM < "fyi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fyi_rel" ].

warehouse_n1 := n_ppof_le &
  [ STEM < "warehouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warehouse_n_rel" ].

warehouse_v1 := v_np_trans_le &
  [ STEM < "warehouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warehouse_v_rel" ].

explanation_n1 := n_mass_count_ppof_le &
  [ STEM < "explanation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_explanation_rel" ].

madam_n1 := n_proper_le &
  [ STEM < "madam" >,
    SYNSEM.LKEYS.KEYREL.CARG "madam" ].

madam_title := n_title_le &
  [ STEM < "madam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_madam_rel" ].

defective_a1 := adj_intrans_le &
  [ STEM < "defective" >,
    SYNSEM.LKEYS.KEYREL.PRED "_defective_rel" ].

replay_v1 := v_np_trans_le &
  [ STEM < "replay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_replay_v_rel" ].

replay_n1 := n_ppof_le &
  [ STEM < "replay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_replay_n_rel" ].

parcel_n1 := n_ppof_le &
  [ STEM < "parcel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_parcel_n_rel" ].

parcel_ttl := n_title_le &
  [ STEM < "parcel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_parcel_n_rel" ].

parcel_out_v1 := v_particle_np_le &
  [ STEM < "parcel" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_parcel_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

outcome_n1 := n_ppof_le &
  [ STEM < "outcome" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outcome_rel" ].

restore_v1 := v_np_trans_le &
  [ STEM < "restore" >,
    SYNSEM.LKEYS.KEYREL.PRED "_restore_rel" ].

plug_n1 := n_ppof_le &
  [ STEM < "plug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plug_n_rel" ].

plug_v1 := v_np_trans_le &
  [ STEM < "plug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_plug_v_rel" ].

lunacy_n1 := n_mass_count_ppof_le &
  [ STEM < "lunacy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lunacy_rel" ].

scrap_n1 := n_ppof_le &
  [ STEM < "scrap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scrap_n_rel" ].

scrap_v1 := v_np_trans_le &
  [ STEM < "scrap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scrap_v_rel" ].

quash_v1 := v_np_trans_le &
  [ STEM < "quash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quash_rel" ].

idle_a1 := adj_intrans_le &
  [ STEM < "idle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_idle_adj_rel" ].

idle_v1 := v_unerg_le &
  [ STEM < "idle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_idle_v_rel" ].

reinstate_v1 := v_np_trans_le &
  [ STEM < "reinstate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reinstate_rel" ].

substitute_v1 := v_np_trans_le &
  [ STEM < "substitute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_substitute_v_rel" ].

substitute_n1 := n_ppof_le &
  [ STEM < "substitute" >,
    SYNSEM.LKEYS.KEYREL.PRED "_substitute_n_rel" ].

frys_n1 := n_proper_le &
  [ STEM < "fry's" >,
    SYNSEM.LKEYS.KEYREL.CARG "Frys" ].

frys_n2 := n_proper_le &
  [ STEM < "fry", "'s" >,
    SYNSEM.LKEYS.KEYREL.CARG "Frys" ].

circuit_city_n1 := n_proper_le &
  [ STEM < "circuit", "city" >,
    SYNSEM.LKEYS.KEYREL.CARG "Circuit_City" ].

whereabouts_n1 := n_plur_ppcomp_le &
  [ STEM < "whereabouts" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_whereabouts_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

assist_v1 := v_np*_trans_le &
  [ STEM < "assist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assist_v_rel" ].

straighten_out_v1 := v_particle_le &
  [ STEM < "straighten" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_straighten_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

straighten_out_v2 := v_particle_np_le &
  [ STEM < "straighten" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_straighten_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

moron_n1 := n_intr_le &
  [ STEM < "moron" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moron_rel" ].

nervous_a1 := adj_trans_le &
  [ STEM < "nervous" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_nervous_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

transit_n1 := n_mass_ppcomp_le &
  [ STEM < "transit" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_transit_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

roommate_n1 := n_ppof_le &
  [ STEM < "roommate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roommate_rel" ].

roommate_n2 := n_ppof_le &
  [ STEM < "room", "mate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_roommate_rel" ].

bike_n1 := n_ppof_le &
  [ STEM < "bike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bike_n_rel" ].

bike_v1 := v_unerg_le &
  [ STEM < "bike" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bike_v_rel" ].

chew_v1 := v_np*_trans_le &
  [ STEM < "chew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chew_v_rel" ].

chew_off_v1 := v_particle_np_le &
  [ STEM < "chew" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_chew_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

dozen_a1 := adj_bare_specified_card_dozen_le & 
  [ STEM < "dozen" >,
    SYNSEM.LKEYS.KEYREL.CARG "12" ].

component_n1 := n_ppof_le &
  [ STEM < "component" >,
    SYNSEM.LKEYS.KEYREL.PRED "_component_rel" ].

lcd_n1 := n_ppof_le &
  [ STEM < "lcd" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lcd_rel" ].

icon_n1 := n_ppof_le &
  [ STEM < "icon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_icon_rel" ].

post_office_box_n1 := n_ppof_le &
  [ STEM < "po", "box" >,
    SYNSEM.LKEYS.KEYREL.PRED "_po_box_rel" ].

antsy_a1 := adj_trans_le &
  [ STEM < "antsy" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_antsy_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

powerbook_n1 := n_intr_le &
  [ STEM < "powerbook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_powerbook_rel" ].

moon_n1 := n_ppof_le &
  [ STEM < "moon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moon_n_rel" ].

moon_v1 := v_np_trans_le &
  [ STEM < "moon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_moon_v_rel" ].

mouse_n1 := n_ppof_le &
  [ STEM < "mouse" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mouse_n_rel" ].

industrial_a1 := adj_intrans_le &
  [ STEM < "industrial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_industrial_rel" ].

industrial_strength_a1 := adj_intrans_le &
  [ STEM < "industrial", "strength" >,
    SYNSEM.LKEYS.KEYREL.PRED "_industrial_strength_rel" ].

industrial_strength_a2 := adj_intrans_le &
  [ STEM < "industrial", "-", "strength" >,
    SYNSEM.LKEYS.KEYREL.PRED "_industrial_strength_rel" ].

multimedia_n1 := n_mass_ppcomp_le &
  [ STEM < "multimedia" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_multimedia_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

toll_free_a1 := adj_intrans_le &
  [ STEM < "toll", "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toll_free_rel" ].

toll_free_a2 := adj_intrans_le &
  [ STEM < "toll", "-", "free" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toll_free_rel" ].

toll_free_a3 := adj_intrans_le &
  [ STEM < "tollfree" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toll_free_rel" ].

knowledgeable_a1 := adj_trans_le &
  [ STEM < "knowledgeable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_knowledgeable_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

knowledgable_a1 := adj_trans_le &
  [ STEM < "knowledgable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_knowledgeable_rel",
             LKEYS.--COMPKEY _about_p_sel_rel ] ].

graph_v1 := v_np_trans_le &
  [ STEM < "graph" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graph_v_rel" ].

graph_n1 := n_ppof_le &
  [ STEM < "graph" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graph_n_rel" ].

police_n1 := n_mass_ppcomp_le &
  [ STEM < "police" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_police_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

police_v1 := v_np_trans_le &
  [ STEM < "police" >,
    SYNSEM.LKEYS.KEYREL.PRED "_police_v_rel" ].

laser_n1 := n_ppof_le &
  [ STEM < "laser" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laser_rel" ].

whistle_n1 := n_ppof_le &
  [ STEM < "whistle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whistle_n_rel" ].

whistle_v1 := v_np_trans_le &
  [ STEM < "whistle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_whistle_v_rel" ].

rocket_n1 := n_ppof_le &
  [ STEM < "rocket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rocket_n_rel" ].

rocket_v1 := v_unerg_le &
  [ STEM < "rocket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rocket_v_rel" ].

overdue_a2 := adj_intrans_le &
  [ STEM < "overdue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_overdue_rel" ].

usps_n1 := n_proper_le &
  [ STEM < "usps" >,
    SYNSEM.LKEYS.KEYREL.CARG "Usps" ].

vagueness_n1 := n_mass_ppcomp_le &
  [ STEM < "vagueness" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_vagueness_rel",
             LKEYS.--COMPKEY _about_p_rel ] ].

briefcase_n1 := n_ppof_le &
  [ STEM < "briefcase" >,
    SYNSEM.LKEYS.KEYREL.PRED "_briefcase_rel" ].

clothing_n1 := n_mass_ppcomp_le &
  [ STEM < "clothing" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_clothing_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

flash_n1 := n_mass_count_ppof_le &
  [ STEM < "flash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flash_n_rel" ].

flash_v1 := v_np*_trans_le &
  [ STEM < "flash" >,
    SYNSEM.LKEYS.KEYREL.PRED "_flash_v_rel" ].

scanner_n1 := n_ppof_le &
  [ STEM < "scanner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scanner_rel" ].

v_neck_n1 := n_ppof_le &
  [ STEM < "v", "neck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_v_neck_rel" ].

v_neck_n2 := n_ppof_le &
  [ STEM < "v", "-", "neck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_v_neck_rel" ].

v_neck_n3 := n_ppof_le &
  [ STEM < "v-neck" >,
    SYNSEM.LKEYS.KEYREL.PRED "_v_neck_rel" ].

configuration_n1 := n_mass_count_ppof_le &
  [ STEM < "configuration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_configuration_rel" ].

diskette_n1 := n_ppof_le &
  [ STEM < "diskette" >,
    SYNSEM.LKEYS.KEYREL.PRED "_diskette_rel" ].

vacuum_n1 := n_ppof_le &
  [ STEM < "vacuum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vacuum_n_rel" ].

vacuum_v1 := v_np*_trans_le &
  [ STEM < "vacuum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vacuum_v_rel" ].

refrigerator_n1 := n_ppof_le &
  [ STEM < "refrigerator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refrigerator_rel" ].

tap_n1 := n_ppof_le &
  [ STEM < "tap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tap_n_rel" ].

tap_v1 := v_np_trans_le &
  [ STEM < "tap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tap_v_rel" ].

neighbor_n1 := n_ppof_le &
  [ STEM < "neighbor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neighbor_rel" ].

monitor_v1 := v_np_trans_le &
  [ STEM < "monitor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_monitor_v_rel" ].

repayment_n1 := n_mass_count_ppof_le &
  [ STEM < "repayment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_repayment_rel" ].

branson := n_proper_le &
  [ STEM < "branson" >,
    SYNSEM.LKEYS.KEYREL.CARG "branson" ].

saint_louis_n1 := n_proper_le &
  [ STEM < "saint", "louis" >,
    SYNSEM.LKEYS.KEYREL.CARG "saint_louis" ].

saint_louis_n2 := n_proper_le &
  [ STEM < "st", "louis" >,
    SYNSEM.LKEYS.KEYREL.CARG "saint_louis" ].

saint_louis_n3 := n_proper_le &
  [ STEM < "st", ".", "louis" >,
    SYNSEM.LKEYS.KEYREL.CARG "saint_louis" ].

give_back_v1 := v_particle_np_le &
  [ STEM < "give" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_give_back_rel",
             LKEYS.--COMPKEY _back_p_sel_rel ] ].

los_angeles_n1 := n_proper_le &
  [ STEM < "los", "angeles" >,
    SYNSEM.LKEYS.KEYREL.CARG "los_angeles" ].

los_angeles_n2 := n_proper_le &
  [ STEM < "la" >,
    SYNSEM.LKEYS.KEYREL.CARG "los_angeles" ].

las_vegas_n1 := n_proper_le &
  [ STEM < "las", "vegas" >,
    SYNSEM.LKEYS.KEYREL.CARG "las_vegas" ].

search_n1 := n_mass_count_ppof_le &
  [ STEM < "search" >,
    SYNSEM.LKEYS.KEYREL.PRED "_search_n_rel" ].

search_v1 := v_np*_trans_le &
  [ STEM < "search" >,
    SYNSEM.LKEYS.KEYREL.PRED "_search_v_rel" ].

search_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "search" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_search_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

webpage_n1 := n_ppof_le &
  [ STEM < "webpage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_webpage_rel" ].

unsuccessful_a1 := adj_intrans_le &
  [ STEM < "unsuccessful" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsuccessful_rel" ].

unsuccessfully_isect := adv_int_vp_le &
  [ STEM < "unsuccessfully" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsuccessfully_rel" ].

desperately_isect := adv_int_vp_le &
  [ STEM < "desperately" >,
    SYNSEM.LKEYS.KEYREL.PRED "_desperately_rel" ].

postal_a1 := adj_intrans_le &
  [ STEM < "postal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_postal_rel" ].

timeport_n1 := n_intr_le &
  [ STEM < "timeport" >,
    SYNSEM.LKEYS.KEYREL.PRED "_timeport_rel" ].

capability_n1 := n_mass_count_ppcomp_le &
  [ STEM < "capability" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_capability_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

graphical_a1 := adj_intrans_le &
  [ STEM < "graphical" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graphical_rel" ].

eager_a1 := adj_intrans_le &
  [ STEM < "eager" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eager_rel" ].

eager_a2 := adj_reg_equi_le &
  [ STEM < "eager" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eager_rel" ].

yo_root_pre := adv_disc_preh_le &
  [ STEM < "yo" >,
    SYNSEM.LKEYS.KEYREL.CARG "yo" ].

yo_root_post := adv_disc_posth_le &
  [ STEM < "yo" >,
    SYNSEM.LKEYS.KEYREL.CARG "yo" ].

platinum_a1 := adj_intrans_le &
  [ STEM < "platinum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_platinum_rel" ].

serial_a1 := adj_intrans_le &
  [ STEM < "serial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_serial_rel" ].

port_n1 := n_ppof_le &
  [ STEM < "port" >,
    SYNSEM.LKEYS.KEYREL.PRED "_port_n_rel" ].

port_v2 := v_np*_trans_double_pp*_le &
  [ STEM < "port" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_port_v_rel",
             LKEYS.--OCOMPKEY _from_p_sel_rel ] ].

connectivity_n1 := n_mass_ppcomp_le &
  [ STEM < "connectivity" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_connectivity_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

bust_n1 := n_ppof_le &
  [ STEM < "bust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bust_n_rel" ].

bust_v1 := v_np_trans_le &
  [ STEM < "bust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bust_cause_v_rel" ].

bust_v2 := v_unacc_le &
  [ STEM < "bust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bust_v_rel" ].

manufacture_v1 := v_np_trans_le &
  [ STEM < "manufacture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manufacture_v_rel" ].

manufacture_n1 := n_ppof_le &
  [ STEM < "manufacture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manufacture_n_rel" ].

processor_n1 := n_ppof_le &
  [ STEM < "processor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_processor_rel" ].

headset_n1 := n_ppof_le &
  [ STEM < "headset" >,
    SYNSEM.LKEYS.KEYREL.PRED "_headset_rel" ].

headphone_n1 := n_ppof_le &
  [ STEM < "headphone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_headphone_rel" ].

modem_n1 := n_ppof_le &
  [ STEM < "modem" >,
    SYNSEM.LKEYS.KEYREL.PRED "_modem_rel" ].

recorder_n1 := n_ppof_le &
  [ STEM < "recorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recorder_rel" ].

lens_n1 := n_ppof_le &
  [ STEM < "lens" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lens_rel" ].

gps_n1 := n_proper_le &
  [ STEM < "gps" >,
    SYNSEM.LKEYS.KEYREL.CARG "gps" ].

compusa_n1 := n_proper_le &
  [ STEM < "compusa" >,
    SYNSEM.LKEYS.KEYREL.CARG "compusa" ].

whistler_n1 := n_proper_le &
  [ STEM < "whistler" >,
    SYNSEM.LKEYS.KEYREL.CARG "whistler" ].

cdt_n1 := n_ppof_le &
  [ STEM < "cdt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cdt_rel" ].

pentium_n1 := n_proper_le &
  [ STEM < "pentium" >,
    SYNSEM.LKEYS.KEYREL.CARG "pentium" ].

celeron_n1 := n_proper_le &
  [ STEM < "celeron" >,
    SYNSEM.LKEYS.KEYREL.CARG "celeron" ].

mp3_n1 := n_proper_le &
  [ STEM < "mp3" >,
    SYNSEM.LKEYS.KEYREL.CARG "mp3" ].

xp_n1 := n_proper_le &
  [ STEM < "xp" >,
    SYNSEM.LKEYS.KEYREL.CARG "xp" ].

plasma_n1 := n_mass_ppcomp_le &
  [ STEM < "plasma" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_plasma_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

Powershot_n1 := n_proper_le &
  [ STEM < "powershot" >,
    SYNSEM.LKEYS.KEYREL.CARG "Powershot" ].

Elph_n1 := n_proper_le &
  [ STEM < "elph" >,
    SYNSEM.LKEYS.KEYREL.CARG "Elph" ].

s100_n1 := n_intr_le &
  [ STEM < "s100" >,
    SYNSEM.LKEYS.KEYREL.PRED "_s100_rel" ].

walkman_n1 := n_ppof_le &
  [ STEM < "walkman" >,
    SYNSEM.LKEYS.KEYREL.PRED "_walkman_rel" ].

watchman_n1 := n_ppof_le &
  [ STEM < "watchman" >,
    SYNSEM.LKEYS.KEYREL.PRED "_watchman_rel" ].

picturebook_n1 := n_ppof_le &
  [ STEM < "picturebook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_picturebook_rel" ].

stereo_n1 := n_mass_count_ppof_le &
  [ STEM < "stereo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_stereo_rel" ].

mini_a1 := adj_intrans_le &
  [ STEM < "mini" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mini_rel" ].

turntable_n1 := n_ppof_le &
  [ STEM < "turntable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_turntable_rel" ].

microphone_n1 := n_ppof_le &
  [ STEM < "microphone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_microphone_rel" ].

projector_n1 := n_ppof_le &
  [ STEM < "projector" >,
    SYNSEM.LKEYS.KEYREL.PRED "_projector_rel" ].

virtue_n1 := n_mass_count_ppof_le &
  [ STEM < "virtue" >,
    SYNSEM.LKEYS.KEYREL.PRED "_virtue_rel" ].

extol_v1 := v_np_trans_le &
  [ STEM < "extol" >,
    SYNSEM.LKEYS.KEYREL.PRED "_extol_rel" ].

viewer_n1 := n_ppof_le &
  [ STEM < "viewer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_viewer_rel" ].

printer_n1 := n_ppof_le &
  [ STEM < "printer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_printer_rel" ].

inkjet_n1 := n_ppof_le &
  [ STEM < "inkjet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inkjet_rel" ].

cellular_a1 := adj_intrans_le &
  [ STEM < "cellular" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cellular_rel" ].

charger_n1 := n_ppof_le &
  [ STEM < "charger" >,
    SYNSEM.LKEYS.KEYREL.PRED "_charger_rel" ].

imac_n1 := n_ppof_le &
  [ STEM < "imac" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imac_rel" ].

ibook_n1 := n_ppof_le &
  [ STEM < "ibook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ibook_rel" ].

storage_n1 := n_mass_ppcomp_le &
  [ STEM < "storage" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_storage_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

satellite_n1 := n_ppof_le &
  [ STEM < "satellite" >,
    SYNSEM.LKEYS.KEYREL.PRED "_satellite_rel" ].

pro_n1 := n_ppof_le &
  [ STEM < "pro" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pro_rel" ].

unbeatable_a1 := adj_intrans_le &
  [ STEM < "unbeatable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unbeatable_rel" ].

accessory_n1 := n_ppof_le &
  [ STEM < "accessory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_accessory_rel" ].

offering_n1 := n_ppof_le &
  [ STEM < "offering" >,
    SYNSEM.LKEYS.KEYREL.PRED "_offering_rel" ].

rebate_n1 := n_ppof_le &
  [ STEM < "rebate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rebate_n_rel" ].

rebate_v1 := v_np_trans_le &
  [ STEM < "rebate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rebate_v_rel" ].

mailman_n1 := n_ppof_le &
  [ STEM < "mailman" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mailman_rel" ].

functionality_n1 := n_mass_ppcomp_le &
  [ STEM < "functionality" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_functionality_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

lighter_n1 := n_ppof_le &
  [ STEM < "lighter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lighter_n_rel" ].

recharge_v1 := v_np*_trans_le &
  [ STEM < "recharge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recharge_v_rel" ].

physics_n1 := n_mass_ppcomp_le &
  [ STEM < "physics" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_physics_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

analog_a1 := adj_intrans_le &
  [ STEM < "analog" >,
    SYNSEM.LKEYS.KEYREL.PRED "_analog_rel" ].

megapixel_n1 := n_ppof_le &
  [ STEM < "megapixel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megapixel_rel" ].

victory_n1 := n_mass_count_ppof_le &
  [ STEM < "victory" >,
    SYNSEM.LKEYS.KEYREL.PRED "_victory_rel" ].

capture_n1 := n_mass_count_ppof_le &
  [ STEM < "capture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_capture_n_rel" ].

capture_v1 := v_np_trans_le &
  [ STEM < "capture" >,
    SYNSEM.LKEYS.KEYREL.PRED "_capture_v_rel" ].

scoop_n1 := n_ppof_le &
  [ STEM < "scoop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scoop_n_rel" ].

scoop_v1 := v_np_trans_le &
  [ STEM < "scoop" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scoop_v_rel" ].

pricetag_n1 := n_ppof_le &
  [ STEM < "pricetag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pricetag_rel" ].

non_a1 := adj_attr_intrans_le &
  [ STEM < "non" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_rel" ].

screen_name_n1 := n_ppof_le &
  [ STEM < "screen", "name" >,
    SYNSEM.LKEYS.KEYREL.PRED "_screen_name_rel" ].

screen_name_title := n_title_le &
  [ STEM < "screen", "name" >,
    SYNSEM.LKEYS.KEYREL.PRED "_screen_name_rel" ].

ilm_n1 := n_ppof_le &
  [ STEM < "ilm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ilm_rel" ].

ilm_title := n_title_le &
  [ STEM < "ilm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ilm_rel" ].

obnoxiously_isect := adv_int_vp_le &
  [ STEM < "obnoxiously" >,
    SYNSEM.LKEYS.KEYREL.PRED "_obnoxiously_rel" ].

diamond_n1 := n_ppof_le &
  [ STEM < "diamond" >,
    SYNSEM.LKEYS.KEYREL.PRED "_diamond_rel" ].

graduation_n1 := n_mass_count_ppof_le &
  [ STEM < "graduation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graduation_rel" ].

affordable_a1 := adj_intrans_le &
  [ STEM < "affordable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_affordable_rel" ].

warranty_n1 := n_ppof_le &
  [ STEM < "warranty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_warranty_rel" ].

speeder_n1 := n_ppof_le &
  [ STEM < "speeder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_speeder_rel" ].

interface_n1 := n_ppof_le &
  [ STEM < "interface" >,
    SYNSEM.LKEYS.KEYREL.PRED "_interface_n_rel" ].

interface_v1 := v_np*_prep_trans_nomsg_le &
  [ STEM < "interface" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_interface_v_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

skin_n1 := n_mass_count_ppof_le &
  [ STEM < "skin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_skin_n_rel" ].

sunscreen_n1 := n_mass_count_ppof_le &
  [ STEM < "sunscreen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunscreen_rel" ].

sunscreen_n2 := n_mass_count_ppof_le &
  [ STEM < "sun", "screen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sunscreen_rel" ].

dye_n1 := n_mass_count_ppof_le &
  [ STEM < "dye" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dye_n_rel" ].

dye_v1 := v_np_trans_le &
  [ STEM < "dye" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dye_v_rel" ].

dye_v2 := v_obj_equi_prd_le &
  [ STEM < "dye" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dye_v_rel" ].

wipe_n1 := n_mass_count_ppof_le &
  [ STEM < "wipe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wipe_n_rel" ].

wipe_v1 := v_np_trans_le &
  [ STEM < "wipe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wipe_v_rel" ].

wipe_v2 := v_obj_equi_prd_le &
  [ STEM < "wipe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wipe_v_rel" ].

perfume_n1 := n_mass_count_ppof_le &
  [ STEM < "perfume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perfume_n_rel" ].

perfume_v1 := v_np_trans_le &
  [ STEM < "perfume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_perfume_v_rel" ].

attachment_n1 := n_mass_count_ppof_le &
  [ STEM < "attachment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_attachment_rel" ].

scsi_n1 := n_mass_count_ppof_le &
  [ STEM < "scsi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_scsi_rel" ].

dsl_n1 := n_mass_count_ppof_le &
  [ STEM < "dsl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dsl_rel" ].

gsm_n1 := n_mass_count_ppof_le &
  [ STEM < "gsm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gsm_rel" ].

razor_n1 := n_ppof_le &
  [ STEM < "razor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_razor_rel" ].

keyboard_n1 := n_ppof_le &
  [ STEM < "keyboard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_keyboard_rel" ].

microwave_n1 := n_ppof_le &
  [ STEM < "microwave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_microwave_n_rel" ].

microwave_v1 := v_np_trans_le &
  [ STEM < "microwave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_microwave_v_rel" ].

acquire_v1 := v_np_trans_le &
  [ STEM < "acquire" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acquire_rel" ].

burner_n1 := n_ppof_le &
  [ STEM < "burner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_burner_rel" ].

Linux_n1 := n_proper_le &
  [ STEM < "linux" >,
    SYNSEM.LKEYS.KEYREL.CARG "Linux" ].

preload_v1 := v_np_trans_le &
  [ STEM < "preload" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preload_v_rel" ].

preload_v2 := v_np_prep_trans_le &
  [ STEM < "preload" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_preload_v_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

preload_v3 := v_np_trans_le &
  [ STEM < "pre", "load" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preload_v_rel" ].

preload_v4 := v_np_prep_trans_le &
  [ STEM < "pre", "load" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_preload_v_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

preload_v5 := v_np_trans_le &
  [ STEM < "pre", "-", "load" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preload_v_rel" ].

preload_v6 := v_np_prep_trans_le &
  [ STEM < "pre", "-", "load" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_preload_v_rel",
             LKEYS.--OCOMPKEY _with_p_rel ] ].

caller_n1 := n_ppof_le &
  [ STEM < "caller" >,
    SYNSEM.LKEYS.KEYREL.PRED "_caller_rel" ].

antenna_n1 := n_ppof_le &
  [ STEM < "antenna" >,
    SYNSEM.LKEYS.KEYREL.PRED "_antenna_rel" ].

handset_n1 := n_ppof_le &
  [ STEM < "handset" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handset_rel" ].

workstation_n1 := n_ppof_le &
  [ STEM < "workstation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_workstation_rel" ].

dependable_a1 := adj_intrans_le &
  [ STEM < "dependable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dependable_rel" ].

novice_n1 := n_ppcomp_le &
  [ STEM < "novice" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_novice_rel",
             LKEYS.--COMPKEY _at_p_rel ] ].

liter_n1 := n_ppof_le &
  [ STEM < "liter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_liter_rel" ].

milliliter_n1 := n_ppof_le &
  [ STEM < "milliliter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_milliliter_rel" ].

centimeter_n1 := n_ppof_le &
  [ STEM < "centimeter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_centimeter_rel" ].

millimeter_n1 := n_ppof_le &
  [ STEM < "millimeter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_millimeter_rel" ].

cc_n1 := n_ppof_le &
  [ STEM < "cc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cc_n_rel" ].

cc_v1 := v_np_trans_le &
  [ STEM < "cc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cc_v_rel" ].

cc_v2 := v_np_prep_trans_dors_le &
  [ STEM < "cc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cc_v_rel" ].

configure_v1 := v_np_trans_le &
  [ STEM < "configure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_configure_rel" ].

indicator_n1 := n_ppof_le &
  [ STEM < "indicator" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indicator_rel" ].

voicemail_n1 := n_mass_count_ppof_le &
  [ STEM < "voicemail" >,
    SYNSEM.LKEYS.KEYREL.PRED "_voicemail_rel" ].

numeric_a1 := adj_intrans_le &
  [ STEM < "numeric" >,
    SYNSEM.LKEYS.KEYREL.PRED "_numeric_rel" ].

redial_v1 := v_np*_trans_le &
  [ STEM < "redial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_redial_rel" ].

buyer_n1 := n_ppof_le &
  [ STEM < "buyer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buyer_rel" ].

beginner_n1 := n_ppof_le &
  [ STEM < "beginner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_beginner_rel" ].

upgradable_a1 := adj_trans_le &
  [ STEM < "upgradable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_upgradable_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

lug_n1 := n_intr_le &
  [ STEM < "lug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lug_n_rel" ].

lug_v1 := v_np_trans_le &
  [ STEM < "lug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lug_v_rel" ].

lug_v2 := v_np_prep_trans_dors_le &
  [ STEM < "lug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lug_v_rel" ].

jack_n1 := n_ppof_le &
  [ STEM < "jack" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jack_n_rel" ].

jack_up_v1 := v_particle_np_le &
  [ STEM < "jack" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_jack_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

pioneer_n2 := n_ppof_le &
  [ STEM < "pioneer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pioneer_n_rel" ].

pioneer_v1 := v_np_trans_le &
  [ STEM < "pioneer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pioneer_v_rel" ].

bay_n1 := n_ppof_le &
  [ STEM < "bay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bay_n_rel" ].

bay_v1 := v_unerg_le &
  [ STEM < "bay" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bay_v_rel" ].

washer_n1 := n_ppof_le &
  [ STEM < "washer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_washer_n_rel" ].

premium_n1 := n_ppof_le &
  [ STEM < "premium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_premium_n_rel" ].

premium_a1 := adj_intrans_le &
  [ STEM < "premium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_premium_adj_rel" ].

contemplate_v1 := v_np_trans_le &
  [ STEM < "contemplate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contemplate_rel" ].

gadget_n1 := n_ppof_le &
  [ STEM < "gadget" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gadget_rel" ].

m500_n1 := n_intr_le &
  [ STEM < "m500" >,
    SYNSEM.LKEYS.KEYREL.PRED "_m500_rel" ].

m505_n1 := n_intr_le &
  [ STEM < "m505" >,
    SYNSEM.LKEYS.KEYREL.PRED "_m505_rel" ].

crave_v1 := v_np_trans_le &
  [ STEM < "crave" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crave_rel" ].

craving_n1 := n_ppcomp_le &
  [ STEM < "craving" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_craving_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

startac_n1 := n_ppof_le &
  [ STEM < "startac" >,
    SYNSEM.LKEYS.KEYREL.PRED "_startac_rel" ].

rip_n1 := n_ppof_le &
  [ STEM < "rip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rip_n_rel" ].

rip_v1 := v_np_trans_le &
  [ STEM < "rip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rip_v_rel" ].

rip_off_v1 := v_particle_np_le &
  [ STEM < "rip" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rip_off_rel",
             LKEYS.--COMPKEY _off_p_sel_rel ] ].

tiny_a1 := adj_intrans_le &
  [ STEM < "tiny" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiny_rel" ].

tinier_a1 := adj_comp_le &
  [ STEM < "tinier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiny_rel" ].

tiniest_a1 := adj_superl_le &
  [ STEM < "tiniest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiny_rel" ].

tiniest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "tiniest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiny_rel" ].

bang_n1 := n_ppof_le &
  [ STEM < "bang" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bang_n_rel" ].

bang_v1 := v_np_trans_le &
  [ STEM < "bang" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bang_v_rel" ].

faulty_a1 := adj_intrans_le &
  [ STEM < "faulty" >,
    SYNSEM.LKEYS.KEYREL.PRED "_faulty_rel" ].

rma_n1 := n_ppof_le &
  [ STEM < "rma" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rma_rel" ].

misorder_v1 := v_np*_trans_le &
  [ STEM < "misorder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mis_order_rel" ].

misorder_v2 := v_np*_trans_le &
  [ STEM < "mis", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mis_order_rel" ].

misorder_v3 := v_np*_trans_le &
  [ STEM < "mis", "-", "order" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mis_order_rel" ].

postage_n1 := n_mass_ppcomp_le &
  [ STEM < "postage" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_postage_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

aforementioned_a1 := adj_intrans_le &
  [ STEM < "aforementioned" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aforementioned_rel" ].

substandard_a1 := adj_intrans_le &
  [ STEM < "substandard" >,
    SYNSEM.LKEYS.KEYREL.PRED "_substandard_rel" ].

junk_n1 := n_mass_le &
  [ STEM < "junk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_junk_n_rel" ].

junk_v1 := v_np_trans_le &
  [ STEM < "junk" >,
    SYNSEM.LKEYS.KEYREL.PRED "_junk_v_rel" ].

boot_n1 := n_ppof_le &
  [ STEM < "boot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boot_n_rel" ].

boot_v1 := v_np_trans_le &
  [ STEM < "boot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boot_v_rel" ].

boot_v2 := v_unerg_le &
  [ STEM < "boot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_boot_v_rel" ].

boot_out_v1 := v_particle_np_le &
  [ STEM < "boot" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_boot_out_rel",
             LKEYS.--COMPKEY _out_p_sel_rel ] ].

boot_up_v1 := v_particle_np_le &
  [ STEM < "boot" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_boot_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

boot_up_v2 := v_particle_le &
  [ STEM < "boot" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_boot_up_rel",
             LKEYS.--COMPKEY _up_p_sel_rel ] ].

sticker_n1 := n_ppof_le &
  [ STEM < "sticker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sticker_rel" ].

install_n1 := n_ppof_le &
  [ STEM < "install" >,
    SYNSEM.LKEYS.KEYREL.PRED "_install_n_rel" ].

install_v1 := v_np_trans_le &
  [ STEM < "install" >,
    SYNSEM.LKEYS.KEYREL.PRED "_install_v_rel" ].

install_v2 := v_np_prep_trans_dors_le &
  [ STEM < "install" >,
    SYNSEM.LKEYS.KEYREL.PRED "_install_v_rel" ].

lame_a1 := adj_intrans_le &
  [ STEM < "lame" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lame_rel" ].

lousy_a1 := adj_intrans_le &
  [ STEM < "lousy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lousy_rel" ].

crummy_a1 := adj_intrans_le &
  [ STEM < "crummy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_crummy_rel" ].

playstation_n1 := n_ppof_le &
  [ STEM < "playstation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_playstation_rel" ].

rigamarole_n1 := n_ppof_le &
  [ STEM < "rigamarole" >,
    SYNSEM.LKEYS.KEYREL.PRED "_rigamarole_rel" ].

uncertain_a1 := adj_trans_le &
  [ STEM < "uncertain" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_uncertain_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

unsure_a1 := adj_trans_le &
  [ STEM < "unsure" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_unsure_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

swap_v1 := v_empty_prep*_trans_le &
  [ STEM < "swap" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_swap_v_rel",
             LKEYS.--OCOMPKEY _for_p_sel_rel ] ].

swap_n1 := n_ppof_le &
  [ STEM < "swap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swap_n_rel" ].

carton_n1 := n_ppof_le &
  [ STEM < "carton" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carton_rel" ].

destroy_v1 := v_np_trans_le &
  [ STEM < "destroy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_destroy_rel" ].

destruction_n1 := n_mass_ppcomp_le &
  [ STEM < "destruction" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_destruction_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

brutally_adv := adv_int_vp_le &
  [ STEM < "brutally" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brutally_rel" ].

alive_a1 := adj_pred_intrans_le &
  [ STEM < "alive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alive_rel" ].

glove_n1 := n_ppof_le &
  [ STEM < "glove" >,
    SYNSEM.LKEYS.KEYREL.PRED "_glove_rel" ].

valuable_a1 := adj_trans_le &
  [ STEM < "valuable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_valuable_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

worthless_a1 := adj_trans_le &
  [ STEM < "worthless" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_worthless_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

inefficient_a1 := adj_intrans_le &
  [ STEM < "inefficient" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inefficient_rel" ].

swift_a1 := adj_intrans_le &
  [ STEM < "swift" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swift_rel" ].

swiftly_adv1 := adv_int_vp_le &
  [ STEM < "swiftly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swiftly_rel" ].

swifter_a1 := adj_comp_le &
  [ STEM < "swifter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swift_rel" ].

swiftest_a1 := adj_superl_le &
  [ STEM < "swiftest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swift_rel" ].

swiftest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "swiftest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_swift_rel" ].

static_n1 := n_mass_ppcomp_le &
  [ STEM < "static" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_static_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

static_a1 := adj_intrans_le &
  [ STEM < "static" >,
    SYNSEM.LKEYS.KEYREL.PRED "_static_adj_rel" ].

viewfinder_n1 := n_ppof_le &
  [ STEM < "viewfinder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_viewfinder_rel" ].

unsatisfied_a1 := adj_intrans_le &
  [ STEM < "unsatisfied" >,
    SYNSEM.LKEYS.KEYREL.PRED "_unsatisfied_rel" ].

gentle_a1 := adj_intrans_le &
  [ STEM < "gentle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gentle_rel" ].

gentler_a1 := adj_comp_le &
  [ STEM < "gentler" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gentle_rel" ].

gentlest_a1 := adj_superl_le &
  [ STEM < "gentlest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gentle_rel" ].

gentlest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "gentlest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gentle_rel" ].

navigate_v1 := v_np*_trans_le &
  [ STEM < "navigate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_navigate_rel" ].

desirable_a1 := adj_trans_le &
  [ STEM < "desirable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_desirable_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

undesirable_a1 := adj_trans_le &
  [ STEM < "undesirable" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_undesirable_rel",
             LKEYS.--COMPKEY _to_p_sel_rel ] ].

outfit_n1 := n_ppof_le &
  [ STEM < "outfit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outfit_n_rel" ].

outfit_v1 := v_np_trans_le &
  [ STEM < "outfit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_outfit_v_rel" ].

blurry_a1 := adj_intrans_le &
  [ STEM < "blurry" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blurry_rel" ].

blurrier_a1 := adj_comp_le &
  [ STEM < "blurrier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blurry_rel" ].

blurriest_a1 := adj_superl_le &
  [ STEM < "blurriest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blurry_rel" ].

blurriest_a1_prd := adj_superl_prd_le &
  [ STEM < "the", "blurriest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blurry_rel" ].

assist_n1 := n_intr_le &
  [ STEM < "assist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assist_n_rel" ].

petition_n1 := n_intr_le &
  [ STEM < "petition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_petition_n_rel" ].

petition_v1 := v_np_trans_le &
  [ STEM < "petition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_petition_v_rel" ].

petition_v2 := v_obj_equi_le &
  [ STEM < "petition" >,
    SYNSEM.LKEYS.KEYREL.PRED "_petition_v_rel" ].

delude_v1 := v_np_trans_le &
  [ STEM < "delude" >,
    SYNSEM.LKEYS.KEYREL.PRED "_delude_rel" ].

trivial_a1 := adj_intrans_le &
  [ STEM < "trivial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_trivial_rel" ].

selectively_adv1 := adv_int_vp_le &
  [ STEM < "selectively" >,
    SYNSEM.LKEYS.KEYREL.PRED "_selectively_rel" ].

brick_n1 := n_mass_count_ppof_le &
  [ STEM < "brick" >,
    SYNSEM.LKEYS.KEYREL.PRED "_brick_n_rel" ].

mortar_n1 := n_mass_count_ppof_le &
  [ STEM < "mortar" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mortar_rel" ].

fridge_n1 := n_ppof_le &
  [ STEM < "fridge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fridge_rel" ].

browser_n1 := n_ppof_le &
  [ STEM < "browser" >,
    SYNSEM.LKEYS.KEYREL.PRED "_browser_rel" ].

adjustable_a1 := adj_intrans_le &
  [ STEM < "adjustable" >,
    SYNSEM.LKEYS.KEYREL.PRED "_adjustable_rel" ].

presario_n1 := n_intr_le &
  [ STEM < "presario" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presario_rel" ].

pc_n1 := n_ppof_le &
  [ STEM < "pc" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pc_rel" ].

airmail_n1 := n_mass_ppcomp_le &
  [ STEM < "airmail" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_airmail_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

satisfaction_n1 := n_mass_ppcomp_le &
  [ STEM < "satisfaction" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_satisfaction_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

mix_up_n1 := n_ppof_le &
  [ STEM < "mixup" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mix_up_n_rel" ].

mix_up_n2 := n_ppof_le &
  [ STEM < "mix", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mix_up_n_rel" ].

mix_up_n3 := n_ppof_le &
  [ STEM < "mix", "-", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mix_up_n_rel" ].

doa_a1 := adj_intrans_le &
  [ STEM < "doa" >,
    SYNSEM.LKEYS.KEYREL.PRED "_doa_rel" ].

discern_v1 := v_cp_non_trans_le &
  [ STEM < "discern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discern_rel" ].

discern_v2 := v_np_trans_le &
  [ STEM < "discern" >,
    SYNSEM.LKEYS.KEYREL.PRED "_discern_rel" ].

cam_n1 := n_intr_le &
  [ STEM < "cam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cam_rel" ].

condenser_n1 := n_ppof_le &
  [ STEM < "condenser" >,
    SYNSEM.LKEYS.KEYREL.PRED "_condenser_rel" ].

weird_a1 := adj_intrans_le &
  [ STEM < "weird" >,
    SYNSEM.LKEYS.KEYREL.PRED "_weird_rel" ].

feel_n1 := n_ppof_le &
  [ STEM < "feel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_feel_n_rel" ].

look_out_n1 := n_ppcomp_le &
  [ STEM < "look", "out" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_out_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

lookout_n1 := n_ppcomp_le &
  [ STEM < "lookout" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_look_out_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

to_whom_it_may_concern_root_pre := adv_disc_preh_grt_le &
  [ STEM < "to", "whom", "it", "may", "concern" >,
    SYNSEM.LKEYS.KEYREL.CARG "to_whom_it_may_concern" ].

to_whom_it_may_concern_root_post := adv_disc_posth_grt_le &
  [ STEM < "to", "whom", "it", "may", "concern" >,
    SYNSEM.LKEYS.KEYREL.CARG "to_whom_it_may_concern" ].

mature_a1 := adj_intrans_le &
  [ STEM < "mature" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mature_adj_rel" ].

above_named_a1 := adj_attr_intrans_le &
  [ STEM < "above", "-", "named" >,
    SYNSEM.LKEYS.KEYREL.PRED "_above_named_rel" ].

re_subject_n1 := n_intr_le &
  [ STEM < "re" >,
    SYNSEM.LKEYS.KEYREL.PRED "_re_subject_rel" ].

undergraduate_n1 := n_ppof_le &
  [ STEM < "undergraduate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_undergraduate_rel" ].

graduate_n1 := n_ppof_le &
  [ STEM < "graduate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_graduate_n_rel" ].

ascertain_v1 := v_np_trans_le &
  [ STEM < "ascertain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ascertain_rel" ].

ascertain_v2 := v_cp_non_trans_le &
  [ STEM < "ascertain" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ascertain_rel" ].

um_disc_adv := adv_disc_like_preh_le &
  [ STEM < "um" >,
    SYNSEM.LKEYS.KEYREL.CARG "um" ].

um_Ersatz := adv_disc_like_preh_le &
  [ STEM < "umErsatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "umm" ].

uh_disc_adv := adv_disc_like_preh_le &
  [ STEM < "uh" >,
    SYNSEM.LKEYS.KEYREL.CARG "uh" ].

on_time_adv1 := adv_int_vp_post_le &
  [ STEM < "on", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_on_time_rel" ].

on_time_a1 := adj_intrans_le &
  [ STEM < "on", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_on_time_adj_rel" ].

on_time_a2 := adj_intrans_le &
  [ STEM < "on", "-", "time" >,
    SYNSEM.LKEYS.KEYREL.PRED "_on_time_adj_rel" ].

gift_wrap_v1 := v_np_trans_le &
  [ STEM < "gift", "wrap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gift_wrap_v_rel" ].

gift_wrap_v2 := v_np_trans_le &
  [ STEM < "gift", "-", "wrap" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gift_wrap_v_rel" ].

standby_adv1 := adv_int_vp_post_le &
  [ STEM < "standby" >,
    SYNSEM.LKEYS.KEYREL.PRED "_standby_adv_rel" ].

standby_adv2 := adv_int_vp_post_le &
  [ STEM < "stand", "-", "by" >,
    SYNSEM.LKEYS.KEYREL.PRED "_standby_adv_rel" ].

cut_off_n1 := n_intr_le &
  [ STEM < "cut", "off" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cut_off_n_rel" ].

cut_off_n2 := n_intr_le &
  [ STEM < "cut", "-", "off" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cut_off_n_rel" ].

assignment_n1 := n_mass_count_ppof_le &
  [ STEM < "assignment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assignment_rel" ].

originate_v1 := v_np*_trans_le &
  [ STEM < "originate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_originate_v_rel" ].

AOL_n1 := n_proper_le &
  [ STEM < "aol" >,
    SYNSEM.LKEYS.KEYREL.CARG "AOL" ].

Travelocity_n1 := n_proper_le &
  [ STEM < "travelocity" >,
    SYNSEM.LKEYS.KEYREL.CARG "Travelocity" ].

Orbitz_n1 := n_proper_le &
  [ STEM < "orbitz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Orbitz" ].

e_ticket_n1 := n_intr_le &
  [ STEM < "eticket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_e_ticket_rel" ].

e_ticket_n2 := n_intr_le &
  [ STEM < "e", "ticket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_e_ticket_rel" ].

e_ticket_n3 := n_intr_le &
  [ STEM < "e", "-", "ticket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_e_ticket_rel" ].

e_ticket_n4 := n_intr_le &
  [ STEM < "e-ticket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_e_ticket_rel" ].

nonessential_a1 := adj_intrans_le &
  [ STEM < "nonessential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_essential_rel" ].

nonessential_a2 := adj_intrans_le &
  [ STEM < "non", "-", "essential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_essential_rel" ].

nonessential_a3 := adj_intrans_le &
  [ STEM < "non-essential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_non_essential_rel" ].

destination_n1 := n_ppof_le &
  [ STEM < "destination" >,
    SYNSEM.LKEYS.KEYREL.PRED "_destination_rel" ].

ticket_v1 := v_np_trans_le &
  [ STEM < "ticket" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ticket_v_rel" ].

prohibit_v1 := v_np_trans_le &
  [ STEM < "prohibit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prohibit_rel" ].

message_title := n_title_le &
  [ STEM < "message" >,
    SYNSEM.LKEYS.KEYREL.PRED "_message_rel" ].

messaging_n1 := n_mass_le &
  [ STEM < "messaging" >,
    SYNSEM.LKEYS.KEYREL.PRED "_messaging_rel" ].

Max_n1 := n_proper_le &
  [ STEM < "max" >,
    SYNSEM.LKEYS.KEYREL.CARG "Max" ].

Nobel_n1 := n_proper_le &
  [ STEM < "nobel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nobel" ].

prize_n1 := n_ppcomp_le &
  [ STEM < "prize" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_prize_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

prize_v1 := v_np_trans_le &
  [ STEM < "prize" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prize_v_rel" ].

monetary_a1 := adj_intrans_le &
  [ STEM < "monetary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_monetary_rel" ].

fbi_n1 := n_ppof_le &
  [ STEM < "fbi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fbi_rel" ].

debt_n1 := n_mass_count_ppof_le &
  [ STEM < "debt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_debt_rel" ].

neurological_a1 := adj_intrans_le &
  [ STEM < "neurological" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neurological_rel" ].

disease_n1 := n_mass_count_ppof_le &
  [ STEM < "disease" >,
    SYNSEM.LKEYS.KEYREL.PRED "_disease_rel" ].

symptom_n1 := n_ppof_le &
  [ STEM < "symptom" >,
    SYNSEM.LKEYS.KEYREL.PRED "_symptom_rel" ].

movement_n1 := n_mass_count_ppof_le &
  [ STEM < "movement" >,
    SYNSEM.LKEYS.KEYREL.PRED "_movement_rel" ].

tic_n1 := n_ppof_le &
  [ STEM < "tic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tic_rel" ].

coherent_a1 := adj_intrans_le &
  [ STEM < "coherent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coherent_adj_rel" ].

incoherent_a1 := adj_intrans_le &
  [ STEM < "incoherent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incoherent_adj_rel" ].

coherently := adv_int_vp_le &
  [ STEM < "coherently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_coherently_rel" ].

incoherently := adv_int_vp_le &
  [ STEM < "incoherently" >,
    SYNSEM.LKEYS.KEYREL.PRED "_incoherently_rel" ].

vocalization_n1 := n_mass_count_ppof_le &
  [ STEM < "vocalization" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vocalization_rel" ].

shout_n1 := n_ppof_le &
  [ STEM < "shout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shout_n_rel" ].

shout_v1 := v_np*_trans_le &
  [ STEM < "shout" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shout_v_rel" ].

grunt_n1 := n_ppof_le &
  [ STEM < "grunt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grunt_n_rel" ].

grunt_v1 := v_np*_trans_le &
  [ STEM < "grunt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grunt_v_rel" ].

shoe_n1 := n_ppof_le &
  [ STEM < "shoe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shoe_rel" ].

spawn_v1 := v_np_trans_le &
  [ STEM < "spawn" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spawn_v_rel" ].

spawn_n1 := n_mass_ppcomp_le &
  [ STEM < "spawn" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_spawn_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

score_n1 := n_ppof_le &
  [ STEM < "score" >,
    SYNSEM.LKEYS.KEYREL.PRED "_score_n_rel" ].

score_v1 := v_np*_trans_le &
  [ STEM < "score" >,
    SYNSEM.LKEYS.KEYREL.PRED "_score_v_rel" ].

plastic_n1 := n_mass_ppcomp_le &
  [ STEM < "plastic" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_plastic_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

imitation_n1 := n_mass_count_ppof_le &
  [ STEM < "imitation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_imitation_rel" ].

jelly_n1 := n_mass_count_ppof_le &
  [ STEM < "jelly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jelly_rel" ].

president_ttl := n_title_le &
  [ STEM < "president" >,
    SYNSEM.LKEYS.KEYREL.PRED "_president_rel" ].

pres_ttl := n_title_le &
  [ STEM < "pres" >,
    SYNSEM.LKEYS.KEYREL.PRED "_president_rel" ].

pres_ttl_2 := n_title_le &
  [ STEM < "pres", "." >,
    SYNSEM.LKEYS.KEYREL.PRED "_president_rel" ].

bug_n1 := n_ppof_le &
  [ STEM < "bug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bug_n_rel" ].

bug_v1 := v_np_trans_le &
  [ STEM < "bug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bug_v_rel" ].

producer_n1 := n_ppof_le &
  [ STEM < "producer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_producer_rel" ].

gold_n1 := n_mass_le &
  [ STEM < "gold" >,
    SYNSEM.LKEYS.KEYREL.PRED "_gold_n_rel" ].

platinum_n1 := n_mass_le &
  [ STEM < "platinum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_platinum_n_rel" ].

bronze_n1 := n_mass_le &
  [ STEM < "bronze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bronze_n_rel" ].

bronze_a1 := adj_intrans_le &
  [ STEM < "bronze" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bronze_adj_rel" ].

tin_n1 := n_mass_le &
  [ STEM < "tin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tin_n_rel" ].

tungsten_n1 := n_mass_le &
  [ STEM < "tungsten" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tungsten_n_rel" ].

aluminum_n1 := n_mass_le &
  [ STEM < "aluminum" >,
    SYNSEM.LKEYS.KEYREL.PRED "_aluminum_n_rel" ].

light_n1 := n_mass_count_ppof_le &
  [ STEM < "light" >,
    SYNSEM.LKEYS.KEYREL.PRED "_light_n_rel" ].

light_v1 := v_np*_trans_le &
  [ STEM < "light" >,
    SYNSEM.LKEYS.KEYREL.PRED "_light_v_rel" ].

biochemist_n1 := n_ppof_le &
  [ STEM < "biochemist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_biochemist_rel" ].

murder_n1 := n_mass_count_ppof_le &
  [ STEM < "murder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_murder_n_rel" ].

murder_v1 := v_np*_trans_le &
  [ STEM < "murder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_murder_v_rel" ].

cult_n1 := n_ppof_le &
  [ STEM < "cult" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cult_n_rel" ].

ambassador_n1 := n_ppof_le &
  [ STEM < "ambassador" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ambassador_n_rel" ].

ambassador_ttl := n_title_le &
  [ STEM < "ambassador" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ambassador_n_rel" ].

ambassadorial_a1 := adj_intrans_le &
  [ STEM < "ambassadorial" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ambassadorial_rel" ].

lead_n1 := n_mass_count_ppof_le &
  [ STEM < "lead" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lead_n_rel" ].

actor_n1 := n_ppof_le &
  [ STEM < "actor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_actor_n_rel" ].

actress_n1 := n_ppof_le &
  [ STEM < "actress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_actress_n_rel" ].

counterpart_n1 := n_ppcomp_le &
  [ STEM < "counterpart" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_counterpart_n_rel",
             LKEYS.--COMPKEY _to_p_rel ] ].

cool_v1 := v_np*_trans_le &
  [ STEM < "cool" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cool_v_rel" ].

forest_n1 := n_ppof_le &
  [ STEM < "forest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_forest_n_rel" ].

Earth_n1 := n_proper_le &
  [ STEM < "earth" >,
    SYNSEM.LKEYS.KEYREL.CARG "Earth" ].

grant_n1 := n_ppof_le &
  [ STEM < "grant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_grant_n_rel" ].

award_n1 := n_ppcomp_le &
  [ STEM < "award" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_award_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

award_v1 := v_ditrans_le &
  [ STEM < "award" >,
    SYNSEM.LKEYS.KEYREL.PRED "_award_v_rel" ].

growth_n1 := n_mass_count_ppof_le &
  [ STEM < "growth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_growth_n_rel" ].

costume_n1 := n_ppof_le &
  [ STEM < "costume" >,
    SYNSEM.LKEYS.KEYREL.PRED "_costume_n_rel" ].

genome_n1 := n_ppof_le &
  [ STEM < "genome" >, 
    SYNSEM.LKEYS.KEYREL.PRED "_genome_n_rel" ].

worldwide_a1 := adj_intrans_le &
  [ STEM < "worldwide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worldwide_adj_rel" ].

worldwide_adv1 := adv_int_vp_post_le &
  [ STEM < "worldwide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worldwide_adv_rel" ].

Colombia_n1 := n_proper_le &
  [ STEM < "colombia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Colombia" ].

colombian_a1 := adj_intrans_le &
  [ STEM < "colombian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_colombian_adj_rel" ].

colombian_n1 := n_intr_le &
  [ STEM < "colombian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_colombian_n_rel" ].

Columbia_n1 := n_proper_le &
  [ STEM < "columbia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Columbia" ].

columbian_a1 := adj_intrans_le &
  [ STEM < "columbian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_columbian_rel" ].

Honduras_n1 := n_proper_le &
  [ STEM < "honduras" >,
    SYNSEM.LKEYS.KEYREL.CARG "Honduras" ].

honduran_a1 := adj_intrans_le &
  [ STEM < "honduran" >,
    SYNSEM.LKEYS.KEYREL.PRED "_honduran_adj_rel" ].

honduran_n1 := n_intr_le &
  [ STEM < "honduran" >,
    SYNSEM.LKEYS.KEYREL.PRED "_honduran_n_rel" ].

Costa_Rica_n1 := n_proper_le &
  [ STEM < "costa", "rica" >,
    SYNSEM.LKEYS.KEYREL.CARG "Costa_Rica" ].

costa_rican_a1 := adj_intrans_le &
  [ STEM < "costa", "rican" >,
    SYNSEM.LKEYS.KEYREL.PRED "_costa_rican_adj_rel" ].

costa_rican_n1 := n_intr_le &
  [ STEM < "costa", "rican" >,
    SYNSEM.LKEYS.KEYREL.PRED "_costa_rican_n_rel" ].

Guatemala_n1 := n_proper_le &
  [ STEM < "guatemala" >,
    SYNSEM.LKEYS.KEYREL.CARG "Guatemala" ].

guatemalan_a1 := adj_intrans_le &
  [ STEM < "guatemalan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guatemalan_adj_rel" ].

guatemalan_n1 := n_intr_le &
  [ STEM < "guatemalan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_guatemalan_n_rel" ].

Nicaragua_n1 := n_proper_le &
  [ STEM < "nicaragua" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nicaragua" ].

nicaraguan_a1 := adj_intrans_le &
  [ STEM < "nicaraguan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nicaraguan_adj_rel" ].

nicaraguan_n1 := n_intr_le &
  [ STEM < "nicaraguan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nicaraguan_n_rel" ].

Panama_n1 := n_proper_le &
  [ STEM < "panama" >,
    SYNSEM.LKEYS.KEYREL.CARG "Panama" ].

panamanian_a1 := adj_intrans_le &
  [ STEM < "panamanian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_panamanian_adj_rel" ].

panamanian_n1 := n_intr_le &
  [ STEM < "panamanian" >,
    SYNSEM.LKEYS.KEYREL.PRED "_panamanian_n_rel" ].

Cuba_n1 := n_proper_le &
  [ STEM < "cuba" >,
    SYNSEM.LKEYS.KEYREL.CARG "Cuba" ].

cuban_a1 := adj_intrans_le &
  [ STEM < "cuban" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cuban_adj_rel" ].

cuban_n1 := n_intr_le &
  [ STEM < "cuban" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cuban_n_rel" ].

Vietnam_n1 := n_proper_le &
  [ STEM < "vietnam" >,
    SYNSEM.LKEYS.KEYREL.CARG "Vietnam" ].

Vietnam_n2 := n_proper_le &
  [ STEM < "viet", "nam" >,
    SYNSEM.LKEYS.KEYREL.CARG "Vietnam" ].

vietnamese_n1 := n_proper_le &
  [ STEM < "vietnamese" >,
    SYNSEM.LKEYS.KEYREL.CARG "Vietnamese" ].

vietnamese_a1 := adj_intrans_le &
  [ STEM < "vietnamese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vietnamese_adj_rel" ].

vietnamese_n2 := n_plur_le &
  [ STEM < "vietnamese" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vietnamese_n_rel" ].

mayor_n1 := n_ppof_le &
  [ STEM < "mayor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mayor_rel" ].

mayor_ttl := n_title_le &
  [ STEM < "mayor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_mayor_rel" ].

builder_n1 := n_ppof_le &
  [ STEM < "builder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_builder_rel" ].

massive_a1 := adj_intrans_le &
  [ STEM < "massive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_massive_rel" ].

complex_n1 := n_ppof_le &
  [ STEM < "complex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complex_n_rel" ].

complex_a1 := adj_intrans_le &
  [ STEM < "complex" >,
    SYNSEM.LKEYS.KEYREL.PRED "_complex_adj_rel" ].

counsel_n1 := n_mass_ppcomp_le &
  [ STEM < "counsel" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_counsel_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

counsel_v1 := v_np_trans_le &
  [ STEM < "counsel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_counsel_v_rel" ].

cone_n1 := n_ppof_le &
  [ STEM < "cone" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cone_n_rel" ].

transplant_v2 := v_np_trans_le &
  [ STEM < "transplant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transplant_v_rel" ].

transplant_v1 := v_np_prep_trans_dors_le &
  [ STEM < "transplant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transplant_v_rel" ].

transplant_n1 := n_ppof_le &
  [ STEM < "transplant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_transplant_n_rel" ].

acronym_n1 := n_ppof_le &
  [ STEM < "acronym" >,
    SYNSEM.LKEYS.KEYREL.PRED "_acronym_n_rel" ].

air_conditioner_n1 := n_ppof_le &
  [ STEM < "air", "conditioner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_air_conditioner_n_rel" ].

efficiency_n1 := n_mass_ppcomp_le &
  [ STEM < "efficiency" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_efficiency_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

inefficiency_n1 := n_mass_ppcomp_le &
  [ STEM < "inefficiency" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_inefficiency_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

fare_n1 := n_ppof_le &
  [ STEM < "fare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fare_n_rel" ].

fare_v1 := v_unerg_le &
  [ STEM < "fare" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fare_v_rel" ].

rum_n1 := n_mass_ppcomp_le &
  [ STEM < "rum" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_rum_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

chronic_a1 := adj_intrans_le &
  [ STEM < "chronic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chronic_adj_rel" ].

auto_immune_a1 := adj_intrans_le &
  [ STEM < "auto", "immune" >,
    SYNSEM.LKEYS.KEYREL.PRED "_auto_immune_rel" ].

auto_immune_a2 := adj_intrans_le &
  [ STEM < "autoimmune" >,
    SYNSEM.LKEYS.KEYREL.PRED "_auto_immune_rel" ].

protein_n1 := n_mass_count_ppof_le &
  [ STEM < "protein" >,
    SYNSEM.LKEYS.KEYREL.PRED "_protein_n_rel" ].

sheath_n1 := n_ppof_le &
  [ STEM < "sheath" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sheath_n_rel" ].

sheath_v1 := v_np_trans_le &
  [ STEM < "sheath" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sheath_v_rel" ].

surround_v1 := v_np_trans_le &
  [ STEM < "surround" >,
    SYNSEM.LKEYS.KEYREL.PRED "_surround_v_rel" ].

loss_n1 := n_mass_count_ppof_le &
  [ STEM < "loss" >,
    SYNSEM.LKEYS.KEYREL.PRED "_loss_n_rel" ].

nuclear_powered_a1 := adj_intrans_le &
  [ STEM < "nuclear", "powered" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nuclear_powered_rel" ].

submarine_n1 := n_ppof_le &
  [ STEM < "submarine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_submarine_rel" ].

sink_v1 := v_unacc_le &
  [ STEM < "sink" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sink_v_rel" ].

sink_v2 := v_np_trans_le &
  [ STEM < "sink" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sink_cause_v_rel" ].

sink_n1 := n_ppof_le &
  [ STEM < "sink" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sink_n_rel" ].

magnet_n1 := n_ppof_le &
  [ STEM < "magnet" >,
    SYNSEM.LKEYS.KEYREL.PRED "_magnet_n_rel" ].

magnetic_a1 := adj_intrans_le &
  [ STEM < "magnetic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_magnetic_adj_rel" ].

levitation_n1 := n_mass_ppcomp_le &
  [ STEM < "levitation" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_levitation_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

streak_n1 := n_ppof_le &
  [ STEM < "streak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_streak_n_rel" ].

streak_v1 := v_unerg_le &
  [ STEM < "streak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_streak_v_rel" ].

enterprise_n1 := n_ppof_le &
  [ STEM < "enterprise" >,
    SYNSEM.LKEYS.KEYREL.PRED "_enterprise_n_rel" ].

cancer_n1 := n_mass_count_ppof_le &
  [ STEM < "cancer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cancer_n_rel" ].

alliance_n1 := n_ppof_le &
  [ STEM < "alliance" >,
    SYNSEM.LKEYS.KEYREL.PRED "_alliance_n_rel" ].

godfather_n1 := n_ppof_le &
  [ STEM < "godfather" >,
    SYNSEM.LKEYS.KEYREL.PRED "_godfather_rel" ].

godmother_n1 := n_ppof_le &
  [ STEM < "godmother" >,
    SYNSEM.LKEYS.KEYREL.PRED "_godmother_rel" ].

godson_n1 := n_ppof_le &
  [ STEM < "godson" >,
    SYNSEM.LKEYS.KEYREL.PRED "_godson_rel" ].

goddaughter_n1 := n_ppof_le &
  [ STEM < "goddaughter" >,
    SYNSEM.LKEYS.KEYREL.PRED "_goddaughter_rel" ].

anti_cancer_a1 := adj_intrans_le &
  [ STEM < "anticancer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anti_cancer_adj_rel" ].

anti_cancer_a2 := adj_intrans_le &
  [ STEM < "anti", "cancer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_anti_cancer_adj_rel" ].

compound_n1 := n_ppof_le &
  [ STEM < "compound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compound_n_rel" ].

compound_a1 := adj_intrans_le &
  [ STEM < "compound" >,
    SYNSEM.LKEYS.KEYREL.PRED "_compound_adj_rel" ].

derive_v1 := v_np_trans_le &
  [ STEM < "derive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_derive_v_rel" ].

derive_v2 := v_np*_prep_trans_le &
  [ STEM < "derive" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_derive_v_rel",
             LKEYS.--OCOMPKEY _from_p_rel ] ].

yew_n1 := n_ppof_le &
  [ STEM < "yew" >,
    SYNSEM.LKEYS.KEYREL.PRED "_yew_n_rel" ].

inhabitant_n1 := n_ppof_le &
  [ STEM < "inhabitant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inhabitant_n_rel" ].

export_n1 := n_ppof_le &
  [ STEM < "export" >,
    SYNSEM.LKEYS.KEYREL.PRED "_export_n_rel" ].

export_v1 := v_np*_trans_le &
  [ STEM < "export" >,
    SYNSEM.LKEYS.KEYREL.PRED "_export_v_rel" ].

import_n1 := n_ppof_le &
  [ STEM < "import" >,
    SYNSEM.LKEYS.KEYREL.PRED "_import_n_rel" ].

import_v1 := v_np*_trans_le &
  [ STEM < "import" >,
    SYNSEM.LKEYS.KEYREL.PRED "_import_v_rel" ].

medal_n1 := n_ppcomp_le &
  [ STEM < "medal" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_medal_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

commodity_n1 := n_ppof_le &
  [ STEM < "commodity" >,
    SYNSEM.LKEYS.KEYREL.PRED "_commodity_n_rel" ].

founder_n1 := n_ppof_le &
  [ STEM < "founder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_founder_n_rel" ].

founder_v1 := v_unacc_le &
  [ STEM < "founder" >,
    SYNSEM.LKEYS.KEYREL.PRED "_founder_v_rel" ].

worm_n1 := n_ppof_le &
  [ STEM < "worm" >,
    SYNSEM.LKEYS.KEYREL.PRED "_worm_n_rel" ].

worm_v1 := v_np*_prep_trans_le &
  [ STEM < "worm" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_worm_v_rel",
             LKEYS.--OCOMPKEY _into_p_rel ] ].

circumnavigate_v1 := v_np_trans_le &
  [ STEM < "circumnavigate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_circumnavigate_v_rel" ].

globe_n1 := n_ppof_le &
  [ STEM < "globe" >,
    SYNSEM.LKEYS.KEYREL.PRED "_globe_n_rel" ].

cannabis_n1 := n_mass_ppcomp_le &
  [ STEM < "cannabis" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cannabis_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

arctic_n1 := n_ppof_le &
  [ STEM < "arctic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arctic_n_rel" ].

arctic_a1 := adj_intrans_le &
  [ STEM < "arctic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_arctic_adj_rel" ].

refuge_n1 := n_ppof_le &
  [ STEM < "refuge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_refuge_n_rel" ].

preserve_v1 := v_np_trans_le &
  [ STEM < "preserve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preserve_v_rel" ].

preserve_n1 := n_ppof_le &
  [ STEM < "preserve" >,
    SYNSEM.LKEYS.KEYREL.PRED "_preserve_n_rel" ].

wildlife_n1 := n_mass_ppcomp_le &
  [ STEM < "wildlife" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_wildlife_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

wilderness_n1 := n_ppof_le &
  [ STEM < "wilderness" >,
    SYNSEM.LKEYS.KEYREL.PRED "_wilderness_n_rel" ].

genetic_a1 := adj_intrans_le &
  [ STEM < "genetic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_genetic_adj_rel" ].

organism_n1 := n_ppof_le &
  [ STEM < "organism" >,
    SYNSEM.LKEYS.KEYREL.PRED "_organism_n_rel" ].

costly_a1 := adj_intrans_le &
  [ STEM < "costly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_costly_adj_rel" ].

costlier_a1 := adj_comp_le &
  [ STEM < "costlier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_costly_adj_rel" ].

costliest := adj_superl_le &
  [ STEM < "costliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_costly_adj_rel" ].

costliest_prd := adj_superl_prd_le &
  [ STEM < "the", "costliest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_costly_adj_rel" ].

peak_n1 := n_ppof_le &
  [ STEM < "peak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peak_n_rel" ].

peak_v1 := v_unerg_le &
  [ STEM < "peak" >,
    SYNSEM.LKEYS.KEYREL.PRED "_peak_v_rel" ].

manned_a1 := adj_intrans_le &
  [ STEM < "manned" >,
    SYNSEM.LKEYS.KEYREL.PRED "_manned_adj_rel" ].

vitreous_a1 := adj_intrans_le &
  [ STEM < "vitreous" >,
    SYNSEM.LKEYS.KEYREL.PRED "_vitreous_adj_rel" ].

carbon_n1 := n_mass_count_ppof_le &
  [ STEM < "carbon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_carbon_n_rel" ].

invention_n1 := n_mass_count_ppof_le &
  [ STEM < "invention" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invention_n_rel" ].

inventor_n1 := n_ppof_le &
  [ STEM < "inventor" >,
    SYNSEM.LKEYS.KEYREL.PRED "_inventor_n_rel" ].

invent_v1 := v_np_trans_le &
  [ STEM < "invent" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invent_v_rel" ].

cellulose_n1 := n_mass_ppcomp_le &
  [ STEM < "cellulose" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_cellulose_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

super_bowl_n1 := n_ppof_le &
  [ STEM < "super", "bowl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_super_bowl_n_rel" ].

researcher_n1 := n_ppof_le &
  [ STEM < "researcher" >,
    SYNSEM.LKEYS.KEYREL.PRED "_researcher_n_rel" ].

helix_n1 := n_ppof_le &
  [ STEM < "helix" >,
    SYNSEM.LKEYS.KEYREL.PRED "_helix_n_rel" ].

species_n1 := n_ppof_le &
  [ STEM < "species" >,
    SYNSEM.LKEYS.KEYREL.PRED "_species_n_rel" ].

laureate_n1 := n_ppof_le &
  [ STEM < "laureate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_laureate_n_rel" ].

endurance_n1 := n_mass_ppcomp_le &
  [ STEM < "endurance" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_endurance_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

endure_v1 := v_np*_trans_le &
  [ STEM < "endure" >,
    SYNSEM.LKEYS.KEYREL.PRED "_endure_v_rel" ].

election_n1 := n_mass_count_ppof_le &
  [ STEM < "election" >,
    SYNSEM.LKEYS.KEYREL.PRED "_election_n_rel" ].

guidance_n1 := n_mass_ppcomp_le &
  [ STEM < "guidance" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_guidance_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

declaration_n1 := n_mass_count_ppof_le &
  [ STEM < "declaration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_declaration_n_rel" ].

independence_n1 := n_mass_ppcomp_le &
  [ STEM < "independence" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_independence_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

pitcher_n1 := n_ppof_le &
  [ STEM < "pitcher" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pitcher_n_rel" ].

winner_n1 := n_ppof_le &
  [ STEM < "winner" >,
    SYNSEM.LKEYS.KEYREL.PRED "_winner_n_rel" ].

reunify_v1 := v_np*_trans_le &
  [ STEM < "reunify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reunify_v_rel" ].

re-unify_v1 := v_np*_trans_le &
  [ STEM < "re", "unify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reunify_v_rel" ].

reunification_n1 := n_mass_count_ppof_le &
  [ STEM < "reunification" >,
    SYNSEM.LKEYS.KEYREL.PRED "_reunification_n_rel" ].

maker_n1 := n_ppof_le &
  [ STEM < "maker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_maker_n_rel" ].

soil_n1 := n_mass_count_ppof_le &
  [ STEM < "soil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soil_n_rel" ].

soil_v1 := v_np_trans_le &
  [ STEM < "soil" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soil_v_rel" ].

contaminate_v1 := v_np_trans_le &
  [ STEM < "contaminate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_contaminate_v_rel" ].

toxic_a1 := adj_intrans_le &
  [ STEM < "toxic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toxic_adj_rel" ].

harvest_n1 := n_mass_count_ppof_le &
  [ STEM < "harvest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_harvest_n_rel" ].

harvest_v1 := v_np*_trans_le &
  [ STEM < "harvest" >,
    SYNSEM.LKEYS.KEYREL.PRED "_harvest_v_rel" ].

recycle_v1 := v_np*_trans_le &
  [ STEM < "recycle" >,
    SYNSEM.LKEYS.KEYREL.PRED "_recycle_v_rel" ].

berth_n1 := n_ppof_le &
  [ STEM < "berth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_berth_n_rel" ].

berth_v1 := v_np*_trans_le &
  [ STEM < "berth" >,
    SYNSEM.LKEYS.KEYREL.PRED "_berth_v_rel" ].

merchant_n1 := n_ppof_le &
  [ STEM < "merchant" >,
    SYNSEM.LKEYS.KEYREL.PRED "_merchant_n_rel" ].

marine_n1 := n_ppof_le &
  [ STEM < "marine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_marine_n_rel" ].

communist_n1 := n_ppof_le &
  [ STEM < "communist" >,
    SYNSEM.LKEYS.KEYREL.PRED "_communist_n_rel" ].

king_n1 := n_ppof_le &
  [ STEM < "king" >,
    SYNSEM.LKEYS.KEYREL.PRED "_king_n_rel" ].

king_ttl := n_title_le &
  [ STEM < "king" >,
    SYNSEM.LKEYS.KEYREL.PRED "_king_n_rel" ].

queen_n1 := n_ppof_le &
  [ STEM < "queen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_queen_n_rel" ].

queen_ttl := n_title_le &
  [ STEM < "queen" >,
    SYNSEM.LKEYS.KEYREL.PRED "_queen_n_rel" ].

pope_n1 := n_ppof_le &
  [ STEM < "pope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pope_n_rel" ].

pope_ttl := n_title_le &
  [ STEM < "pope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pope_n_rel" ].

suicide_n1 := n_mass_count_ppof_le &
  [ STEM < "suicide" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suicide_n_rel" ].

shoot_n1 := n_ppof_le &
  [ STEM < "shoot" >,
    SYNSEM.LKEYS.KEYREL.PRED "_shoot_n_rel" ].

relief_n1 := n_mass_ppcomp_le &
  [ STEM < "relief" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_relief_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

bomb_n1 := n_ppof_le &
  [ STEM < "bomb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bomb_n_rel" ].

bomb_v1 := v_np*_trans_le &
  [ STEM < "bomb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bomb_v_rel" ].

popular_a1 := adj_intrans_le &
  [ STEM < "popular" >,
    SYNSEM.LKEYS.KEYREL.PRED "_popular_adj_rel" ].

populate_v1 := v_np_trans_le &
  [ STEM < "populate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_populate_v_rel" ].

population_n1 := n_mass_count_ppof_le &
  [ STEM < "population" >,
    SYNSEM.LKEYS.KEYREL.PRED "_population_n_rel" ].

marijuana_n1 := n_mass_ppcomp_le &
  [ STEM < "marijuana" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_marijuana_n_rel",
             LKEYS.--COMPKEY _of_p_sel_rel ] ].

megawatt_n1 := n_ppof_le &
  [ STEM < "megawatt" >,
    SYNSEM.LKEYS.KEYREL.PRED "_megawatt_n_rel" ].

consortium_n1 := n_ppof_le &
  [ STEM < "consortium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_consortium_n_rel" ].

impress_v1 := v_np_trans_le &
  [ STEM < "impress" >,
    SYNSEM.LKEYS.KEYREL.PRED "_impress_v_rel" ].

prime_minister_n1 := n_ppof_le &
  [ STEM < "prime", "minister" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prime_minister_n_rel" ].

prime_minister_ttl := n_title_le &
  [ STEM < "prime", "minister" >,
    SYNSEM.LKEYS.KEYREL.PRED "_prime_minister_n_rel" ].

soldier_n1 := n_ppof_le &
  [ STEM < "soldier" >,
    SYNSEM.LKEYS.KEYREL.PRED "_soldier_n_rel" ].

invasion_n1 := n_mass_count_ppof_le &
  [ STEM < "invasion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_invasion_n_rel" ].

bull_n1 := n_ppof_le &
  [ STEM < "bull" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bull_n_rel" ].

democrat_n1 := n_ppof_le &
  [ STEM < "democrat" >,
    SYNSEM.LKEYS.KEYREL.PRED "_democrat_n_rel" ].

democratic_a1 := adj_intrans_le &
  [ STEM < "democratic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_democratic_adj_rel" ].

republican_n1 := n_ppof_le &
  [ STEM < "republican" >,
    SYNSEM.LKEYS.KEYREL.PRED "_republican_n_rel" ].

republican_a1 := adj_intrans_le &
  [ STEM < "republican" >,
    SYNSEM.LKEYS.KEYREL.PRED "_republican_adj_rel" ].

nominee_n1 := n_ppof_le &
  [ STEM < "nominee" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nominee_n_rel" ].

presidential_a1 := adj_intrans_le &
  [ STEM < "presidential" >,
    SYNSEM.LKEYS.KEYREL.PRED "_presidential_adj_rel" ].

general_n1 := n_ppof_le &
  [ STEM < "general" >,
    SYNSEM.LKEYS.KEYREL.PRED "_general_n_rel" ].

general_ttl := n_title_le &
  [ STEM < "general" >,
    SYNSEM.LKEYS.KEYREL.PRED "_general_n_rel" ].

oust_v1 := v_np_trans_le &
  [ STEM < "oust" >,
    SYNSEM.LKEYS.KEYREL.PRED "_oust_v_rel" ].

revolution_n1 := n_mass_count_ppof_le &
  [ STEM < "revolution" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revolution_n_rel" ].

revolutionary_a1 := adj_intrans_le &
  [ STEM < "revolutionary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revolutionary_adj_rel" ].

revolutionary_n1 := n_ppof_le &
  [ STEM < "revolutionary" >,
    SYNSEM.LKEYS.KEYREL.PRED "_revolutionary_n_rel" ].

tanker_n1 := n_ppof_le &
  [ STEM < "tanker" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tanker_n_rel" ].

spill_n1 := n_ppof_le &
  [ STEM < "spill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spill_n_rel" ].

spill_v1 := v_np*_trans_le &
  [ STEM < "spill" >,
    SYNSEM.LKEYS.KEYREL.PRED "_spill_v_rel" ].

champion_n1 := n_ppof_le &
  [ STEM < "champion" >,
    SYNSEM.LKEYS.KEYREL.PRED "_champion_n_rel" ].

championship_n1 := n_ppof_le &
  [ STEM < "championship" >,
    SYNSEM.LKEYS.KEYREL.PRED "_championship_n_rel" ].

intergovernmental_a1 := adj_intrans_le &
  [ STEM < "intergovernmental" >,
    SYNSEM.LKEYS.KEYREL.PRED "_intergovernmental_adj_rel" ].

telescope_n1 := n_ppof_le &
  [ STEM < "telescope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_telescope_n_rel" ].

telescope_v1 := v_unerg_le &
  [ STEM < "telescope" >,
    SYNSEM.LKEYS.KEYREL.PRED "_telescope_v_rel" ].

novel_n1 := n_ppof_le &
  [ STEM < "novel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_novel_n_rel" ].

novel_a1 := adj_intrans_le &
  [ STEM < "novel" >,
    SYNSEM.LKEYS.KEYREL.PRED "_novel_adj_rel" ].

bulge_n1 := n_ppof_le &
  [ STEM < "bulge" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bulge_n_rel" ].

assassinate_v1 := v_np_trans_le &
  [ STEM < "assassinate" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assassinate_v_rel" ].

assassination_n1 := n_mass_count_ppof_le &
  [ STEM < "assassination" >,
    SYNSEM.LKEYS.KEYREL.PRED "_assassination_n_rel" ].

suffrage_n1 := n_mass_le &
  [ STEM < "suffrage" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suffrage_n_rel" ].

amendment_n1 := n_mass_count_ppof_le &
  [ STEM < "amendment" >,
    SYNSEM.LKEYS.KEYREL.PRED "_amendment_n_rel" ].

ratify_v1 := v_np_trans_le &
  [ STEM < "ratify" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ratify_v_rel" ].

ratification_n1 := n_mass_count_ppof_le &
  [ STEM < "ratification" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ratification_n_rel" ].

secretary_of_state_n1 := n_ppof_le &
  [ STEM < "secretary", "of", "state" >,
    SYNSEM.LKEYS.KEYREL.PRED "_secretary_of_state_n_rel" ].

secretary_of_state_ttl := n_title_le &
  [ STEM < "secretary", "of", "state" >,
    SYNSEM.LKEYS.KEYREL.PRED "_secretary_of_state_n_rel" ].

administer_v1 := v_np_trans_le &
  [ STEM < "administer" >,
    SYNSEM.LKEYS.KEYREL.PRED "_administer_v_rel" ].

administration_n1 := n_mass_count_ppof_le &
  [ STEM < "administration" >,
    SYNSEM.LKEYS.KEYREL.PRED "_administration_n_rel" ].

pine_n1 := n_ppof_le &
  [ STEM < "pine" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pine_n_rel" ].

pine_for_v1 := v_empty_prep_intrans_le &
  [ STEM < "pine" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_pine_for_rel",
             LKEYS.--COMPKEY _for_p_sel_rel ] ].

big_mac_n1 := n_intr_le &
  [ STEM < "big", "mac" >,
    SYNSEM.LKEYS.KEYREL.PRED "_big_mac_n_rel" ].

replica_n1 := n_ppof_le &
  [ STEM < "replica" >,
    SYNSEM.LKEYS.KEYREL.PRED "_replica_n_rel" ].

Mercury_n1 := n_proper_le &
  [ STEM < "mercury" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mercury" ].

Apricot_Computer_n1 := n_proper_le &
  [ STEM < "apricot", "computer" >,
    SYNSEM.LKEYS.KEYREL.CARG "Apricot_Computer" ].

Koresh_n1 := n_proper_le &
  [ STEM < "koresh" >,
    SYNSEM.LKEYS.KEYREL.CARG "Koresh" ].

Qintex_Group_n1 := n_proper_le &
  [ STEM < "qintex", "group" >,
    SYNSEM.LKEYS.KEYREL.CARG "Qintex_Group" ].

Yaroslavl_n1 := n_proper_le &
  [ STEM < "yaroslavl" >,
    SYNSEM.LKEYS.KEYREL.CARG "Yaroslavl" ].

Moscow_n1 := n_proper_le &
  [ STEM < "moscow" >,
    SYNSEM.LKEYS.KEYREL.CARG "Moscow" ].

Manchester_United_n1 := n_proper_le &
  [ STEM < "manchester", "united" >,
    SYNSEM.LKEYS.KEYREL.CARG "Manchester_United" ].

Manchester_n1 := n_proper_le &
  [ STEM < "manchester" >,
    SYNSEM.LKEYS.KEYREL.CARG "Manchester" ].

United_n1 := n_proper_le &
  [ STEM < "united" >,
    SYNSEM.LKEYS.KEYREL.CARG "United" ].

United_Airlines_n1 := n_proper_le &
  [ STEM < "united", "airlines" >,
    SYNSEM.LKEYS.KEYREL.CARG "United_Airlines" ].

American_Airlines_n1 := n_proper_le &
  [ STEM < "american", "airlines" >,
    SYNSEM.LKEYS.KEYREL.CARG "American_Airlines" ].

China_Airlines_n1 := n_proper_le &
  [ STEM < "china", "airlines" >,
    SYNSEM.LKEYS.KEYREL.CARG "China_Airlines" ].

Docklands_n1 := n_proper_le &
  [ STEM < "docklands" >,
    SYNSEM.LKEYS.KEYREL.CARG "Docklands" ].

Manson_n1 := n_proper_le &
  [ STEM < "manson" >,
    SYNSEM.LKEYS.KEYREL.CARG "Manson" ].

Branch_Davidian_n1 := n_proper_le &
  [ STEM < "branch", "davidian" >,
    SYNSEM.LKEYS.KEYREL.CARG "Branch_Davidian" ].

Waco_n1 := n_proper_le &
  [ STEM < "waco" >,
    SYNSEM.LKEYS.KEYREL.CARG "Waco" ].

Inoco_n1 := n_proper_le &
  [ STEM < "inoco" >,
    SYNSEM.LKEYS.KEYREL.CARG "Inoco" ].

Jurassic_n1 := n_proper_le &
  [ STEM < "jurassic" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jurassic" ].

Nixon_n1 := n_proper_le &
  [ STEM < "nixon" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nixon" ].

El_Nino_n1 := n_proper_le &
  [ STEM < "el", "nino" >,
    SYNSEM.LKEYS.KEYREL.CARG "El_Nino" ].

Valdez_n1 := n_proper_le &
  [ STEM < "valdez" >,
    SYNSEM.LKEYS.KEYREL.CARG "Valdez" ].

Grant_n2 := n_proper_le &
  [ STEM < "grant" >,
    SYNSEM.LKEYS.KEYREL.CARG "Grant" ].

Will_n2 := n_proper_le &
  [ STEM < "will" >,
    SYNSEM.LKEYS.KEYREL.CARG "Will" ].

Rogers_n1 := n_proper_le &
  [ STEM < "rogers" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rogers" ].

Marion_n1 := n_proper_le &
  [ STEM < "marion" >,
    SYNSEM.LKEYS.KEYREL.CARG "Marion" ].

Davies_n1 := n_proper_le &
  [ STEM < "davies" >,
    SYNSEM.LKEYS.KEYREL.CARG "Davies" ].

George_n1 := n_proper_le &
  [ STEM < "george" >,
    SYNSEM.LKEYS.KEYREL.CARG "George" ].

M3_n1 := n_proper_le &
  [ STEM < "m3" >,
    SYNSEM.LKEYS.KEYREL.CARG "M3" ].

Jackson_n1 := n_proper_le &
  [ STEM < "jackson" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jackson" ].

HUGO_n1 := n_proper_le &
  [ STEM < "hugo" >,
    SYNSEM.LKEYS.KEYREL.CARG "HUGO" ].

Garcia_n1 := n_proper_le &
  [ STEM < "garcia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Garcia" ].

Lucelly_n1 := n_proper_le &
  [ STEM < "lucelly" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lucelly" ].

Marbella_n1 := n_proper_le &
  [ STEM < "marbella" >,
    SYNSEM.LKEYS.KEYREL.CARG "Marbella" ].

Maria_n1 := n_proper_le &
  [ STEM < "maria" >,
    SYNSEM.LKEYS.KEYREL.CARG "Maria" ].

Ybarra_n1 := n_proper_le &
  [ STEM < "ybarra" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ybarra" ].

Dubai_n1 := n_proper_le &
  [ STEM < "dubai" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dubai" ].

Concorde_n1 := n_proper_le &
  [ STEM < "concorde" >,
    SYNSEM.LKEYS.KEYREL.CARG "Concorde" ].

Piggy_n1 := n_proper_le &
  [ STEM < "piggy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Piggy" ].

Nagoya_n1 := n_proper_le &
  [ STEM < "nagoya" >,
    SYNSEM.LKEYS.KEYREL.CARG "Nagoya" ].

Joe_n1 := n_proper_le &
  [ STEM < "joe" >,
    SYNSEM.LKEYS.KEYREL.CARG "Joe" ].

Dimaggio_n1 := n_proper_le &
  [ STEM < "dimaggio" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dimaggio" ].

Howdy_Doody_n1 := n_proper_le &
  [ STEM < "howdy", "doody" >,
    SYNSEM.LKEYS.KEYREL.CARG "Howdy_Doody" ].

Taj_Mahal_n1 := n_proper_le &
  [ STEM < "taj", "mahal" >,
    SYNSEM.LKEYS.KEYREL.CARG "Taj_Mahal" ].

Enterprise_n2 := n_proper_le &
  [ STEM < "enterprise" >,
    SYNSEM.LKEYS.KEYREL.CARG "Enterprise" ].

Star_Trek_n1 := n_proper_le &
  [ STEM < "star", "trek" >,
    SYNSEM.LKEYS.KEYREL.CARG "Star_Trek" ].

AIDS_n1 := n_proper_le &
  [ STEM < "aids" >,
    SYNSEM.LKEYS.KEYREL.CARG "AIDS" ].

ANZUS_n1 := n_proper_le &
  [ STEM < "anzus" >,
    SYNSEM.LKEYS.KEYREL.CARG "ANZUS" ].

Shostakovich_n1 := n_proper_le &
  [ STEM < "shostakovich" >,
    SYNSEM.LKEYS.KEYREL.CARG "Shostakovich" ].

Rostropovich_n1 := n_proper_le &
  [ STEM < "rostropovich" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rostropovich" ].

Pacific_n1 := n_proper_le &
  [ STEM < "pacific" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pacific" ].

Ushuaia_n1 := n_proper_le &
  [ STEM < "ushuaia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ushuaia" ].

Lou_n1 := n_proper_le &
  [ STEM < "lou" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lou" ].

Gehrig_n1 := n_proper_le &
  [ STEM < "gehrig" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gehrig" ].

Ku_Klux_Klan_n1 := n_proper_le &
  [ STEM < "ku", "Klux", "Klan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ku_Klux_Klan" ].

Calgary_n1 := n_proper_le &
  [ STEM < "calgary" >,
    SYNSEM.LKEYS.KEYREL.CARG "Calgary" ].

Willy_n1 := n_proper_le &
  [ STEM < "willy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Willy" ].

Brandt_n1 := n_proper_le &
  [ STEM < "brandt" >,
    SYNSEM.LKEYS.KEYREL.CARG "Brandt" ].

Grenada_n1 := n_proper_le &
  [ STEM < "grenada" >,
    SYNSEM.LKEYS.KEYREL.CARG "Grenada" ].

Rossini_n1 := n_proper_le &
  [ STEM < "rossini" >,
    SYNSEM.LKEYS.KEYREL.CARG "Rossini" ].

Scientology_n1 := n_proper_le &
  [ STEM < "scientology" >,
    SYNSEM.LKEYS.KEYREL.CARG "Scientology" ].

Stardust_n1 := n_proper_le &
  [ STEM < "stardust" >,
    SYNSEM.LKEYS.KEYREL.CARG "Stardust" ].

Hirohito_n1 := n_proper_le &
  [ STEM < "hirohito" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hirohito" ].

Falkland_n1 := n_proper_le &
  [ STEM < "falkland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Falkland" ].

Voyager_n1 := n_proper_le &
  [ STEM < "voyager" >,
    SYNSEM.LKEYS.KEYREL.CARG "Voyager" ].

Estonia_n1 := n_proper_le &
  [ STEM < "estonia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Estonia" ].

Bombay_n1 := n_proper_le &
  [ STEM < "bombay" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bombay" ].

Honda_n1 := n_proper_le &
  [ STEM < "honda" >,
    SYNSEM.LKEYS.KEYREL.CARG "Honda" ].

Mosaic_n1 := n_proper_le &
  [ STEM < "mosaic" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mosaic" ].

Buzz_n1 := n_proper_le &
  [ STEM < "buzz" >,
    SYNSEM.LKEYS.KEYREL.CARG "Buzz" ].

Aldrin_n1 := n_proper_le &
  [ STEM < "aldrin" >,
    SYNSEM.LKEYS.KEYREL.CARG "Aldrin" ].

Harvey_n1 := n_proper_le &
  [ STEM < "harvey" >,
    SYNSEM.LKEYS.KEYREL.CARG "Harvey" ].

Oswald_n1 := n_proper_le &
  [ STEM < "oswald" >,
    SYNSEM.LKEYS.KEYREL.CARG "Oswald" ].

Niigata_n1 := n_proper_le &
  [ STEM < "niigata" >,
    SYNSEM.LKEYS.KEYREL.CARG "Niigata" ].

Ghana_n1 := n_proper_le &
  [ STEM < "ghana" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ghana" ].

Head_Start_n1 := n_proper_le &
  [ STEM < "head", "start" >,
    SYNSEM.LKEYS.KEYREL.CARG "Head_Start" ].

DNA_n1 := n_proper_le &
  [ STEM < "dna" >,
    SYNSEM.LKEYS.KEYREL.CARG "DNA" ].

The_Philippines_n1 := n_proper_le &
  [ STEM < "the", "philippines" >,
    SYNSEM.LKEYS.KEYREL.CARG "The_Philippines" ].

East_Timor_n1 := n_proper_le &
  [ STEM < "east", "timor" >,
    SYNSEM.LKEYS.KEYREL.CARG "East_Timor" ].

Malawi_n1 := n_proper_le &
  [ STEM < "malawi" >,
    SYNSEM.LKEYS.KEYREL.CARG "Malawi" ].

JPL_n1 := n_proper_le &
  [ STEM < "jpl" >,
    SYNSEM.LKEYS.KEYREL.CARG "JPL" ].

The_Soviet_Union_n1 := n_proper_le &
  [ STEM < "the", "soviet", "union" >,
    SYNSEM.LKEYS.KEYREL.CARG "The_Soviet_Union" ].

Gaza_n1 := n_proper_le &
  [ STEM < "gaza" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gaza" ].

Jericho_n1 := n_proper_le &
  [ STEM < "jericho" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jericho" ].

The_PLO_n1 := n_proper_le &
  [ STEM < "the", "plo" >,
    SYNSEM.LKEYS.KEYREL.CARG "The_PLO" ].

Warren_n1 := n_proper_le &
  [ STEM < "warren" >,
    SYNSEM.LKEYS.KEYREL.CARG "Warren" ].

Spahn_n1 := n_proper_le &
  [ STEM < "spahn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Spahn" ].

Yemen_n1 := n_proper_le &
  [ STEM < "yemen" >,
    SYNSEM.LKEYS.KEYREL.CARG "Yemen" ].

Uruguay_n1 := n_proper_le &
  [ STEM < "uruguay" >,
    SYNSEM.LKEYS.KEYREL.CARG "Uruguay" ].

Paraguay_n1 := n_proper_le &
  [ STEM < "paraguay" >,
    SYNSEM.LKEYS.KEYREL.CARG "Paraguay" ].

Lane_Victory_n1 := n_proper_le &
  [ STEM < "lane", "victory" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lane_Victory" ].

Mexico_City_n1 := n_proper_le &
  [ STEM < "mexico", "city" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mexico_City" ].

Somalia_n1 := n_proper_le &
  [ STEM < "somalia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Somalia" ].

Pan_Am_n1 := n_proper_le &
  [ STEM < "pan", "am" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pan_Am" ].

Lockerbie_n1 := n_proper_le &
  [ STEM < "lockerbie" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lockerbie" ].

Scotland_n1 := n_proper_le &
  [ STEM < "scotland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Scotland" ].

Bristol_n1 := n_proper_le &
  [ STEM < "bristol" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bristol" ].

Ulan_Bator_n1 := n_proper_le &
  [ STEM < "ulan", "bator" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ulan_Bator" ].

Mongolia_n1 := n_proper_le &
  [ STEM < "mongolia" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mongolia" ].

Mission_Energy_n1 := n_proper_le &
  [ STEM < "mission", "energy" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mission_Energy" ].

Mission_Energy_n2 := n_proper_le &
  [ STEM < "mission", "energy", "of", "us" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mission_Energy" ].

Hinckley_n1 := n_proper_le &
  [ STEM < "hinckley" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hinckley" ].

Jodie_n1 := n_proper_le &
  [ STEM < "jodie" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jodie" ].

Foster_n1 := n_proper_le &
  [ STEM < "foster" >,
    SYNSEM.LKEYS.KEYREL.CARG "Foster" ].

Ukraine_n1 := n_proper_le &
  [ STEM < "ukraine" >,
    SYNSEM.LKEYS.KEYREL.CARG "Ukraine" ].

Dylan_n1 := n_proper_le &
  [ STEM < "dylan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dylan" ].

Bjorn_n1 := n_proper_le &
  [ STEM < "bjorn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Bjorn" ].

Borg_n1 := n_proper_le &
  [ STEM < "borg" >,
    SYNSEM.LKEYS.KEYREL.CARG "Borg" ].

Manuel_n1 := n_proper_le &
  [ STEM < "manuel" >,
    SYNSEM.LKEYS.KEYREL.CARG "Manuel" ].

Noriega_n1 := n_proper_le &
  [ STEM < "noriega" >,
    SYNSEM.LKEYS.KEYREL.CARG "Noriega" ].

Dartmouth_n1 := n_proper_le &
  [ STEM < "dartmouth" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dartmouth" ].

The_Bastille_n1 := n_proper_le &
  [ STEM < "the", "bastille" >,
    SYNSEM.LKEYS.KEYREL.CARG "The_Bastille" ].

Gates_n1 := n_proper_le &
  [ STEM < "gates" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gates" ].

Kosovo_n1 := n_proper_le &
  [ STEM < "kosovo" >,
    SYNSEM.LKEYS.KEYREL.CARG "Kosovo" ].

Robb_n1 := n_proper_le &
  [ STEM < "robb" >,
    SYNSEM.LKEYS.KEYREL.CARG "Robb" ].

Trans_Union_n1 := n_proper_le &
  [ STEM < "trans", "union" >,
    SYNSEM.LKEYS.KEYREL.CARG "Trans_Union" ].

Trans_Union_n2 := n_proper_le &
  [ STEM < "trans", "union", "company" >,
    SYNSEM.LKEYS.KEYREL.CARG "Trans_Union" ].

Hungary_n1 := n_proper_le &
  [ STEM < "hungary" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hungary" ].

Exxon_n1 := n_proper_le &
  [ STEM < "exxon" >,
    SYNSEM.LKEYS.KEYREL.CARG "Exxon" ].

William_n1 := n_proper_le &
  [ STEM < "william" >,
    SYNSEM.LKEYS.KEYREL.CARG "William" ].

Afghanistan_n1 := n_proper_le &
  [ STEM < "afghanistan" >,
    SYNSEM.LKEYS.KEYREL.CARG "Afghanistan" ].

Keck_n1 := n_proper_le &
  [ STEM < "keck" >,
    SYNSEM.LKEYS.KEYREL.CARG "Keck" ].

Jupiter_n1 := n_proper_le &
  [ STEM < "jupiter" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jupiter" ].

Mars_n1 := n_proper_le &
  [ STEM < "mars" >,
    SYNSEM.LKEYS.KEYREL.CARG "Mars" ].

Saturn_n1 := n_proper_le &
  [ STEM < "saturn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Saturn" ].

Venus_n1 := n_proper_le &
  [ STEM < "venus" >,
    SYNSEM.LKEYS.KEYREL.CARG "Venus" ].

Pluto_n1 := n_proper_le &
  [ STEM < "pluto" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pluto" ].

Uranus_n1 := n_proper_le &
  [ STEM < "uranus" >,
    SYNSEM.LKEYS.KEYREL.CARG "Uranus" ].

Neptune_n1 := n_proper_le &
  [ STEM < "neptune" >,
    SYNSEM.LKEYS.KEYREL.CARG "Neptune" ].

Jaco_n1 := n_proper_le &
  [ STEM < "jaco" >,
    SYNSEM.LKEYS.KEYREL.CARG "Jaco" ].

Pastorius_n1 := n_proper_le &
  [ STEM < "pastorius" >,
    SYNSEM.LKEYS.KEYREL.CARG "Pastorius" ].

Beethoven_n1 := n_proper_le &
  [ STEM < "beethoven" >,
    SYNSEM.LKEYS.KEYREL.CARG "Beethoven" ].

Tucson_n1 := n_proper_le &
  [ STEM < "tucson" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tucson" ].

Everest_n1 := n_proper_le &
  [ STEM < "everest" >,
    SYNSEM.LKEYS.KEYREL.CARG "Everest" ].

Congo_n1 := n_proper_le &
  [ STEM < "congo" >,
    SYNSEM.LKEYS.KEYREL.CARG "Congo" ].

Sri_Lanka_n1 := n_proper_le &
  [ STEM < "sri", "lanka" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sri_Lanka" ].

Blade_Runner_n1 := n_proper_le &
  [ STEM < "bladerunner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Blade_Runner" ].

Blade_Runner_n2 := n_proper_le &
  [ STEM < "blade", "runner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Blade_Runner" ].

Gilbert_n1 := n_proper_le &
  [ STEM < "gilbert" >,
    SYNSEM.LKEYS.KEYREL.CARG "Gilbert" ].

Victoria_n1 := n_proper_le &
  [ STEM < "victoria" >,
    SYNSEM.LKEYS.KEYREL.CARG "Victoria" ].

Somme_n1 := n_proper_le &
  [ STEM < "somme" >,
    SYNSEM.LKEYS.KEYREL.CARG "Somme" ].

Lincoln_n1 := n_proper_le &
  [ STEM < "lincoln" >,
    SYNSEM.LKEYS.KEYREL.CARG "Lincoln" ].

Qatar_n1 := n_proper_le &
  [ STEM < "qatar" >,
    SYNSEM.LKEYS.KEYREL.CARG "Qatar" ].

South_Bend_n1 := n_proper_le &
  [ STEM < "south", "bend" >,
    SYNSEM.LKEYS.KEYREL.CARG "South_Bend" ].

Harry_n1 := n_proper_le &
  [ STEM < "harry" >,
    SYNSEM.LKEYS.KEYREL.CARG "Harry" ].

Truman_n1 := n_proper_le &
  [ STEM < "truman" >,
    SYNSEM.LKEYS.KEYREL.CARG "Truman" ].

Dubliner_n1 := n_proper_le &
  [ STEM < "dubliner" >,
    SYNSEM.LKEYS.KEYREL.CARG "Dubliner" ].

Namlet_n1 := n_proper_le &
  [ STEM < "namlet" >,
    SYNSEM.LKEYS.KEYREL.CARG "Namlet" ].

Richard_n1 := n_proper_le &
  [ STEM < "richard" >,
    SYNSEM.LKEYS.KEYREL.CARG "Richard" ].

Feynman_n1 := n_proper_le &
  [ STEM < "feynman" >,
    SYNSEM.LKEYS.KEYREL.CARG "Feynman" ].

Socrates_n1 := n_proper_le &
  [ STEM < "socrates" >,
    SYNSEM.LKEYS.KEYREL.CARG "Socrates" ].

The_Matterhorn_n1 := n_proper_le &
  [ STEM < "the", "matterhorn" >,
    SYNSEM.LKEYS.KEYREL.CARG "The_Matterhorn" ].

Sleepless_in_Seattle_n1 := n_proper_le &
  [ STEM < "sleepless", "in", "seattle" >,
    SYNSEM.LKEYS.KEYREL.CARG "Sleepless_in_Seattle" ].

2001_a_space_odyssey_n1 := n_proper_le &
  [ STEM < "2001", "a", "space", "odyssey" >,
    SYNSEM.LKEYS.KEYREL.CARG "2001_a_space_odyssey" ].

Hamlet_n1 := n_proper_le &
  [ STEM < "hamlet" >,
    SYNSEM.LKEYS.KEYREL.CARG "Hamlet" ].

John_Paul_II_n1 := n_proper_le &
  [ STEM < "john", "paul", "ii"  >,
    SYNSEM.LKEYS.KEYREL.CARG "John_Paul_II" ].

Ulysses_S_Grant_n1 := n_proper_le &
  [ STEM < "ulysses", "s", "grant"  >,
    SYNSEM.LKEYS.KEYREL.CARG "Ulysses_S_Grant" ].

Disneyland_n1 := n_proper_le &
  [ STEM < "disneyland" >,
    SYNSEM.LKEYS.KEYREL.CARG "Disneyland" ].

strip_n1 := n_ppof_le &
  [ STEM < "strip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strip_n_rel" ].

strip_v1 := v_np*_trans_le &
  [ STEM < "strip" >,
    SYNSEM.LKEYS.KEYREL.PRED "_strip_v_rel" ].

nationality_n1 := n_mass_count_ppof_le &
  [ STEM < "nationality" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nationality_n_rel" ].

nation_n1 := n_ppof_le &
  [ STEM < "nation" >,
    SYNSEM.LKEYS.KEYREL.PRED "_nation_n_rel" ].

leader_n1 := n_ppof_le &
  [ STEM < "leader" >,
    SYNSEM.LKEYS.KEYREL.PRED "_leader_n_rel" ].

bury_v1 := v_np_trans_le &
  [ STEM < "bury" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bury_v_rel" ].

construct_v1 := v_np_trans_le &
  [ STEM < "construct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_construct_v_rel" ].

construct_n1 := n_ppof_le &
  [ STEM < "construct" >,
    SYNSEM.LKEYS.KEYREL.PRED "_construct_n_rel" ].

fun_a1 := adj_intrans_le &
  [ STEM < "fun" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fun_adj_rel" ].

Taro_n1 := n_proper_le &
  [ STEM < "taro" >,
    SYNSEM.LKEYS.KEYREL.CARG "Taro" ].

Yamada_n1 := n_proper_le &
  [ STEM < "yamada" >,
    SYNSEM.LKEYS.KEYREL.CARG "Yamada" ].

suspect_v1 := v_np_trans_le &
  [ STEM < "suspect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suspect_v_rel" ].

suspect_v2 := v_unerg_le &
  [ STEM < "suspect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suspect_v_rel" ].

suspect_v3 := v_cp_prop_non_trans_le &
  [ STEM < "suspect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suspect_v_rel" ].

suspect_n1 := n_ppof_le &
  [ STEM < "suspect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suspect_n_rel" ].

suspect_a1 := adj_intrans_le &
  [ STEM < "suspect" >,
    SYNSEM.LKEYS.KEYREL.PRED "_suspect_adj_rel" ].

latitude_n1 := n_ppof_le &
  [ STEM < "latitude" >,
    SYNSEM.LKEYS.KEYREL.PRED "_latitude_n_rel" ].

duff_a1 := adj_intrans_le &
  [ STEM < "duff" >,
    SYNSEM.LKEYS.KEYREL.PRED "_duff_adj_rel" ].

cannon_n1 := n_intr_le &
  [ STEM < "cannon" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cannon_n_rel" ].

paraphernalia_n1 := n_mass_le &
  [ STEM < "paraphernalia" >,
    SYNSEM.LKEYS.KEYREL.PRED "_paraphernalia_n_rel" ].

millennium_n1 := n_ppof_le &
  [ STEM < "millennium" >,
    SYNSEM.LKEYS.KEYREL.PRED "_millennium_n_rel" ].

blessed_a1 := adj_intrans_le &
  [ STEM < "blessed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_blessed_adj_rel" ].

IdentifierErsatz_n1 := n_proper_le &
  [ STEM < "identifierersatz" >,
    SYNSEM.LKEYS.KEYREL.CARG "IDersatz" ].

NumIdentifierErsatz_n1 := n_intr_le &
  [ STEM < "twodigitersatz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_identifierersatz_n_rel" ].

NumIdentifierErsatz_n2 := n_intr_le &
  [ STEM < "threedigitersatz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_identifierersatz_n_rel" ].

NumIdentifierErsatz_n3 := n_intr_le &
  [ STEM < "fourdigitersatz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_identifierersatz_n_rel" ].

NumIdentifierErsatz_n4 := n_intr_le &
  [ STEM < "fivedigitersatz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_identifierersatz_n_rel" ].

NumIdentifierErsatz_n5 := n_intr_le &
  [ STEM < "sixdigitersatz" >,
    SYNSEM.LKEYS.KEYREL.PRED "_identifierersatz_n_rel" ].

RangeErsatz := adj_bare_unspecified_ord_one_le &
  [ STEM < "rangeersatz" >,
    SYNSEM.LKEYS.KEYREL.PRED const_rel ].

evelyn_n1 := n_proper_le &
  [ STEM < "evelyn" >,
    SYNSEM.LKEYS.KEYREL.CARG "Evelyn" ].

fremont_n1 := n_proper_le &
  [ STEM < "fremont" >,
    SYNSEM.LKEYS.KEYREL.CARG "Fremont" ].

MVC_n1 := n_proper_le &
  [ STEM < "mvc" >,
    SYNSEM.LKEYS.KEYREL.CARG "MVC" ].

semicolon_pct := semicolon_le &
  [ STEM < ";" > ].

period_pct := punct_mc_le &
  [ STEM < "." > ].

qmark_pct := punct_mc_le &
  [ STEM < "?" > ].

bang_pct := punct_mc_le &
  [ STEM < "!" > ].

;comma_pct := punct_adjnct_le &
;  [ STEM < "," > ].

hot_line_n1 := n_ppof_le &
  [ STEM < "hotline" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hotline_n_rel" ].

hot_line_n2 := n_ppof_le &
  [ STEM < "hot", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hotline_n_rel" ].

hot_line_n3 := n_ppof_le &
  [ STEM < "hot", "-", "line" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hotline_n_rel" ].

all_day_a1 := adj_attr_intrans_le &
  [ STEM < "all", "-", "day" >,
    SYNSEM.LKEYS.KEYREL.PRED "_all_day_adj_rel" ].

all_day_a2 := adj_attr_intrans_le &
  [ STEM < "all", "day" >,
    SYNSEM.LKEYS.KEYREL.PRED "_all_day_adj_rel" ].

make_up_a1 := adj_attr_intrans_le &
  [ STEM < "make", "-", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_up_adj_rel" ].

make_up_a2 := adj_attr_intrans_le &
  [ STEM < "make", "up" >,
    SYNSEM.LKEYS.KEYREL.PRED "_make_up_adj_rel" ].

tell_you_what_v1 := v_unerg_bse_le &
  [ STEM < "tell", "you", "what" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tell_you_what_id_v_rel" ].

as_a_matter_of_fact_root_pre := adv_disc_preh_le &
  [ STEM < "as", "a", "matter", "of", "fact" >,
    SYNSEM.LKEYS.KEYREL.CARG "as_a_matter_of_fact" ].

as_a_matter_of_fact_root_post := adv_disc_posth_le &
  [ STEM < "as", "a", "matter", "of", "fact" >,
    SYNSEM.LKEYS.KEYREL.CARG "as_a_matter_of_fact" ].

january_the_det := det_month_le &
  [ STEM < "january", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "jan" ].

february_the_det := det_month_le &
  [ STEM < "february", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "feb" ].

march_the_det := det_month_le &
  [ STEM < "march", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "mar" ].

april_the_det := det_month_le &
  [ STEM < "april", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "apr" ].

may_the_det := det_month_le &
  [ STEM < "may", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "may" ].

june_the_det := det_month_le &
  [ STEM < "june", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "jun" ].

july_the_det := det_month_le &
  [ STEM < "july", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "jul" ].

august_the_det := det_month_le &
  [ STEM < "august", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "aug" ].

september_the_det := det_month_le &
  [ STEM < "september", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "sep" ].

october_the_det := det_month_le &
  [ STEM < "october", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "oct" ].

november_the_det := det_month_le &
  [ STEM < "november", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "nov" ].

december_the_det := det_month_le &
  [ STEM < "december", "the" >,
    SYNSEM.LKEYS.ALTKEYREL.CARG "dec" ].

just_in_case_adv1 := adv_int_vp_post_le &
  [ STEM < "just", "in", "case" >,
    SYNSEM.LKEYS.KEYREL.PRED "_just_in_case_adv_rel" ].

all_over_p := p_reg_le &
  [ STEM < "all", "over" >,
    SYNSEM.LKEYS.KEYREL.PRED _all_over_p_rel ].

out_of_p := p_le &
  [ STEM < "out", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _out_of_p_rel ].

out_of_prtcl := p_prtcl_le &
  [ STEM < "out", "of" >,
    SYNSEM.LKEYS.KEYREL.PRED _out_of_p_sel_rel ].

up_to_par_a1 := adj_pred_intrans_le &
  [ STEM < "up", "to", "par" >,
    SYNSEM.LKEYS.KEYREL.PRED "_up_to_par_rel" ].

a_half_fract := fraction_le &
  [ STEM < "a", "half" >,
    SYNSEM.LKEYS.KEYREL.CARG "1/2" ].

NameErsatz := n_proper_le &
  [ STEM < "NameErsatz" > ].

unlike_p := p_le &
  [ STEM < "unlike" >,
    SYNSEM.LKEYS.KEYREL.PRED _unlike_p_rel ].

amid_p := p_le &
  [ STEM < "amid" >,
    SYNSEM.LKEYS.KEYREL.PRED _amid_p_rel ].

over_and_out_root_pre := adv_disc_preh_grt_le &
  [ STEM < "over", "and", "out" >,
    SYNSEM.LKEYS.KEYREL.CARG "over_and_out" ].

over_and_out_root_post := adv_disc_posth_grt_le &
  [ STEM < "over", "and", "out" >,
    SYNSEM.LKEYS.KEYREL.CARG "over_and_out" ].

if_you_like_root_pre := adv_disc_preh_le &
  [ STEM < "if", "you", "like" >,
    SYNSEM.LKEYS.KEYREL.CARG "if_you_like" ].

if_you_like_root_post := adv_disc_posth_le &
  [ STEM < "if", "you", "like" >,
    SYNSEM.LKEYS.KEYREL.CARG "if_you_like" ].

wait_root := adv_disc_preh_le &
  [ STEM < "wait" >,
    SYNSEM.LKEYS.KEYREL.CARG "wait" ].

for_sure_root_pre := adv_disc_preh_le &
  [ STEM < "for", "sure" >,
    SYNSEM.LKEYS.KEYREL.CARG "for_sure" ].

for_sure_root_post := adv_disc_posth_le &
  [ STEM < "for", "sure" >,
    SYNSEM.LKEYS.KEYREL.CARG "for_sure" ].

terrific_root_pre := adv_disc_preh_le &
  [ STEM < "terrific" >,
    SYNSEM.LKEYS.KEYREL.CARG "terrific" ].

terrific_root_post := adv_disc_posth_le &
  [ STEM < "terrific" >,
    SYNSEM.LKEYS.KEYREL.CARG "terrific" ].

done_a1 := adj_equi_prp_le &
  [ STEM < "done" >,
    SYNSEM.LKEYS.KEYREL.PRED "_done_adj_rel" ].

Tom_n1 := n_proper_le &
  [ STEM < "tom" >,
    SYNSEM.LKEYS.KEYREL.CARG "Tom" ].

indecisive_a1 := adj_intrans_le &
  [ STEM < "indecisive" >,
    SYNSEM.LKEYS.KEYREL.PRED "_indecisive_rel" ].

ratio_n1 := n_ppof_le &
  [ STEM < "ratio" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ratio_n_rel" ].

Crest_n1 := n_proper_le &
  [ STEM < "crest" >,
    SYNSEM.LKEYS.KEYREL.CARG "Crest" ].

Apex_n1 := n_proper_le &
  [ STEM < "apex" >,
    SYNSEM.LKEYS.KEYREL.CARG "Apex" ].

Konika_n1 := n_proper_le &
  [ STEM < "konika" >,
    SYNSEM.LKEYS.KEYREL.CARG "Konika" ].

Photomax_n1 := n_proper_le &
  [ STEM < "photomax" >,
    SYNSEM.LKEYS.KEYREL.CARG "Photomax" ].

Viewsonic_n1 := n_proper_le &
  [ STEM < "viewsonic" >,
    SYNSEM.LKEYS.KEYREL.CARG "Viewsonic" ].

jeans_n1 := n_plur_le &
  [ STEM < "jeans" >,
    SYNSEM.LKEYS.KEYREL.PRED "_jeans_rel" ].

eta_n1 := n_ppcomp_le &
  [ STEM < "eta" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_eta_n_rel",
             LKEYS.--COMPKEY _for_p_rel ] ].

handycam_n1 := n_intr_le &
  [ STEM < "handycam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_handycam_n_rel" ].

toughbook_n1 := n_intr_le &
  [ STEM < "toughbook" >,
    SYNSEM.LKEYS.KEYREL.PRED "_toughbook_n_rel" ].

hypoallergenic_a1 := adj_intrans_le &
  [ STEM < "hypoallergenic" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hypoallergenic_rel" ].

tobacco_n1 := n_mass_le &
  [ STEM < "tobacco" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tobacco_n_rel" ].

softly := adv_int_vp_le &
  [ STEM < "softly" >,
    SYNSEM.LKEYS.KEYREL.PRED "_softly_r_rel" ].

