; Restrict to lexical idiom NPs, as in "take care of ..."
;; DPF 2018-09-12 - Removed COMPS..MIN bare_nom_rel since |take care of NP|
;; needs bare-NP (ordinary `care', not an idiomatic one).
;; DPF 2020-12-02 - Removed first comp's [HEAD noun], since it excluded
;; "take it for granted" with pronouns being HEAD partn.
v_np-pp_e-idm_le := main_verb & 
  [ SYNSEM empty_prep_trans_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -, 
			               LEX + ], 
				     [ OPT - ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ],
    IDIOM + ].

;; Block reflexive pronouns (indeed, any) for second NP, to avoid silly parse
;; for "He cooked the dinner himself"
;; DPF 2019-11-11 -  Exclude robust possessive pronoun, to avoid |called my mom|

v_np-np_only_le := main_verb & 
  [ ALTS.DATIVE -,
    SYNSEM ditrans_only_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -,
				       MODIFD.RPERIPH bool,
				       LOCAL.CAT.HEAD.--POSSRBST - ],
				     [ OPT -,
				       --MIN basic_nonpro_rel,
				       LOCAL.CAT.HEAD.--BARED -,
				       MODIFD.RPERIPH bool ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ] ].

;; DPF 2019-11-11 - To avoid robust |Daisy loaned her bike| or |sent her letter|
;; restrict second NP to be non-bared.
;; DPF 2020-01-04 - But this also blocks robust |They gave him good impression|
;; so instead await better statistical model to disprefer robust |sent her bike|
;;
v_np-np_le := main_verb & 
  [ SYNSEM ditrans_verb &
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -,
	                               MODIFD.RPERIPH bool,
				       LOCAL.CAT.HEAD.--POSSRBST - ],
	                             [ OPT -,
				       --MIN nonpro_or_refl_or_num_rel,
	                               MODIFD.RPERIPH bool ] > ],
	     LKEYS [ --OCOMPKEY #ocmin,
		     --+OCOMPKEY #ocmin ] ] ].

;; Prevent rare passives to avoid spurious analysis of e.g. 
;; |I arrived felt bored|
;; Also block extraction, as for spurious analysis of |he feels [embarrassed he
;; hasn't ever seen the movie]|
;;
v_np-prd_oeq_le := main_verb_mliszt & 
  [ SYNSEM obj_equi_non_trans_prd_verb &
           [ LOCAL.CAT.VAL.COMPS.REST.FIRST.NONLOC.SLASH 0-dlist ] ].

;; Avoid robust |made eye contact with Kim|
v_np-vp_bse_le := main_verb_mliszt & 
  [ SYNSEM sorb_verb &
           [ LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.--BARED - ] ].

; `like' - block bare-sg objects:
; |I didn't like tadpole hunting|
;; Exclude |like celebrating ...|
;; DPF 2020-06-18 - Also block as modifiee of robust subord |find it practical|
;;
v_np-prd_oeq-ntr-x_le := main_verb_mliszt & 
  [ SYNSEM obj_equi_non_trans_prd_verb &
	   [ LOCAL.CAT [ VAL.COMPS.FIRST.LOCAL.CAT.HEAD basic_noun &
	                                                [ --BARE - ],
			 HEAD.--SBRDMOD - ],
	     LKEYS [ --OCOMPKEY #ocmin,
		     --+OCOMPKEY #ocmin ] ] ].

;; Exclude 'can, dare, may' so we can get robust |We wish he can leave|
#|
modal_pos_lex_ent :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
|#
v_vp_mdl-p-pst_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
v_vp_mdl-p-unsp_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
v_vp_mdl-p-sv_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
v_vp_mdl-p-cx_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].

;; Block depictives headed by |being that ...|, to favor |human being| as item
;; 2021-04-14 - But this blocks "the idea being that we ..., we tried again"
;; so instead require that the subj be expressed, to block relative clause.
v_cp_being_le :+
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST expressed_synsem ].

;; Block gerund compl of "to" as in "am writing to inviting you ..."
v_np*-pp_to_le := main_verb & 
  [ SYNSEM empty_to_trans_verb &
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT + ], 
				     [ OPT -,
				       LOCAL.CAT.HEAD.MINORS.ALTMIN 
							 reg_nom_rel ] > ],
	     LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ] ].

;; Avoid robust e.g. "were frozen"
v_-_unacc_le := main_verb & 
  [ SYNSEM unacc_verb &
	   [ LOCAL.CAT.HEAD.--HAVEBE - ] ].

;; "Can you tell me how many did you find?"
v_np-cp_fin-q-mc_le := main_verb & 
  [ SYNSEM np_trans_cp_fin_or_inf_verb &
	   [ LOCAL.CAT.VAL.COMPS < [ OPT - ], [ --SIND.SF ques,
						LOCAL.CAT.MC + ] > ] ].
