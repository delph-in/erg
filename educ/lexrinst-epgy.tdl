;;; -*- Mode: tdl; Coding: utf-8; -*-
;;;
;;;  Copyright (c) 1994-2005
;;;    Dan Flickinger, Rob Malouf, Emily M. Bender
;;;    see LICENSE for conditions
;;;
;;;  lexrinst.tdl
;;;
;;;  Instances of lexical rules defined in lexrules.tdl
;;;
;;;  Created: Ann Copestake, 30-Sept-97
;;;
;;;  $Id: lexrinst.tdl 6565 2009-05-24 08:05:14Z danf $

v_aux-sb-inv_dlr := sai &
  [ RNAME "LSAI" ].

;sailr_rbst := sai &
;  [ RNAME "LSAI" ].

#|
v_aux-advadd_dlr := adv_addition &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.MINORS.MIN neg_rel,
    RNAME "LADV" ].
|#
v_aux-advadd_dlr := adv_addition &
  [ RNAME "LADV" ].

;;; Tempted to block ellipsis, but not consistently marked.
;;; e.g. `Jerome did'
v_aux-ell-ref_dlr := vp_ellipsis_ref &
  [ SYNSEM.MODIFD.RPERIPH +,
    RNAME "LVER" ].

; v_aux-ell-xpl_dlr := vp_ellipsis_expl &
;  [ RNAME "LVEX" ].

;vgering := vger_ing &
;  [ RNAME "LVGR" ].

;; Prevent gerunds from appearing as heads of N-N compounds
;; e.g. |Kim is in the attic hunting for mice|
v_nger-intr_dlr := intrans_nominal_gerund &
  [ SYNSEM.MODIFD.LPERIPH +,
    RNAME "LNGI" ].

v_nger-pp_dlr := intrans_pp_nominal_gerund &
  [ SYNSEM.MODIFD.LPERIPH +,
    RNAME "LNGP" ].

v_nger-tr_dlr := trans_nominal_gerund &
  [ SYNSEM.MODIFD.LPERIPH +,
    RNAME "LNGT" ].

n_det-mnth_dlr := month_det_lr &
  [ RNAME "LMD" ].

n_det-wkdy_dlr := weekday_det_lr &
  [ RNAME "LWD" ].

j_att_dlr := attr_adj_lr &
  [ RNAME "LJA" ].

v_j-nb-intr_dlr := attr_verb_part_lr &
  [ RNAME "LJV" ].

v_j-nb-prp-tr_dlr := attr_verb_part_tr_lr &
  [ RNAME "LJVT" ].

v_j-nb-pas-tr_dlr := attr_verb_part_psv_lr &
  [ RNAME "LJVP" ].

v_j-nme-intr_dlr := attr_verb_part_intr_namemod_lr &
  [ RNAME "LJVN" ].

v_j-nme-tr_dlr := attr_verb_part_tr_namemod_lr &
  [ RNAME "LJVN" ].

det_prt-of-agr_dlr := part_ppof_agr_constr &
  [ RNAME "LPCA" ].

det_prt-of-nagr_dlr := part_ppof_noagr_constr &
  [ RNAME "LPCN" ].

det_prt-nocmp_dlr := part_nocomp_constr &
  [ RNAME "LPN" ].

v_np-prtcl_dlr := NP_particle_lr &
  [ RNAME "LNPP" ].

v_dat_dlr := dative_shift_lr &
  [ RNAME "LDAT" ].

j_n-minut_dlr := minute_prep_lr &
  [ RNAME "LMIN" ].

;;v_aux-tag_dlr := tag &
;;  [ RNAME "LTAG" ].

;j_enough_dlr := enough_addition &
;  [ RNAME "LENO" ].

n_bipart_dlr := bipart_lr &
  [ RNAME "LBPT" ].

;w_italics_dlr := foreign_lr &
;  [ RNAME "LFW" ].

v_inv-quot_dlr := inverted_quote_lr &
  [ RNAME "LINQ" ].

n_n-ed_odlr := 
%suffix (* ed) (!ty !tied) (e ed) (!t!v!c !t!v!c!ced) 
noun_adj_lr &
  [ ND-AFF +,
    RNAME "LNJ" ].

v_v-re_dlr := 
%prefix (* re) (* re-) 
verb_prefix_rule &
 [ ND-AFF +,
   RNAME "LRE",
   SYNSEM.PHON.ONSET con,
   C-CONT.RELS <! [ PRED "_re-_a_again_rel" ] !> ].

v_v-pre_dlr := 
%prefix (* pre) (* pre-) 
verb_prefix_rule &
 [ ND-AFF +,
   RNAME "LPRE",
   SYNSEM.PHON.ONSET con,
   C-CONT.RELS <! [ PRED "_pre-_a_ante_rel" ] !> ].

v_v-co_dlr := 
%prefix (* co-) 
verb_prefix_rule &
 [ ND-AFF +,
   RNAME "LCO",
   SYNSEM.PHON.ONSET con,
   C-CONT.RELS <! [ PRED "_co-_a_with_rel" ] !> ].

v_v-mis_dlr := 
%prefix (* mis) (* mis-) 
verb_prefix_rule &
 [ ND-AFF +,
   RNAME "LMIS",
   SYNSEM.PHON.ONSET con,
   C-CONT.RELS <! [ PRED "_mis-_a_error_rel" ] !> ].

;;;
;;; _fix_me_
;;; to make this rule functional, token mapping would have to not separate off
;;; |co-| (in `derivational_prefix_tmr').  however, doing that would then mean
;;; that either (a) we provide a prefixation rule for other parts of speech too
;;; (`co-author', maybe `co-educational') or minimally adjust existing lexical
;;; entries (currently MWEs); or (b) that we create a token-level ambiguity; i
;;; hesitate doing the latter.  but maybe it would not be so bad, in the end?
;;; the same problem applies to other derivational rules, of course.
;;;                                                             (13-mar-09; oe)
v_v-un_dlr := 
%prefix (* un) (* un-) 
verb_prefix_rule &
 [ ND-AFF +,
   RNAME "LUNV",
   C-CONT.RELS <! [ PRED "_un-_a_rvrs_rel" ] !> ].

v_v-counter_dlr := 
%prefix (* counter) (* counter-) 
verb_prefix_rule &
 [ ND-AFF +,
   RNAME "LUNV",
   SYNSEM.PHON.ONSET con,
   C-CONT.RELS <! [ PRED "_counter-_a_anti_rel" ] !> ].

;;; From arboretum/mal-inflr.tdl

;; Disagreement rules, one for each direction.  Pair synsem with
;; "wrong" forms: The dog bark/the dogs barks.
;;
;; Constrain this one to only apply to pronominal subject, to avoid spurious
;; analysis using both this rule and the mal_plur_noun_irule
;; DPF 25-jun-10 - But we also want to catch e.g. "my knees hurts", so let's
;; try blocking --BARE +, to avoid the above spuriosity.
;; Also block clauses headed by such verbs from undergoing cp_np-wh_c rule
;;
non_third_sg_fin_v_rbst :=
%suffix (!s !ss) (!ss !ssses) (ss sses) (!ty !ties) (ch ches) (sh shes) (x xes) (z zes)
lex_rule_infl_affixed &
[ GENRE robust,
  ND-AFF +,
  SYNSEM.LOCAL non_third_sg_fin_verb &
	[ CAT [ HEAD.MINORS.NORM no_rel,
		VAL.SUBJ < [ LOCAL.CAT.HEAD [ --BARE -,
				    MINORS.MIN nonpart_nom_rel ] ] > ] ],
  RNAME "MN3S" ].

;; DPF 2010-08-16 - Block subject extraction, to avoid spurious analysis for
;; "What do Kim and Abrams ..."
third_sg_fin_v_rbst := lex_rule_infl_affixed &
[ GENRE robust,
  ND-AFF -,
  ORTH #stem,
  DTR [ ORTH #stem,
	SYNSEM.LOCAL.CAT [ HEAD.--MAL3SG +,
	                   VAL.SUBJ < expressed_synsem > ] ],
  SYNSEM.LOCAL third_sg_fin_verb,
  RNAME "M3S" ].

;; DPF 10-May-04 - We take plural marking on noun as intended (not to be
;; corrected), so only have one mal infl-rule for nouns to correct 
;; 'two dog bark' to 'two dogs bark'.  We will need a statistical preference 
;; mechanism to choose one of the two possible corrections for 'dog bark':
;; either 'dogs bark' or 'a/the dog barks'.  But have to have both, since
;; 'he bark' should presumably get corrected to 'he barks' (not 'they bark').
;; DPF 07-feb-10 - Changed DTR..MIN norm_nom_rel to reg_nom_rel, so it also
;; applies to measure nouns, as in "they ran twenty six mile."
;; Note that CASE on dtr must be nom to avoid spurious ambiguity for e.g.
;; direct objects where there is no constraint on number.
;; DPF 30-mar-10 - Restrict this to only apply when the determiner is overt, 
;; to avoid spurious ambiguity for e.g. "she told her brother borrow her book"
;; where `brother' formerly got made a plural.  So now we assume that number
;; on nouns is as the writer intended, unless there is a determiner present,
;; which might indicate competing number, as in "most thing are important"
;; the verb to match robustly when needed.
;; DPF 07-apr-10 - But still getting too much spurious ambiguity, as in
;; "His soup is".  So restrict further to just deictic dets for now.

plur_noun_irule_rbst := lex_rule_infl_affixed &
[ GENRE robust,
  ND-AFF -,
  ORTH #stem,
  SYNSEM.LOCAL.CAT.HEAD.--BARE +,
  DTR [ ORTH #stem,
	SYNSEM.LOCAL.CAT [ HEAD [ MINORS.MIN reg_nom_rel,
				  CASE nom ],
			   VAL.SPR < canonical_synsem &
				     [ --MIN demonstrative_q_rel ] > ] ],
  SYNSEM.LOCAL plur_noun,
  RNAME "MPLN" ].

; For |Kim, Abrams(,) and Browne|
w_paren_comma-nf_plr :=
%suffix (!. !.\(,\))
punctuation_comma_rule.

#|
;; Patch since embedded Q's SF value is wrongly propagating to matrix clause
;; 
w_qmark_dqright_plr :=
%suffix (!q !q\?) (!q !q\?‚Äù) (!q !q\?") (!q !q\?'')
punctuation_dqright_rule.
|#

v_prp-nf_olr := never_unify_le.
