; Restrict to lexical idiom NPs, as in "take care of ..."
;; DPF 2018-09-12 - Removed COMPS..MIN bare_nom_rel since |take care of NP|
;; needs bare-NP (ordinary `care', not an idiomatic one).
v_np-pp_e-idm_le := main_verb & 
  [ SYNSEM empty_prep_trans_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -, 
			               LEX +,
				       LOCAL.CAT.HEAD noun ], 
				     [ OPT - ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ],
    IDIOM + ].

;; Block reflexive pronouns (indeed, any) for second NP, to avoid silly parse
;; for "He cooked the dinner himself"
;; DPF 2019-11-11 -  Exclude robust possessive pronoun, to avoid |called my mom|

v_np-np_only_le := main_verb & 
  [ ALTS.DATIVE -,
    SYNSEM ditrans_only_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -,
				       MODIFD.RPERIPH bool,
				       LOCAL.CAT.HEAD.--POSSRBST - ],
				     [ OPT -,
				       --MIN basic_nonpro_rel,
				       LOCAL.CAT.HEAD.--BARED -,
				       MODIFD.RPERIPH bool ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ] ].

;; DPF 2019-11-11 - To avoid robust |Daisy loaned her bike| or |sent her letter|
;; restrict second NP to be non-bared.
;;
v_np-np_le := main_verb & 
  [ SYNSEM ditrans_verb &
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -,
	                               MODIFD.RPERIPH bool,
				       LOCAL.CAT.HEAD.--POSSRBST - ],
	                             [ OPT -,
				       --MIN nonpro_or_refl_or_num_rel,
				       LOCAL.CAT.HEAD.--BARED -,
	                               MODIFD.RPERIPH bool ] > ],
	     LKEYS [ --OCOMPKEY #ocmin,
		     --+OCOMPKEY #ocmin ] ] ].

;; Pronoun as second NP
v_np-nppro_le_rbst := main_verb & 
  [ ALTS.DATIVE -,
    SYNSEM ditrans_only_verb &
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -,
	                               MODIFD.RPERIPH bool,
				       NONLOC.SLASH 0-dlist ], 
	                             [ OPT -,
				       --MIN pron_rel,
	                               MODIFD.RPERIPH bool ] > ],
	     LKEYS [ --OCOMPKEY #ocmin,
		     --+OCOMPKEY #ocmin ] ],
   GENRE robust ].

;; Prevent rare passives to avoid spurious analysis of e.g. 
;; |I arrived felt bored|
;; Also block extraction, as for spurious analysis of |he feels [embarrassed he
;; hasn't ever seen the movie]|
;;
v_np-prd_oeq_le := main_verb_mliszt & 
  [ SYNSEM obj_equi_non_trans_prd_verb &
           [ LOCAL.CAT.VAL.COMPS.REST.FIRST.NONLOC.SLASH 0-dlist ] ].

;; |they hope me to succeed|
v_np-vp_sor_le_rbst := main_verb_mliszt & 
  [ SYNSEM sor_verb,
    GENRE robust ].

;; |they elected him the president|
v_np-np_nbar_le_rbst := main_verb & 
  [ ALTS.DATIVE -,
    SYNSEM ditrans_only_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT - ], 
				     [ OPT -,
				       --MIN non_proper_rel ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ],
    GENRE robust ].

; Restrict normal transitives missing object to --MAL3SG + to prevent
; these from appearing in conjoined verb phrases, avoiding spurious ambiguity
; for e.g. "Kim buys and sells books"
; DPF 19-feb-10 - Also constrain to SLASH 0-dlist, to avoid mis-analysis for
; e.g. `Mark brought the [cookies he made for] his class.'
; DPF 19-apr-10 - --COMPKEY is hack to prevent attrib-adj LR, as in 
; "Mariah is making pasta"
v_-_le_rbst := main_verb & 
  [ SYNSEM unerg_verb &
           [ LOCAL.CAT.HEAD [ --MAL3SG + ],
	     NONLOC.SLASH 0-dlist,
	     LKEYS.--COMPKEY selected_rel ],
    ALTS.NGER -,
    GENRE robust ].

;; |he had his health ruin| => ruined
v_-_le_pas_rbst := main_verb & 
  [ SYNSEM unerg_verb,
    GENRE robust ].

v_p_le_pas_rbst := main_verb & 
  [ SYNSEM particle_verb &
	   [ LKEYS [ --COMPKEY #cmin,
                     --+COMPKEY #cmin ] ],
    GENRE robust ].

; e.g. 'tell'
; Exclude robust 3sg in CP complement, to avoid competing treatment for e.g.
; `she told her brother borrow her book'.
v_cp_le_rbst := main_verb & 
  [ SYNSEM cp_intrans_verb &
           [ LOCAL.CAT [ VAL.COMPS < [ LOCAL.CAT.HEAD.--MAL3SG -,
				       NONLOC.SLASH 0-dlist ] > ] ],
    ALTS.CPFRAG -,
    GENRE robust ].

; |we inquired that he arrived|
v_cp_le_ques_rbst := main_verb & 
  [ SYNSEM cp_intrans_verb &
           [ LOCAL.CAT [ VAL.COMPS < [ LOCAL.CAT.HEAD.--MAL3SG -,
				       NONLOC.SLASH 0-dlist ] > ] ],
    ALTS.INVQ -,
    GENRE robust ].

; e.g. `know': |*we know where is the restaurant|
v_cp_fin-inf-q-mc_le_rbst := main_verb & 
  [ SYNSEM cp_ques_fin_inf_mc_verb,
    GENRE robust ].

;; Avoid robust |made eye contact with Kim|
v_np-vp_bse_le := main_verb_mliszt & 
  [ SYNSEM sorb_verb &
           [ LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.--BARED - ] ].

; e.g. 'tell him borrow her book'
v_np-vp_bse_le_rbst := main_verb_mliszt & 
  [ SYNSEM obj_equi_bse_trans_verb &
           [ LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.--BARED - ],
    GENRE robust ].

;; |made him bought the book| - past tense
v_np-vp_fin_le_rbst := main_verb_mliszt & 
  [ SYNSEM obj_equi_fin_verb &
      [ LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD.--BARED - ], 
                              [ LOCAL.CAT.HEAD.TAM.TENSE past ] > ],
    GENRE robust ].


;; |made him buys the book| - pres-3sg
;; For now, block lexical VP complement, to avoid unwanted ambiguity
v_np-vp_fin-3sg_le_rbst := main_verb_mliszt & 
  [ SYNSEM obj_equi_fin_verb &
      [ LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD.--BARED - ], 
                              [ LOCAL.CAT.HEAD [ TAM.TENSE present,
						 --ADDIN.ADDPN 3s,
						 --MAL3SG - ],
				LEX - ] > ],
    GENRE robust ].

; e.g. `This lets the cat to enter'
;; DPF 2018-04-03 - To avoid overuse, constrain NP to exclude partitives
v_np-vp_oeq_le_rbst := main_verb & 
  [ SYNSEM obj_equi_verb &
           [ LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD non_partn ],
    GENRE robust ].

; 'She enables to win.'
; Missing direct object
;
v_vp_seq_le_rbst := main_verb & 
  [ SYNSEM subj_equi_verb,
    GENRE robust ].

; |succeeded to arise| => succeeded in arising
;
v_vp_pp-in_le_rbst := main_verb & 
  [ SYNSEM subj_equi_verb,
    GENRE robust ].

; (ERB 2003-10-23) For subject equi verbs, with the infinitival
; marker "to" dropped

; 'She wants win.'
v_vp_seq-bse_le_rbst := main_verb_mliszt & 
  [ SYNSEM subj_equi_bse_verb,
    GENRE robust ].

;; Missing |to| for raising: |they tend win.|
v_vp_ssr-nimp_le_rbst := main_verb & 
  [ SYNSEM ssr_bse_noimp_verb &
           [ LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.TAM.SAME-PAST - ],
    GENRE robust ].

;; Either missing |to| or missing past participle for |has make|
v_vp_ssr-have_le_rbst := main_verb & 
  [ SYNSEM ssr_bse_noimp_verb &
           [ LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.TAM.SAME-PAST - ],
    GENRE robust ].

;; |she enjoys to swim|
v_vp_seq-prp_le_rbst := main_verb & 
  [ SYNSEM subj_equi_verb,
    GENRE robust ].

; |don't forget taking your coat|
v_vp_ssr-prp_le_rbst := main_verb & 
  [ SYNSEM ssr_prp_verb,
    GENRE robust ].

;; |she explained to open the box| => how to open
v_vp_wh_le_rbst := main_verb & 
  [ SYNSEM subj_equi_verb,
    GENRE robust ].

; 'ask' - block dative shift
v_np-np*_nodat_le := main_verb & 
  [ SYNSEM ditrans_only_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT - ], [ OPT + ] > ] ] ].

v_np-np*_le := main_verb & 
  [ SYNSEM ditrans_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT - ], 
				     [ OPT +,
				       LOCAL.CAT.HEAD.--BARED - ] > ] ] ].

; |explained the students the method|
; Block dative shift
v_np-np_le_rbst := main_verb & 
  [ SYNSEM ditrans_verb &
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT -,
				       NONLOC.SLASH 0-dlist ],
				     [ OPT - ] > ],
	     LKEYS [ --OCOMPKEY #ocmin,
		     --+OCOMPKEY #ocmin ] ],
    ALTS.DATIVE -,
    GENRE robust ].

; `like' - block bare-sg objects:
; |I didn't like tadpole hunting|
;; Exclude |like celebrating ...|
;;
v_np-prd_oeq-ntr-x_le := main_verb_mliszt & 
  [ SYNSEM obj_equi_non_trans_prd_verb &
	   [ LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD basic_noun &
	                                              [ --BARE - ],
	     LKEYS [ --OCOMPKEY #ocmin,
		     --+OCOMPKEY #ocmin ] ] ].

;; For wrong prep marker as in |allocated it of Kim|
;; |mistake him as Kim|
v_np-pp_e_le_rbst := main_verb & 
  [ SYNSEM empty_prep_trans_verb &
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT - ], [ OPT - ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ],
    GENRE robust ].

; |cost money from me| => |cost me money|
v_np-pp_np_le_rbst := main_verb & 
  [ SYNSEM prep_trans_verb &
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT - ], [ OPT - ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ],
    GENRE robust ].

; For e.g. "went the store"
; Add NORM no_rel to block v_mod rule for e.g. "went to visit her house"
; and ngerund rule as in |sitting on the lawn waiting|.
; Block for |waited an hour|
;; DPF 2019-02-14 - Removed COMPS.FIRST canonical_synsem since we want robust
;; |the cat he thought|
;; DPF 2019-04-10 - But addition of [NORM no_rel] also blocks present prog
;; as in |we are going a trip.|  So remove, and count on better parse ranking to
;; avoid the above unwanted robust analyses.
;; DPF 2019-04-24 - Block extraction, to avoid robust 
;; |I feel too carsick to care|.
;; DPF 2019-04-26 - Added RPERIPH bool to block robust vmod for |went to Rome|
;; DPF 2019-10-02 - Block for gerunds, to avoid |the good looking|
;;
v_np_pp_le_rbst := main_verb & 
  [ SYNSEM np_non_trans_verb &
     [ LOCAL.CAT.VAL.COMPS < canonical_synsem &
			     [ OPT -,
			       LOCAL.CAT.HEAD.--BARED -,
			       --SIND.SORT entity,
			       PUNCT.RPUNCT comma_or_clause_or_no_punct ] >,
       MODIFD.RPERIPH bool ],
    ALTS.NGER -,
    GENRE robust ].

v_np_locinv-mv_le_rbst := basic_loc_inv_verb_word &
  [ INFLECTD -,
    SYNSEM loc_inv_mv_synsem &
           [ LOCAL.CAT.VAL.COMPS.FIRST.--MIN pron_rel ],
    GENRE robust ].

; Should be subjunctive CP: |we wish that he arrives|
v_cp_sbjnct_le_rbst := norm_basic_main_verb & 
  [ INFLECTD -,
    ALTS.CPFRAG -,
    SYNSEM pp_cp_fin_prop_verb &
    	   [ LOCAL.CAT.VAL.COMPS.REST.FIRST.LOCAL.CAT.HEAD
                                                    [ TAM [ TENSE nonpast,
							    MOOD indicative ],
						      --MODAL - ] ],
    GENRE robust ].

; |Kim made [it] easier to leave|
; Block use for |made sure to leave|
;; NORM norm_rel blocks J-V compounds like |proud-making| with these verbs
;;
v_prd_seq_le_rbst := main_verb_mliszt & 
  [ SYNSEM subj_equi_prd_v_a_verb &
	   [ LOCAL.CAT [ VAL.COMPS.FIRST.LOCAL.CAT.HEAD.--IDIOMPART -,
	                 HEAD.MINORS.NORM norm_rel ] ],
    GENRE robust ].

;; Exclude 'can, dare, may' so we can get robust |We wish he can leave|
#|
modal_pos_lex_ent :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
|#
v_vp_mdl-p-pst_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
v_vp_mdl-p-unsp_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
v_vp_mdl-p-sv_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].
v_vp_mdl-p-cx_le :+
  [ SYNSEM.LOCAL.CAT.HEAD.--MODAL + ].

; For |take place the event|
v_nb-np_le_mal := main_verb_mliszt & 
  [ SYNSEM basic_ditrans_nbar_np_verb &
    	   [ LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.VAL.SPR.FIRST.OPT - ],
	                           [ OPT - ] > ],
    ALTS.PASSIVE - ].

v_cp_q_le := main_verb & 
  [ SYNSEM cp_ques_intrans_verb ].

; |We introduce how to succeed|
v_cp_q_le_rbst := main_verb & 
  [ SYNSEM cp_ques_fin_inf_intrans_verb &
           [ NONLOC.SLASH 0-dlist ],
    GENRE robust ].

;; For robust copula taking base-form VP
;; Add --MAL3SG + to prevent these in conjuncts as in
;; |a guy who is warm inside but looks cold outside|

v_vp_be-bse-p_le_rbst := aux_verb_word_super &
 [ INFLECTD +,
   SYNSEM will_aux_pos_synsem &
	  [ LOCAL.CAT [ HEAD [ --MAL3SG +,
	                       TAM.MOOD indicative ],
		        VAL.COMPS < [ LOCAL.CAT vp_bse_unspec_cat &
					     [ HEAD [ TAM.MOOD indicative,
					              --MALCOPBSE + ] ] ] > ],
	    LKEYS.KEYREL.PRED _will_v_aux_rel ],
   ALTS.VPELLIP -,
   GENRE robust ].

v_vp_be-bse-n_le_rbst := va_will_neg_lexent &
 [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST canonical_or_unexpressed,
   ALTS.VPELLIP -,
   GENRE robust ].

#|
v_vp_fin_le_rbst := fin_modal_verb_word &
  [ INFLECTD +,
    ALTS [ VPELLIP -,
	   CSAI - ],
    SYNSEM [ LOCAL [ CAT [ HEAD [ AUX +,
				  TAM indic_tam ],
			   VAL [ SUBJ < [ OPT - ] >,
				 COMPS.FIRST [ LOCAL 
						[ CAT vp_cat &
						  [ HEAD [ VFORM fin,
							   --MAL3SG -,
							   --ADDIN.ADDPN #pn,
							   TAM.SAME-PAST - ] ],
						  AGR.PNG.PN #pn & 3s ],
					       --SIND.SF prop-or-comm,
					       OPT - ] ] ],
		     CONT [ HOOK.LTOP #ltop,
			    RELS <! #keyrel !>,
			    HCONS <! qeq !> ] ],
	     LKEYS.KEYREL #keyrel & [ LBL #ltop ] ],
  GENRE robust ].
|#
v_vp_fin_le_rbst := fin_modal_verb_word &
  [ INFLECTD +,
    ALTS [ VPELLIP -,
	   CSAI -,
           SAI - ],
    SYNSEM [ LOCAL [ CAT [ HEAD [ AUX +,
				  TAM indic_tam ],
			   VAL [ SUBJ < [ OPT - ] >,
				 COMPS.FIRST [ LOCAL 
						[ CAT vp_fin_cat &
						  [ HEAD.--ADDIN.ADDPN #pn ],
						  AGR.PNG.PN #pn & 3s ],
					       --SIND.SF prop-or-comm,
					       OPT - ] ] ],
		     CONT [ HOOK.LTOP #ltop,
			    RELS <! #keyrel !>,
			    HCONS <! qeq !> ] ],
	     LKEYS.KEYREL #keyrel & [ LBL #ltop ] ],
  GENRE robust ].


; |We dreamt of a town is surrounded by hills|
v_p-cp_le_rbst := main_verb & 
  [ SYNSEM particle_cp_verb &
	   [ LKEYS [ --COMPKEY #cmin,
                      --+COMPKEY #cmin ] ],
    GENRE robust ].

;; |They took care the cat|
v_np-np_idm_le_rbst := main_verb & 
  [ ALTS.DATIVE -,
    SYNSEM mal_ditrans_only_verb & 
	   [ LOCAL.CAT [ VAL.COMPS < [ OPT - ], [ OPT - ] > ],
             LKEYS [ --OCOMPKEY #ocmin,
                     --+OCOMPKEY #ocmin ] ],
    IDIOM +,
    GENRE robust ].

;; |She/they didn't admired by anyone|
;; SAME-PAST isn't exactly right, but avoids |didn't read|
v_do-be-past-neg_le_rbst := be_past_neg_lex_entry & be_cop_neg &
 [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD verb & [ VFORM pas,
							    TAM.SAME-PAST - ],
   ALTS [ VPELLIP -,
	  SAI -,
	  ADVADD - ],
   GENRE robust ].

