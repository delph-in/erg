;;; -*- Mode: TDL; Package: DISCO -*-
;;;
;;;  Copyright Daniel Flickinger 1994-1999
;;;  All Rights Reserved.
;;;  No use or redistribution without permission.
;;;
;;;  syntax.tdl
;;;
;;;  The grammar rules for English
;;;
;;;  Created: Rob Malouf, 3-Nov-1994
;;;
;;;  $Id$



;;
;;  Phrase structure schemata
;;

; Headed phrases must obey the Head Feature Principle and the Revised Marking
; Principle.  They do not all obey the NLFP with respect to QUE, but it
; appears that all CLAUSE phrases account for QUE on mother and non-head-dtr.
; Hence moved the QUE coreference to NON-CLAUSE.  Headed phrases also identify
; the value of AGR on mother and head daughter, unlike e.g. the coordination 
; schemata which identify HEAD but not AGR.  

headed_phrase := phrase & 
  [ SYNSEM.LOCAL [ CAT [ HEAD head & #head,
                         HC-LEX #hclex ],
                   CONT.MSG [ PSV #psv,
                              TPC #tpc ],
                   AGR #agr,
		   CONJ #conj ],
    HEAD-DTR.SYNSEM.LOCAL local &
		 [ CAT [ HEAD #head,
                         HC-LEX #hclex ],
                   CONT.MSG [ PSV #psv,
                              TPC #tpc ],
                   AGR #agr,
		   CONJ #conj ] ].

non_headed_phrase := phrase.

; Most but not all phrases have SYNSEM phr_synsem; head_complement constructions
; have their SYNSEM type determined by the head-dtr.

phrasal := phrase &
  [ SYNSEM phr_synsem ].

; Head/nexus phrases pass up the REL and QUE values of the head daughter
; (which has amalgamated the REL and QUE values of its arguments a la Ivan's
; relative clause paper) to the mother.  

head_nexus_rel_phrase := headed_phrase &
  [ SYNSEM.NON-LOCAL.REL #rel,
    HEAD-DTR.SYNSEM.NON-LOCAL.REL #rel ].

head_nexus_que_phrase := headed_phrase &
  [ SYNSEM.NON-LOCAL.QUE #que,
    HEAD-DTR.SYNSEM.NON-LOCAL.QUE #que ].

head_nexus_phrase := head_nexus_rel_phrase & head_nexus_que_phrase.

; In a head/local dependent phrase, the SLASH feature of the mother is
; token-identical to that of the head daughter, which has already amalgamated
; the SLASH values of its arguments.  See discussion of head_nexus_phrase for
; treatment of REL and QUE.

head_valence_phrase := head_nexus_phrase &
  [ SYNSEM.NON-LOCAL.SLASH #slash,
    HEAD-DTR.SYNSEM.NON-LOCAL.SLASH #slash ].

; All phrases are either unary or binary.

basic_unary_phrase := phrase &
  [ STEM #stem,
    SYNSEM.LOCAL.CONT [ RELS *diff-list* &
			      [ LIST #first,
				LAST #last ],
			HCONS *diff-list* &
			      [ LIST #scfirst,
				LAST #sclast ] ],
    C-CONT [ RELS [ LIST #first,
                    LAST #middle ],
	     HCONS [ LIST #scfirst,
                     LAST #scmiddle ] ],
    ARGS < sign & [ STEM #stem,
                    SYNSEM.LOCAL local &
				 [ CONT [ RELS *diff-list* &
						[ LIST #middle,
						  LAST #last ],
					  HCONS *diff-list* &
						[ LIST #scmiddle,
						  LAST #sclast ] ] ] ] > ].

unary_phrase := basic_unary_phrase &
  [ INFLECTED +,
    POSSCL #posscl,
    ARGS < [ INFLECTED +,
             POSSCL #posscl,
             ROBUST #robust ] >,
    ROBUST #robust ].

; DPF 12-Oct-01 - [POSSCL -] forces possessive clitic to the right periphery
; of any phrase (oe's fine idea for implementing the right-periphery constraint
; presented with LP constraints in Gazdar, Flickinger, Daeleman 198?).

basic_binary_phrase := phrase &
  [ SYNSEM.LOCAL.CONT [ RELS *diff-list* &
			      [ LIST #first,
				LAST #last ],
			HCONS *diff-list* &
			      [ LIST #scfirst,
				LAST #sclast ] ],
    C-CONT [ RELS *diff-list* & 
		   [ LIST #first,
		     LAST #middle1 ],
	     HCONS *diff-list* &
		   [ LIST #scfirst,
		     LAST #scmiddle1 ] ],
    ARGS < sign & [ SYNSEM.LOCAL local &
				 [ CONT [ RELS *diff-list* &
						[ LIST #middle1,
						  LAST #middle2 ],
					  HCONS *diff-list* &
						[ LIST #scmiddle1,
						  LAST #scmiddle2 ] ] ],
                    POSSCL - ],
	   sign & [ SYNSEM.LOCAL local &
				 [ CONT [ RELS *diff-list* &
						[ LIST #middle2,
						  LAST #last ],
					  HCONS *diff-list* &
						[ LIST #scmiddle2,
						  LAST #sclast ] ] ],
                    POSSCL #posscl ] >,
    POSSCL #posscl ].

binary_phrase := basic_binary_phrase &
  [ INFLECTED +,
    ARGS < [ INFLECTED +,
             ROBUST #robust ],
           [ INFLECTED +,
             ROBUST #robust ] >,
    ROBUST #robust ].

basic_binary_headed_phrase := headed_phrase & basic_binary_phrase &
  [ NON-HEAD-DTR sign ].

binary_headed_phrase := basic_binary_headed_phrase & binary_phrase.

binary_rule_left_to_right := rule &
  [ ARGS < [ KEY-ARG + ] , [ KEY-ARG bool ] > ].

binary_rule_right_to_left := rule &
  [ ARGS < [ KEY-ARG bool ], [ KEY-ARG + ] > ].

basic_ternary_phrase := phrase &
  [ SYNSEM.LOCAL.CONT [ RELS *diff-list* &
			      [ LIST #first,
				LAST #last ],
			HCONS *diff-list* &
			      [ LIST #scfirst,
				LAST #sclast ] ],
    C-CONT [ RELS *diff-list* & 
		   [ LIST #middle3,
		     LAST #last ],
	     HCONS *diff-list* &
		   [ LIST #scmiddle3,
		     LAST #sclast ] ],
    ARGS < sign & [ SYNSEM.LOCAL local &
				 [ CONT [ RELS *diff-list* &
						[ LIST #first,
						  LAST #middle1 ],
					  HCONS *diff-list* &
						[ LIST #scfirst,
						  LAST #scmiddle1 ] ] ],
                    POSSCL - ],
	   sign & [ SYNSEM.LOCAL local &
				 [ CONT [ RELS *diff-list* &
						[ LIST #middle1,
						  LAST #middle2 ],
					  HCONS *diff-list* &
						[ LIST #scmiddle1,
						  LAST #scmiddle2 ] ] ],
                    POSSCL #posscl ],
	   sign & [ SYNSEM.LOCAL local &
				 [ CONT [ RELS *diff-list* &
						[ LIST #middle2,
						  LAST #middle3 ],
					  HCONS *diff-list* &
						[ LIST #scmiddle2,
						  LAST #scmiddle3 ] ] ],
                    POSSCL #posscl ] >,
    POSSCL #posscl ].

ternary_phrase := basic_ternary_phrase &
  [ INFLECTED +,
    ARGS < [ INFLECTED +,
             ROBUST #robust ],
           [ INFLECTED +,
             ROBUST #robust ],
           [ INFLECTED +,
             ROBUST #robust ] >,
    ROBUST #robust ].

ternary_rule_left_to_right := rule &
  [ ARGS < [ KEY-ARG + ] , [ KEY-ARG bool ] , [ KEY-ARG bool ] > ].

head_only := unary_phrase & headed_phrase &
  [ HEAD-DTR #head & [ SYNSEM.LOCAL.CONJ cnil ],
    ARGS < #head > ].

head_initial := basic_binary_headed_phrase &
  [ HEAD-DTR #head,
    NON-HEAD-DTR #non-head & [ SYNSEM.LOCAL.CONJ cnil_or_numconj ],
    ARGS < #head, #non-head > ].

head_initial_infl := head_initial & binary_headed_phrase.

head_final := basic_binary_headed_phrase &
  [ HEAD-DTR #head,
    NON-HEAD-DTR #non-head & [ SYNSEM.LOCAL.CONJ cnil ],
    ARGS < #non-head, #head > ].

head_final_infl := head_final & binary_headed_phrase.

; C-CONT is the semantic contribution of the phrase itself.  The handle and
; index of the phrase come from the handle and index of C-CONT (which are
; possibly but not necessarily identified with the handle and index of one of
; the daughters).  The liszt of the phrase is the append of the liszt of
; C-CONT and the liszts of the daughters.

head_compositional := headed_phrase &
  [ C-CONT.HOOK #hook,
    HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK #hook ].

nonhead_compositional := basic_binary_headed_phrase &
  [ C-CONT.HOOK #hook,
    NON-HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK #hook ].

non_clause := head_nexus_phrase &
  [ SYNSEM.LOCAL [ CAT.MC na,
                   CONT.MSG no_msg ] ].

; ERB (05-10-97) The immediate subtypes of clause are now rel_cl and
; non_rel_clause.  The latter groups together decl, imp, and (wh_)interrog,
; which are similar in that they can't serve as modifiers and have empty REL
; values.  That type used to be (misleadingly) named msg_clause.  The
; remaining constraint (MSG message) has been moved to the type clause
; where it belongs.

clause := phrasal &
  [ SYNSEM [ LOCAL [ CAT [ HEAD v_or_g,
			   VAL.COMPS *olist* ],
		     CONJ cnil ],
	     NON-LOCAL.QUE 0-dlist ] ].

; DPF 12-Nov-03 - Renamed this from mc_phrase to mc_fillhead_phrase since
; they're the only ones inheriting from it, and it's a good place to add
; the following constraint:
; DPF 12-Nov-03 - Experimentally, make the XARG of this type be the XARG
; of the head-dtr, in order to support "on Tuesday who arrived" where the
; PP should share the handle of the VP (as if it had been extracted).

mc_fillhead_phrase := headed_phrase &
  [ SYNSEM [ LOCAL [ CAT.MC +,
                     CONT.HOOK.XARG #xarg ],
	     NON-LOCAL [ SLASH 0-dlist,
			 QUE 0-dlist ] ],
    HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.XARG #xarg ].

; The [MC bool] constraint lives here rather than on clause because we want
; to treat relative clauses as clauses, but we need to distinguish them as the
; only clauses which can serve as modifiers.  That is, on the one hand we need
; to distinguish relative clauses from ordinary finite subj_head declaratives, 
; where both have a non-empty MOD value, but only the former can appear in a
; head-modifier phrase; and on the other hand we need to distinguish
; extracted-subject finite clauses from ordinary finite S/NP clauses, since 
; only the latter can be the dtr in a thatless-relative construction.  So the
; head-adjunct rule for nouns says the adjunct must be [MC na], and the 
; thatless_rel rule says the dtr must be [MC +].
; DPF 28-Nov-02 - HOOK comes only from C-CONT
; DPF 26-Mar-03 - Removed reentrancy with HD-DTR..LTOP
; DPF 27-May-03 - Added reentrancy of HD-DTR's E-INDEX and C-CONT's, at least
; for coordination of S's where we want to attend to precedence relations of
; the coordinated events, which conjunctions pick up from E-INDEX not INDEX.

non_rel_phrase := head_nexus_rel_phrase &
  [ SYNSEM [ LOCAL.CONT.MSG message & #msg &
                            [ LBL #mhand ],
             NON-LOCAL.REL 0-dlist ],
    HEAD-DTR.SYNSEM [ LOCAL.CONT.HOOK.INDEX #ind,
		      NON-LOCAL [ QUE 0-dlist,
				  REL 0-dlist ] ],
    C-CONT [ HOOK [ LTOP #mhand,
                    INDEX #ind ],
	     RELS.LIST < #msg, ... > ] ].

non_rel_clause := non_rel_phrase & clause.

; DPF 26-Jan-01 - Changed HEAD.INV - to HEAD.INV -* to allow for coordination
; of inverted and non-inverted sentences.  Worry that this swap has been made
; before, but next time we'll know why.
; DPF 28-Nov-02 - HOOK comes only from C-CONT

decl_phrase := non_rel_phrase &
  [ SYNSEM.LOCAL [ CAT [ HEAD v_or_g &
			      [ VFORM fin,
                                INV -,
				PRD -,
                                TAM basic_ind_or_mod_subj_tam ],
			 MC bool ],
                   CONT.MSG.PRED prpstn_m_rel ],
    HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.LTOP #hdtop,
    C-CONT [ RELS <! [ MARG #marg ] !>,
             HCONS <! qeq & [ HARG #marg,
                              LARG #hdtop ] !> ] ].

decl := decl_phrase & clause.

; Added [SYNSEM..SPR < >] on imp to preserve intended constraints on modifiers
; which only attach to VP and N-bar.
; DPF 13-May-00 - Added [DTR..SUBJ..CASE acc] to prevent ordinary finite
; verbs from serving as heads, now that we want to be able to later conjoin
; imperatives and finite clauses.
; DPF 13-May-00 - Added [DTR..CONT.HOOK.INDEX ref-ind] to prevent expl-there.
; DPF 22-Feb-01 - Removed above-mentioned [SPR < >], since we've decided to 
; allow sentence-initial PP-modifiers for WH-questions (see 11-Dec-00 below),
; and we still want to be able to coordinate imperatives and WH-questions, as
; in "Give me that book and what is its title?"
; DPF 20-Oct-01 - Replaced SUBJ < > with *olist* since we were blocking e.g.
; 'Tell me your bank's name and where is it?", and made the HEAD-DTR's SUBJ
; be unexpressed_reg so this cannot have as input an inverted phrase.
; Also replaced INV - with -* for the same example.
; DPF 28-Nov-02 - HOOK comes only from C-CONT 

imp := non_rel_clause & head_valence_phrase & head_only &
  [ SYNSEM.LOCAL [ CAT [ HEAD [ INV -,
				VFORM imp_vform,
				TAM [ TENSE present,
				      ASPECT no_aspect ] ],
			 VAL [ SUBJ *olist* & < anti_synsem >,
			       SPR *olist*,
			       COMPS < > ],
			 MC + ],
                   CONT.MSG.PRED imp_m_rel ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD verb,
                                  MC na,
                                  VAL [ SUBJ < unexpressed_reg &
                                               [ LOCAL.CAT.HEAD.CASE acc,
                                                 --SEMIND #inst & ref-ind & 
                                                           [ PNG.PN 2per ] ] >,
                                        COMPS *olist* ] ],
                            CONT.HOOK.LTOP #hdtop ],
    C-CONT [ RELS <! [ MARG #marg ],
                    [ PRED pronoun_q_rel,
                      RSTR #rhand,
                      ARG0 #inst ],
                    [ LBL #prohand,
                      PRED pron_rel,
                      ARG0 #inst & full_ref-ind &
                          [ PRONTYPE zero_pron,
                            SORT entity ] ] !>,
             HCONS <! qeq & [ HARG #marg,
                              LARG #hdtop ],
                      qeq & [ HARG #rhand,
                              LARG #prohand ] !> ] ].

; ERB (05-10-97) There is no longer a subtype of interrog for polar questions,
; as a result of streamlining the hcomp family (subordinate polar questions
; didn't inherit from the old ynq type anyway).  So interrog and its sole
; subtype wh_interrog could be collapsed into each other, but it seems clearer
; to have them separate.  I don't know what the effect of losing the constraint
; on SLASH in matrix polar questions will be.
; DPF 28-Nov-02 - HOOK comes only from C-CONT

interrog := non_rel_clause & 
  [ SYNSEM [ LOCAL.CONT.MSG.PRED int_m_rel,
	     NON-LOCAL.SLASH 0-dlist ] ].

; Restrict NON-HEAD-DTR to be [HEAD subst] to avoid trying non-partitive
; determiner "whose" as filler in filler-head-wh rules.  Assume all
; wh-interrog phrases are [MOOD ind_or_mod_subj].
; DPF 29-Aug-00 - But the above [ HEAD subst ] blocked "How often did kim win",
; so removed it. 

wh_interrog := interrog & binary_headed_phrase &
  [ SYNSEM.LOCAL [ CAT [ HEAD verbal &
			      [ TAM.MOOD strict_ind_or_mod_subj ] ],
                   CONT.MSG message & [ PARAMS <! #que & handle !> ] ],
    NON-HEAD-DTR.SYNSEM [ NON-LOCAL.QUE 1-dlist &
					[ LIST < #que & handle > ] ] ].

; This type has subtypes for filler_head.  If we assumed only
; finite subj_head phrases, and explicitly made the relevant filler_head
; phrases be finite (which we do), we wouldn't have to stipulate VFORM here.

wh_interrog_fin := wh_interrog &
  [ SYNSEM.LOCAL.CAT [ HEAD verb & [ VFORM fin ],
		       VAL.SUBJ *olist*,
		       MC bool ] ].

; DPF (28-Apr-99) Need this construction to get simple yes-no questions like
; "Did Kim fall", while keeping the phrase "did Kim devour" with an empty
; MSG so it can be the head of "What did Kim devour", where this filler-head
; rule introduces the interrogative message.
; DPF 26-Jan-01 - Made HEAD.INV be +* to allow coord of inv and non-inv Ss.
; DPF 13-May-01 - Added [HEAD-DTR..VFORM fin] - was missing.
; DPF 12-Apr-02 - Made SYNSEM..SUBJ re-entrant with HEAD-DTR..SUBJ

yesno_phrase := interrog & head_valence_phrase & head_only &
  [ SYNSEM.LOCAL.CAT [ HEAD.INV +,
                       VAL [ SUBJ #subj,
                             SPR #spr,
                             COMPS < > ],
                       MC + ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD verb & [ VFORM fin ],
				  MC na,
				  VAL [ SUBJ #subj & < anti_synsem >,
                                        SPR #spr & *olist*,
					COMPS *olist* ] ],
                            CONT.HOOK [ LTOP #hdtop,
                                        INDEX.E.TENSE real_tense ] ],
    C-CONT [ RELS <! [ MARG #lbl ],
                     message & [ LBL #lbl,
                                 PRED prpstn_m_rel,
                                 MARG #marg ] !>,
             HCONS <! qeq &
                    [ HARG #marg,
                      LARG #hdtop ] !> ] ].



; Since MOD is a head feature, and projections of finite verbs can be relative
; clauses, we introduce the [MOD nbar] property directly on finite verbs, 
; rather than in the rel_cl phrase type as before.  Then we have to be sure 
; that finite VPs do not appear as postnominal modifiers, and likewise for 
; declarative S's.  The former is blocked because the head-adjunct rule 
; requires that the adjunct be [SUBJ *olist*].  The latter we block by 
; requiring that the adjunct in a head-adjunct phrase be [MC na], while making 
; declarative head_subj phrases be [MC bool].  Thus relative clauses must also 
; be [MC na].
;
; DPF 27-May-99 - Avoid making rel_cl a headed_phrase, so it can be marked as
; [PRD +] even though its 'head' daughter is necessarily {PRD -].  Will be
; easier with defaults.
; DPF 15-Apr-00 - Removed REL 0-dlist from rel_cl, so we can distinguish
; relative clauses from other clauses; e.g., to avoid allowing "I am out on t"
; as a (non-strict) root.  
; DPF 22-May-02 - Added MOD..SPR..ALTKEY explicit_quant_or_udef_noagr_q_rel
; to prevent relative clauses from modifying NP-adv's like "there" as in 
; "there to be a bookcase" while still allowing e.g. "someone to fix the sink"
; DPF 30-May-02 - But this also blocks noun-noun-compound heads, since they
; are ALTKEY no_rel as a separate hack (see n_n_compound notes).  So undo this
; constraint, and figure out something else for "there to be a bookcase".
; DPF 27-Nov-02 - Added MOD..KEY basic_nom_rel to exclude measure-NPs from
; being modified by rel clauses.
; DPF 28-Nov-02 - HOOK comes only from C-CONT: INDEX from MOD, LTOP from HDTR.
; DFP 15-Nov-03 - Removed PRD + default, since we now want to distinguish 
; non_wh_inf_subj relative clauses (which can appear as complements of 'be') 
; from the rest, ; so now make most relative clause types PRD -, and only the 
; above type PRD +.  Also removed PRD + constraint on n_adj_int_phrase's 
; non-hd dtr, in pursuit of same goal.

basic_rel_cl := sign &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verb &
                                [ VFORM fin_or_inf,
                                  INV -,
                                  TAM.MOOD strict_ind_or_mod_subj,
                                  MOD < [ LOCAL intersective_mod &
                                                [ CAT nbar_cat_min ] ] > ],
                           POSTHEAD +,
                           MC na ],
                     CONT.MSG no_msg,
                     CONJ cnil ],
             ROOT - ] ].

rel_cl := basic_rel_cl & clause.

; We prevent PP adjunct extraction from feeding thatless_rel rule by requiring
; that the gap be [ MOD < > ], to block "the man kim slept walks." To handle
; "I remember the time Kim fell" maybe we can make the words "time" and
; "place" take an S/PP complement, not treat them as thatless_rels.  Also, 
; to block "*Sandy likes the man walks" and "*Sandy likes the man who thinks 
; went home", we require the S/NP to be [ MC + ], which excludes subject
; extraction for that daughter.

; The dtr is required to be [MC +] in order to block subject-extracted S/NPs
; from being admitted as relative clauses.  This constraint would be removed
; for those dialects which accept examples like "There's a man wants to talk to
; you waiting outside."

; ERB (14-12-97) I am trying to get the non-finite ones to work and to
; have only one type that will make both "The man Kim likes" and "The
; man to talk to" (but not "The man to talk to Sandy".)  The new
; constraints are: on the head-dtr HEAD verb, VFORM fin_or_inf, and
; SUBJ list(pro).  I also need to make to_c_prop HEAD verb and 
; MC +.  The latter is because we want to require MC + of the head-dtr
; to exclude subject extraction as above, adn to exclude that-declaratives
; from being the head-dtr of this cx.  (To avoid a really ugly second
; parse for "The man that Kim likes.")

; ERB (14-12-97) to_c_prop doesn't have to be a verb.  non_wh_rel_cl
; can just say HEAD verbal -- that-decls will be ruled out because they
; are MC -.  To_c_prop has to be MC + anyway because we need the
; MC + on the head-dtr in order to bar subj extractions from this
; cx.

; ERB (19-01-98) MC + moved to appropriate subtype.  See notes below.

; ERB (19-01-98) Part of what's keeping to_c_prop from serving directly
; as a modifier without first building a non_wh_rel is that hadj requires
; SUBJ *olist* and pro_ss is OPT -.  This means that non_wh_rel_cl can't
; copy up the SUBJ requirement.  I don't know what exactly the constraints
; are on the other valence features, so I am just copying them up for now.
; (Previously all of VAL was identified.)
; DPF (21-Apr-98) Make SYNSEM.COMPS be < > on mother and *olist* on daughter.

; DPF (26-05-98) Added [MOD < [ NON-LOCAL.QUE 0-dlist] >] to the mother, to 
; block thatless relatives modifying WH-partitives, as in the unwanted NP 
; "how many books are t"

; DPF (06-Sept-98) Added reg_nom_rel constraint on MOD..KEY
; to avoid infinitival relatives modifying temporal nouns as in "we should 
; meet next week to celebrate".  
; DPF (27-Jan-99) Updated this to non_temp_nom_rel.
; DPF 09-Jan-00 - Added HEAD-DTR..MODIFIED notmod_or_rmod to block 
; adverb-initial relative clauses as in "The book apparently Sandy bought is 
; new"
; DPF 17-Mar-01 - Moved [ MOD..KEY non_temp_nom_rel ] to inf_non_wh_rel_cl rule
; only, since we want phrases like "the day he arrived".
; DPF 20-Mar-01 - Added MOD..MODIFIED notmod_or_lmod to prevent thatless-rels
; from modifying already-modified nominals, especially with a full relative
; clause: *the book that I bought you have is long"
; DPF 26-Mar-01 - But this is too strong, also blocking "the city in Germany I 
; wanted to visit was Berlin".  So instead use RPERIPH feature.
; DPF 11-Sept-01 - Added [MOD..SPR synsem] to block e.g. 'there to be arriving'
; DPF 24-Apr-03 - Also removed MOD..KEY non_temp_nom_rel from inf_non_wh_rel_cl
; since it prevents e.g. 'a good time to meet would be tomorrow'  We'll see 
; what it was blocking.

; (ERB 2003-08-08) Add a type for instrument infinitival relatives,
; like "the Fedex number to return my package.  These are similar
; to ordinary infinitival relatives, except that we need to hallucinate
; a SLASH value and a _with_p_rel, and make the index of the SLASH
; be the ARG2 of the _with_p_rel.  Since non_wh_rel_cl introduces
; a SLASH value, the new type can't inherit from it directly.  Add
; a supertype basic_non_wh_rel_cl that has the rest of the constraints
; from non_wh_rel_cl.  Hmmm... it seems that there might be no need
; for that slash value, as non_wh_rel_cl just takes the KEY and INDEX
; and zeros it out.  I have no idea what we'd put in for that KEY, and
; the INDEX can be identified with the ARG2 of the_with_p_rel.

; (ERB 2003-08-11) Move constraint on HOOK.LTOP down to daughters,
; since I'm having the instr_inf_non_wh_rel_cl introduce the prpstn_m_rel.

basic_non_wh_rel_cl := unary_phrase & rel_cl &
  [ SYNSEM [ LOCAL [ CAT [ HEAD [ VFORM #vform,
				  TAM #tam,
				  AUX #aux,
				  INV #inv,
				  MOD < [ NON-LOCAL.QUE 0-dlist,
                                          MODIFIED.RPERIPH na_or_- ] >,
                                  KEYS.KEY #key ],
			   VAL [ SUBJ < >,
				 SPR #spr,
				 COMPS < > ] ] ],
             NON-LOCAL [ SLASH 0-dlist,
                         REL 1-dlist ] ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD verbal &
					 [ VFORM #vform,
					   TAM #tam,
					   AUX #aux,
					   INV #inv,
                                           KEYS.KEY #key ],
				    VAL [ SPR #spr,
                                          COMPS *olist* ] ],
			      CONJ cnil ],
                      NON-LOCAL [ QUE 0-dlist,
				  REL 0-dlist ],
		      MODIFIED notmod_or_rmod ] ] > ].

non_wh_rel_cl := basic_non_wh_rel_cl &
  [ SYNSEM.LOCAL.CAT.HEAD [ MOD < [ LOCAL.CAT.HEAD.KEYS.KEY #mkey,
                                    --SEMIND #ind ] > ],
    C-CONT.HOOK.XARG #ind,
    ARGS < [ SYNSEM [ LOCAL.CONT.MSG message,
                      NON-LOCAL.SLASH 1-dlist &
                                [ LIST < [ CAT [ HEAD noun &
                                                      [ PRD -,
                                                        MOD < >,
                                                        KEYS.KEY #mkey ], 
                                                 VAL.COMPS < > ],
                                           AGR #ind,
                                           CONT.HOOK.INDEX #ind ] > ] ] ] > ].

; ERB (19-01-98) As much as it hurts, I don't think it is possible
; to avoid differentiating a inf and fin non_wh_rel_cl.  The facts of
; (Standard American) English seem to be that finite non-wh relatives
; do not allow extraction of the highest subject, but non-finite ones
; do:
;
; (1) Kim likes the book Sandy bought.
; (2) *Kim likes the person buys books.
; (3) Kim found a book to buy for Sandy.
; (4) Kim found a person to buy Sandy a book.
;
; A simple hack involving case won't work, because embedded subjects
; can be extracted in the finite case:
;
; (5) Sandy likes the program Kim thinks works.
;
; Another tack is to treat (3) and (4) above differently, where
; the to in (3) is to_c_prop and the to in (4) is to_c_nonprop.
; The motivation for this is that the former allows a discourse
; PRO interpretation, while the latter doesn't, so it is tempting
; to says that the latter doesn't involve PRO at all.  The idea is
; that to_c_prop builds a non_wh_rel which can then serve as a 
; modifier, while to_c_nonprop has a MOD value to start off with,
; and can be a modifier directly once it builds a hcomp.  To_c_nonprop
; would bind the index of its MOD value to that of its subject.
;
; However, this is unsatisfactory for several reasons.  First, the
; ones like (4), built with to_c_nonprop, have no message for the
; relative.  Second, since MOD is a head feature now, to_c_prop must
; also be MOD < nbar > .  Once this is true, there is no obvious way to
; keep it from serving directly as a modifier without building a
; non_wh_rel. Finally, we run into problems with lexical SLASH
; amalgamation.  Something has to be said about the subject value of
; to_c_nonprop, otherwise it runs the risk of having a non-terminated
; SLASH value.  However, on the one hand, to_c_nonprop is the to of
; raising constructions, so sometimes its SUBJ must be able to be
; canonical_synsem, and on the other, on this analysis, it can also
; head modifiers in which its SUBJ goes unexpressed.  To take care
; of the latter, something must be said in the lexical entry, but
; unexpressed is not compatible with canonical_synsem.
;
; The only other possibility I can see is to let the subject extraction
; apply lower, as in to [like Sandy] in [a person to like Sandy], but
; this requires letting subject extraction apply to base forms, which
; would most likely be a royal mess.
;
; In sum, given the facts of SAE and the rest of the grammar as
; it is, (3) and (4) must be built with the same to.  In (3) there
; is an extracted complement and in (4) there is an extracted 
; subject.  In the case of infinitival non_wh_rels, the grammar
; doesn't care.  In the case of finite ones, it does.
;
; DPF 10-dec-03 - Restricted MOD nbar-synsem to QUE 0-dlist, to block in-situ
; wh-modifiers preceding thatless relatives like 'a friend of whom I approved' 

fin_non_wh_rel_cl := non_wh_rel_cl &
  [ SYNSEM.LOCAL.CAT.HEAD.PRD -,
    ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD verb &
                                       [ VFORM fin,
                                         MOD < [ LOCAL.CAT nbar_cat_min,
                                                 NON-LOCAL.QUE 0-dlist ] > ],
                                  VAL.SUBJ < anti_synsem >,
                                  MC + ],
                            CONT.HOOK [ LTOP #ltop,
                                        INDEX.E.TENSE real_tense ] ] ] >,
    C-CONT [ HOOK.LTOP #ltop,
             RELS <! !>,
	     HCONS <! !> ] ].

basic_inf_non_wh_rel_cl := non_wh_rel_cl &
  [ ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD comp & [ VFORM inf ],
                                  VAL.SUBJ *prolist* ],
                            CONT.MSG message ] ] >,
    C-CONT.HCONS <! !> ].

inf_non_wh_rel_cl := basic_inf_non_wh_rel_cl &
  [ SYNSEM.LOCAL.CAT.HEAD.PRD -,
    ARGS < [ SYNSEM.LOCAL [ CAT.VAL.SUBJ *procons*,
                            CONT.HOOK.LTOP #ltop ] ] >,
    C-CONT [ HOOK.LTOP #ltop,
             RELS <! !> ] ].

; DPF 26-Nov-03 - Added MODIFIED notmod_or_rmod to enable blocking of spurious
; analysis for purposive "kim is probably to remain"

inf_non_wh_subj_rel_cl := basic_inf_non_wh_rel_cl &
  [ ARGS < [ SYNSEM [ LOCAL [ CAT.VAL.SUBJ < >,
                              CONT.HOOK.LTOP #vpltop ],
                      MODIFIED notmod_or_rmod ] ] >,
    C-CONT [ HOOK.LTOP #ltop,
             RELS <! basic_arg1_relation &
                     [ LBL #ltop,
                       PRED expected_inf_rel,
                       ARG1 #vpltop ] !> ] ].

; (ERB 2003-08-08) Type for instrumental infinitival relative clauses.
; See notes at basic_non_wh_rel_cl above.  Consider adding a type
; to capture similarities between constraints on this type and 
; inf_non_wh_rel_cl.

; (ERB 2003-08-08) Switch to nonprop to phrases so that I can still
; get at the handle for the verb relation within the clause (which
; should be the ARG1 of the with_p_rel).  The other options (using
; to_c_prop_le) were to cheat and get that handle through the KEY
; (illegal per the alegbra) or to introduce a slash value on the
; VP (?), which raises the problem of keeping those VP/NPs out of
; every other context.  
;
; This requires also switching from *prolist* to < synsem > as
; the constraint on the SUBJ of the daughter.  Maybe need to
; constrain NON-LOCAL values of this synsem?  -- that seemed
; to reduce supurious ambiguity some.
;
; Indeed, I need to make it < unexpressed > in order to constrain
; the NON-LOCAL values properly and keep the elided to out of this
; construction.

instr_inf_non_wh_rel_cl := basic_non_wh_rel_cl &
  [ SYNSEM.LOCAL.CAT.HEAD [ PRD -,
                            MOD < [ --SEMIND #index ] > ],
    ARGS < [ SYNSEM phr_synsem &
                    [ LOCAL [ CAT [ HEAD comp & [ VFORM inf ],
				    VAL.SUBJ < unexpressed_reg > ],
			      CONT [ HOOK [ LTOP #handle,
                                            INDEX #event,
                                            XARG #xarg ],
                                     MSG no_msg ] ],
                      NON-LOCAL.SLASH 0-dlist ] ] >,
    C-CONT [ HOOK [ LTOP #ltop,
                    XARG #xarg ],
             RELS <! message & 
		   [ LBL #ltop,
                     PRED prpstn_m_rel,
		     MARG #marg ],
                   prep_relation &
		   [ LBL #handle,
                     PRED with_p_rel,
		     ARG1 #event,
		     ARG2 #index ] !>,
	     HCONS <! qeq &
		    [ HARG #marg,
		      LARG #handle ] !> ] ].

; DPF 2-Jul-02 - Added MOD..RPERIPH - to block analysis of "Abrams hired"
; while allowing "anyone hired"

red_rel_cl := unary_phrase & basic_rel_cl &
  [ SYNSEM [ LOCAL [ CAT [ HEAD [ MOD < [ MODIFIED.RPERIPH -,
                                          --SEMIND #ind ] >,
                                  PRD -,
                                  KEYS.KEY #key ],
                           VAL [ SUBJ < >,
                                 SPR < >,
                                 COMPS < > ] ],
                     CONJ cnil ],
             NON-LOCAL [ SLASH 0-dlist,
                         REL 1-dlist,
                         QUE 0-dlist ],
             LEX #lex ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD verbal &
					 [ VFORM non_fin,
					   PRD +,
                                           KEYS.KEY #key ],
                                    VAL [ SUBJ < unexpressed_reg >,
                                          COMPS *olist* ] ],
			      CONT [ HOOK [ LTOP #vpltop,
                                            INDEX.E [ TENSE no_tense,
                                                      ASPECT.PERF - ],
                                            XARG #ind ],
                                     MSG no_msg ],
			      CONJ cnil ],
                      NON-LOCAL [ SLASH 0-dlist,
                                  QUE 0-dlist,
				  REL 0-dlist ],
		      MODIFIED notmod_or_rmod,
                      LEX #lex ] ] >,
    C-CONT [ HOOK [ LTOP #ltop,
                    XARG #ind ],
             RELS <! message &
                     [ LBL #ltop,
                       PRED prpstn_m_rel,
                       MARG #marg ] !>,
             HCONS <! qeq & [ HARG #marg,
                              LARG #vpltop ] !> ] ].

; DPF 26-jun-03 - Added rule for making participial phrases into virtual
; subordinate phrases, as in "kim arrived devouring chocolate' analogous to 
; "Kim arrived while devouring chocolate"
; For now, exclude passives using VFORM: too much annoying ambiguity for 
; too little value.
; DPF 10-dec-03 - Tried restricting the  mother to POSTHEAD +, but this loses
; 'looking at Abrams, kim smiled" - would like to disallow pre-VP modification,
; but not yet clear how to do that.

subconj_vp_phr := unary_phrase &
  [ SYNSEM basic_subconj_synsem &
           [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.AGR #xarg ] >,
                           VAL.COMPS < > ],
                     CONJ #conj ],
             NON-LOCAL [ SLASH 0-dlist,
                         REL 0-dlist,
                         QUE 0-dlist ],
             LEX #lex ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD verb &
					 [ VFORM prp,
					   PRD +,
                                           TAM.TENSE no_tense ],
				    VAL [ SUBJ < unexpressed_reg >,
                                          COMPS *olist* ] ],
                              CONT [ HOOK [ LTOP #vpltop,
                                            XARG #xarg ],
                                     MSG no_msg ],
			      CONJ cnil & #conj ],
		      NON-LOCAL [ SLASH 0-dlist,
                                  QUE 0-dlist,
				  REL 0-dlist ],
                      LEX #lex ] ] >,
    C-CONT [ RELS <! relation &
                     [ PRED "subord_rel" ], 
                     relation !>,
             HCONS <! qeq, qeq & [ LARG #vpltop ], qeq !> ] ].


; The version of the Non-local Feature Principle here assumes that there will
; only be one value on the SLASH list.  To handle multiple gaps, we'll need
; more general set-manipulation functions.  This version also doesn't use a
; distinction between INHERITED and TO-BIND non-local features.  Instead, it
; treats non-local features like valence features.

; ERB (17-10-96) in order to get "Kim knows who to ask" under the current
; hacks (i.e., no PRO), I need a head_filler_phrase that takes something like
; "to ask" (i.e., VFORM in, SUBJ nomp) as its head.  So I am making a
; separate parallel type that will only be inherited by the embedded wh
; nonfinite questions.

; N.B. Since all head_filler constructions inherit from type clause, which
; inherits from head_compositional, this type does not (though it could,
; redundantly).

; Added [ SUBJ *prolist* ] constraint to NON-HEAD-DTR, to ensure termination
; of the QUE and REL attributes now that we're doing lexical threading, and
; PPs (among others) wouldn't otherwise know if they were QUE empty or not.
;
; (DPF 23-Aug-98) But if we make thie SUBJ *prolist*, then we can't get 
; extraction of raising predicates, as in "how does Kim look", since the
; subject of the "how" adjective is identified with that of "look".  Hence
; we move this constraint to the extracted-adjunct rule, since it seems to
; hold true for adjuncts, but not for complements.
; DPF 23-Sept-99 - Made mother be POSTHEAD +, to avoid clauses as prenominal
; modifiers.
; DPF 11-Dec-00 - Removed SPR <> from mother, to allow sentence-initial PP
; modifiers for WH-questions.
; DPF 03-nov-03 - Moved SPR < anti_synsem > to head_filler_phrase so it does
; not hold for relative clause head-filler phrases, to block analysis for e.g.
; 'when we arrive in Berlin' as RELS+PP.

basic_head_filler_phrase := basic_binary_phrase & phrasal &
  [ INFLECTED +,
    SYNSEM [ LOCAL [ CAT [ VAL.COMPS < >,
			   POSTHEAD + ],
		     CONJ cnil ],
	     NON-LOCAL.SLASH 0-dlist ],
    ARGS < [ INFLECTED +,
             SYNSEM [ LOCAL #slash & local &
			    [ CAT.VAL [ SUBJ *prolist*,
					COMPS *olist*,
					SPR *olist* ],
			      CTXT.ACTIVATED + ],
		      NON-LOCAL.SLASH 0-dlist ] ],
	   [ INFLECTED +,
             SYNSEM [ LOCAL.CAT [ HEAD verbal,
				  VAL.COMPS *olist* ],
		      NON-LOCAL [ SLASH 1-dlist &
					[ LIST [ FIRST #slash,
						 REST < > & #last ],
					  LAST #last ],
				  QUE 0-dlist,
				  REL 0-dlist ] ] ] > ].


head_filler_phrase := basic_head_filler_phrase & head_final &
		      head_nexus_que_phrase &
  [ SYNSEM.LOCAL.CAT.VAL.SPR < anti_synsem > ].

basic_head_filler_phrase_fin := head_filler_phrase &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ *olist* & < anti_synsem >,
    HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD verb & [ VFORM fin_or_imp,
                                              TAM.TENSE real_tense ],
				VAL.SUBJ *olist* ] ].

head_filler_phrase_fin := basic_head_filler_phrase_fin & head_final_infl &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.VFORM fin ].

head_filler_phrase_inf := head_filler_phrase & head_final_infl &
  [ HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD verbal & [ VFORM inf ],
                            CONT.MSG message & [ PRED propositional_m_rel ]]].

; N.B. Since all head_subj_phrase constructions inherit from type clause,
; which inherits from head_compositional, this type does not (though it could,
; redundantly).
;
; 1-May-96 (DPF) Restricted head to be verb only, to block spurious parses
; where NP modifed by PP was also analyzed as its subject.
; 12-Jun-96 (RPM) Allow verbal gerunds to head head/subj phrases.
; DPF (28-Apr-99) Added INV - to head-dtr, since most auxiliary verbs are
; underspecified for INV.
;  
; DPF 27-May-99 - Constrained subj to be unslashed, in order to block, e.g.
; "the consultant that kim hired slept fell".
; DPF 23-Sept-99 - Made mother be POSTHEAD +, to avoid clauses as prenominal
; modifiers.
; DPF 26-Jan-01 - Changed HEAD.INV + to HEAD.INV +* to allow for coordination
; of inverted and non-inverted sentences.  Worry that this swap has been made
; before, but next time we'll know why.
; DPF 2-Feb-01 - Changed SPR of mother to *olist*, to allow coordination with
; head-filler phrases which are [ SPR < anti_synsem > ].
; DPF 20-Oct-01 - Changed SUBJ of mother to *olist*, to allow coordination with
; imperatives which are SUBJ *olist* so they can coordinate with interrogs.

head_subj_phrase := head_nexus_rel_phrase & head_final_infl &
  [ SYNSEM.LOCAL [ CAT.VAL [ COMPS < >,
                             SPR #spr,
                             SPEC #spec ],
		   CONJ cnil ],
    HEAD-DTR.SYNSEM.LOCAL.CAT [ VAL [ SUBJ < #synsem >,
                                      SPR #spr,
                                      COMPS *olist*,
                                      SPEC #spec ],
                                MC na ],
    NON-HEAD-DTR.SYNSEM #synsem & canonical_synsem &
		 [ LOCAL [ CAT [ HEAD subst,
				 VAL [ SUBJ *olist*,
				       COMPS *olist*,
				       SPR *olist* ] ] ],
		   NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
			       REL 0-dlist ] ] ].

; A head/comps phrase is a phrase that combines a head with something selected
; for by the COMPS feature.  Head/comps phrases come in two denominations:
; head/comp phrases and head/marker phrases.  A head/comp phrases is like the
; usual VP rule, and its head (and therefore the whole phrase) must be CONJ
; cnil.  A head/comp phrase is unmarked for MC, but will inherit a MC
; specification from its head daughter.  Head/marker phrases takes the place
; of the P&S94 head/marker rule.  The head must be lexical (i.e., of type
; "word") and CONJ non-cnil. 
;
; DPF 10-Aug-99 - Moved the propagation of ALTKEY from head_marker-phrase up to
; head_comp_or_marker_phrase.
; DPF 2-Jun-02 - Added HS-LEX -* (see discussion of HS-LEX): needed to distinguish
; "*the children very angry arrived" from "the children very angry at kim arrived"
; DPF 23-Apr-03 - Added propagation of MODIFIED value from head to mother,
; reminded by spurious ambiguity for "thirty twenty-two chairs arrive"
; DPF 13-Oct-03 - Removed HS-LEX - from mother, since it prevented coordination
; of adjectives, which are HS-LEX +

head_comp_or_marker_phrase := head_valence_phrase & head_compositional &
			      head_initial &
  [ SYNSEM canonical_synsem &
	   [ LOCAL [ CAT [ MC #mc,
			   VAL [ SUBJ #subj,
				 COMPS #comps,
				 SPR #spr,
                                 SPEC #spec ] ],
                     CONT.MSG #hmsg ],
             MODIFIED #modif ],
    HEAD-DTR.SYNSEM [ LOCAL [ CAT [ MC #mc,
                                    VAL [ SUBJ #subj,
                                          COMPS < #synsem . #comps >,
                                          SPR #spr,
                                          SPEC #spec ] ],
                              CONT.MSG #hmsg ],
                      MODIFIED #modif ],
    NON-HEAD-DTR.SYNSEM #synsem & canonical_synsem ].

; ERB (03-10-96) hcomp_nc is no longer marked as non-clause because some of them
; are "clauses" in the sense of having a message (e.g., "Kim wants [to leave]").
; This is actually in need of revision: we are probably going to need to 
; distinguish between to-headed hcomp_ncs which are selected by equi predicates 
; or otherwise have PRO subjects and whether-headed hcomp_ncs on the one hand, 
; and all other instances on the other with a restriction equivalent to SUBJ 
; list(PRO) in order to block "To rain is difficult" etc.  I think this should 
; be possible without resorting to anything like VFORM whether to identify cases
; -- see Ivan's interrogatives paper.

; ERB (05-10-97) In order for one single hcomp rule to build things like "how
; about on Friday", the restriction HEAD subst needs to be removed from this
; rule, or else root-marker needs to inherit from subst.  I am opting for the
; former.

; DPF (25-Aug-98) The head_comp_phrase is not marked POSTHEAD + since we want to
; build "twenty-one" using this rule, but still allow it to serve as a
; prenominal modifier  as in "twenty-one books".  So instead we use the PRED
; feature to distinguish prenominal from postnominal modifiers, and conspire to
; make all PRED - entries have an empty COMPS list.  
; DPF 01-Feb-03 - Generalized CONJ value to cnil_or_numconj, to allow this
; rule to build "and three" as in "two hundred and three".
; DPF 10-dec-03 - But now the hmarkatom rule is taking care of these guys.

head_comp_phrase := head_comp_or_marker_phrase & head_initial_infl &
  [ SYNSEM [ LOCAL [ CAT.POSTHEAD #ph,
		     CONJ cnil ],
	     LEX #lex ],
    HEAD-DTR [ SYNSEM.LOCAL.CAT [ POSTHEAD #ph,
                                  HC-LEX #lex ] ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ] ].


basic_head_marker_phrase := head_comp_or_marker_phrase &
  [ SYNSEM [ LOCAL [ CAT [ HC-LEX #hclex,
                           HS-LEX #hslex ],
                     CONJ strict-conj ],
	     NON-LOCAL #nonlocal,
	     LEX #lex ],
    HEAD-DTR word_or_lexrule,
    NON-HEAD-DTR.SYNSEM [ LOCAL.CAT [ HC-LEX #hclex,
                                      HS-LEX #hslex ],
                          NON-LOCAL #nonlocal,
                          LEX #lex ] ].

head_marker_phrase := basic_head_marker_phrase &
  [ SYNSEM.LOCAL.CONJ.CREL #rel,
    HEAD-DTR.SYNSEM.LOCAL.CONJ.CREL #rel ].

head_marker_phrase_event := head_marker_phrase & head_initial_infl &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX conj_event,
    HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD subst,
                                  VAL.COMPS < [ ROOT #root ], ... > ],
                            CONJ.CREL [ R-HNDL #rhand,
                                        R-INDEX #ind ],
                            CONJ complex-conj ],
    NON-HEAD-DTR.SYNSEM [ LOCAL [ CAT.HEAD subst &
                                       [ KEYS.KEY event_or_degree_or_no_rel ],
                                  CONT.HOOK [ LTOP #rhand,
                                              INDEX #ind ] ],
                          ROOT #root ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ] ].
    
; DPF 6-Dec-02 - Added ident. of HEAD-DTR..KEY.R-INDEX with NHD..INDEX
; here in the construction since nouns can no longer identify their E-INDEX
; with their INDEX (which was wrong anyway, since the E-INDEX should be of
; type event).  A related re-entrancy appears for the left daughter in the
; nom_coord_rule definition.

basic_head_marker_phrase_nom := head_marker_phrase &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX conj_non_expl-ind & [ PNG #png ],
                   AGR [ PNG #png,
                         DIVISIBLE #div ] ],
    HEAD-DTR.SYNSEM.LOCAL [ AGR [ PNG #png,
                                  DIVISIBLE #div ],
                            CONJ complex-conj & [ CREL.R-INDEX #ind ] ],
    NON-HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD supnoun,
                                CONT.HOOK.INDEX #ind & ref-ind ] ].

head_marker_phrase_nbar := basic_head_marker_phrase_nom &
  [ INFLECTED #infl,
    HEAD-DTR [ INFLECTED +,
               ROBUST #robust ],
    NON-HEAD-DTR [ INFLECTED #infl,
                   SYNSEM.LOCAL [ CAT [ HEAD noun,
                                        VAL.SPR < synsem > ],
                                  CONT.HOOK [ LTOP #ltop,
                                              INDEX #ind ] ],
                   ROBUST #robust ],
    C-CONT [ RELS <! [ PRED udef_q_rel,
                       ARG0 #ind,
                       RSTR #rstr ] !>,
	     HCONS <! qeq & [ HARG #rstr,
                              LARG #ltop ] !> ],
    ROBUST #robust ].

head_marker_phrase_nom := basic_head_marker_phrase_nom & head_initial_infl &
  [ NON-HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SPR < >,
    C-CONT [ RELS <! !>,
	     HCONS <! !> ] ].

; For 'both', 'neither', etc.
head_marker_phrase_atomic := basic_head_marker_phrase & head_initial_infl &
  [ HEAD-DTR.SYNSEM.LOCAL.CONJ strict-atomic-conj,
    C-CONT [ RELS <! !>,
	     HCONS <! !> ] ].


; Skip an optional complement as long as there is still another obligatory
; complement on the list (here assumed to be the second complement, since it's
; hard and perhaps unnecessary to allow the obligatory one to appear in an
; arbitrary position).
; DPF (27-Apr-99) Note that this formulation unfortunately does not get
; "Kim bet Abrams won" with the first two optional complements missing, since
; the rule forces the complement after the omitted one to be expressed.
; DPF 7-Apr-01 - Added MC reentrant with head-dtr's MC value.
; DPF 7-Apr-01 - Removed POSTHEAD + since it prevented pre_S if-clauses.
; DPF 22-May-01 - Instead, pass up POSTHEAD from dtr to mother.
; DPF 18-Dec-01 - Moved ALTKEY identity from this type to the non-noun 
; subtypes, to allow noun-opt-comp to override, in order to prevent n-n-cmpnd
; from feeding that rule, while allowing that rule to feed n-n-cmpnd.
; DPF 2-June-2 - Moved ALTKEY identity back since have better mechanism for
; blocking the above feeding relationship for compounds.

basic_head_opt_comp_phrase := head_valence_phrase & basic_unary_phrase & 
                              head_compositional &
  [ INFLECTED #infl,
    POSSCL #posscl,
    SYNSEM canonical_synsem &
	   [ LOCAL [ CAT [ VAL [ SUBJ #subj,
				 SPR #spr,
                                 SPEC #spec ],
                           MC #mc,
                           POSTHEAD #ph,
                           HS-LEX #hslex ],
                     CONJ cnil,
                     CONT.MSG #msg ],
             MODIFIED #mod ],
    HEAD-DTR #head & 
           [ INFLECTED #infl,
             POSSCL #posscl,
             SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ #subj,
					  SPR #spr,
                                          SPEC #spec ],
                                    MC #mc,
                                    POSTHEAD #ph,
                                    HS-LEX #hslex ],
                              CONT.MSG #msg ],
                      MODIFIED #mod ],
             ROBUST #robust ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ],
    ARGS < #head >,
    ROBUST #robust ].

head_opt_comp_phrase := basic_head_opt_comp_phrase &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS #comps,
    HEAD-DTR [ INFLECTED +,
               SYNSEM.LOCAL [ CAT [ HEAD.KEYS.KEY event_rel,
                                    VAL.COMPS 
                                     < unexpressed & [ OPT + ]
                                       . #comps & < expressed_synsem, ... > >
                                    ] ] ] ].

head_opt_two_comp_phrase := basic_head_opt_comp_phrase &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS #comps,
    HEAD-DTR [ INFLECTED +,
               SYNSEM.LOCAL [ CAT [ HEAD.KEYS.KEY event_rel,
                                    VAL.COMPS 
                                < unexpressed & [ OPT + ]
                                  . < unexpressed & [ OPT + ]
                                      . #comps & < expressed_synsem, ... > > >
                                    ] ] ] ].

; DPF 21-Mar-01 - Removed SPR..KEY quant_or_wh_rel since this blocked pumping
; for partitives, as in "very little arrived"
; Changed HEAD from noun to n_or_p for "worth"
; DPF 3-Jun-02 - Constraint of lex_synsem on dtr prevents noun-noun-cmpnds
; from undergoing this rule, to avoid spurious ambiguity for e.g. "book cover",
; forcing noptcomp to apply before compounding.  Identify ALTKEY of mother and
; dtr to block e.g. "*the almost all books arrive" (and then move this identity
; back up to parent opt_comp phrase type).
; DPF 9-Oct-02 - Added re-entrancy of LEX on mother and dtr in order to allow
; n_hour_le's to be unmarked for synsem type, but propagate their (unusual)
; [LEX -*] specification to block "an eleven meeting" but still allow "an 
; eleven pm meeting".

noun_opt_comp_phrase := basic_head_opt_comp_phrase &
  [ SYNSEM basic_lex_synsem &
           [ LOCAL.CAT.VAL.COMPS #comps,
             LEX #lex ],
    HEAD-DTR [ SYNSEM basic_lex_synsem &
                  [ LOCAL.CAT 
                          [ HEAD n_or_p,
                            VAL.COMPS 
                                 < [ OPT +,
                                     NON-LOCAL 
                                         [ SLASH 0-dlist,
                                           QUE 0-dlist,
                                           REL 0-dlist ] ] . #comps > ],
                    LEX #lex ] ] ].

; ERB (19-01-98) If to_c_prop can undergo subject extraction (see notes
; near non_wh_rel) then this can't require HEAD v_or_p.  That constraint
; will be moved to extracted_comp_phrase.  Extrasubj will say 
; HEAD verbal.
; DPF 10-Jun-99 Changed SYNSEM..MOOD from indicative to ind_or_mod_subj, since
; we weren't getting "Abrams would have hired Browne"
; DPF 26-Nov-03 - Identified MODIFIED value of mother and daughter, to preserve
; e.g. whether a VP has been pre-modified so we can still block "probably to
; remain" as the spurious analysis of purposive infinitival in "Kim is 
; probably to win"

extracted_arg_phrase := head_valence_phrase & head_only &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.TAM.MOOD ind_or_mod_subj,
			   HC-LEX - ],
                     CONT [ HOOK.INDEX.--TPC +,
			    MSG.TPC #ind ],
		     CONJ cnil ],
	     LEX -,
             MODIFIED #modif ],
    HEAD-DTR.SYNSEM [ LOCAL.CONJ cnil,
                      MODIFIED #modif,
                      NON-LOCAL.SLASH.LIST.FIRST.CONT.HOOK.INDEX #ind ] ].

; DPF (28-Apr-99) Added identity of MSG for mother and head-dtr, since it
; wasn't being propagated.

; *** We still need special extraction rules for fronting CPs and VPs.

extracted_comp_phrase := extracted_arg_phrase & head_compositional &
  [ SYNSEM canonical_synsem &
	   [ LOCAL [ CAT [ VAL [ SUBJ #subj,
				 SPR #spr,
				 COMPS #comps ],
			   MC #mc ],
                     CONT.MSG #msg ],
	     LEX #lex ],
    HEAD-DTR [ SYNSEM 
	       [ LOCAL [ CAT [ HEAD v_or_g_or_p,
			       VAL [ SUBJ #subj,
				     SPR #spr,
				     COMPS < gap &
					     [ LOCAL [ CAT.HEAD mobile,
                                                       CONT.HOOK.INDEX #ind ],
                                               --SEMIND #ind & non_expl,
					       NON-LOCAL.SLASH #slash ]
					     . #comps > ],
			       MC #mc,
			       HC-LEX #lex ],
                         CONT.MSG #msg ],
		 NON-LOCAL.SLASH #slash ] ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ] ].

; Assume only finite clauses have explicit subjects that can be extracted, and
; restrict these to indicative verbs (not subjunctives). 

; ERB (19-01-98) We are assuming that there is subject extraction
; in "just the teacher [to talk to Sandy]" so the VFORM must be 
; loosened here.  See notes near non_wh_rel.  Also, HEAD verbal.
; What's to block whether from undergoing subject extraction?
; (cf. *Sandy Kim knows whether to elect Clinton president.)
; DPF (27-Apr-98) Made HEAD-DTR..HEAD be strict_type to block non-verbal heads
; from unifying (e.g. "red")
; DPF (1-Apr-99) Made mother be SPR < > to block spurious modification by PPs.

extracted_subj_phrase := extracted_arg_phrase &
  [ SYNSEM.LOCAL.CAT [ HEAD.TAM ind_or_mod_subj_tam,
                       VAL [ SUBJ < >,
                             SPR < >,
                             COMPS < > ],
                       MC - ],
    HEAD-DTR.SYNSEM 
             [ LOCAL.CAT [ HEAD verbal & [ VFORM fin_or_inf ],
                           VAL [ SUBJ < gap &
                                        [ LOCAL #local &
                                                [ CONT.HOOK.INDEX #ind ],
                                          --SEMIND #ind & ref-ind ] >,
                                 COMPS *olist* ],
                           MC na ],
               NON-LOCAL.SLASH.LIST < #local > ] ].

; DPF 28-Nov-02 - HOOK comes only from C-CONT in decl, since it introduces
; a message.
; DPF 12-Nov-03 - Experimentally, make the XARG of this phrase be the LTOP
; of the head-dtr, in order to support "on Tuesday who arrived" where the
; PP should share the handle of the VP (as if it had been extracted).

extracted_subj_phrase_fin := extracted_subj_phrase & decl &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG #ltop,
    HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD.VFORM fin,
                                  VAL.SUBJ < [ LOCAL.CAT.HEAD.CASE nom ] > ],
                            CONT [ HOOK.LTOP #ltop,
                                   MSG no_msg ] ] ].

extracted_subj_phrase_inf := extracted_subj_phrase & head_compositional &
  [ HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD.VFORM inf,
                            CONT.MSG message ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ] ].


; For specifiers of nouns (det and non-det), adjectives and prepositions.
; Also for specifiers of determiners, as in "almost all".  Needs to be modified
; to also allow "exactly which books".
; DPF 3-Oct-99 - Added rentrancy for hd-dtr's HEAD value and the SPEC..HEAD of
; the non-hd-dtr, to allow e.g. the degree-specifier "that" to appear with
; adverbees but not PPs.
; DPF 10-Feb-01 - Changed mother's ALTKEY to come from head-dtr rather than
; nonhead-dtr, in order to get right semantics for "Kim 's" of "Kim's book".
; Couldn't find the reason (if any) why we were getting it from the nonhead.
; DPF 16-Oct-01 - The reason we need it from the head is compositional 
; numerals, where the ALTKEY of the head contains the 'highest' rel (often 
; times_rel or plus_rel).
; DPF 13-May-01 - Changed HEAD-DTR..COMPS < > back to *olist*, since adj's
; cannot always discharge their optional complement (especially since that
; would mean the pred-copula would have to require its complement to be
; COMPS < >, which means VP's would have to always discharge theirs, which
; would eliminate the utility of the *olist* in general.
; DPF 17-Dec-01 - Made POSTHEAD of mother be determined by specifier dtr,
; in order to get contrast of "*every book very old was sold" and "every book
; less than six months old was sold"
; DPF 2-Jun-02 - Removed parent "phrasal" since the LEX feature of head-spec
; phrases is now determined by the feature HS-LEX of head-dtr, analogous to
; HC-LEX feature.  See introduction of HS-LEX in fundamentals.tdl.
; DPF 24-Apr-03 - Why is head-dtr [MC na]?  This prevents e.g. "I went just to
; see kim".  Also blocks "I arrived two weeks after kim left".  Remove, and
; see what happens.

basic_head_spec_phrase := head_valence_phrase & head_final &
  [ INFLECTED +,
    SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ #subj,
                                 COMPS #spcomps,
                                 SPR #spr ],
                           MC na,
                           POSTHEAD #ph ],
                     CONT.MSG #msg ],
	     MODIFIED #modif,
             LEX #lex ],
    HEAD-DTR [ INFLECTED +,
               SYNSEM [ LOCAL [ CAT [ HEAD #head,
                                      VAL [ SUBJ #subj,
                                            COMPS *olist* & #comps,
                                            SPR < #synsem & 
                                                canonical_synsem . #spr > ],
                                      HS-LEX #lex,
                                      POSTHEAD #hdph ],
                                CONT [ HOOK #hdhook,
                                       MSG #msg ],
                                CONJ cnil ],
                      MODIFIED #hmodif,
                      PHON #phon,
                      --SEMIND #semind ],
               ROBUST #robust ],
    NON-HEAD-DTR [ SYNSEM #synsem &
                   [ LOCAL [ CAT [ VAL 
                                   [ SPEC < [ LOCAL [ CAT [ HEAD #head,
                                                            VAL.COMPS #comps,
                                                            POSTHEAD #hdph ],
                                                      CONT.HOOK #hdhook ],
                                              MODIFIED #hmodif,
                                              PHON #phon,
                                              --SEMIND #semind ] >,
                                     COMPS #spcomps ],
                                   POSTHEAD #ph ] ],
                     MODIFIED #modif ],
                   ROBUST #robust ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ],
    ROBUST #robust ].

; DPF 15-Sept-03 - Added NON-HEAD-DTR.MOD < > to exclude numbers

head_spec_phrase := basic_head_spec_phrase &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC #spec,
    HEAD-DTR.SYNSEM.LOCAL.CAT.VAL [ COMPS < >,
                                    SPEC #spec ],
    NON-HEAD-DTR.SYNSEM.LOCAL 
                    [ CAT [ HEAD.MOD < >,
                            VAL.SPEC < synsem &
                                       [ LOCAL.CAT.HEAD noun_or_nomger ] >,
                            MC na ],                                   
                      CONT.HOOK #hook & [ INDEX individual_min,
					  XARG handle ] ],
    C-CONT.HOOK #hook ].

; For numbers and degree specifiers
head_spec_hc_phrase := basic_head_spec_phrase & head_compositional &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC #spec,
    HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SPEC #spec,
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS.KEY num_or_nom_or_degree_rel ].

; The SYNSEM value of the head of a head/modifier phrase is token-identical to
; the MOD value of the adjunct daughter.  Additionally, the adjunct daughter
; must be complement-saturated.  The SLASH value is not set in the basic
; schema, but rather in each of the subtypes: in head_mod_phrase_simple the
; SLASH value is passed up from both daughters, but in the
; extracted_adj_phrase the SLASH value of the mother is effectively the
; adjunct that would have modified the head.
; 
; DPF (6-Sept-98) Constrained HEAD-DTR to have empty QUE as well as REL, to 
; block adverbs modifying "how", "where", etc.  
; DPF (4-Mar-99) But this unfortunately also blocks "which consultant who fell"
; since making "consultant" be QUE empty means via lexical threading that its
; specifier must also be QUE empty.  So we would have to find some other way of
; blocking modifiers of "where" etc, but perhaps the generalization is wrong
; anyway; consider "right where", "exactly when" "just how".

; DPF 25-Aug-99 - Removed CONJ cnil from HEAD-DTR, to allow "oh, and your name"
; DPF 6-Apr-01 - Mysteriously, it seems that we have not been copying up ALTKEY
; from head-dtr to mother for head-mod phrases.  It showed up in failure to 
; notice that "first seven" had a non-empty ALTKEY, which was intended to 
; block this as left member of n-n-compound.

;; DPF 10-Feb-01 - Removed REL 0-dlist from head-dtr, since (a) head-nexus 
;; phrases pass the REL value from the head dtr to the mother; and (b) this 
;; was blocking e.g. "the chair whose first three legs fell off arrived" 
;; where the adj-N construction forces REL 0-dlist rather than passing up the 
;; spr's REL.
; DPF 2-Jun-02 - Added HS-LEX - (see discussion of HS-LEX) - needed if want to 
; distinguish "*the children singing are famous" from "the children singing in
; Berlin are famous" - may not be desirable.
; DPF 30-Apr-03 - The reentrancy of E-INDEX in head-dtr and C-CONT is dubious
; at best, and gives rise to the odd result that in "Kim sleeps in Berlin"
; both the ARG0 and the ARG1 attributes of the _in_rel are identified.  This
; looks like a possible violation at least in spirit of the semantic algebra,
; so why is it here?  More research is needed.
; DPF 25-Jun-03 - Restored [CONJ cnil] on mother (cf 25-Aug-99), since don't
; want "and Browne hired" as a head-adj constituent.

head_mod_phrase := head_nexus_rel_phrase &
  [ SYNSEM [ LOCAL [ CAT [ VAL [ SUBJ #subj,
                                 SPR #spr ],
                           HS-LEX - ],
                     CONJ cnil ],
	     MODIFIED hasmod ],
    HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD.KEYS.KEY independent_rel,
                                VAL [ SUBJ #subj,
                                      SPR #spr,
                                      COMPS *olist* ] ] ].

; Added restriction on adjunct's specifier to prevent unsaturated nouns
; (like 'afternoon') from serving as modifiers before they pick up their
; specifiers.

; head_mod_phrase_simple takes the MSG value from its non-head dtr's 
; MSG.  Most modifiers identify their message with their
; modifiee's message, but tags don't.  (Modifiers cannot simply identify their
; own message with that of their modifiee, since some signs (like "not")
; can be either a modifier or an argument, and hence need a message value 
; independent of that of their modifiee.

; SLASH of mother is append of SLASH lists for the two daughters.  In principle
; this allows distinct slash values on the two daughters, without enforcing
; parasitic gaps.  So we restrict the LIST.REST value of SLASH on the mother to
; be the empty list -- a hack which works in PAGE since not strictly typed, but 
; what we really want to say is that SLASH on the mother is either a singleton 
; list, or the empty list.

;; 15-Jun-98 Removed this hack, since it doesn't work in the LKB, and is wrong
;; anyway, failing to generalize to e.g. head-complement structures, which
;; present the same problem of distinct SLASH values coming from each of the
;; two daughters.

;; Removed identification of hddtr's MSG with mother's - wrong for tags,
;; at least.  Should be handled independently by each modifier.

;; DPF 26-Feb-99 - Added [ KEY independent_rel] to NON-HEAD-DTR to distinguish
;; modifier phrases from verb-particle constructions, where the particle's
;; KEY is specialized to a subtype of 'selected_rel'.

;; DPF 7-Apr-99 - Moved C-CONT..INDEX to the scopal and intersective variants,
;; since intersectives take their index from the head-dtr, while scopals take
;; it from the non-head-dtr.  The crucial case for intersectives is for
;; participial modifiers of nouns, like "manager interviewing Browne" where
;; the index of the modifier is an event variable.

;; DPF 7-Jun-99 - Removed REL 0-dlist from nonhead, to allow slashed finite
;; rels to keep the REL value on their mother, so it can be distinguished from
;; ordinary clauses.

;; DPF 8-May-00 - MC of the mother is now determined by the modifier dtr, not
;; the head-dtr, in order to make discourse adverbs like "yes" produce MC +
;; phrases. 

;; DPF 10-Feb-01 - Removed REL 0-dlist from mother, since (a) head-nexus 
;; phrases get the REL value from the head dtr; and (b) this was blocking e.g.
;; "the chair whose first three legs fell off arrived" where the adj-N
;; construction forces REL 0-dlist rather than passing up the spr's REL.
; DPF 3-Jul-02 - Added re-entrancy of HEAD-DTR..LEX and NON-HEAD-DTR..MOD..LEX
; to enable modifiers to constrain the lex/phr distinction of the modifiee.
; DPF 26-Apr-03 - Added identification of XARG for head-dtr and non-hd-dtr for
; scopal modifier rules, which was already done for the (non-nominal)
; intersective modifier rules - the adj_n_int_phrase cannot make this identity
; since nouns declare the XARG value to be 'nothing'.
; DPR 03-nov-03 - Changed MC propagation back to coming from head-dtr, since
; want to be able to attach modifiers (which might be MC na) to main clauses,
; as in "Kim laughed, especially because sandy stayed".

basic_head_mod_phrase_simple := head_mod_phrase & basic_binary_headed_phrase &
  [ SYNSEM [ LOCAL [ CAT.MC #mc,
                     CONT.MSG #msg ],
	     NON-LOCAL [ SLASH *diff-list* &
			       [ LIST #first,
				 LAST #last ],
                         QUE *diff-list* &
                               [ LIST #qfirst,
                                 LAST #qlast ] ],
             ROOT #root ],
    HEAD-DTR.SYNSEM [ LOCAL [ CAT [ HEAD #head,
                                    VAL #val,
                                    POSTHEAD #ph,
                                    HC-LEX #hclex,
                                    MC #mc ],
                              AGR #agr,
			      CONT [ HOOK #hook,
                                     MSG #hmsg ],
			      CONJ #conj ],
                      NON-LOCAL #nonloc &
			     [ SLASH *diff-list* &
	                              [ LIST #middle,
					LAST #last ],
                               QUE *diff-list* &
	                              [ LIST #qmiddle,
					LAST #qlast ] ],
                      MODIFIED #modif,
                      --SEMIND #semind,
                      ROOT #root,
                      LEX #lex ],
    NON-HEAD-DTR [ SYNSEM [ LOCAL [ CAT [ HEAD head &
					     [ MOD < synsem &
                                                     [ LOCAL local & 
						       [ CAT [ HEAD #head,
                                                               VAL #val,
                                                               POSTHEAD #ph,
                                                               HC-LEX #hclex,
                                                               MC #mc ],
							 AGR #agr,
							 CONT [ HOOK #hook,
                                                                MSG #hmsg ],
							 CONJ #conj ],
                                                       NON-LOCAL #nonloc,
                                                       MODIFIED #modif,
                                                       --SEMIND #semind,
                                                       ROOT #root,
                                                       LEX #lex ] >,
                                               KEYS.KEY independent_rel ],
                                          VAL.SPR *olist* ],
                                    CONJ cnil,
                                    CONT.MSG #msg ],
                            NON-LOCAL [ SLASH *diff-list* &
					    [ LIST #first,
					      LAST #middle ],
                                        QUE *diff-list* &
					    [ LIST #qfirst,
					      LAST #qmiddle ] ] ] ],
    C-CONT.RELS <! !> ].


head_mod_phrase_simple := basic_head_mod_phrase_simple &
  [ C-CONT.HCONS <! !> ].


;; DPF (12-Jul-98) Changed POSTHEAD on mother from that of head-dtr to simply -
;; since want to prevent this rule from feeding head-adj rule.
;; DPF (25-Sept-98) Since we're no longer treating all head-complement phrases
;; as POSTHEAD -, we have to strengthen the constraint on the non-head-dtr's 
;; COMPS value to be truly the empty list, not just *olist*.

adj_head_phrase := basic_head_mod_phrase_simple & head_final &
  [ SYNSEM [ LOCAL.CAT.POSTHEAD #ph,
	     MODIFIED lmod & [ LPERIPH #periph ],
             LEX #lex ],
    HEAD-DTR.SYNSEM [ LOCAL.CAT.POSTHEAD #ph,
                      LEX #lex ],
    NON-HEAD-DTR.SYNSEM [ LOCAL.CAT.HEAD.PRD -,
			  NON-LOCAL [ SLASH 0-dlist,
				      REL 0-dlist ],
                          MODIFIED.LPERIPH #periph ] ].

; ERB (07-11-96) Non-head dtr is QUE 0-dlist to rule out "*Leaving when do you
; think would bother Sandy?" or "*Your house where did the government foreclose
; on?"  Not on higher type because "How long a book did you write?"
; DPF 09-dec-03 Removed QUE 0-dlist since we now want in-situ WH-phrases like
; "you are leaving when".  The above examples with in-situ WH with inversion
; are being blocked now as desired - details on how?

head_adj_phrase := basic_head_mod_phrase_simple & head_initial_infl & phrasal &
  [ SYNSEM [ LOCAL.CAT [ POSTHEAD +,
                         VAL.COMPS < > ],
	     MODIFIED rmod & [ LPERIPH #periph ] ],
    HEAD-DTR.SYNSEM.MODIFIED notmod_or_rmod & [ LPERIPH #periph ],
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT [ POSTHEAD +,
                                    VAL.COMPS < > ] ].

; DPF (07-17-98) Split head_adj_phrase and adj_head_phrase into two each,
; one for intersective modifiers and one for scopal modifiers, in order to
; get desired results for recursive modification as in "apparently difficult
; problem" (cf. Kasper '98).  This split is also used in generation, where
; we delay construction of intersective modification, but not scopal.

scopal_mod_phrase := head_mod_phrase_simple & nonhead_compositional &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.XARG #xarg,
    NON-HEAD-DTR.SYNSEM.LOCAL [ CAT [ HEAD.MOD < [ LOCAL scopal_mod &
                                                  [ CONT.HOOK.XARG #xarg ] ] >,
                                      VAL.COMPS < > ],
				CONT.HOOK #hook & [ XARG #xarg ] ],
    C-CONT.HOOK #hook ].

isect_mod_phrase := head_mod_phrase_simple & head_compositional &
  [ HEAD-DTR.SYNSEM.LOCAL.CONT [ HOOK.LTOP #hand,
                                 MSG no_msg ],
    NON-HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD.MOD < [ LOCAL intersective_mod ] >,
				CONT.HOOK.LTOP #hand ] ].

adj_head_scop_phrase := adj_head_phrase & scopal_mod_phrase & head_final_infl &
  [ NON-HEAD-DTR.SYNSEM.LOCAL.CAT.POSTHEAD - ].
head_adj_scop_phrase := head_adj_phrase & scopal_mod_phrase &
  [ NON-HEAD-DTR.SYNSEM.NON-LOCAL.REL 0-dlist ].
; DPF 29-Nov-02 - Removed NON-HEAD-DTR..HEAD..TENSE no_tense, since the adjunct
; now provides the HOOK for the mother, including E-INDEX, which must be
; unified with the head-dtr's E-INDEX.
; DPF 26-May-03 - But that spurious re-entrancy with the head-dtr's index has
; now been removed, so we can re-introduce this constraint on TENSE, crucial
; for the generator, since the heuristics will introduce lots of spurious
; auxiliaries if there is an event variable unconstrained for TENSE.

adj_head_int_phrase := adj_head_phrase & isect_mod_phrase &
  [ NON-HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD.TAM [ TENSE no_tense,
                                               ASPECT no_aspect ],
                                    POSTHEAD - ] ].

; DPF 19-Oct-02 - Try making the non-head dtr PRD +, to make VP-modifying
; PPs PRD + in order to avoid spurious ambiguity for 'a foot in front of ...'
; DPF 29-Nov-02 - Removed NON-HEAD-DTR..HEAD..TENSE no_tense, since the adjunct
; now provides the HOOK for the mother, including E-INDEX, which must be
; unified with the head-dtr's E-INDEX.
; DPF 26-May-03 - But that spurious re-entrancy with the head-dtr's index has
; now been removed, so we can re-introduce this constraint on TENSE, crucial
; for the generator, since the heuristics will introduce lots of spurious
; auxiliaries if there is an event variable unconstrained for TENSE.

head_adj_int_phrase := head_adj_phrase & isect_mod_phrase &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD adverbee &
                                   [ KEYS.KEY event_rel ],
    NON-HEAD-DTR.SYNSEM [ LOCAL.CAT.HEAD [ PRD +,
                                           TAM [ TENSE no_tense,
                                                 ASPECT no_aspect ] ],
                          NON-LOCAL.REL 0-dlist ] ].

; For "On Tuesday who won" where need S-initial PP rather than extracted PP.

; DPF 29-Nov-02 - Removed NON-HEAD-DTR..HEAD..TENSE no_tense, since the adjunct
; now provides the HOOK for the mother, including E-INDEX, which must be
; unified with the head-dtr's E-INDEX.
; DPF 26-May-03 - But that spurious re-entrancy with the head-dtr's index has
; now been removed, so we can re-introduce this constraint on TENSE, crucial
; for the generator, since the heuristics will introduce lots of spurious
; auxiliaries if there is an event variable unconstrained for TENSE.

adj_head_int_ques_phrase := adj_head_phrase & phrasal &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    HEAD-DTR.SYNSEM.LOCAL.CONT [ HOOK #hook & [ XARG #hand ],
                                 MSG message & [ PRED int_m_rel ] ],
    NON-HEAD-DTR.SYNSEM [ LOCAL [ CAT [ HEAD prep &
                                       [ MOD < [ LOCAL intersective_mod ] >,
                                         TAM [ TENSE no_tense,
                                               ASPECT no_aspect ] ],
                                        VAL.COMPS < > ],
                                  CONT.HOOK.LTOP #hand ],
                          NON-LOCAL.QUE 0-dlist ],
    C-CONT [ HOOK #hook,
	     HCONS <! !> ] ].

; Further split the head_adj_int_phrase in order to enforce one aspect of the 
; Complex-NP constraint prohibiting extraction from nominal adjuncts.
;
; DPF (27-May-99) Moreover, the nom_adj rule constrains the NON-HEAD-DTR to be 
; PRD +, in order to prevent finite VPs from serving as modifiers.  This was 
; being blocked earlier by pretending that all post-head modifiers had to have
; SUBJ *olist*, but this meant making predicative participles not specify an
; OPT value on their SUBJ - dubious generalization, and besides, it made it
; difficult to get the parse-node labels right, since passive verbs looked
; like S's.
;
; DPF 3-June-99 -- Further constrained nom_adj rule to make the modifier be
; phrasal, to block "Kim met the consultant hired." It's too strong a
; constraint, but we'll revisit the question if we move to making post-nominal
; modifiers attach at NP rather than N.  Among the disadvantages is the fact
; that we can't do "Get him something nice". (But see opt comp for generic-pro)
; DPF 9-Sept-99 - Added [PRD -] to head-dtr to avoid modifiers of e.g. 
; minute-word. 
; - 20-Nov-99: But this also blocked "the eleventh any time after three"
; DPF 15-Apr-00 - Removed [NON-HEAD-DTR..SLASH 0-dlist] since now have
; relative clauses have non-empty REL value.  This means we have to split the 
; nn_adj rule into two, one for relative clauses which are REL 1-dlist and the
; other for reduced relatives which are REL 0-dlist - otherwise we would get 
; "*Kim bought a book by whom?".
; DPF 26-Mar-01 - Added [HEAD-DTR..RPERIPH na_or_-] to block e.g. attachment of
; post-nom modifiers to bare proper names and numerals.
; DPF 2-Jun-02 - Added NON-HEAD-DTR.LEX - to exclude "the children angry"
; DPF 2-Jul-02 - (from 26-Mar-01) But attachment of post-nom modifiers to 
; proper names is possible, as in "Abrams from New York just called".  So
; removed this constraint, and leave for later how to block "Abrams by Browne
; arrived"
; DPF 3-Jul-02 - Try adding HEAD-DTR..ALT2KEY no_rel to exclude modification
; of np-adverbs like "here".
; DPF 13-Oct-02 - But why block this?  We want "here in Paris is nice" and
; "I'll arrive later that morning".  So remove it, and wait for motivation.

n_adj_int_phrase := head_adj_phrase &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC #spec,
    HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD supnoun,
                                VAL [ COMPS < >,
                                      SPEC #spec ] ],
    NON-HEAD-DTR.SYNSEM [ LOCAL.CAT.MC na,
                          NON-LOCAL.SLASH 0-dlist,
                          LEX - ] ].

; DPF 26-Mar-01 - Added [SPR..KEY impl_or_expl_q_rel] to provide basis
; for blocking application of proper_np (non-branching) rule, to avoid e.g.
; "*I saw Abrams I had hired" - cf. "I saw the Abrams I had hired"
; Also added SYNSEM..RPERIPH + to provide basis for blocking addition of a
; thatless-rel to the right of a full relative clause.
; DFP 19-Oct-02 - Added HEAD-DTR..ALT2KEY no_rel to block full relatives 
; modifying np_adverbs like "here, there", and singular deictics as in 
; "*that he bought yesterday arrived" (cf "those he bought yesterday arrived")

n_adj_relcl_phrase := n_adj_int_phrase & isect_mod_phrase &
  [ SYNSEM.MODIFIED #modif,
    NON-HEAD-DTR.SYNSEM [ LOCAL.CAT s_cat_fin_or_inf_unspec,
                          MODIFIED #modif ],
    HEAD-DTR.SYNSEM [ LOCAL.CAT [ VAL.SPR 
                                      < [ LOCAL.CAT.HEAD.KEYS 
                                          [ KEY i_or_e_quant_or_deg_rel ] ] >,
                                  HEAD.KEYS.ALT2KEY no_rel ],
                      NON-LOCAL.REL 0-dlist ] ].

; DPF 27-Nov-02 - Added MOD..KEY basic_nom_rel to exclude measure-NPs from
; being modified by rel clauses.
; DPF 31-oct-03 - Tried adding ALTKEY norm_non_conj_rel to prevent modification
; of internval NPs like spurious (?) reading of  "berlin to Paris in June".

n_adj_redrel_phrase := n_adj_int_phrase & head_compositional &
  [ HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD.KEYS.ALTKEY norm_non_conj_rel,
                            CONT.HOOK.LTOP #hand ],
    NON-HEAD-DTR.SYNSEM 
       [ LOCAL [ CAT [ HEAD a_or_p &
                            [ MOD < [ LOCAL intersective_mod ] >,
                              TAM [ TENSE untensed,
                                    ASPECT no_aspect ] ],
                       VAL.SUBJ *olist* ],
                 CONT.HOOK.LTOP #hand ],
         NON-LOCAL.REL 0-dlist ],
    C-CONT.HCONS <! !> ].


n_adj_redrel_nontemp := n_adj_redrel_phrase &
  [ NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS [ KEY nontemp_rel,
                                              ALTKEY nontemp_or_conj_rel ] ].

; Changed ALTKEY from temp_rel to temp_abstr_rel, to allow e.g.
; 'The appointment Tuesday was cancelled'

n_adj_redrel_temp := n_adj_redrel_phrase &
  [ NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS [ KEY temp_loc_abstr_rel,
                                              ALTKEY temp_abstr_or_conj_rel]].

; For generator, distinguish constructions where adjunct contains a gap from
; those where it does not.

h_adj_unsl_phrase := head_adj_int_phrase &
  [ ARGS.REST.FIRST.SYNSEM.NON-LOCAL.SLASH 0-dlist ].

; DPF 10-dec-03 - Restrict this rule to exclude elided auxiliary heads, to
; avoid "Berlin, the road is, to"
h_adj_sl_phrase := head_adj_int_phrase &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS.ALTKEY role_rel,
    ARGS.REST.FIRST.SYNSEM.NON-LOCAL.SLASH 1-dlist ].

; DPF 11-May-01 - Split adj_head_int_phrase into two: one for nominal head-dtrs
; and one for non-nominals, parallel to head_adj_phrase split.  Needed at least
; to prevent pre-head adjectives from modifying partitives, to get contrast in
; "any angry at Sally left"  vs "*angry any left" 
; DPF 13-May-01 - Changed SPR..KEY from impl_or_expl_q_rel to quant_rel in
; order to get "Mr Smith" as adj_n construction which then undergoes proper_np
; rule.
; DPF 13-Mar-02 - HEAD-DTR..LPERIPH na_or_- prevents adjectives from modifying
; numerically-modified nouns, as in "*the tall five consultants".
; DPF 28-Apr-03 - But this constraint prevents "the next five consultants",so
; remove constraint here, and expect (statistical?) adjective-ordering
; constraints to get the order of "five" and "tall" right.  Someday.
; DPF 16-dec-03 - Made NHD be [LEX +] to prevent eg "the older than Kim chair"
; since "older" is [LEX +] but "older than Kim" is [LEX -].

adj_n_int_phrase := adj_head_int_phrase &
  [ SYNSEM.LOCAL.CAT.VAL [ COMPS #comps,
                           SPEC #spec ],
    HEAD-DTR [ SYNSEM.LOCAL.CAT [ HEAD noun_or_nomger,
                                  VAL [ SPR < [ LOCAL.CAT.HEAD.KEYS.KEY 
                                                                quant_rel ] >,
                                        SPEC #spec,
                                        COMPS < > ] ],
               INFLECTED #infl,
               ROBUST #robust ],
    NON-HEAD-DTR [ SYNSEM [ LOCAL.CAT.VAL [ SUBJ *olist*,
                                            COMPS #comps ],
                            LEX + ],
                   INFLECTED +,
                   ROBUST #robust ],
    INFLECTED #infl,
    ROBUST #robust ].

; DPF 29-Nov-02 - Removed NON-HEAD-DTR..HEAD..TENSE no_tense, since the adjunct
; now provides the HOOK for the mother, including E-INDEX, which must be
; unified with the head-dtr's E-INDEX.
; DPF 26-May-03 - But that spurious re-entrancy with the head-dtr's index has
; now been removed, so we can re-introduce this constraint on TENSE, crucial
; for the generator, since the heuristics will introduce lots of spurious
; auxiliaries if there is an event variable unconstrained for TENSE.

adj_h_int_phrase := adj_head_int_phrase & head_final_infl &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    HEAD-DTR.SYNSEM.LOCAL [ CAT.HEAD adverbee,
			    CONT.HOOK.XARG #xarg ],
    NON-HEAD-DTR.SYNSEM [ LOCAL [ CAT [ HEAD.TAM [ TENSE no_tense,
                                                   ASPECT no_aspect ],
                                        VAL.COMPS < > ],
                                  CONT.HOOK.XARG #xarg ],
			  NON-LOCAL.REL 0-dlist ] ].

; For now, restrict adjunct extraction to posthead modifiers of VPs (and the
; special case of inverted auxiliary-headed Ss, which still have a non-empty 
; but never realized SUBJ - see discussion of sai_synsem in lextypes.tdl). 
; This will still produce two parses for "Tuesday Kim might dance", but the 
; alternatives (e.g., blocking modification of all auxiliaries except the 
; copula) seem even less attractive.  Also block extraction of adjuncts out of
; subjunctive-verb-headed phrases.

; ERB (12-11-96) This is the exception; the reason I couldn't put the MSG
; stuff on head_mod_phrase.

; DPF (23-Aug-98) Given our splitting up of the head-modifier type into 
; separate subtypes for intersective and scopal modification, we have to do
; the same for extracted adjuncts as well.
; DPF (09-Jan-99) But it is not clear that we ever need to extract scopal
; modifiers, since the ones that are post-head (maybe always adverbs) also seem
; to be available as modifiers of S, and not restricted to POSTHEAD +.  So 
; we'll try doing without the scopal variant.
;
; DPF 19-Oct-99 - We used to make the value of SLASH's MOD feature be the
; whole SYNSEM of the HEAD, but this interacted badly with coordination
; of two extracted_adj phrases: it resulted in the CONT features of the
; two conjoined phrases being identified, since coordination enforces
; across-the-board identity of SLASH.  This resulted in circular RELS
; values, which are undesirable.  So now we identify the values of the
; relevant LOCAL features in SLASH..MOD and in HEAD-DTR, avoiding false
; identity of the RELS values.  Test case: "Kim arises and arises".
; DPF 2-Feb-01 - Eliminated HEAD-DTR..MOOD strict_sort since it blocked
; "On tuesday Kim arrived and would stay"
; DPF 30-May-01 - Identify MC of head-dtr and extracted adjunct, to avoid
; spurious ambiguity for "For whom does she work"
; DPF 15-Oct-01 - Replaced HEAD-DTR..HEAD..TENSE real_tense with KEY relation,
; since former blocked extraction of adjuncts from complements of e.g. modals,
; and the latter works as intended to block extraction from no_copula VPs.
; DPF 12-Apr-02 - Added HEAD-DTR..SUBJ..INDEX non_expl-ind to prevent adjunct
; extraction from there-copula sentences - spurious chart ambiguity.
; DPF 28-Nov-02 - HOOK comes only from C-CONT (linked here to SLASH values)
; DPF 14-Oct-03 - But can't prevent adjunct extraction from there-copula
; sentences: "In winter there is snow". So removed non_expl constraint.

basic_extracted_adj_phrase := head_mod_phrase & head_only & phrasal &
  [ SYNSEM [ LOCAL [ CAT.VAL.COMPS < >,
                     CONT [ HOOK.INDEX.--TPC +,
			    MSG.TPC #ind ] ],
             NON-LOCAL [ QUE #que,
			 SLASH.LIST.FIRST.CONT.HOOK.INDEX #ind ] ],
    HEAD-DTR.SYNSEM [ LOCAL.CAT [ HEAD.KEYS.KEY norm_rel,
                                  VAL.SUBJ < synsem_min &
                                             [ NON-LOCAL.SLASH 0-dlist ] > ],
                      NON-LOCAL.QUE #que ] ].


extracted_adj_phrase := basic_extracted_adj_phrase &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.KEYS.KEY #modkey,
                           POSTHEAD #ph,
			   MC #mc ],
                     CONT.MSG #msg ],
	     NON-LOCAL.SLASH 1-dlist &
		   [ LIST < [ CAT [ POSTHEAD +,
				    HEAD mobile &
                                        [ MOD < [ LOCAL 
                                                  [ CAT [ HEAD #head &
                                                          [ KEYS.KEY #modkey ],
                                                          VAL #val,
                                                          POSTHEAD #ph,
                                                          HC-LEX #hclex,
                                                          MC #mc ],
                                                    CONT.HOOK 
                                                        [ LTOP #hltop,
                                                          INDEX #hind ],
                                                    CONJ #conj,
                                                    CTXT #ctxt ] ] >,
                                          KEYS.KEY independent_rel ],
                                    VAL [ SUBJ *prolist*,
                                          COMPS *olist*,
					  SPR *olist* ] ],
			      CONT [ HOOK.LTOP #hand,
                                     MSG #msg ] ] > ] ],
    HEAD-DTR.SYNSEM canonical_synsem &
	   [ LOCAL local_basic &
		   [ CAT [ HEAD #head & verb &
				[ TAM.MOOD ind_or_mod_subj ],
                           VAL #val,
			   POSTHEAD #ph,
                           HC-LEX #hclex,
                           MC #mc ],
                     CONT.HOOK [ LTOP #hltop,
                                 INDEX #hind ],
                     CONJ #conj,
                     CTXT #ctxt ],
             NON-LOCAL.SLASH 0-dlist,
	     MODIFIED notmod ],
    C-CONT [ HOOK.LTOP #hand,
	     HCONS <! !> ] ].

; DPF (1-May-99) Removed identity of SLASH..KEY.LBL and HEAD-DTR..KEY.LBL
; since this should be redundant for most cases, and is wrong for free relatives
; like "where Kim slept" since in this construction the KEY of the free-rel and
; the KEY of its sister's SLASH must be identified in order to allow "where Kim
; put the book" while blocking "where kim relied".  But this identity means we
; can't have the LBL of that SLASH..KEY be the same as the LBL of the
; head of this extracted-adj phrase, because that would mean that the LBL of
; the ex-adj head's KEY ("slept" in "where she slept" would be wrongly identified
; with the LBL of the KEY for "where" (which is 'place_rel').
; DPF 2-Oct-01 - Added to mother [SLASH..INDEX.SORT entity] to make this rule
; be complementary to the extradj_t rule, which is restricted to SORT time.
; DPF 28-Apr-03 - The drawback of this (2-Oct-01) is that it blocks a
; combination of temporal and nontemporal modifiers, as in "why don't we hire
; kim now".

extracted_adj_int_phrase := extracted_adj_phrase & head_compositional &
  [ SYNSEM.NON-LOCAL.SLASH 1-dlist &
			   <! local &
                            [ CAT.HEAD [ MOD < [ LOCAL intersective_mod,
                                                 --SEMIND #index ] >,
                                         TAM [ TENSE no_tense,
                                               ASPECT no_aspect ] ],
                              CONT.HOOK [ LTOP #hand,
                                          XARG #index ] ] !>,
    HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK [ LTOP #hand,
                                      INDEX individual & #index ],
    C-CONT.RELS <! !> ].

extracted_adj_int_vp_phrase := extracted_adj_int_phrase &
  [ HEAD-DTR.SYNSEM.LOCAL [ CAT.VAL.SUBJ < synsem &
                                           [ NON-LOCAL.SLASH 0-dlist ] > ] ].

extracted_adj_int_s_phrase := extracted_adj_int_phrase &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD.INV +,
                                VAL.SUBJ < anti_synsem > ] ].


; DPF 14-Jul-01 - Identified MSG of mother with that of head-dtr as well
; as already specified SLASH..MOD..MSG, in order to prevent PPS for
; sentence-initial modification from modifying VPs.  This is only okay as long
; as we continue to not extract scopal modifiers.
; DPF 25-Sep-01 - Removed SLASH unexpr_local since it blocks any filler - how
; was that supposed to work, anyway??
; DPF 2-Oct-01 -  Replaced [VFORM fin] on head-dtr with [VFORM fin_or_bse], to
; allow low attachment of "when can kim arrive"
; DPF 28-Apr-03 - Tried to restrict this to VP dtr, not S, to avoid spurious 
; ambiguity for "the day I arrive".  But then we get no parse for e.g.
; "when was Kim ready" since this rule has to apply to the S.  So leave the
; spuriosity for now.
; DPF 14-Oct-03 - Changed SLASH value from NP to Nbar so this should only be
; used for relative clauses like "the day I arrived", not for "Yesterday Kim
; arrived", since the latter is handled by extraction of the unary PP.  Now
; also restrict dtr to VP, since 28-Apr-03 objection now overcome.

extracted_adj_npadv_phrase := basic_extracted_adj_phrase & head_compositional &
  [ SYNSEM [ LOCAL [ CAT [ POSTHEAD #ph,
                           MC #mc ],
                     CONT.MSG #msg ],
	     NON-LOCAL.SLASH 1-dlist &
                 <! local &
                    [ CAT nbar_cat_min & [ HEAD.KEYS.KEY modable_rel,
                                           VAL.SPR < [ LOCAL.CAT.HEAD det ] >],
                      CONT.HOOK.INDEX #ind & [ SORT location ] ] !> ],
    HEAD-DTR.SYNSEM canonical_synsem &
	   [ LOCAL local_basic &
		   [ CAT [ HEAD verb & [ VFORM fin_or_bse,
                                         TAM.MOOD ind_or_mod_subj ],
                           VAL.SUBJ < synsem & [ --SEMIND non_expl-ind ] >,
                           POSTHEAD #ph,
                           MC #mc ],
                     CONT [ HOOK [ LTOP #hand,
                                   INDEX #event ],
                            MSG #msg ] ],
             NON-LOCAL.SLASH 0-dlist,
	     MODIFIED notmod ],
    C-CONT [ RELS <! prep_relation &
                     [ LBL #hand,
                       PRED unspec_loc_rel,
                       ARG0.E [ TENSE no_tense,
                                ASPECT no_aspect ],
                       ARG1 #event & event_or_index,
                       ARG2 #ind ] !>,
	     HCONS <! !> ] ].

;;
;; Bare plural and mass NPs, distinguished by the INDEX feature [ DIVISIBLE + ]
;;
; DPF 9-Sept-99 - Changed head-dtr's SPR to be canonical_synsem rather than
; non_canonical.  Don't know why it was that way, but it was allowing e.g. the
; proper noun 'Tuesday' to undergo this rule.
; DPF 17-Mar-01 - Since the choice of bare-np rule is determined by the value
; of DIVISIBLE on the dtr, this needs to be a strict sort; but a bare-np must
; be able to conjoin with another NP of a different DIVISIBLE value, so we
; make these not be headed phrases (which identify AGR on mother and head-dtr).
; DPF 6-Apr-01 - Given that we now pump all optional nominal complements, this
; rule now requires the n-bar dtr to also be COMPS < >.
; DPF 22-May-01 - Instead of making mother nonpronominal_synsem (which 
; incorrectly claims all bare NPs are [LEX +]), make mother's KEY nonpro_rel.
; Then make LEX value propagate from dtr to mother.
; DPF 25-Sep-01 - From 17-Mar: Having broken link for AGR of dtr and mother,

; DPF 20-Nov-01 - Moved identification of MODIFIED down to the non-proper-name
; subtypes, in order to allow "My friend Mister Abrams" as an appositive.
; DPF 25-Nov-01 - Changed dtr's HEAD from noun to noun_or_nomger to allow e.g.
; "Processing of requests is important"
; DPF 19-Oct-02 - Moved ALTKEY to subtypes, to allow num-nps to differ.
; DPF 28-Nov-02 - HOOK comes only from C-CONT
; DPF 23-oct-03 - Added LPERIPH na_or_+ to dtr to enable blocking of bare-np
; for e.g. "miles an hour" as in "*Kim ran miles an hour".
; DPF 03-dec-03 - But this also blocks "I have time" - not true that the
; candidates for bare-np are same as those for npadv rule.  So undo this
; constraint.  Anyway, above bad example is probably duu to measure-NP that
; should (somehow) be blocked for same reason as "*this string is foot long".
; DPF 14-dec-03 - Removed [ SLASH 0-dlist ] from dtr, since it prevented
; "who did you have pictures of"

generic_bare_np_phrase := unary_phrase &
  [ SYNSEM synsem &
           [ LOCAL [ CAT [ HEAD #head & [ KEYS.KEY nonpro_rel ],
                           HC-LEX #hclex,
                           VAL [ SUBJ < >,
                                 COMPS < >,
                                 SPR < >,
                                 SPEC < anti_synsem > ],
                           MC na ],
                     AGR ref-ind &
                         [ PNG #png ],
                     CONJ #conj,
                     CONT.MSG #msg & no_msg ],
             NON-LOCAL #nonloc,
             LEX #lex ],
    ARGS < [ SYNSEM 
             [ LOCAL [ CAT [ HEAD #head & noun_or_nomger,
                             HC-LEX #hclex,
                             VAL [ SUBJ *olist*,
                                   COMPS < >,
                                   SPR < canonical_synsem &
                                         [ OPT -,
                                           NON-LOCAL [ SLASH 0-dlist,
                                                       REL 0-dlist,
                                                       QUE 0-dlist ] ] > ] ],
                       AGR.PNG #png,
                       CONJ #conj & cnil,
                       CONT [ HOOK [ LTOP #nhand,
                                     INDEX #index ],
                              MSG #msg ] ],
               NON-LOCAL #nonloc,
               LEX #lex ] ] >,
    C-CONT [ HOOK [ INDEX #index,
                    XARG #nhand ],
             RELS <! [ PRED quant_rel,
                       ARG0 #index,
                       RSTR #rhand ] !>,
             HCONS <! qeq &
		     [ HARG #rhand,
		       LARG #nhand ] !> ] ].

; DPF 19-Oct-02 - Changed SPR..KEY from udef_q_rel to abstr_def_or_udef_q_rel
; to also allow "afternoons" using (necessarily) the 'afternoon' with an
; optional PP-of and a usually obligatory definite determiner (to get the
; contrast between "on the afternoon of the fifth" but "in the afternoon"

bare_np_phrase := generic_bare_np_phrase &
  [ SYNSEM [ LOCAL [ CAT.HEAD.KEYS.ALTKEY implicit_q_rel,
                     AGR.DIVISIBLE + ],
             MODIFIED #modif ],
    ARGS < [ SYNSEM [ LOCAL [ AGR.DIVISIBLE +,
                              CAT.VAL.SPR 
                              < [ LOCAL.CAT.HEAD.KEYS.KEY 
                                              abstr_def_or_udef_q_rel ] > ],
                      MODIFIED #modif ] ] >,
    C-CONT.RELS <! [ PRED bare_div_q_rel ] !> ].

; DPF 23-Nov-01 - Added SPR..KEY udef_q_rel to block num_noun as input.
; DPF 2-Jun-02 - Added ARGS..KEY non_temp_nom_rel to exclude temporal nouns.

bare_np_sg_phrase_robust := generic_bare_np_phrase &
  [ SYNSEM [ LOCAL [ CAT.HEAD.KEYS.ALTKEY implicit_q_rel,
                     AGR.DIVISIBLE - ],
             MODIFIED #modif ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD.KEYS.KEY non_temp_nom_rel,
                                    VAL.SPR < [ LOCAL.CAT.HEAD.KEYS.KEY 
                                                            udef_q_rel ] > ],
                              AGR.DIVISIBLE - ],
                      MODIFIED #modif ],
             POSSCL - ] >,
    C-CONT.RELS <! [ PRED bare_div_q_rel ] !>,
    ROBUST + ].

; DPF 8-Mar-01 - Removed [MODIFIED notmod_or_lmod] from head-dtr, since it
; prevented "Tuesday at five" as an NP.
; DPF 17-Mar-01 - But then put it back, since we have to block e.g.
; "*I met Abrams you hired".  So will look for another analysis of above.
; DPF 25-Mar-01 - Removed it again, in favor of constraint on SPR in full relcl
; rule which blocks it from feeding this rule.
; DPF 24-Jun-01 - Removed ARGS..DIVISIBLE - since need to identify AGR of
; dtr and mother to get semantics right, and need mother to be DIVISIBLE -*,
; and don't know what that constraint was blocking anyway.
; DPF 10-Apr-02 - Changed ALTKEY from basic_nom_rel to implicit_q_rel so
; these can appear in np-n compounds like "Kim Browne"
; DPF 27-Oct-02 - Re: 24-Jun-01 - Well, it blocked the spurious analysis of 
; plural proper names like in "on Fridays", where the bare-plural rule already
; supplies the desired analysis.  This is another case where our use of
; overspecification for coordination goes wrong, since we want the daughter to
; be really [DIVISIBLE -] (alternatively, really [PN 3sg]) but we want the
; mother to be able to coordinate with unlikes, and yet we need the AGR
; reentrancy (really the INDEX reentrancy) for the semantics.
; DPF 8-May-03 - Added identity of MODIFIED on mother and daughter (like most
; of the other bare_np_phrase types, here to avoid "afternoon Monday" as a
; temporal modifier.
; DPF 5-Sep-03 - Added ARGS..INDEX nonconj_ref-ind to prevent conjoined n-bars 
; like 'Kim and Sandy' to avoid spurious ambiguity.

proper_np_phrase := generic_bare_np_phrase &
  [ SYNSEM [ LOCAL.AGR #agr & [ DIVISIBLE - ],
             MODIFIED #modif ],
    ARGS < [ SYNSEM 
             [ LOCAL [ CAT [ HEAD.KEYS [ KEY abstr_named_np_rel,
                                         ALTKEY proper_q_rel ],
                             VAL.SPR < [ LOCAL.CAT.HEAD.KEYS.KEY 
                                                   proper_q_rel ] > ],
                       CONT.HOOK.INDEX nonconj_ref-ind,
                       AGR #agr ],
               MODIFIED #modif ] ] >,
    C-CONT.RELS <! [ PRED proper_q_rel ] !> ].
                      
; DPF 22-May-02 - Split proper_np_phrase into two, one for non-numbers and
; one for numbers, so we can constrain the latter to be unmodified, in order
; to block "*Toshiba 2000 is here" but allow "I visited sunny Pittsburgh"
; DPF 30-May-02 - But this also blocked "order (number) fifty".  So instead
; only require [MODIFIED.LPERIPH -], since titles don't affect LPERIPH, but
; adjectives and n-n-compounds do.
; DPF 19-Oct-02 - Added ALTKEY never_unify_rel to prevent these guys from
; appearing in np_n_cmpnds.
; DPF 4-Feb-02 - Changed this never_unify_rel to number_q_rel to still keep
; them out of np_n_cmpnds, but allow them in measure phrases.
; DPF 25-May-03 - Since num-nouns now LPERIPH + again, remove constraint from
; ARGS, and see what has to be done to avoid overgeneration of "Toshiba 2000"

num_np_phrase := generic_bare_np_phrase &
  [ SYNSEM.LOCAL [ CAT.HEAD.KEYS.ALTKEY number_q_rel,
                   AGR #agr & [ DIVISIBLE - ] ],
    ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD.KEYS.KEY named_num_rel,
                                  VAL.SPR < [ LOCAL.CAT.HEAD.KEYS.KEY 
                                                           number_q_rel ] > ],
                            AGR #agr ] ] >,
    C-CONT.RELS <! [ PRED number_q_rel ] !> ].

; Verbal gerunds with no (possessive) specifier.
; DPF 12-May-00 Block extraction from gerund NPs.
; DPF 07-Jan-01 Allow "Me hiring Sandy impressed Kim" as well as "Hiring 
; Sandy impressed Kim" by removing constraint that head-dtr be SPR < >,
; but then block spurious analysis for "My hiring Sandy impressed Kim"
; by requiring the head-dtr to be ALTKEY no_rel (the head-spr rule makes
; the mother's ALTKEY the quant_rel).  Also, block spurious analysis for
; "me hiring Sandy impressed kim" (failing to undergo this rule and hence
; leaving an unbound variable for the gerund_rel), by making this rule's
; output be MSG no_msg, and (in lextypes.tdl and auxverbs.tdl) 
; requiring that subjects (only ever of finite verbs) be MSG no_msg.
; This means sentential subjects will have to undergo a non-branching
; rule to make nominative NPs, but this is at least defensible, since we
; need to get the nominative case from somewhere, to prevent them from
; appearing as, say, objects of prepositions.
; DPF 19-Feb-01 - We're getting spurious ambiguity for "Kim prefers sleeping"
; where both the verbal gerund and the nominal gerund produce an NP.  So let's
; try blocking the lexical verbal gerunds by making HEAD-DTR a phrase.
; DPF 23-Apr-01 - But while we are avoiding nominal gerunds of intransitives,
; we'll undo this block.
; DPF 30-May-01 - Removed head-dtr's non-empty SUBJ requirement, since we
; still need to supply a quantifier in the ACC subj constructions like
; "I resent you leaving early".
; DPF 22-May-02 - Made HEAD-DTR..COMPS < > rather than *olist*, to avoid
; spurious parse for e.g. "Abrams is interviewing" where noptcomp applies.
; DPF 28-Nov-02 - HOOK comes only from C-CONT

bare_vger_phrase := head_only & head_valence_phrase & phrasal &
  [ SYNSEM.LOCAL [ CAT [ VAL [ SUBJ < >,
                               SPR < >,
                               COMPS < > ],
                         MC na ],
                   CONT.MSG no_msg ],
    HEAD-DTR 
         [ SYNSEM 
	   [ LOCAL [ CAT [ HEAD gerund & [ KEYS.KEY gerund_rel ],
                           VAL [ SPR < unexpressed_reg >,
                                 COMPS < > ],
                           MC na_or_- ],
		     CONJ cnil,
		     CONT.HOOK [ LTOP #hand,
                                 INDEX #index & [ DIVISIBLE + ] ] ] ] ],
    C-CONT [ HOOK.INDEX #index,
	     RELS <! [ PRED udef_q_rel,
                       ARG0 #index,
                       RSTR #rhand ] !>,
	     HCONS <! qeq &
		     [ HARG #rhand,
		       LARG #hand ] !> ] ].


; 'That Kim slept bothers sandy"
; 'Whether (or not) Kim slept is not clear to Sandy"
; DPF 28-Nov-02 - HOOK comes only from C-CONT

basic_np_cp_phrase := unary_phrase & phrasal &
  [ SYNSEM [ LOCAL [ CAT [ HEAD noun & 
                                [ MOD < >,
                                  KEYS [ KEY nominalize_rel,
                                         ALTKEY udef_q_rel ] ],
                           VAL [ SUBJ < >,
                                 SPR < >,
                                 COMPS < >,
                                 SPEC < anti_synsem > ],
                           MC na ],
                     AGR.PNG.PN 3sg,
                     CONJ cnil,
                     CONT.MSG #msg ],
             NON-LOCAL [ SLASH 0-dlist,
                         QUE 0-dlist,
                         REL 0-dlist ] ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD [ VFORM fin_or_inf,
                                           INV -,
                                           TAM.MOOD ind_or_mod_subj ],
                                    VAL.COMPS *olist*,
                                    MC - ],
                              CONJ cnil,
                              CONT [ HOOK [ LTOP #chand,
                                            XARG non_expl-ind ],
                                     MSG #msg & message & 
                                               [ PRED prop_ques_m_rel ] ] ],
                      NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
                                  QUE 0-dlist,
                                  REL 0-dlist ] ] ] >,
    C-CONT [ HOOK.INDEX #index,
	     RELS <! [ PRED udef_q_rel,
                       ARG0 #index,
                       RSTR #rhand ],
                      nominalize_relation &
                    [ LBL #nhand,
                      ARG0 #index,
                      ARG1 #chand ] !>,
             HCONS <! qeq &
		     [ HARG #rhand,
		       LARG #nhand ] !> ] ].


np_cp_phrase := basic_np_cp_phrase &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE #case,
    ARGS < [ SYNSEM.LOCAL.CAT.HEAD comp & [ CASE #case ] ] > ].

;; DPF 11-Apr-02 -- Why is this rule needed, again?  It produces spurious
;; parses, as in "He thought about what she said."
#|
np_cp_wh_phrase := basic_np_cp_phrase &
  [ ARGS < [ SYNSEM.LOCAL [ CAT.HEAD verb,
                            CONT.MSG.PRED int_m_rel ] ] > ].
|#

;; 
;; Noun-noun compounds
;;

; Make left member be [ COMPS < > ] to avoid spurious ambiguity since we have
; separate lexical entries to handle optional nominal complements.
; DPF (22-Oct-98) Can't do the above, since it's not true for most nouns, and
; also won't work for "two fifteen meeting" where the am_pm argument is not
; expressed, but can't be discharged by the optcomp rule.

; DPF (4-Mar-99) - Removed the gratuitous some_rel, which was wrong for
; proper name left members of N-N compounds, and also wrong for hour words like
; "a one o'clock meeting" since "one o'clock" already supplied a def_q_rel of
; its own.
; Added [ ALTKEY no_rel ] to non-head-dtr to block partitives, deverbal nouns,
; and other unwanted NPs with complex lexical semantics.
; DPF 09-Jan-00 - Also added [ ALTKEY no_rel ] to head-dtr, to block adj-nouns
; from compounds, as in "*Devito five" (ignoring for now "the Jackson five").
; 23-Oct-00 - Dropped NONHEAD-DTR's [AGR 3sg] constraint in order to allow
; "auto and mortgage loans", as well as "systems analyst" - the constraint is
; not really AGR 3sg, but perhaps something like lexeme vs. inflected word,
; where the lexeme might be conjoined, or even lexically marked as if it were
; plural, but still not [INFLECTED +].
; DPF 18-Aug-01 - Instead of that failed [AGR 3sg] constraint, made the non-hd
; be [INDEX 3sg], since conjoined nominals do not constrain the INDEX value.
; This lets us get 'auto and mortgage loans' while still blocking 'cats hairs'
; 23-Oct-00 - Changed NONHEAD-DTR's constraint, removing 'pronominal_synsem'
; and instead making the KEY be nonpro_rel, in order to allow conjoined 
; lexical NPs such as "auto and mortgage loans", where the synsem of the phrase
; will not be a subtype of nonpronominal_synsem.
; 17-Nov-00 - Removed 0-dlist specification for head-dtr and mother for
; QUE and REL, since this blocked e.g. "Which state office did he seek"
; DPF 1-Mar-01 - Changed COMPS *olist* to < > on non-head, now that we are 
; pumping nouns with complements.
; DPF 5-Apr-01 - Moved [LPERIPH -] from here to the noun-noun subtype, to 
; continue to block "towel rusty rack" but allow "1998 annual report".

basic_n_n_cmpnd_phr := head_final & head_compositional &
  [ INFLECTED #infl,
    SYNSEM [ LOCAL [ CAT [ VAL #valence,
			   MC #mc ],
                     CONT.MSG #msg ],
	     NON-LOCAL [ SLASH #slash,
			 QUE #que,
			 REL #rel ] ],
    HEAD-DTR 
     [ INFLECTED #infl,
       SYNSEM synsem &
	   [ LOCAL [ CAT [ HEAD.KEYS.KEY nonpro_rel,
                           VAL #valence,
			   MC #mc ],
		     CONT [ HOOK.INDEX ref-ind,
                            MSG #msg ],
                     CONJ cnil ],
	     NON-LOCAL [ SLASH #slash,
			 QUE #que,
			 REL #rel ],
             MODIFIED notmod_or_lmod ],
       ROBUST #robust ],
    NON-HEAD-DTR 
     [ SYNSEM 
	   [ LOCAL [ CAT [ HEAD.KEYS.KEY nonpro_or_mnp_rel,
                           VAL [ COMPS < >, 
                                 SPR *unexplist* ] ],
		     CONT.HOOK.INDEX ref-ind ],
             NON-LOCAL [ SLASH 0-dlist,
			 QUE 0-dlist,
			 REL 0-dlist ] ],
       ROBUST - ],
    ROBUST #robust ].

norm_n_n_cmpnd_phr := basic_n_n_cmpnd_phr &
  [ HEAD-DTR.SYNSEM [ LOCAL.CONT.HOOK [ LTOP #ltop,
                                        INDEX #hind ] ],
    NON-HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX #modind,
    C-CONT.RELS.LIST < prep_notense_relation &
                       [ LBL #ltop,
                         PRED compound_rel,
                         ARG1 #hind,
                         ARG2 #modind ], ... > ].

n_n_cmpnd_phr := norm_n_n_cmpnd_phr &
  [ SYNSEM lex_phr_synsem &
	   [ LOCAL.CAT.HEAD.MOD < >,
             LEX + ],
    HEAD-DTR.SYNSEM 
	   [ LOCAL.CAT [ HEAD supnoun,
                         VAL.SPR < synsem & 
                                   [ OPT -,
                                     LOCAL.CAT.HEAD.KEYS.KEY quant_rel ] >]]].

; DPF 22-Mar-01 - It seems we need LEX + on non-head-dtr to block "an exactly 
; seven appointment", since we want "a seven o'clock appointment".  But why did
; we move LEX + down from the n_n_cmpnd_phr in the first place?
; DPF 6-Apr-01 - Added LPERIPH na_or_- to head-dtr to block "Browne five 
; dollars" while still allowing "1998 annual report".
; DPF 17-Apr-01 - Added LPERIPH na to mother to block NNN-cmpnd for "a reason 
; Kim left"
; DPF 5-Sep-03 - Changed HEAD-DTR..ALTKEY no_rel to def_or_udef_q_rel
; since ALTKEY now inherits from head-dtr to mother, but we still want to
; block proper names, numbers, etc as head dtrs.
; DPF 5-Sep-03 - And changed NON-HEAD-DTR..ALTKEY to proper_q_rel.
; DPF 25-Nov-03 - Changed NHD's LEX from + to na_or_+ to allow conjoined
; proper names while still blocking "an exactly seven appointment"
; DPF 10-dec-03 - Since numerals are now LPERIPH na (to block spurious parse
; for "two hundred three chairs" while allowing "two hundred big chairs"),
; make head-dtr be LPERIPH bool, to still block "Browne five chairs" but get
; "IBM annual report"
; Also added PRD - to NHD to prevent measure phrases here in currency "usd 10"
; DPF 10-dec-03 - Tried adding HEAD-DTR..ALTKEY def_or_udef_q_rel to prevent 
; proper names, to avoid spurious analysis for e.g. "Kim Abrams".  But this
; conflicts with the no_rel constraint on NHD for N-N-cmpnd rule, blocking one
; analysis for "CSLI department manager".  So try restricting H-DTR..KEY to
; nom_nbar_rel.

np_n_cmpnd_phr := n_n_cmpnd_phr &
  [ SYNSEM.MODIFIED.LPERIPH bool,
    HEAD-DTR.SYNSEM abstr_lex_synsem &
                      [ LEX +,
                        LOCAL.CAT.HEAD.KEYS.KEY nom_nbar_rel,
                        MODIFIED.LPERIPH bool ],
    NON-HEAD-DTR [ INFLECTED +,
                   SYNSEM [ LOCAL [ CAT [ HEAD noun &
                                               [ KEYS [ KEY abstr_named_rel,
                                                        ALTKEY proper_q_rel ],
                                                 PRD - ],
                                          VAL [ SPR *unexpnull*,
                                                SUBJ < > ] ] ],
                            LEX na_or_+ ] ],
    C-CONT [ RELS <! relation !>,
             HCONS <! !> ] ].

; 'A two o'clock appointment" - hour-noun's specifier is degree phrase, as in
; 'exactly two o'clock', but block '*an exactly two o'clock appointment'
; DPF 2-Jun-02 - Check this rule and the above, since unwanted phrase is 
; currently parsing.

np_n_cmpnd_phr_2 := n_n_cmpnd_phr &
  [ HEAD-DTR.SYNSEM abstr_lex_synsem &
                      [ LEX +,
                        MODIFIED.LPERIPH na_or_- ],
    NON-HEAD-DTR [ INFLECTED +,
                   SYNSEM basic_lex_synsem &
                    [ LOCAL [ CAT [ HEAD.KEYS.KEY numbered_hour_rel,
                                    VAL [ SPR *unexpcons* &
                                              < [ OPT + ] >,
                                          SUBJ < > ] ],
                              CONT.HOOK.INDEX.PNG.PN 3sg ],
                      LEX + ] ],
    C-CONT [ RELS <! relation !>,
	     HCONS <! !> ] ].

; For "Jim Smith"
; DPF 10-Apr-02 - Changed HEAD-DTR..KEY from named_np_rel to abstr_named_np_rel
; to allow number names, as in "Toshiba 3000" of "Toshiba 3000 laptop".  Also
; removed LEX + from HEAD-DTR for same reason.

#|
np_name_cmpnd_phr := n_n_cmpnd_phr &
  [ SYNSEM.MODIFIED lmod & [ LPERIPH + ],
    HEAD-DTR.SYNSEM [ LOCAL.CAT.HEAD.KEYS.KEY named_np_or_num_rel,
                      MODIFIED notmod & [ LPERIPH + ] ],
    NON-HEAD-DTR [ INFLECTED +,
                   SYNSEM [ LOCAL.CAT [ HEAD.KEYS [ KEY named_np_rel,
                                                    ALTKEY proper_q_rel ],
                                        VAL.SPR *unexpnull* ],
                            MODIFIED.LPERIPH +,
                            LEX + ] ],
    C-CONT [ RELS <! prep_notense_relation & [ PRED compound_rel ] !>,
             HCONS <! !> ] ].
|#

; DPF 14-feb-04 - Removed MODIFIED lmod since want these in appositive
; constructions.  

np_name_cmpnd_phr := basic_n_n_cmpnd_phr &
  [ SYNSEM lex_phr_synsem & [ MODIFIED.LPERIPH +,
                              LOCAL.CAT.HEAD.MOD < > ],
    HEAD-DTR.SYNSEM 
           [ LOCAL [ CAT [ HEAD noun &
                                [ KEYS.KEY named_np_or_num_rel ],
                           VAL.SPR < synsem & 
                                     [ OPT -,
                                       LOCAL.CAT.HEAD.KEYS.KEY quant_rel ] > ],
                     CONT.HOOK [ LTOP #ltop,
				 INDEX #ind ] ],
	     MODIFIED notmod & [ LPERIPH + ] ],
    NON-HEAD-DTR [ INFLECTED +,
                   SYNSEM [ LOCAL [ CAT [ HEAD.KEYS [ KEY named_np_rel,
                                                      ALTKEY proper_q_rel ],
                                          VAL.SPR < synsem > ],
                                    CONT.HOOK [ LTOP #nhltop,
						INDEX #nhind ] ],
                            MODIFIED.LPERIPH +,
                            LEX + ] ],
    C-CONT [ RELS <! prep_notense_relation & 
		     [ LBL #ltop,
		       PRED compound_name_rel,
		       ARG1 #nhind,
		       ARG2 #ind ], 
                     [ PRED udef_q_rel,
                       ARG0 #nhind,
                       RSTR #rhand ] !>,
	     HCONS <! qeq & [ HARG #rhand,
                              LARG #nhltop ] !> ] ].

; DPF 24-Sept-01 - Made LPERIPH of mother be same as LPERIPH of non-hd, to 
; block e.g. "*The table important consultant chair arrives".
; DPF 2-Jul-02 - Go back to making NON-HEAD-DTR..ALTKEY be no_rel to block
; spurious compound analysis for v-gerund for "hiring Sandy", and let's see
; why we wanted to remove it in the first place.
; DPF 9-Oct-02 - Removed [OPT -] from NON-HEAD-DTR..VAL.SPR, since it prevented
; compounds like "three pm meeting", and it's not clear what it was needed for.
; DPF 08-May-03 - Identified MODIFIED of mother and non-hd-dtr (see 24-Sept-01)
; to preserve notmod or lmod status of the left member (not just the PERIPH
; value).
; DPF 05-Sep-03 - Replaced NON-HEAD-DTR..ALTKEY no_rel with 
; def_or_udef_q_rel, since no_rel not needed to block verbal gerunds
; anymore, but still want to prevent proper names, while also getting second
; parse for "CSLI department manager".
; DPF 10-dec-03 - But this doesn't block proper names, since their ALTKEY
; only gets specialized to proper_q_rel when made an NP.  So go back to no_rel.
; DPF 10-dec-03 - Made LPERIPH of NHD be bool to exclude possibly spurious 
; analysis for "the ten foot chair".  But this would make the rule not 
; right-recursive, preventing the less likely analysis of "the tobacco garden 
; dog".  So drop constraint on NHD..LPERIPH, and live with the ambiguity.
; DPF 14-dec-03 - Wonder about motivation for 08-May-03 change, since this
; now prevents Adj-N-N from being modified by a PP, as in "big league baseball
; in Pittsburgh".  FIX.

noun_n_cmpnd_phr := n_n_cmpnd_phr &
  [ SYNSEM.MODIFIED #modif,
    HEAD-DTR.SYNSEM abstr_lex_synsem & 
                    [ MODIFIED.LPERIPH na,
                      LEX + ],
    NON-HEAD-DTR 
       [ INFLECTED -,
         SYNSEM abstr_lex_synsem &
                   [ LOCAL [ CAT [ HEAD noun_or_nomger & 
                                        [ PRD -,
                                          KEYS [ ALTKEY no_rel,
                                                 ALT2KEY no_rel ] ],
                                   VAL.SPR *unexpcons* ],
                             CONT.HOOK [ LTOP #nltop,
                                         INDEX #nind ] ],
                     LEX +,
                     MODIFIED #modif ] ],
    C-CONT [ RELS <! prep_notense_relation &
                     [ PRED compound_rel ], 
                     [ PRED udef_q_rel,
                       ARG0 #nind,
                       RSTR #rhand ] !>,
	     HCONS <! qeq & [ HARG #rhand,
                              LARG #nltop ] !> ] ].

; for "[identification number] 222"

noun_title_cmpnd_phr := norm_n_n_cmpnd_phr &
  [ SYNSEM lex_phr_synsem &
           [ LOCAL.CAT.HEAD.MOD #mod ],
    HEAD-DTR.SYNSEM abstr_lex_synsem & 
                    [ LOCAL.CAT [ HEAD adv &
                                       [ MOD #mod & 
                                             < synsem &
                                               [ LOCAL.CAT nbar_cat_min ] > ],
                                  VAL.SPR < > ],
                      LEX + ],
    NON-HEAD-DTR
           [ INFLECTED +,
             SYNSEM abstr_lex_synsem &
                       [ LOCAL [ CAT [ HEAD noun & [ PRD - ],
                                       VAL.SPR *unexpcons* &
                                            < [ OPT - ] > ],
                                 CONT.HOOK [ LTOP #nltop,
                                             INDEX #nind  & [ PNG.PN 3sg ] ] ],
                         LEX + ] ],
    C-CONT [ RELS <! prep_notense_relation &
                     [ PRED compound_rel ], 
                     [ PRED udef_q_rel,
                       ARG0 #nind,
                       RSTR #rhand ] !>,
	     HCONS <! qeq & [ HARG #rhand,
                              LARG #nltop ] !> ] ].

;; Appositives
;; For now, restrict this to temporal nouns and proper names, since it's an 
;; overly enthusiastic rule.  So only get "Tuesday the tenth" and "Jim Smith"
;; (well, and also "Jim the tenth", but then it's only a hack anyway).
;; Use CASE feature hack on non-head to avoid unwanted "minor" NPs like 
;; minute_word as appositives: "seven thirty"
;; DPF 10-May-00 - In fact, restrict to only proper names, since the date
;; guys already come in via the npadv_mod rule.
;; DPF 11-Sept-01 - Restrict head-dtr to be reg_nom_rel (not basic_nom_rel)
;; to exclude deictic pronouns as in "that Kim", and further restrict to
;; explicit_q_rel so we can allow nonhead-dtr to include numbers as in
;; "the number five" but not "Abrams five".  This means we'll get as an
;; appositive "my friend Kim" but not "Kim my friend".  It means we also
;; block this analysis for "Lee Browne" - probably right.
;; DPF 12-Sept-01 - Restrict head-dtr to be PRD + to rule out free-relatives
;; DPF 18-Oct-01 - Removed [MODIFIED notmod] from HEAD-DTR, since it blocks
;; 'my old friend kim'
;; DPF 4-Dec-02 - Made AGR..PN be strict_sort on the two dtrs, to exclude
;; as appositives e.g. "Kim and Sandy the book", even though this also rightly
;; will force another analysis to be constructed someday for 
;; "the brothers Grimm".
;; DPF 5-Sep-03 - Changed HEAD-DTR..ALTKEY from explicit_q_rel to quant_rel
;; to allow proper names which now have ALTKEY proper_q_rel.  Use SORT 
;; unification now to block "Abrams five" while allowing "the number five".
;; DPF 13-Nov-03 - Generalized to allow definite NPs as right dtrs, and
;; prevented recursion by use of LPERIPH.  [ALT2KEY no_rel] prevents np_adv's
;; like in "the chair here" or "here the chair"
;; DPF 27-jan-04 - Made MODIFIED on non-hd dtr be notmod_or_rmod to prevent 
;; appositive analysis for "Kim interviewed Sandy".

appos_phr := head_initial_infl & head_compositional &
  [ SYNSEM phr_synsem &
	   [ LOCAL.CAT [ VAL #valence ],
	     NON-LOCAL [ SLASH 0-dlist,
			 QUE 0-dlist,
			 REL 0-dlist ],
             MODIFIED.LPERIPH na ],
    HEAD-DTR.SYNSEM canonical_synsem &
	   [ LOCAL [ CAT [ HEAD noun & 
                                [ PRD -,
                                  KEYS [ KEY reg_nom_rel,
                                         ALTKEY non_freerel_q_rel,
                                         ALT2KEY no_rel ] ],
                           VAL #valence &
			       [ SPR *olist*,
                                 SUBJ < >,
				 COMPS < > ] ],
		     CONT.HOOK [ INDEX #hind & ref-ind &
                                      [ SORT #sort ],
                                 XARG #ltop ],
		     CONJ cnil ],
	     NON-LOCAL [ SLASH 0-dlist,
			 QUE 0-dlist,
			 REL 0-dlist ],
             MODIFIED.LPERIPH bool ],
    NON-HEAD-DTR.SYNSEM canonical_synsem &
	   [ LOCAL [ CAT [ HEAD noun &
                                [ KEYS [ KEY nonpro_rel,
                                         ALTKEY def_or_proper_q_rel,
                                         ALT2KEY no_rel ] ],
                           VAL [ SPR *olist*,
                                 SUBJ < >,
				 COMPS < > ] ],
		     CONT.HOOK [ INDEX #modind & ref-ind &
                                      [ SORT #sort ] ] ],
	     NON-LOCAL [ SLASH 0-dlist,
			 QUE 0-dlist,
			 REL 0-dlist ],
             MODIFIED notmod_or_rmod & [ LPERIPH bool ] ],
    C-CONT [ RELS <! prep_notense_relation &
                     [ LBL #ltop,
                       PRED appos_rel,
                       ARG1 #hind,
                       ARG2 #modind ] !>,
             HCONS <! !> ] ].

;;
;; Adverbial-NP modifiers
;;

; DPF 11-Jun-99 - Added SUBJ..OPT - to prevent these temporal NPs from filling
; ordinary NP argument positions.
;
; DPF 26-Jul-99 - Changed [HEAD noun] to [HEAD prep] to avoid double parse
; for "Thursday the fourth" where "the fourth" attaches after "Thursday"
; is itself an npadv_mod phrase.
; DPF 9-Sept-99 - Added PRD - to mother, to block temp-mods as complements of
; copula.
; DPF 30-Sept-99 - But this blocks all post-nominal modification with temporal
; NPs, sigh.  Besides, the most natural reading of "The meeting is Tuesday" is
; with the temp-mod reading rather than the identity one.
; DPF 2-Sept-00 - Removed SPR, to avoid spurious analysis for "my mornings 
; look pretty booked tuesdays".  Don't recall why we wanted a SPR on these
; phrases.
; DPF 4-Apr-01 - Added PRD from dtr to prevent e.g. relpro "that" from being 
; the complement of copula, as in "the book that Kim is", while allowing "here
; are the books", which requires npadv_mod extraction from locative inversion.
; DPF 17-Jul-01 - Replaced SPR, since we want "leave right now", where the 
; nominal "now" gets pumped to a modifier, and can (only) then take a degree 
; specifier.  It seems the ambiguity of 2-Sept-00 is not spurious, just
; unlikely.
; DPF 25-Sep-01 - Added reentrancy of AGR and SUBJ's INDEX, to get no-copula
; constructions like "Kim in Berlin becoming impatient"
; DPF 2-Apr-02 - Made SUBJ be expressed_synsem rather than synsem, to prevent
; these phrases from appearing as complements of when_subord_prd.
; DPF 30-May-02 - But this also blocks "someone there".  So remove this
; constraint, and instead restrict the when_subord_prd complement to be
; non-temporal.
; DPF 9-May-02 - Identified INDEX.SORT of dtr and of mother, to avoid letting
; temporal NPs be fillers for ordinary adjunct extraction, which was giving
; us a spurious parse for e.g. "when did kim arrive"
; DPF 28-Nov-02 - HOOK comes only from C-CONT
; DPF 2-May-03 - Try replacing dtr's [MODIFIED hasmod] with [MODIFIED lmod] to
; block "*KIm fell time that I did" but allow "Kim fell two times".  This
; seems to force us to have two lexical entries for "the", one which is notmod
; (as is its head sister), and one for modified nominals, where "the" stamps
; [MODIFIED lmod] whether the nominal is right-modified or left-modified, so
; we still get "Kim arrived the week Sandy left".
; DPF 13-May-02 - Added SLASH <! !> to prevent spurious ambiguity for "Kim
; arrived when(ever) Sandy left". 
; DPF 27-May-03 - Re 2-May-03: But those two "the" entries have the effect of
; preventing us from using the intersective modification efficiency improvement
; for generation, since "the consultant" uses a different "the" than "the tall
; consultant", which means the generator's second-pass adjunction algorithm
; will fail to enrich "the consultant" to "the tall consultant".  Since that
; two-pass strategy depends on the phrase without modifiers being the "same"
; as the phrase with modifiers (at least using the same lexical entries), it
; seems to drive us back to just one entry for "the" which preserves the
; MODIFIED value of its SPEC.  And then this rule requires that its dtr go back
; to just [MODIFIED hasmod].  Not too troubling for this particular case, since
; the above example with "time" was playing on an ambiguity between the count
; and the mass senses, which we are treating as underspecification, perhaps
; wrongly.
; DPF 06-Jun-03 - Changed the identity of SORT on dtr and mother's INDEX, since
; this excluded temporal modifiers of non-temporal nouns ("meetings Tuesday"),
; and seemed counter-intuitive.  Rather we want the SORT of the dtr to 
; constrain the ARG0 of the derived "PP" itself (its E-INDEX), not what the PP 
; modifies.
; DPF 09-Jun-03 - Made dtr be MODIFIED.LPERIPH +_or_- to exclude "Kim arrived
; times I left"
; DPF 22-Jul-03 - Might think to make SPR's KEY be much_deg_rel rather than 
; simply degree_rel to avoid spurious ambig for "right now", given two entries
; "right" for 'very' and 'much' type degree specifiers.  But this blocks "too
; late" where "too" is not much-deg subtype.  
; DPF 16-oct-03 - Chaged LPERIPH from +_or_- to na_or_+ to be consistent with
; revised treatment of number adjectives
; DPF 30-oct-03 - Mysteriously, MOD was not restricted to non-empty SPR, which
; meant spurious parses attaching to both Nbar and NP (and VP and S).  Changed,
; but how unnoticed till now?  Also, --SEMIND on SUBJ was not co-indexed. Fixed

npadv_mod_phrase := unary_phrase & phrasal &
  [ SYNSEM [ LOCAL [ CAT [ HEAD modnp &
				[ MOD < [ LOCAL intersective_mod &
					  [ CAT n_or_v_cat & 
                                                [ VAL.SPR < synsem_min >,
                                                  MC #mc ],
                                            CONT [ HOOK.LTOP #ltop,
                                                   MSG no_msg ],
                                            CONJ cnil ],
                                          NON-LOCAL.REL 0-dlist,
                                          --SEMIND #ind & non_expl ] >,
                                  TAM #tam,
                                  KEYS [ KEY unspec_loc_rel,
                                         ALTKEY #argkey ] ],
                           POSTHEAD +,
			   VAL [ SUBJ < >,
                                 SPR < [ LOCAL local_min &
                                         [ CAT [ HEAD adv &
                                                      [ KEYS.KEY degree_rel ],
                                                 VAL.SPR *olist* ],
                                           CONT.HOOK [ LTOP #khand,
                                                       INDEX #arg0 ] ],
					 NON-LOCAL.QUE 0-dlist,
                                         OPT + ] >,
                                 COMPS #comps ],
			   MC #mc ],
		     CONT [ HOOK [ LTOP #ltop,
                                   XARG #ind,
                                   INDEX [ SORT #sort,
					   E.ASPECT.STATIVE + ] ],
			    MSG no_msg ],
                     CONJ cnil,
                     AGR #ind ],
             NON-LOCAL #nonloc & [ REL 0-dlist,
                                   SLASH 0-dlist ],
             ROOT - ],
    ARGS < [ INFLECTED +,
             SYNSEM [ LOCAL [ CAT [ HEAD noun & 
                                         [ KEYS.KEY modable_rel & #argkey ],
                                    VAL [ SPR *olist*,
                                          SUBJ < >,
					  COMPS #comps & < > ] ],
			      CONT.HOOK.INDEX #index & [ SORT #sort ],
			      CONJ cnil ],
		      NON-LOCAL #nonloc,
		      MODIFIED hasmod & [ LPERIPH na_or_+ ] ],
             ROBUST - ] >,
    C-CONT [ HOOK [ LTOP #khand,
                    INDEX #arg0 ],
	     RELS <! prep_relation &
                     [ LBL #khand,
                       PRED unspec_loc_rel,
                       ARG0 #arg0 & [ E #tam ],
                       ARG1 #ind & event_or_index,
                       ARG2 #index ] !>,
	     HCONS <! !> ] ].

; DPF 5-Feb-01 - Restrict mother's SPEC..HEAD value to adj for now, to block
; silly analysis for e.g. "There are a bookcase in the office."
; DPF 22-Apr-01 - Added MODIFIED identification of mother and left daughter to
; distinguish "an inch" from "one inch" as in "I need one inch nails" but not
; "*I need a inch nails".  Corresponds here roughly to left stress.
; DPF 8-Jan-02 - Removed above constraint on SPEC, since this also blocked
; "Kim arrived two days before Sandy".  Instead, prevent most PPs from taking
; measure-NP specifiers.
; DPF 11-Feb-02 - Made INDEX.SORT of phrase be that of right dtr to enable
; blocking of meas-NP analysis of "a laptop" in "Can you get me a laptop before
; Christmas"
; DPF 2-Apr-02 - Changed SPEC..HEAD from a_or_adv to a_or_p since we don't
; want "ten times competently".  Will need to do something for comparative
; adverbs like "faster" as in "ten times faster".
; DPF 28-Nov-02 - HOOK comes only from C-CONT
; DPF 17-Jul-03 - Changed C-CONT.RELS deg_rel to much_or_very_deg_rel, since 
; we want MNP specifiers for comparatives as well, but still exclude them for
; e.g. subordinating conjunctions.
; DPF 10-dec-03 - Made DTR1 be COMPS < > to avoid spurious measure-NP for e.g.
; "thirty foot" - possible now that we've changed analysis for currency as in
; "usd 10"

basic_measure_np_phrase := phrase &
  [ INFLECTED #bool,
    SYNSEM phr_degree_spec_synsem &
           [ LOCAL [ CAT [ HEAD.KEYS.KEY much_or_very_deg_rel,
                           VAL [ SPEC < synsem &
                                        [ LOCAL [ CAT.HEAD a_or_p & 
                                                      [ PRD #bool ] ] ] > ] ],
                     CONJ cnil ],
             NON-LOCAL [ SLASH 0-dlist,
                         QUE 0-dlist,
                         REL 0-dlist ],
             ROOT - ],
    DTR1 [ INFLECTED #bool,
           SYNSEM lex_synsem &
                  [ LOCAL [ CAT [ HEAD noun &
                                       [ KEYS [ KEY nonpro_rel,
                                                ALTKEY no_rel ] ],
                                  VAL [ SUBJ < >,
                                        SPR < canonical_synsem &
                                              [ OPT -,
                                                LOCAL local &
                                                 [ CAT.HEAD.KEYS.KEY 
                                                               udef_q_rel ],
                                                NON-LOCAL 
                                                    [ SLASH 0-dlist,
                                                      REL 0-dlist,
                                                      QUE 0-dlist ] ] >,
                                        COMPS < > ] ],
                            CONJ cnil,
                            CONT [ HOOK [ LTOP #nhand,
                                          INDEX #index & 
                                               [ PNG.PN pernum ] ],
                                   MSG no_msg ] ],
                    NON-LOCAL.SLASH 0-dlist,
                    MODIFIED.LPERIPH bool ],
           ROBUST #robust ],
    C-CONT [ RELS.LIST < degree_relation & [ PRED degree_rel ],
                         [ PRED udef_q_rel,
                           ARG0 #index,
                           RSTR #rhand ], ... >,
             HCONS.LIST < qeq &
                          [ HARG #rhand,
                            LARG #nhand ], ... > ],
    ROBUST #robust ].

; For "days ago"
; DPF 15-Nov-03 - Made bare-MNPs HEAD adv to prevent "*days arrive(s)" etc.

bare_measure_np_phrase := basic_unary_phrase & basic_measure_np_phrase &
  [ INFLECTED +,
    SYNSEM.LOCAL [ CAT [ HEAD adv,
                         VAL [ SPR < anti_synsem >,
                               COMPS < > ] ],
                   AGR #agr ],
    DTR1 #dtr1 & [ INFLECTED +,
		   SYNSEM [ LOCAL [ CAT.HEAD.KEYS.KEY temp_abstr_rel,
                                    AGR #agr & [ PNG.PN 3pl ] ],
                            MODIFIED notmod ] ],
    C-CONT [ RELS <! relation, relation !>,
             HCONS <! qeq !> ],
    ARGS < #dtr1 > ].

; DPF 12-Apr-03 - Added ORDINAL - to DTR2 to block e.g. 'first day' as meas-NP

binary_measure_np_phrase := basic_binary_phrase & basic_measure_np_phrase &
  [ SYNSEM [ LOCAL [ CAT [ HEAD noun & [ PRD #bool ],
                           VAL.COMPS #comps ],
                     AGR.PNG.PN 3sg ],
             MODIFIED notmod ],                   
    DTR2 [ INFLECTED +,
           SYNSEM [ LOCAL [ CAT [ HEAD intadj & 
                                       [ PRD #bool,
                                         ORDINAL -,
                                         KEYS.KEY const_rel,
                                         MOD < [ PHON.ONSET #onset ] > ],
                                  VAL [ SPR *olist*,
                                        COMPS #comps & *phrlist*,
                                        SPEC < > ] ],
                            CONT.HOOK [ LTOP #nhand,
                                        XARG #index ],
                            CONJ cnil ],
                    LEX + ],
           ROBUST #robust ],
    DTR1 [ SYNSEM [ LOCAL.CONT.HOOK [ LTOP #nhand,
                                      INDEX #index ],
                    PHON.ONSET #onset ],
           ROBUST #robust ],
    C-CONT [ RELS <! relation & [ LBL #nhand ], 
                     relation !>,
             HCONS <! qeq !> ] ].

; DPF 16-May-01 - Cannot have [DTR1..COMPS < >] (as desired to avoid spurious
; parse for "he is ten pounds heavier" where "pound" takes optional pp-of),
; since cannot discharge that optional complement if the noun is uninflected,
; as in "the ten pound heavier guy".  So allow spurious analysis for now.

measure_np_phrase := binary_measure_np_phrase &
  [ DTR1 #dtr1,
    DTR2 #dtr2,
    ARGS < #dtr2, #dtr1 > ].

; For $ 100 (100 dollars) where the head precedes the integer.  
; DPF 16-May-01 - Suggests that the rule for measure_nps should be a 
; non-branching rule.  Especially given the difficulty of pp-of nouns noted 
; just above. But would have to allow "sixty" and "dollar" to combine in
; general, then block most of the time - sigh.  Leave for now.

measure_np_symbol_phrase := binary_measure_np_phrase &
  [ DTR1 #dtr1 & [ SYNSEM common_noun_numcomp_synsem ],
    DTR2 #dtr2,
    ARGS < #dtr1, #dtr2 > ].


; DPF 5-Apr-01 - For "two hundred is enough"
; DPF 13-May-01 - Added [SYNSEM..LPERIPH +] to prevent these numbers from
; being modified.
; DPF 31-Oct-01 - But this blocks "order 123 for a chair was cancelled."
; DPF 22-May-01 - Added [LEX -] to prevent these from appearing as left members
; of noun-noun compounds as in "sixty books".
; DPF 29-May-02 - Removed MOD < synsem > from ARGS.FIRST, so "one" can also
; undergo this rule.
; DPF 31-May-02 - Added [ARGS..FIRST..HEAD.PRD -] to block "a/an"
; DPF 19-Oct-02 - Want to preserve LEX value on mother from dtr, so change
; from 22-May-01 and instead make mother be ALTKEY never_unify_rel, to still 
; prevent n-n-cmpnd participation.  Also make sign not phrasal.
; DPF 28-Nov-02 - HOOK comes only from C-CONT, since rule further specifies
; key integer relation to named_num_rel.
; DPF 01-Feb-03 - Required daughter's SPR to be saturated, to block e.g.
; "*hundred arrives".
; DPF 23-May-03 - Returned to issue from 31-Oct-01, and put back constraint
; preventing modification - getting too many spurious parses for "ten to three"
; and that purported counterexample is presumably non-restrictive modification
; of some kind (cf oddness of NP without title: "123 for a chair").
; DPF 5-Sep-03 - Changed ALTKEY never_unify_rel to number_q_rel so it will
; still undergo num_np rule.
; DPF 5-Sep-03 - Added ORDINAL - to prevent num. "third" from becoming a noun.
; DPF 16-oct-03 - Added SORT number to mother, to prevent "Abrams five" compnd.

num_noun_phrase := unary_phrase &
  [ SYNSEM [ LOCAL [ CAT nbar_cat & 
                         [ HEAD [ MOD < >,
                                  KEYS [ KEY #altkey & named_num_rel,
                                         ALTKEY number_q_rel ] ],
                           VAL.SPR < [ LOCAL.CAT.HEAD.KEYS.KEY number_q_rel,
                                       OPT - ] > ],
                     CONT nom-obj &
                         [ HOOK [ LTOP #nhand,
                                  INDEX #index & [ SORT number ] ],
                           HCONS <! !> ],
                     CONJ cnil,
                     AGR.PNG.PN 3sg ],
             NON-LOCAL #nonlocal,
             LEX #lex,
             MODIFIED lmod & [ LPERIPH + ] ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD intadj & 
                                         [ PRD -,
                                           ORDINAL -,
                                           KEYS [ KEY integer_rel,
                                                  ALTKEY #altkey ] ],
                                    VAL [ SPR < anti_synsem >,
                                          COMPS < > ] ],
                              CONJ cnil,
                              CONT.HOOK [ LTOP #nhand,
                                          XARG #index & [ PNG.PN 3pl ] ] ],
                      NON-LOCAL #nonlocal,
                      LEX #lex ] ] >,
    C-CONT.RELS <! !> ].

; DPF 19-Oct-02 - Restricted dtrs to be LEX + to avoid spurious ambiguity
; for e.g. "two thirty to five".  Also made mother LEX + to allow recursion,
; removing phrasal parent as well, 
; and made mother ALTKEY number_q_rel to still prevent these guys in 
; n-n-compnds.
; DPF 28-Nov-02 - HOOK comes only from C-CONT

num_noun_sequence_phrase := binary_phrase &
 [ SYNSEM [ LOCAL [ CAT nomp_cat & 
                        [ HEAD noun & 
                               [ MOD < >,
                                 KEYS [ KEY num_seq_nom_rel,
                                        ALTKEY number_q_rel ] ] ],
                    CONT nom-obj &
                        [ HOOK [ LTOP #hand,
                                 INDEX #index & [ SORT #sort ] ],
                          HCONS <! !> ],
                    CONJ cnil,
                    AGR #index & [ PNG.PN 3sg ] ],
            NON-LOCAL #nonlocal,
            LEX + ],
   ARGS < [ SYNSEM [ LOCAL [ CAT nomp_cat &
                                 [ HEAD.KEYS.KEY named_num_or_seq_rel ],
                             CONJ cnil,
                             CONT.HOOK.INDEX #index1 ],
                     NON-LOCAL #nonlocal,
                     LEX + ] ],
          [ SYNSEM [ LOCAL [ CAT nomp_cat &
                                 [ HEAD.KEYS.KEY named_num_rel ],
                             CONJ cnil,
                             CONT.HOOK.INDEX #index2 & [ SORT #sort ] ],
                     NON-LOCAL #nonlocal,
                     LEX + ] ] >,
   C-CONT.RELS <! [ LBL #hand,
                    PRED num_seq_rel,
                    C-ARG #index,
                    L-INDEX #index1,
                    R-INDEX #index2 ] !> ].


; DPF 12-Mar-99 - Can't simply identify HEAD of HEAD-DTR with SLASH..HEAD of 
; NON-HEAD-DTR, since these two HEAD values themselves include MOD, which 
; includes SUBJ values, which include CONT, and since the free relative
; combines with an S (not a VP), that SUBJ.CONT of the S/NP is now identified
; with the semantics of the S/NP's subject, but now it's not possible to
; use the free_rel phrase as a VP modifier, because it will eventually want to
; unify that same MOD.SUBJ.CONT with that of the subject of the VP that the
; free_rel modifies, but the RELS value of that attribute is already bound to 
; the earlier subject's RELS.
;   So we have each free-rel lexical entry specify the relevant constraints on
; the SLASH of its sister in this construction.
;   The QUE value of the free relatives is a singleton list containing an index
; instead of a handle - this distinguishes free relatives from question words,
; and makes available this index for interpretation at the ltop of the phrase,
; which may be desirable if there is indeed ambiguity in the meaning of
; examples like "I'll interview whoever's frog wins this race."  (We're not
; doing anything with that index just now, beyond checking for its presence.)
; DPF (1-May-99) Removed identification of HEAD-DTR..KEY and NHD-DTR..SLASH..KEY
; since the slash's KEY is already identified with the main verb's KEY in the
; non-head dtr, for independent reasons.  Don't know what work this was supposed
; to do, anyway.
;
; DPF 10-Jun-99 - Added SUBJ *olist* to head-dtr, to prevent e.g. "one to three".
; DPF 24-Mar-01 - Removed [MODIFIED notmod] from mother, since free-rels need
; to be able to undergo npadv_mod_phrase.

; DPF 8-Nov-01 - Made non-hd-dtr be either infinitival or finite in
; order to get "advise me on where to go" as well as "advise me on where I 
; should go"

free_rel_phrase := head_initial_infl & head_compositional &
  [ SYNSEM [ LOCAL [ CAT [ HEAD n_or_p,
			   MC na,
			   VAL [ SUBJ < >,
				 COMPS < >,
				 SPR < > ],
			   POSTHEAD + ],
                     CONJ cnil,
                     CONT.MSG no_msg ],
	     NON-LOCAL [ SLASH 0-dlist,
			 QUE 0-dlist,
			 REL 0-dlist ],
             LEX - ],
    HEAD-DTR.SYNSEM [ LOCAL local_min &
			    [ CAT [ HEAD.KEYS [ KEY #key & independent_rel,
                                                ALTKEY #altkey ],
                                    VAL [ COMPS < >,
                                          SPR *olist*,
                                          SUBJ *olist* ] ],
                              CONT.HOOK.LTOP #hand ],
                      NON-LOCAL [ QUE 1-dlist & <! ref-ind !>,
				  SLASH 1-dlist &
				      <! local_min & #loc !> ] ],
    NON-HEAD-DTR.SYNSEM [ LOCAL [ CAT [ HEAD verbal &
					     [ VFORM fin_or_inf,
					       INV - ],
					VAL [ SPR *olist*,
					      COMPS *olist* ] ],
				  CONT [ HOOK.LTOP #hand,
                                         MSG message ] ],
			  NON-LOCAL [ SLASH 1-dlist &
					    <! #loc &
					       [ CAT [ HEAD.KEYS 
                                                          [ KEY #key,
                                                            ALTKEY #altkey ],
                                                       VAL 
                                                        [ COMPS *olist*,
                                                          SPR *olist* ] ] ] !>,
                                      QUE 0-dlist,
				      REL 0-dlist ] ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ] ].

free_rel_inf_phrase := free_rel_phrase &
  [ NON-HEAD-DTR.SYNSEm.LOCAL.CAT [ HEAD comp & [ VFORM inf ],
                                    VAL.SUBJ < synsem & 
                                               [ NON-LOCAL.SLASH 0-dlist ]>]].

free_rel_fin_phrase := free_rel_phrase &
  [ NON-HEAD-DTR.SYNSEm.LOCAL.CAT [ HEAD verb & [ VFORM fin ],
                                    VAL.SUBJ *olist* ] ].

; For "two hundred twenty remain"
; DPF 31-May-02 - Added [ARGS..FIRST..HEAD.PRD -] to block "a/an"
; DPF 3-Jul-02 - Added [ARGS..INDEX..PN 3pl] to block "one", since already
; get determiner-partitive for "one".
; DPF 19-Oct-02 - Made SPR be LEX + to avoid getting complex measure-NPs
; as specifiers.
; DPF 28-Nov-02 - HOOK comes only from C-CONT
; DPF 01-Feb-03 - Since we now require the COMPS list to be empty for all NPs,
; and we also constrain the noptcomp rule to apply only to lexical heads (to
; get the interaction with noun-noun compounds right), we have to have two
; rules for partitive numbers, one for no-complement ones as in "three arrive"
; and one for those with of-PP complement, as in "three of them arrive".  This
; is in fact parallel to what we've decided to do for ordinary partitives, so
; no real surprise.
; DPF 13-May-03 - From 3-Jul-02, undid this since now using this rule instead
; for "one" partitive.
; DPF 05-Dec-03 - Added [SORT entity] to prevent spurious parses for 'from ten
; o'clock to eleven'.
; DPF 10-dec-03 - ARGS..SPEC *synlist* excludes ordinary NPs which have
; SPEC < anti_synsem > to distinguish them from measure NPS.  So this rule
; applies to numerals ('ten', 'forty-two') and measure NPs: 'ten miles of road'

basic_partitive_num_phrase := unary_phrase & phrasal &
  [ SYNSEM [ LOCAL [ CAT [ HEAD partn &
                                [ MOD < >,
                                  POSS -,
                                  KEYS.ALTKEY def_explicit_q_rel ],
                           VAL [ SUBJ < >,
                                 SPR < synsem &
                                       [ LOCAL local_min &
                                           [ CAT [ HEAD adv &
                                                      [ KEYS.KEY degree_rel ],
                                                   VAL [ SPR  *olist*,
                                                         COMPS *olist* ] ],
                                             CONT.HOOK [ LTOP #hand,
                                                         INDEX #pred ] ],
                                         NON-LOCAL [ QUE 0-dlist,
                                                     REL 0-dlist ],
                                         OPT +,
                                         LEX + ] > ],
                           HC-LEX - ],
                     CONT nom-obj & [ MSG no_msg ],
                     CONJ cnil,
                     AGR #index ],
             NON-LOCAL #nonloc & [ REL 0-dlist ],
             ROOT - ],
    ARGS < [ INFLECTED +,
             SYNSEM [ LOCAL [ CAT [ HEAD adj_partitive &
                                         [ PRD - ],
                                    VAL [ SUBJ < >,
                                          COMPS < >,
                                          SPEC *synlist* ] ],
                              CONJ cnil,
                              CONT.HOOK [ LTOP #nhand,
                                          XARG #index  ] ],
                      NON-LOCAL #nonloc ],
             ROBUST #robust ] >,
    C-CONT [ HOOK.INDEX #index & [ SORT entity ],
	     RELS <! [ LBL #nhand,
                       ARG0 #index ],
                     [ LBL #hand,
                       PRED def_explicit_q_rel & #pred,
                       ARG0 #index,
                       RSTR #phand ] !>,
	     HCONS <! qeq & [ HARG #phand,
                              LARG #nhand ] !> ],
    ROBUST #robust ].

partitive_num_nocomp_phrase := basic_partitive_num_phrase &
  [ SYNSEM.LOCAL.CAT [ HEAD.KEYS.KEY generic_nonpro_rel,
                       VAL.COMPS < > ],
    ARGS < [ SYNSEM.LOCAL.CAT.HEAD intadj_or_superl ] >,
    C-CONT.RELS.LIST.FIRST.PRED generic_nonpro_rel ].

partitive_num_ppof_phrase := basic_partitive_num_phrase &
  [ SYNSEM.LOCAL.CAT [ HEAD.KEYS.KEY part_of_rel,
                       VAL.COMPS < synsem &
                                 [ LOCAL local_min &
                                         [ CAT [ HEAD prep & 
                                                  [ PRD -,
                                                    TAM [ TENSE nontense,
                                                          ASPECT no_aspect ],
                                                    KEYS.KEY 
                                                        _of_p_sel_rel ],
                                                 VAL.COMPS *olist* ],
                                           CONT.HOOK [ LTOP #nhand,
                                                       INDEX #arg ] ],
                                   NON-LOCAL.SLASH 0-dlist,
                                   OPT - ] > ],
    C-CONT.RELS.LIST.FIRST reg_diadic_nom_relation &
                           [ LBL #nhand,
                             PRED part_of_rel,
                             ARG1 #arg & non_expl-ind ] ].

; DPF 11-Oct-02 - It seems that this rule is only used for robust parsing
; where a word like "covers" has to be analyzed as a possessive.  So let's
; make it ROBUST +.
; DPF 28-Nov-02 - HOOK comes only from C-CONT

possessed_np_phrase := basic_unary_phrase & phrasal &
 [ INFLECTED +,
   POSSCL -,
   SYNSEM [ LOCAL [ CAT [ HEAD det & [ POSS +,
                                       MOD < >,
                                       KEYS [ KEY def_q_rel,
                                              ALTKEY poss_rel ] ],
                          VAL [ SUBJ < >,
                                SPR < >,
                                COMPS < >,
                                SPEC < [ LOCAL.CONT.HOOK [ LTOP #phand,
                                                           INDEX #index ]]>] ],
                    CONJ cnil ],
            NON-LOCAL #nonlocal ],
   ARGS < [ INFLECTED +,
            POSSCL +,
            SYNSEM [ LOCAL [ CAT nomp_cat_min &
                                 [ HEAD.KEYS.KEY nonpro_rel ],
                             CONT.HOOK.INDEX #pindex & individual,
                             CONJ cnil ],
                     NON-LOCAL #nonlocal ],
            ROBUST #robust ] >,
   C-CONT [ HOOK.INDEX #index,
            RELS <! [ PRED def_q_rel,
                      ARG0 #index,
                      RSTR #rhand ],
                    [ LBL #phand,
                      PRED poss_rel,
                      ARG2 #pindex,
                      ARG1 #index ] !>,
            HCONS <! qeq & [ HARG #rhand,
                             LARG #phand ] !> ],
   ROBUST #robust & + ].

; For "the book's is red"
partitive_np_phrase := basic_unary_phrase & phrasal &
 [ INFLECTED +,
   SYNSEM [ LOCAL [ CAT [ HEAD partn &
                               [ MOD < >,
                                 POSS -,
                                 KEYS [ KEY generic_nonpro_rel,
                                         ALTKEY #argkey ] ],
                          VAL [ SPR < >,
                                SUBJ < >,
                                COMPS < > ] ],
                    AGR #agr,
                    CONJ #conj,
                    CONT nom-obj & [ HOOK #hook & [ INDEX #agr ] ] ],
            NON-LOCAL #nonloc ],
   ARGS < [ INFLECTED +,
            SYNSEM phr_synsem & 
                  [ LOCAL [ CAT [ HEAD det & [ POSS +,
                                               KEYS [ KEY #argkey,
                                                      ALTKEY poss_rel ] ],
                                  VAL [ SPR < >,
                                        COMPS < >,
                                        SPEC < [ LOCAL.CONT.HOOK #hook &
                                                      [ LTOP #phand,
                                                        INDEX #index ] ] > ] ],
                            CONJ #conj ],
                    NON-LOCAL #nonloc ],
            POSSCL #posscl,
            ROBUST - ] >,
   C-CONT [ HOOK.INDEX #index,
            RELS <! [ LBL #phand,
                      PRED generic_nonpro_rel,
                      ARG0 #index ] !>,
            HCONS <! !> ],
   POSSCL #posscl ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Coordinate structures
;;
; To enable coordination of categories that are similar but not identical, we
; introduce intermediate types for some attribute values, including those for
; HEAD, AUX, and AGR.  Lexical items and the phrases they project will have
; these intermediate types as values, while signs that select for a given
; type will usually specify values for the above features using their most
; specific types.  For example, a preposition will be [ HEAD prep* ] but a
; verb which subcategorizes for a PP will specify that its complement must be
; [ HEAD prep ], assuming that HEAD values are of type 'head' organized in a
; type hierarchy as follows (simplified for exposition):
; 	
; 		head
;            /   |   \
; 	verb*  prep*  noun*
;         /  \  /  |  \  /  \
;      verb  v+p  prep p+n   noun
; 
; Most heads will select for a specific value for HEAD, but the copula "be"
; leaves the HEAD value underspecified, requiring only that its complement be
; [ PRD + ], so it will happily take as complement the conjoined phrase
; "in Paris and shopping", where the value of HEAD for this phrase is the
; unification of 'verb*' and 'prep*", namely 'v+p'.  This assumes that the
; constituent coordination schema simply requires that the CAT values of both
; conjuncts unify.
; 
; In a similar manner, the conjunction of two verb phrases, one headed by a
; main verb and one by an auxiliary, will work as long as no other constraints
; are imposed on the attribute AUX for this conjoined phrase.  Here the feature
; AUX is boolean-valued, with the following sort hierarchy for this value type:
; 
; 		bool
; 	 	/   \
;             +*     -*
; 	     /  \   /  \
;  	    +  +_and_-  -
; 
; Then in the sentence "Kim sings and has danced" the VP is [ AUX +_and_- ],
; and since declarative clauses impose no constraint on the value for AUX, the
; sentence is correctly admitted. In contrast, the auxiliary verb "do" requires
; its complement to be [ AUX - ], and since the sort '-' does not unify with
; the sort '+_and_-', the following example is correctly ruled out: 
; "*Kim did sing and have danced".
; 
; Elaborations:
; 
; 1. Since some heads only partially constrain their complements, as with
; "consider" which accepts either an AP or an NP complement, we enrich the
; above hierarchies to include a notion of 'strict' or most specific values,
; so "consider" can restrict its complement to be [ HEAD a_or_n & strict_type ]
; assuming the following more elaborate (though again partial) hierarchy:
; 
;                        head
;              	       /  |   			    
; 		      /   |    strict_type
; 	             /  a_or_n   / /  | 
;                   /       / \_/ /   | 
;                  /       /   /\/    |
;                 prep*   adj*/ /noun*|
;                 |  _\__/_|_/\/  /\  |
;                 | /  \/  |  /\ /  \ |
;                prep p+a  adj a+n  noun
; 
; Here the only consistent values for the complement of "consider" are 'adj'
; or 'noun'.  Of course this isn't quite right, since we thereby exclude the
; coordination "consider Kim a friend and reliable".  What we would need is a
; way of specifying for the complement of "consider" all and only the most
; specific values subsumed by 'a_or_n'.  But at present if a head needs to
; impose partial constraint on an attribute, we cannot also get the kind of
; non-identical coordination we showed for the copula.  Leave for future work.
; 
; 2. We also undergenerate coordination of non-identical phrases in those cases
; where more than one sign imposes constraints on a single attribute.  For
; example, both determiners and verbs can constrain the AGR value of a noun
; phrase, but as soon as one of them does, we are left with a "strict" value,
; which precludes coordination with a non-identical value.  Thus we currently
; get the following incorrect pattern of grammaticality assignments:
; 
; 	a.  Abrams and the consultant
; 	b.  Abrams and the consultants
; 	c.  Abrams and this consultant
; 	d. *Abrams and these consultants
; 
; Example (b) is okay because the determiner "the" does not constrain the AGR
; value of the noun it specifies, so the NP "the consultants" will still be
; (nonstrict) [AGR 3pl*], and hence the conjoined "Abrams and the consultants"
; unifies [AGR 3sg*] and [AGR 3pl*] to give [AGR 3sg+3pl] (assuming a hierarchy
; for AGR analogous to those above for 'head' and 'bool').  Example (d) fails
; because "these" constrains its noun to be (strict) [AGR 3pl], and thus the NP
; "these consultants" will also be [AGR 3pl], and will not coordinate with
; "Abrams" because their CAT values will not unify.
;   We set the KEY of the mother to be that of the right-hand daughter, rather
; arbitrarily, but the KEY needs to be set, since many lexical types select
; an argument based on the KEY value.
;   We also need to set the type of the index on the mother, to match the types
; of the indices on the daughters.  It looks like this will force us to make the
; kind of index a feature, not just a type, but for now we wrongly make the
; index be that of the right-hand daughter.  This does not break subject-verb
; agreement for plural NPs, since we only change INDEX in this hack, not AGR.
;   And we have to make sure that the BODY attributes of two conjoined 
; quantified phrases are identified, but not clear how to do this.
;   DPF (27-Apr-99) Both conjuncts have KEY constrained to independent_rel, since
; they may be relations underspecified for use as particles - by doing this, we
; exclude coordination of particles themselves, but this is probably okay.
;   DPF (1-May-99) At present we overgenerate with conjoined propositions because
; we cannot identify the MSG values of the two conjuncts - that would wrongly
; make the MARG values of those two messages be identified. Hence we accept e.g.
; "*I wonder who left and that Sandy arrived".  As long as MSG values are
; typed relations, there doesn't seem to be a way out of this awkwardness.
;   DPF (1-May-99) In the long run, we cannot simply identify the whole local 
; values of SLASH for the two conjuncts, since this would mean that the handles 
; of the two extracted elements would be wrongly identified - wrong at least for
; ordinary complements, which identify their LTOP handle with that of their head,
; meaning that in "the book Kim saw and Sandy liked" the handles for "saw" and 
; "liked" would be identified, which is bad since these handles each fill a MARG 
; role in distinct messages.  

; DPF 20-Nov-99 - Made all coord_phr's be LEX - in order to avoid, among other
; things, coordinate structures as right members of noun-noun compounds, as in
; 'the seventeenth, twentieth, or twenty-third'.
; DPF 20-Jun-00 - Made LEX match on both conjuncts, to avoid e.g. "Kim [ had
; Sandy and would ] arise" (with causative "have")  
; DPF 28-Aug-00 - But this will block "Kim and the cat arrived", so removed it.
; DPF 3-Feb-01 - Moved [ CONJ complex-conj ] on right dtr to subtypes, in order
; to let us treat run-on sentences as coordination.
; DPF 22-Mar-01 - Moved AGR.DIVISIBLE reentrancy down to NP coordination, since
; want to allow non-like AGR.DIVISIBLE values for sentence coordination, as in
; "I arrived and consultants left."

basic_coord_phr := basic_binary_phrase & non_headed_phrase & 
  [ SYNSEM [ LOCAL.CAT [ HEAD.MOD #mod,
                         VAL [ SUBJ #subj,
                               COMPS #comps,
                               SPEC #spec ] ],
             NON-LOCAL #non-local ],
    LCONJ-DTR sign & #left &
		[ SYNSEM [ LOCAL [ CAT [ HEAD [ MOD #mod,
                                                KEYS.KEY independent_rel ],
                                         VAL [ SUBJ #subj,
                                               COMPS #comps,
                                               SPEC #spec ] ],
                                   CONT.HOOK.INDEX individual ],
                           NON-LOCAL #non-local ] ],
    RCONJ-DTR phrase & #right &
		[ SYNSEM [ LOCAL 
                            [ CAT [ HEAD.MOD #mod,
                                    VAL [ SUBJ #subj,
                                          COMPS #comps,
                                          SPEC #spec ] ],
                              CONT.HOOK.INDEX individual ],
                           NON-LOCAL #non-local ] ],
    ARGS < #left, #right > ].

coord_phr := basic_coord_phr &
  [ SYNSEM.LOCAL.CONT.MSG #msg,
    LCONJ-DTR.SYNSEM.LOCAL.CONT.MSG #msg,
    RCONJ-DTR.SYNSEM.LOCAL.CONJ complex-conj ].

norm_coord_phr := coord_phr & binary_phrase &
  [ SYNSEM [ LEX -,
             LOCAL.AGR.PNG #png ],
    RCONJ-DTR.SYNSEM.LOCAL.AGR.PNG #png ].


; [SPR..no_rel] prevented attachment of modifiers to no_cop phrases, but
; this incorrectly blocks "rain possible today".
; ARGS..SPR *olist* blocks e.g. "ago" as nocop_vp
; DPF 10-Sep-01 - Changed KEY to be no_rel, to block nocop_vp as root phrase.
; DPF 13-Sep-01 - Removed ROBUST - from dtr, since want "message received"

no_copula_be_phrase := basic_unary_phrase & phrasal &
  [ INFLECTED +,
    SYNSEM [ LOCAL [ CAT [ HEAD verb & [ PRD -,
                                         INV -,
                                         VFORM fin,
                                         KEYS.KEY no_rel ],
                           VAL [ SUBJ < synsem &
                                        [ LOCAL [ CAT nomp_cat_min &
                                                      [ HEAD.CASE nom ],
                                                  CONT.MSG no_msg ] ] >,
                                 SPR < anti_synsem >,
                                 COMPS < > ],
                           MC na ],
                     CONT [ HOOK.INDEX.E.TENSE no_tense,
                            MSG #msg ],
                     CONJ cnil ],
             NON-LOCAL #nonloc & [ SLASH 0-dlist & [ LIST < > ],
                                   REL 0-dlist,
                                   QUE 0-dlist ] ],
    ARGS < [ INFLECTED +,
             SYNSEM [ LOCAL [ CAT [ VAL [ COMPS *olist*,
                                          SPR *olist*,
                                          SUBJ < > ],
                                    MC na ],
                              CONJ cnil,
                              CONT.MSG #msg ],
                      NON-LOCAL #nonloc ],
             POSSCL #posscl & - ] >,
    C-CONT [ HOOK.INDEX.E.TENSE no_tense,
             HCONS <! !> ],
    POSSCL #posscl ].

; DPF 28-Nov-02 - HOOK comes only from C-CONT

no_copula_prd_phrase := no_copula_be_phrase &
  [ SYNSEM.LOCAL [ CAT.HEAD.MOD < >,
                   CONT.HOOK.XARG #xarg,
                   AGR #agr ],
    ARGS < [ SYNSEM.LOCAL 
                    [ CAT.HEAD 
                          [ PRD +,
                            MOD < [ LOCAL.CAT.HEAD.KEYS.KEY event_rel ] > ],
                      CONT.HOOK [ LTOP #hand,
                                  INDEX non_expl,
                                  XARG #xarg ],
                      AGR #agr ],
             ROBUST #robust ] >,
    C-CONT [ HOOK.LTOP #hand,
             RELS <! !> ],
    ROBUST #robust ].

; DPF 21-Nov-01 - Added ROBUST - to dtr, to block bare-sing-nps.
; DPF 28-Nov-02 - HOOK comes only from C-CONT

no_copula_id_phrase := no_copula_be_phrase &
  [ SYNSEM.LOCAL [ CAT [ HEAD [ MOD < >,
                                TAM #tam ],
                         VAL.SUBJ < [ LOCAL [ CAT nomp_cat_min,
                                              AGR #agr ],
                                      --SEMIND #id1ind ] > ],
                   CONT.HOOK.INDEX.E #tam,
                   AGR #agr ],
    ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD noun &
                                       [ KEYS [ KEY nonpro_rel,
                                                ALTKEY non_conj_rel ] ],
                                  VAL [ SUBJ < >,
                                        SPR < >,
                                        COMPS < > ] ],
                            CONT.HOOK.INDEX #id2ind ],
             ROBUST - ] >,
    C-CONT [ HOOK [ LTOP #hand,
                    INDEX #event ],
             RELS <! arg12_relation &
                     [ LBL #hand,
                       PRED cop_id_rel,
                       ARG0 #event & [ E.TENSE no_tense ],
                       ARG1 #id1ind,
                       ARG2 #id2ind ] !> ] ].

; DPF 25-Sept-01 - Changed SPR *olist* to < >, to prevent e.g. PPs from
; attaching to no_cop S rather than to the no_cop VP.
; DPF 28-Nov-02 - HOOK comes only from C-CONT

no_copula_nosubj_phrase := non_rel_clause & head_valence_phrase & head_only &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.KEYS.KEY #key,
                           VAL [ SUBJ < >,
                                 SPR < >,
                                 COMPS < > ],
                           MC + ],
                     CONT.MSG.PRED prpstn_m_rel ],
             NON-LOCAL #nonloc ],
    HEAD-DTR.SYNSEM [ LOCAL [ CAT [ HEAD verb &
                                         [ MOD < >,
                                           PRD -,
                                           VFORM fin,
                                           TAM.TENSE no_tense,
                                           KEYS.KEY #key ],
                                    VAL [ SUBJ < synsem & [ OPT + ] >,
                                          COMPS < > ],
                                    MC na ],
                              CONT.HOOK.LTOP #hdtop,
                              CONJ cnil ],
                      NON-LOCAL #nonloc & [ SLASH 0-dlist,
                                            REL 0-dlist,
                                            QUE 0-dlist ] ],
    C-CONT [ RELS <! [ MARG #marg ] !>,
             HCONS <! qeq & [ HARG #marg,
                              LARG #hdtop ] !> ] ].


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Proto-instance types
; DPF 12-Nov-03 - Experimentally, make the XARG of this phrase be the LTOP
; of the head-dtr, in order to support "on Tuesday who arrived" where the
; PP should share the handle of the VP (as if it had been extracted).

subjh_rule_decl := binary_rule_right_to_left & head_subj_phrase & decl &
                   head_valence_phrase &
  [ SYNSEM.LOCAL [ CAT [ MC bool,
                         VAL.SUBJ *olist* & < anti_synsem >,
                         POSTHEAD + ],
                   CONT.HOOK.XARG #ltop ],
    HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.LTOP #ltop,
    NON-HEAD-DTR.SYNSEM [ LOCAL.CAT.HEAD.POSS -,
                          NON-LOCAL.QUE 0-dlist ] ].

subjh_rule_wh_insitu := binary_rule_right_to_left & head_subj_phrase & 
                        clause &
  [ SYNSEM [ LOCAL [ CAT [ HEAD v_or_g &
                                [ VFORM fin,
                                  INV -,
                                  PRD -,
                                  TAM basic_ind_or_mod_subj_tam ],
                           MC +,
                           VAL.SUBJ *olist* & < anti_synsem >,
                           POSTHEAD + ],
                     CONT [ HOOK.XARG #ltop,
                            MSG message & #msg ] ],
             NON-LOCAL [ SLASH 0-dlist,
                         REL 0-dlist ] ],
    HEAD-DTR.SYNSEM [ LOCAL.CONT.HOOK [ LTOP #ltop,
                                        INDEX #ind ],
                      NON-LOCAL [ QUE 1-dlist,
                                  REL 0-dlist,
                                  SLASH 0-dlist ] ],
    NON-HEAD-DTR.SYNSEM [ LOCAL.CAT.HEAD.POSS -,
                          NON-LOCAL.QUE 0-dlist ],
    C-CONT [ HOOK [ LTOP #mhand,
                    INDEX #ind ],
             RELS <! #msg & [ LBL #mhand,
                              PRED int_m_rel,
                              MARG #lbl ],
                     message & [ LBL #lbl,
                                 PRED prpstn_m_rel,
                                 MARG #marg ] !>,
             HCONS <! qeq & [ HARG #marg,
                              LARG #ltop ] !> ] ].

hcomp_rule := binary_rule_left_to_right & head_comp_phrase.

hoptcomp_rule := rule & head_opt_comp_phrase.
hopt2comp_rule := rule & head_opt_two_comp_phrase.
noptcomp_rule := rule & noun_opt_comp_phrase.

hmark_event_rule := binary_rule_left_to_right & head_marker_phrase_event.
hmark_nom_rule := binary_rule_left_to_right & head_marker_phrase_nom.
hmark_nbar_rule := binary_rule_left_to_right & head_marker_phrase_nbar.
hmark_atomic_rule := binary_rule_left_to_right & head_marker_phrase_atomic.

extracomp_rule := rule & extracted_comp_phrase.

extrasubj_fin_rule := rule & extracted_subj_phrase_fin.
extrasubj_inf_rule := rule & extracted_subj_phrase_inf.

hspec_rule := binary_rule_right_to_left & head_spec_phrase.
hspec_hc_rule := binary_rule_right_to_left & head_spec_hc_phrase.

adjh_s_rule := binary_rule_left_to_right & adj_head_scop_phrase.
adjn_i_rule := binary_rule_left_to_right & adj_n_int_phrase.
adjh_i_rule := binary_rule_left_to_right & adj_h_int_phrase.
adjh_i_ques_rule := binary_rule_left_to_right & adj_head_int_ques_phrase.

hadj_s_rule := binary_rule_right_to_left & head_adj_scop_phrase.
hadj_i_relcl_rule := binary_rule_right_to_left & n_adj_relcl_phrase.
hadj_i_redrel_temp_rule := binary_rule_right_to_left & n_adj_redrel_temp.
hadj_i_redrel_nontemp_rule := binary_rule_right_to_left & n_adj_redrel_nontemp.

hadj_i_unsl_rule := binary_rule_right_to_left & h_adj_unsl_phrase.
hadj_i_sl_rule := binary_rule_right_to_left & h_adj_sl_phrase.

extradj_i_vp_rule := rule & extracted_adj_int_vp_phrase.
extradj_i_s_rule := rule & extracted_adj_int_s_phrase.

extradj_npadv_rule := rule & extracted_adj_npadv_phrase.

fin_non_wh_rel_rule := rule & fin_non_wh_rel_cl.

inf_non_wh_rel_rule := rule & inf_non_wh_rel_cl.
inf_non_wh_subj_rel_rule := rule & inf_non_wh_subj_rel_cl.

instr_inf_non_wh_rel_rule := rule & instr_inf_non_wh_rel_cl.

red_rel_cl_rule := rule & red_rel_cl.

subconj_vp_rule := rule & subconj_vp_phr.

; ERB (19-01-98) The single non_wh_rel_rule dream didn't come true.
; non_wh_rel_rule := rule & non_wh_rel_cl.

bare_np_rule := rule & bare_np_phrase.
proper_np_rule := rule & proper_np_phrase.
num_np_rule := rule & num_np_phrase.
bare_np_sg_rule_robust := rule & bare_np_sg_phrase_robust.

bare_vger_rule := rule & bare_vger_phrase.

np_n_cmpnd_rule := binary_rule_right_to_left & np_n_cmpnd_phr.
np_n_cmpnd_rule_2 := binary_rule_right_to_left & np_n_cmpnd_phr_2.
np_name_cmpnd_rule := binary_rule_right_to_left & np_name_cmpnd_phr.
noun_n_cmpnd_rule := binary_rule_right_to_left & noun_n_cmpnd_phr.
noun_title_cmpnd_rule := binary_rule_right_to_left & noun_title_cmpnd_phr.
appos_rule := binary_rule_right_to_left & appos_phr.
npadv_mod_rule := rule & npadv_mod_phrase.
measure_np_rule := rule & measure_np_phrase.
measure_np_symbol_rule := rule & measure_np_symbol_phrase.
bare_measure_np_rule := rule & bare_measure_np_phrase.
num_noun_rule := rule & num_noun_phrase.
num_noun_seq_rule := rule & num_noun_sequence_phrase.
np_cp_rule := rule & np_cp_phrase.
;;np_cp_wh_rule := rule & np_cp_wh_phrase.

;; DPF 22-Dec-98 - Modified filler_head_rule_non_wh to require head to be 
;; VFORM fin, in order to block "*Kim hire".  The VFORM used to be fin_or_imp,
;; to allow an extraction analysis of "On Monday hire Kim", but this also
;; allowed a spurious second analysis for "On Monday tell Kim that Sandy left".
;; So a new construction for left dislocation is needed for "On Monday hire Kim",
;; one which would also admit "As for that book, who did it offend?" where a
;; (double) extraction analysis would otherwise be required.

;; DPF 29-Jan-99 - Constrained nonhead_dtr to be HEAD n_or_p, in order to block
;; Yoda examples like "Happy you will be" or "Making a mess you are".  More
;; generally these should simply be dispreferred, but we'll block them for now.
;
; DPF 10-Jun-99 - Note that filler_head_rule_non_wh does not currently inherit 
; from non_rel_clause, but perhaps should.
; 
; DPF 10-Jun-99 - Removed mc_fillhead_phrase from filler_head_rule_non_wh since
; topicalized constructions can be embedded, as in "Kim thinks on Tuesday we
; should be in Berlin"
; -- DPF 24-Mar-01 - But this is too weak: we still need to block "*I'm sure 
; bananas he likes" - cf. examples with "bet".  So put back mc_fillhead_phrase,
; and wait for more inspiration about allowing S-init adjuncts for embedded S's
; DPF 2-Feb-01 - Generalized HEAD value of nonhead_dtr to include adverbs as
; well as n_or_p, to get "Quietly kim left"
; DPF 2-Apr-01 - Removed INV - from head-dtr to allow "here are my questions"
; DPF 13-May-01 - Added [HEAD-DTR..MODIFIED notmod_or_rmod] to prevent root
; exclamatives like "oh" from modifying the head of the head-filler.
; DPF 25-Sep-01 - From 2-Apr-01: But this overgenerates too much, so putting
; it back in (cf "*There is Kim Sandy")
; DPF 12-Apr-02 - Apparently INV - was put back on head-dtr (see 2-Apr-01) --
; this blocks non-wh PP-fronting for yes-no questions, as in "On Tuesday did
; Kim arrive".  Maybe right not to treat these as unbounded dependencies -
; note lack of ambiguity for "tomorrow can you ask Sandy to call me?"
; DPF 1-Jun-02 -Added HEAD-DTR..MSG.PRED prop_ques_m_rel to exclude imperatives
; since sometime between 22-Dec-98 and now (see above) the VFORM constraint was
; removed, but we still want to block "*kim hire".
; DPF 13-Oct-03 - But blocking "Kim hire" also prevents us from getting PPs
; fronted for imperatives, as with "On Sunday, buy two books".  It also blocks
; "Books about elephants, buy only on Sundays" which seems fine.  So removed
; this constraint, and expect punctuation to catch "*Kim hire" since we want
; a comma after fronted phrase for imperatives.
; DPF 26-Nov-03 - Further constrained head-dtr's MODIFIED (see 13-May-01) to
; exclude rmod, to avoid spurious parse for "Kim we hired, singing".

filler_head_rule_non_wh := binary_rule_left_to_right & 
                           basic_head_filler_phrase_fin &
                           head_compositional & mc_fillhead_phrase &
  [ INFLECTED +,
    SYNSEM.LOCAL.CONT.MSG #msg,
    HEAD-DTR [ INFLECTED +,
               SYNSEM [ LOCAL [ CAT [ HEAD verbal & [ INV - ],
                                      MC + ],
                                CONT.MSG #msg & [ TPC #nhind ] ],
                        MODIFIED notmod ],
               ROBUST #robust ],
    NON-HEAD-DTR [ INFLECTED +,
                   SYNSEM [ LOCAL [ CAT.HEAD n_or_p_or_adv,
                                    CONT [ HOOK.INDEX #nhind,
                                           MSG no_msg ] ],
                            NON-LOCAL [ QUE 0-dlist,
                                        REL 0-dlist ] ],
                   ROBUST - ],
    C-CONT [ RELS <! !>,
	     HCONS <! !> ],
    ROBUST #robust ].
  
; DPF 20-Oct-01 - Changed HEAD.INV + to HEAD.INV +* (and same for AUX) to 
; allow for coordination of inverted and non-inverted sentences.

filler_head_rule_wh_root := binary_rule_left_to_right & 
			    head_filler_phrase_fin & wh_interrog_fin & 
                            mc_fillhead_phrase &
  [ SYNSEM.LOCAL.CAT.HEAD [ INV +,
                            AUX + ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT.MC na,
                            CONT.HOOK.LTOP #hdtop ],
    C-CONT [ RELS <! [ MARG #lbl ],
                     message & [ LBL #lbl,
                                 PRED prpstn_m_rel,
                                 MARG #marg ] !>,
             HCONS <! qeq & [ HARG #marg,
                              LARG #hdtop ] !> ] ].

; DPF (21-Apr-98) To block use of fill_head_wh_subj in "Kim knows who Sandy 
; saw" added constraint that filler must be [CASE NOM].
; DPF 15-Oct-01 - Removed [AUX -]: was wrong.
; DPF 15-May-02 - Changed HEAD.INV - to HEAD.INV -* to allow for coordination 
; of inverted and non-inverted sentences.
; DPF 31-May-02 - Added restriction on head-dtr for MSG.PRED prop_ques_m_rel 
; to block imperative S-comp, as in "*I know which manager hire"
 
filler_head_rule_wh_subj := binary_rule_left_to_right & 
			    head_filler_phrase_fin & wh_interrog_fin & 
			    mc_fillhead_phrase &
  [ SYNSEM.LOCAL.CAT.HEAD.INV -,
    HEAD-DTR.SYNSEM.LOCAL [ CAT.VAL.SUBJ < >,
                            CONT.MSG [ LBL #lbl,
                                       PRED prop_ques_m_rel ] ],
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD noun & [ CASE nom ],
    C-CONT [ RELS <! [ MARG #lbl ] !>,
             HCONS <! !> ] ].

; DPF (21-Apr-98) Removed constraint making HEAD-DTR [MC -], since this was
; blocking "Abrams knows who Kim saw."
; DPF 31-May-02 - Added restriction on head-dtr for MSG.PRED prop_ques_m_rel
; to block imperative S-comp, as in "*I know which manager hire"

filler_head_rule_wh_nr_fin := binary_rule_left_to_right & 
			      head_filler_phrase_fin & wh_interrog_fin &
  [ SYNSEM.LOCAL.CAT [ HEAD.INV -,
		       MC - ],
    HEAD-DTR.SYNSEM.LOCAL.CONT [ HOOK.LTOP #hdtop,
                                 MSG [ PRED prop_ques_m_rel,
                                       PARAMS 0-dlist ] ],
    C-CONT [ RELS <! [ MARG #hdtop ] !>,
             HCONS <! !> ] ].

; DPF 13-Nov-99 - Restricted SUBJ on mother to be 'unexpressed' to prevent
; the subject-extraction rule from applying.
; DPF 13-Nov-99 - Changed [MC na] to [MC -] since e.g. "know" wants an MC -
; complement, as in "kim knows who to hire".
; DPF 26-Mar-01 - Added to head-dtr: SUBJ..SLASH 0-dlist to avoid wrong
; subj-extraction parse for "Kim knew who to approach".

filler_head_rule_wh_nr_inf := binary_rule_left_to_right & 
			      head_filler_phrase_inf & wh_interrog &
  [ SYNSEM.LOCAL.CAT [ HEAD.INV -,
		       VAL.SUBJ < unexpressed >,
		       MC - ],
    HEAD-DTR.SYNSEM.LOCAL [ CAT.VAL.SUBJ < pro_ss & 
                                           [ NON-LOCAL.SLASH 0-dlist ] >,
                            CONT.HOOK.LTOP #hdtop ],
    C-CONT [ RELS <! [ MARG #marg ] !>,
             HCONS <! qeq &
                      [ HARG #marg,
                        LARG #hdtop ] !> ] ].


; DPF 25-Nov-01 - Added SYNSEM..RPERIPH + to enable blocking of thatless-rel
; attaching after WH-relative
; DPF 8-Jul-02 - Changec C-CONT.HOOK.LTOP to be re-entrant with head-dtr's 
; LTOP rather than with its MSG..LBL, since the latter does the wrong thing
; at least for coordinated relative clauses as in "The programmar Abrams
; interviewed and Browne hired arrived".
; DPF 19-dec-03 - Added propagation of ALT2KEY constraint from nbar-filler 
; "that" for "the place that Kim bought the book" - modable_rel preserved, 
; to get same effect as with actual gap in simple that-less rel construction.
; This is just a hack, but the right solution is elusive.

filler_head_rule_rel := binary_rule_left_to_right & rel_cl & 
			basic_head_filler_phrase & 
  [ INFLECTED +,
    SYNSEM [ LOCAL.CAT [ HEAD [ VFORM #vform,
                                TAM #tam,
                                AUX #aux,
                                INV #inv,
                                PRD -,
                                MOD < [ LOCAL [ CAT.HEAD.KEYS.KEY #modkey,
                                                CONT.HOOK [ LTOP #rhand,
							    XARG #rhand ] ],
                                        --SEMIND #ind ] >,
                                KEYS.KEY #key ],
                         VAL [ SUBJ *olist* & #subj,
                               SPR < > ] ],
             NON-LOCAL.REL 1-dlist,
             MODIFIED.RPERIPH + ],
    ARGS < [ INFLECTED +,
             SYNSEM [ LOCAL [ CAT.HEAD.KEYS.ALT2KEY #modkey,
                              CONJ cnil ],
		      NON-LOCAL [ QUE 0-dlist,
				  REL 1-dlist &
				      [ LIST < [ LTOP #rhand,
                                                 INDEX #ind ] > ] ] ],
             ROBUST #robust ],
	   [ INFLECTED +,
             SYNSEM [ LOCAL [ CAT [ HEAD verb & [ VFORM #vform & fin,
						  TAM #tam,
						  AUX #aux,
						  INV #inv,
                                                  KEYS.KEY #key ],
				    VAL.SUBJ #subj,
				    MC - ],
                              CONT [ HOOK.LTOP #ltop,
                                     MSG message ],
			      CONJ cnil ],
                      NON-LOCAL [ QUE 0-dlist,
				  REL 0-dlist ] ],
             ROBUST #robust ] >,
    C-CONT [ HOOK.LTOP #ltop,
	     RELS <! !>,
	     HCONS <! !> ],
    ROBUST #robust ].

; ERB (05-10-96) This no longer inherits from (old) mc_phrase because it also
; serves to make nonroot phrases, such as the bracketed phrase in: "On Tuesday
; [plan to meet Kim]".

imperative_rule := rule & imp.

yesno_rule := rule & yesno_phrase.

; The top_coord_rule is for building the ltop of a (potential iterated)
; coordinate structure and the mid_coord_rule is for building intermediate
; parts of an iterated coordinate structure.  The mid_coord_rule (and the
; head/marker schema) collect the handels and indices of the conjuncts under
; the CONJ feature and passes them (with the lexically specified coordination
; relation) up from the right conjunct.  The top_coord_rule uses handels and
; liszts from the CONJ value to build the values for an n-ary coordination 
; relation.  We could skip all this feature passing if we weren't limited by 
; performance considerations to binary trees.  That is, we could build 
; coordinate structures like:					  
;       						  
;       						  
;      coord_phrase					  
;             +-			          -+	  
;             | conj_rel  		           |	  
;      RELS  | C-HNDLS  [h1], [h2], ..., [hn]   |	  
;             | C-INDICES  [i1], [i2], ..., [in]   |	  
;             +-    		                  -+	  
;             /             /                \ 	 	  
;            /  	   /    	      \  	  
;           /   	  /     	       \ 	  
;          /    	 /      		\ 	  
;         /     	/       		 \ 	  
;      phrase        phrase    	       	       phrase	  
;      LTOP   [h1]    LTOP   [h2] ...            LTOP   [hn]
;      INDEX [i1]    INDEX [i2]                INDEX [in]
;        |             |                	 |  
;        |             |                         |  
;       Kim          Sandy       ...            Lee 
;       			     
; then we could eliminate the features HNDLS and INDICES.  These
; feature are just for bookkeeping.  The feature LEFT, on the other hand, is
; essential to the analysis.  The LEFT value is a list of (up to) two
; elements.  The first element is the required CONJ value of the left conjunct
; in a top_coord_phrase and the second element is the CONJ value of the left
; conjunct in a mid_coord_phrase.  For example, a LEFT value of < either, or >
; permits a coordinate structure like "either Kim or Sandy or Chris or Lee".

; DPF 28-Nov-02 - HOOK comes only from C-CONT
; DPF 6-Jun-03 - Tried making the KEY of mother be that of left dtr rather than
; right dtr, given that neither is right in principle.  Want to get "an hour
; and a half" to still be temporal-noun.  But this fails because the KEY of
; "either Monday" is a conj_rel (in "either Monday or Tuesday") while the KEY
; of "Monday" is a day_rel (in "Monday or Tuesday").  So only the right dtr
; consistently puts the right conjunct's KEY in one place: the ALTKEY of
; "and Tuesday".  So let's consider making "a half" unspecified for SORT.

top_coord_rule := binary_rule_right_to_left & coord_phr &
  [ SYNSEM.LOCAL [ CONT.HOOK.INDEX #ind,
                   CONJ cnil ],
    LCONJ-DTR.SYNSEM.LOCAL local & [ CONJ conj & #left ],
    RCONJ-DTR.SYNSEM.LOCAL local &
                 [ CONT.HOOK [ LTOP #cltop,
                               INDEX #ind ],
                   CONJ complex-conj & [ CHEAD.LEFT <#left, ...> ] ],
    C-CONT.HOOK [ LTOP #cltop,
                  INDEX #ind & conj-ind ] ].

; DPF 28-Nov-02 - HOOK comes only from C-CONT

mid_coord_rule := binary_rule_right_to_left & coord_phr &
  [ SYNSEM [ LOCAL.CONJ phr-conj &
                        [ CHEAD #chead,
                          CREL basic_conj_relation &
                                [ LBL #ltop,
                                  C-ARG #cind & non_expl,
                                  R-INDEX #ind ] ],
             ROOT - ],
    LCONJ-DTR.SYNSEM.LOCAL.CONJ conj & #left,
    RCONJ-DTR.SYNSEM.LOCAL [ CONT.HOOK.INDEX #ind,
                             CONJ complex-conj & 
                                  [ CHEAD #chead & 
                                          [ LEFT < *top*, #left > ] ] ],
    C-CONT.HOOK [ LTOP #ltop,
                  INDEX #cind & conj-ind ] ].

; Coordination of non-nominal phrases (S's and VPs)
;; DPF 25-Feb-01 - Changed division of labor with these two rules, so the first now
;; conjoins all phrases with event index values, while the second conjoins nominal
;; phrases.

;; DPF 21-Aug-01 - Added E-INDEX.E.TENSE real_tense to both dtrs in order to
;; block conjunction of no-copula VPs (want the no-cop after conjunction).

event_coord_rule := coord_phr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX conj_event & [ E #tam ],
    LCONJ-DTR.SYNSEM.LOCAL.CONT.HOOK [ LTOP #lhand,
                                       INDEX #lind ],
    RCONJ-DTR.SYNSEM.LOCAL [ CONT.HOOK.INDEX conj_event,
                             CONJ.CREL [ L-HNDL #lhand,
                                         L-INDEX #lind,
                                         R-INDEX.E #tam ] ] ].

top_coord_event_rule := top_coord_rule & event_coord_rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS *olist*,
    LCONJ-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX event_or_deg-ind,
    C-CONT [ RELS <! !>,
             HCONS <! !> ] ].

mid_coord_event_rule := mid_coord_rule & event_coord_rule &
  [ SYNSEM.LOCAL.CONJ.CREL #rel,
    RCONJ-DTR.SYNSEM.LOCAL.CONT.HOOK.LTOP #ltop,
    C-CONT [ RELS <! #rel & [ R-HNDL #ltop ] !>,
             HCONS <! !> ] ].

verbal_coord_phr := norm_coord_phr &
  [ SYNSEM.LOCAL.CAT [ HEAD verbal & [ PRD #prd ],
                       VAL.SPR #spr,
                       MC #mc ],
    LCONJ-DTR.SYNSEM.LOCAL.CAT [ HEAD verbal & [ PRD #prd ],
                                 VAL.SPR #spr,
                                 MC #mc ],
    RCONJ-DTR.SYNSEM.LOCAL.CAT [ HEAD verbal & [ PRD #prd ],
                                 VAL.SPR #spr,
                                 MC #mc ] ].

v_coord_phr := verbal_coord_phr &
  [ SYNSEM.LOCAL [ CAT [ HEAD verb & [ VFORM #vform ],
                         VAL.SUBJ < synsem > ],
                   CONT.HOOK.XARG #xarg ],
    LCONJ-DTR.SYNSEM.LOCAL [ CAT [ HEAD verb & [ VFORM #vform ],
                                   VAL.SUBJ < synsem > ],
                             CONT.HOOK [ XARG #xarg,
                                         INDEX.E basic_ind_or_mod_subj_tam ] ],
    RCONJ-DTR.SYNSEM.LOCAL [ CAT [ HEAD verb & [ VFORM #vform ],
                                   VAL.SUBJ < synsem > ],
                             CONT.HOOK.XARG #xarg,
                             CONJ.CREL.R-INDEX.E basic_ind_or_mod_subj_tam ] ].

v_coord_phr_fin := v_coord_phr &
  [ SYNSEM.LOCAL.CAT.HEAD [ VFORM fin,
                            TAM ind_or_mod_subj_tam &
                                  [ ASPECT [ PERF #perf,
                                             PROGR #progr ] ] ],
   LCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD [ VFORM fin,
                                     TAM ind_or_mod_subj_tam &
                                           [ ASPECT [ PERF #perf,
                                                      PROGR #progr ] ] ],
   RCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD [ VFORM fin,
                                     TAM ind_or_mod_subj_tam ] ].

v_coord_phr_nonfin := v_coord_phr &
  [ SYNSEM.LOCAL.CAT.HEAD [ VFORM non_fin,
                            TAM #tam ],
   LCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD [ VFORM non_fin,
                                     TAM #tam ],
   RCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD [ VFORM non_fin,
                                     TAM #tam ] ].

v_coord_fin_top_phr := v_coord_phr_fin & top_coord_event_rule.
v_coord_fin_mid_phr := v_coord_phr_fin & mid_coord_event_rule.
v_coord_nonfin_top_phr := v_coord_phr_nonfin & top_coord_event_rule.
v_coord_nonfin_mid_phr := v_coord_phr_nonfin & mid_coord_event_rule.

s_coord_phr := verbal_coord_phr &
  [ SYNSEM.LOCAL [ CAT.VAL.SUBJ *olist*,
                   CONT.MSG message ],
    LCONJ-DTR.SYNSEM.LOCAL.CONT.MSG message,
    RCONJ-DTR.SYNSEM.LOCAL.CONT.MSG message ].

s_coord_top_phr := s_coord_phr & top_coord_event_rule.
s_coord_mid_phr := s_coord_phr & mid_coord_event_rule.

p_coord_phr := norm_coord_phr &
  [ SYNSEM.LOCAL [ CAT [ HEAD prep & [ PRD #prd,
                                       KEYS #keys,
                                       MOD #mod,
                                       TAM #tam ],
                         VAL.SPR < [ LOCAL local_min &
                                     [ CAT [ HEAD adv &
                                               [ KEYS.KEY much_deg_rel ],
                                             VAL [ SPR *olist*,
                                                   COMPS *olist* ] ],
                                       CONT.HOOK [ LTOP #ltop,
                                                   INDEX #ind ] ],
                                     NON-LOCAL.QUE 0-dlist ] >,
                         POSTHEAD + ],
                   CONT.HOOK [ LTOP #ltop,
                               INDEX #ind,
                               XARG #xarg ] ],
    LCONJ-DTR.SYNSEM.LOCAL [ CAT.HEAD prep & [ PRD #prd,
                                               KEYS #keys,
                                               MOD #mod,
                                               TAM #tam ],
                             CONT.HOOK.XARG #xarg ],
    RCONJ-DTR.SYNSEM.LOCAL [ CAT.HEAD prep & [ PRD #prd,
                                               MOD #mod,
                                               TAM #tam ],
                             CONT.HOOK.XARG #xarg ] ].

p_coord_top_phr := p_coord_phr & top_coord_event_rule.
p_coord_mid_phr := p_coord_phr & mid_coord_event_rule.

adj_coord_phr := coord_phr &
  [ SYNSEM.LOCAL [ CAT [ HEAD adj_or_intadj & #head,
                         VAL.SPR < synsem_min &
                                 [ LOCAL local_min &
                                         [ CAT [ HEAD #sprhead,
                                                 VAL.SPR *olist*,
                                                 MC na ],
                                           CONT.HOOK [ LTOP #ltop,
                                                       INDEX #ind ] ],
                                   NON-LOCAL #nonloc,
                                   OPT + ] > ],
                   CONT.HOOK [ LTOP #ltop,
                               INDEX #ind ] ],
    LCONJ-DTR.SYNSEM.LOCAL.CAT [ HEAD #head,
                                 VAL.SPR < [ LOCAL.CAT.HEAD #sprhead,
                                             NON-LOCAL #nonloc ] > ],
    RCONJ-DTR.SYNSEM.LOCAL.CAT [ HEAD #head,
                                 VAL.SPR < [ LOCAL.CAT.HEAD #sprhead,
                                             NON-LOCAL #nonloc ] > ] ].

; Attributive APs are LEX + (unusual for coordinate structures):
;  "*The angry at Kim and sad child"
;  "*The angry and taller child than Kim"
adj_attr_coord_phr := adj_coord_phr & binary_phrase &
  [ SYNSEM [ LEX + & #lex,
             LOCAL.CAT.HEAD.PRD - ],
    LCONJ-DTR.SYNSEM.LEX #lex,
    RCONJ-DTR.SYNSEM.LEX #lex ].

; Predicative APs may have LEX + or - conjuncts
adj_pred_coord_phr := adj_coord_phr & norm_coord_phr &
  [ SYNSEM.LOCAL.CAT.HEAD.PRD + ].

adj_attr_coord_top_phr := adj_attr_coord_phr & top_coord_event_rule.
adj_attr_coord_mid_phr := adj_attr_coord_phr & mid_coord_event_rule.
adj_pred_coord_top_phr := adj_pred_coord_phr & top_coord_event_rule.
adj_pred_coord_mid_phr := adj_pred_coord_phr & mid_coord_event_rule.


; Coordination of all nominals
; DPF 4-Jun-03 - Added identification of SORT values for left and right and
; mother - see if this can fly.  We want to block e.g. the spurious parse for
; "the ninth and tenth kim danced" where the temp-np rule erroneously applied.

nom_coord_rule := coord_phr &
  [ SYNSEM synsem &
           [ LOCAL [ CAT.HEAD noun & [ CASE #case,
                                       MOD < >,
                                       KEYS #keys,
                                       PRD #prd ],
                     CONT [ HOOK.INDEX ref-ind & [ SORT #sort,
                                                   PNG #png ],
                            MSG no_msg ],
                     AGR [ PNG #png,
                           DIVISIBLE #div ] ] ],
    LCONJ-DTR.SYNSEM.LOCAL [ CAT [ HEAD supnoun & [ CASE #case,
                                                    KEYS #keys,
                                                    PRD #prd ],
                                   VAL.COMPS < > ],
                             CONT [ HOOK.INDEX non_expl_or_conj-ind & #ind,
                                    MSG no_msg ] ],
    RCONJ-DTR.SYNSEM.LOCAL [ CAT.HEAD supnoun & [ CASE #case,
                                                  PRD #prd ],
                             CONT [ HOOK.INDEX non_expl_or_conj-ind,
                                    MSG no_msg ],
                             CONJ.CREL [ L-INDEX #ind & 
                                                 [ SORT #sort ],
                                         R-INDEX [ SORT #sort ] ],
                             AGR [ PNG #png,
                                   DIVISIBLE #div ] ] ].

np_coord_rule := nom_coord_rule &
  [ SYNSEM [ LOCAL.CAT.VAL.SPR < >,
             LEX na ],
    LCONJ-DTR [ SYNSEM.LOCAL.CAT.VAL.SPR *olist*,
                INFLECTED + ],
    RCONJ-DTR [ SYNSEM.LOCAL.CAT.VAL.SPR *olist*,
                INFLECTED + ],
    C-CONT [ HOOK [ LTOP #ltop,
                    INDEX #ind ],
             RELS.LIST.FIRST [ PRED udef_q_rel,
                               ARG0 #ind,
                               RSTR #rstr ],
             HCONS <! qeq & [ HARG #rstr,
                              LARG #ltop ] !> ] ].

np_coord_top_rule := top_coord_rule & np_coord_rule &
  [ C-CONT.RELS <! relation !> ].

np_coord_mid_rule := mid_coord_rule & np_coord_rule &
  [ SYNSEM.LOCAL.CONJ.CREL #rel,
    C-CONT.RELS <! relation, #rel !> ].

; Exclude proper name nbar coord for now at least.

nbar_coord_rule := nom_coord_rule &
  [ INFLECTED #infl,
    SYNSEM [ LEX #lex,
             LOCAL.CAT.VAL.SPR < synsem & [ OPT -,
                                            NON-LOCAL #nonloc ] > ],
    LCONJ-DTR [ INFLECTED #infl,
                SYNSEM [ LOCAL [ CAT [ HEAD noun & [ KEYS.KEY nom_nbar_rel ],
                                       VAL.SPR < synsem & 
                                                 [ OPT -,
                                                   NON-LOCAL #nonloc ] > ],
                                 CONT.HOOK [ LTOP #lhndl,
                                             INDEX #lind ] ],
                         LEX #lex ] ],
    RCONJ-DTR [ INFLECTED #infl,
                SYNSEM [ LOCAL.CAT [ HEAD noun & [ KEYS.KEY nom_nbar_rel ],
                                     VAL.SPR < synsem & 
                                               [ OPT -,
                                                 NON-LOCAL #nonloc ] > ],
                         LEX #lex ] ],
    C-CONT [ RELS.LIST.FIRST [ PRED udef_q_rel,
                               ARG0 #lind,
                               RSTR #lrstr ],
             HCONS <! qeq & [ HARG #lrstr,
                              LARG #lhndl ] !> ] ].

nbar_coord_symmet_rule := nbar_coord_rule &
  [ SYNSEM.LOCAL.CAT.VAL.SPR #spr,
    LCONJ-DTR.SYNSEM.LOCAL.CAT.VAL.SPR #spr,
    RCONJ-DTR.SYNSEM.LOCAL.CAT.VAL.SPR #spr ].

nbar_coord_top_rule := top_coord_rule & nbar_coord_symmet_rule &
  [ C-CONT.RELS <! relation !> ].

nbar_coord_mid_rule := mid_coord_rule & nbar_coord_symmet_rule &
  [ SYNSEM.LOCAL.CONJ.CREL #rel,
    LCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS.ALTKEY impl_or_expl_q_rel,
    RCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS.ALTKEY impl_or_expl_q_rel,
    C-CONT.RELS <! relation, #rel !> ].

; For coord of singular and plural nbar: "husband and children", with
; AGR value to block both "*this husband and children" and "*these husband
; and children" but allow "my husband and children"

nbar_coord_asym_rule := nbar_coord_rule &
  [ INFLECTED +,
    SYNSEM.LOCAL.CAT.VAL.SPR < synsem &
                               [ LOCAL local_min &
                                       [ CAT [ HEAD det,
                                               VAL [ SUBJ < >,
                                                     SPR *olist* ] ],
                                         AGR [ PNG.PN 3pl,
                                               DIVISIBLE - ] ],
                                 LEX +,
                                 OPT - ] >,
    LCONJ-DTR [ INFLECTED +,
                SYNSEM.LOCAL.CAT.VAL.SPR < [ LOCAL.AGR.PNG.PN 3sg ] > ],
    RCONJ-DTR [ INFLECTED +,
                SYNSEM.LOCAL.CAT.VAL.SPR < [ LOCAL.AGR.PNG.PN 3pl ] > ] ].

nbar_coord_asym_top_rule := top_coord_rule & nbar_coord_asym_rule &
  [ C-CONT.RELS <! relation !> ].

nbar_coord_asym_mid_rule := mid_coord_rule & nbar_coord_asym_rule &
  [ LCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS.ALTKEY impl_or_expl_q_rel,
    RCONJ-DTR.SYNSEM.LOCAL.CAT.HEAD.KEYS.ALTKEY impl_or_expl_q_rel ].

; DPF 28-Nov-02 - HOOK comes only from C-CONT

run_on_s_coord_rule := binary_rule_right_to_left & basic_coord_phr &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verbal,
                           VAL.SPR *olist* ],
                     CONT [ HOOK.INDEX.E.TENSE no_tense,
                            MSG no_msg ],
                     CONJ cnil ],
             LEX - ],
    LCONJ-DTR [ INFLECTED +,
                SYNSEM [ LOCAL local & 
                             [ CAT [ MC +,
                                     HEAD.TAM.MOOD ind_or_mod_subj ],
                               CONT [ HOOK [ LTOP #lhand,
                                             INDEX.E.TENSE real_tense ],
                                      MSG message ],
                               CONJ cnil ],
                         NON-LOCAL.SLASH 0-dlist & [ LIST < > ] ] ],
    RCONJ-DTR [ INFLECTED +,
                SYNSEM [ LOCAL local & 
                               [ CONT [ HOOK [ LTOP #rhand,
                                               INDEX.E.TENSE real_tense],
                                        MSG message ],
                                 CONJ cnil ],
                         NON-LOCAL.SLASH 0-dlist & [ LIST < > ] ] ],
    C-CONT [ HOOK [ LTOP #cltop,
                    INDEX #ind ],
	     RELS <! conj_relation & [ LBL #cltop,
                                       C-ARG #ind,
                                       L-HNDL #lhand,
                                       R-HNDL #rhand ] !>,
             HCONS <! !> ],
    ROBUST + ].

punct_s_coord_rule := ternary_phrase & ternary_rule_left_to_right &
  [ SYNSEM [ LOCAL [ CAT [ HEAD verbal &
                                [ MOD < >,
                                  KEYS.KEY no_rel ],
                           VAL [ SUBJ < >,
                                 SPR < >,
                                 COMPS < > ] ],
                     CONJ cnil,
                     CONT.MSG message & [ PRED prpstn_m_rel ] ],
             NON-LOCAL non-local_none ],
    ARGS < 
           [ SYNSEM [ LOCAL local & 
                            [ CAT s_cat_fin_or_imp,
                              CONT [ HOOK.LTOP #lhand,
                                     MSG message ],
                              CONJ cnil ],
                      NON-LOCAL non-local_none,
                      ROOT + ] ],
           [ SYNSEM.LOCAL [ CAT.HEAD clause-punct,
                            CONJ cnil ] ],
           [ SYNSEM [ LOCAL local & 
                            [ CAT s_cat_fin_or_imp,
                              CONT [ HOOK.LTOP #rhand,
                                     MSG message ],
                              CONJ cnil ],
                      NON-LOCAL non-local_none,
                      ROOT + ] ] >,
    C-CONT [ HOOK [ LTOP #ctop,
                    INDEX #ind ],
	     RELS <! conj_relation & [ LBL #ctop,
                                       C-ARG #ind,
                                       L-HNDL #lhand,
                                       R-HNDL #rhand ] !>,
             HCONS <! !> ] ].

no_copula_prd_vp_rule := no_copula_prd_phrase & rule.

no_copula_id_vp_rule := no_copula_id_phrase & rule.

no_copula_nosubj_rule := no_copula_nosubj_phrase & rule.

free_rel_inf_rule := binary_rule_left_to_right & free_rel_inf_phrase.

free_rel_fin_rule := binary_rule_left_to_right & free_rel_fin_phrase.

partitive_num_nocomp_rule := partitive_num_nocomp_phrase & rule.

partitive_num_ppof_rule := partitive_num_ppof_phrase & rule.

possessed_np_rule := possessed_np_phrase & rule.

partitive_np_rule := partitive_np_phrase & rule.

basic_frag_rule := phrase & rule &
  [ INFLECTED +,
    SYNSEM [ LOCAL [ CAT [ HEAD frag & [ KEYS.KEY unknown_rel ],
                           VAL [ SUBJ < >,
                                 SPR < >,
                                 COMPS < > ],
                           MC na ],
                     CONJ cnil,
                     CONT.MSG #msg & [ MARG #marg ] ],
             NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
                         REL 0-dlist,
                         QUE 0-dlist ] ],
    C-CONT [ HOOK.LTOP #lbl,
             RELS.LIST < #msg &
                         [ LBL #lbl,
                           PRED prpstn_m_rel ], ... >,
             HCONS.LIST < qeq & [ HARG #marg ], ... > ] ].

norm_frag_rule := basic_frag_rule &
  [ INFLECTED +,
    C-CONT [ HOOK.INDEX #event,
             RELS <! relation,
                     unknown_relation &
                     [ ARG0 #event ] !> ] ].

unary_frag_rule := norm_frag_rule & basic_unary_phrase &
  [ SYNSEM.LOCAL.CAT.HEAD frag-r,
    ARGS < [ INFLECTED +,
             SYNSEM [ LOCAL [ CAT.VAL [ COMPS *olist*,
                                        SPR *olist* ],
                              CONJ cnil ],
                      NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
                                  REL 0-dlist ] ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST.LBL #ulbl,
             HCONS.LIST < [ LARG #ulbl ], ... > ] ].

frag_np_rule := unary_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD noun,
                                  VAL.SUBJ *olist* ],
                            CONT [ HOOK.INDEX #ind,
                                   MSG no_msg ] ],
             POSSCL - ] >,
    C-CONT [ RELS.LIST.REST.FIRST.ARG #ind,
             HCONS <! qeq !> ] ].

frag_pp_ind_rule := unary_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD prep & 
                                     [ MOD < synsem &
                                             [ LOCAL intersective_mod ] >,
                                       KEYS.KEY independent_rel ],
                            CONT.HOOK [ LTOP #klbl,
                                        INDEX #arg ] ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST [ LBL #klbl,
                                    ARG0 #arg ],
             HCONS <! qeq !> ] ].

frag_pp_sel_rule := unary_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD prep &
                                     [ KEYS.KEY selected_rel ],
                            CONT.HOOK [ LTOP #plbl,
                                        INDEX #ind ] ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST [ LBL #klbl,
                                    ARG0 #ind ],
             HCONS <! qeq, geq & [ HARG #klbl,
                                   LARG #plbl ] !> ] ].

; DPF 05-Dec-03 - Try excluding expletive-it subject adjectives, to prevent eg
; spurious analysis for 'okay I will stay'
frag_adj_rule := unary_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD adj,
                            CONT.HOOK [ LTOP #plbl,
                                        INDEX #ind,
                                        XARG ref-ind ] ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST [ LBL #klbl,
                                    ARG0 #ind ],
             HCONS <! qeq, geq & [ HARG #klbl,
                                   LARG #plbl ] !> ] ].

frag_adv_rule := unary_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM.LOCAL.CAT [ HEAD p_or_adv &
                                     [ MOD < synsem &
                                             [ LOCAL scopal_mod &
                                                [ CONT.HOOK.LTOP #klbl ] ] > ],
                                POSTHEAD - ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST.LBL #klbl,
             HCONS <! qeq !> ] ].

binary_frag_rule := norm_frag_rule & basic_binary_phrase &
  [ SYNSEM.LOCAL.CAT.HEAD frag+,
    DTRA [ INFLECTED +,
           SYNSEM [ LOCAL [ CAT [ HEAD [ MOD 
                                       < synsem &
                                         [ LOCAL [ CAT.HEAD adverbee &
                                                       [ KEYS.KEY norm_rel ],
                                                   CONT.HOOK.LTOP #ulbl ] ] >,
                                         KEYS.KEY independent_rel ],
                                  VAL [ SUBJ *olist*,
                                        COMPS < > ] ],
                            CONJ cnil,
                            CONT.HOOK.LTOP #mlbl ],
                    NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
                                REL 0-dlist,
                                QUE 0-dlist ] ] ],
    DTRB [ INFLECTED +,
           SYNSEM [ LOCAL [ CAT [ HEAD.KEYS.KEY independent_rel,
                                  VAL [ COMPS < >,
                                        SPR *olist* ] ],
                            CONJ cnil ],
                    NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
                                REL 0-dlist ] ] ],
    C-CONT [ RELS.LIST.REST.FIRST.LBL #ulbl,
             HCONS.LIST < qeq & [ LARG #mlbl ], ... > ] ].

binary_left_frag_rule := binary_frag_rule &
  [ DTRA #dtr1 & [ SYNSEM.LOCAL.CAT [ HEAD.MOD < [ LOCAL scopal_mod ] >,
                                      POSTHEAD - ] ],
    DTRB #dtr2,
    ARGS < #dtr1, #dtr2 > ].

frag_l_mod_np_rule := binary_left_frag_rule &
  [ INFLECTED +,
    ARGS < sign,
           [ SYNSEM.LOCAL [ CAT.HEAD noun,
                            CONT [ HOOK.INDEX #ind,
                                   MSG no_msg ] ],
             POSSCL - ] >,
    C-CONT [ RELS.LIST.REST.FIRST.ARG #ind,
             HCONS <! qeq !> ] ].

frag_l_mod_pp_rule := binary_left_frag_rule &
  [ INFLECTED +,
    ARGS < sign & [ SYNSEM.LOCAL.CAT.HEAD.MOD < [ --SEMIND #kev ] > ],
           [ SYNSEM.LOCAL [ CAT.HEAD prep & 
                                [ MOD < synsem &
                                        [ LOCAL intersective_mod,
                                          --SEMIND #kev ] >,
                                  KEYS.KEY independent_rel ],
                            CONT.HOOK.LTOP #klbl ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST [ LBL #klbl,
                                    ARG0 #kev ],
             HCONS <! qeq !> ] ].

frag_l_mod_adv_rule := binary_left_frag_rule &
  [ INFLECTED +,
    ARGS < sign,
           [ SYNSEM.LOCAL.CAT [ HEAD.MOD < [ LOCAL scopal_mod &
                                                   [ CONT.HOOK.LTOP #klbl ] ] >,
                                POSTHEAD - ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST.LBL #klbl,
             HCONS <! qeq !> ] ].

frag_l_mod_frag_rule := binary_left_frag_rule &
  [ INFLECTED +,
    ARGS < sign,
           [ SYNSEM.LOCAL [ CAT.HEAD frag+,
                            CONT.HOOK.LTOP #dltop ] ] >,
    C-CONT [ RELS.LIST.REST.FIRST.ARG #dltop,
             HCONS <! qeq !> ] ].

binary_right_frag_rule := binary_frag_rule &
  [ DTRA #dtr1 & [ SYNSEM.LOCAL.CAT [ HEAD p_or_adv_or_dadv,
                                      POSTHEAD + ] ],
    DTRB #dtr2,
    ARGS < #dtr2, #dtr1 > ].


; DPF 05-dec-03 - Try restricting NP dtr to non-WH, also to avoid spurious 
; parses for e.g 'what is a good time to meet'
frag_r_mod_np_rule := binary_right_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM [ LOCAL [ CAT.HEAD noun &
                                       [ KEYS.ALTKEY non_freerel_q_rel ],
                              CONT [ HOOK.INDEX #ind,
                                     MSG no_msg ] ],
                      NON-LOCAL.QUE 0-dlist ],
             POSSCL - ],
           sign >,
    C-CONT [ RELS.LIST.REST.FIRST.ARG #ind,
             HCONS <! qeq !> ] ].


frag_r_mod_int_pp_rule := binary_right_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD p_or_adv &
                                     [ MOD < synsem &
                                             [ LOCAL intersective_mod,
                                               --SEMIND #kev ] >,
                                       KEYS.KEY independent_rel ],
                            CONT.HOOK.LTOP #klbl ] ],
           sign & [ SYNSEM.LOCAL.CAT.HEAD.MOD 
                                  < [ LOCAL intersective_mod,
                                      --SEMIND #kev ] > ] >,
    C-CONT [ RELS.LIST.REST.FIRST [ LBL #klbl,
                                    ARG0 #kev ],
             HCONS <! qeq !> ] ].

frag_r_mod_scop_pp_rule := binary_right_frag_rule &
  [ INFLECTED +,
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD p_or_adv &
                                     [ MOD < synsem &
                                             [ LOCAL intersective_mod,
                                               --SEMIND #kev ] >,
                                       KEYS.KEY independent_rel ],
                            CONT.HOOK.LTOP #klbl ] ],
           sign & [ SYNSEM.LOCAL.CAT.HEAD.MOD 
                                  < [ LOCAL scopal_mod &
                                            [ CONT.HOOK.LTOP #klbl ],
                                      --SEMIND #kev ] > ] >,
    C-CONT [ RELS.LIST.REST.FIRST.ARG0 #kev,
             HCONS <! qeq !> ] ].

frag_finvp_rule := basic_frag_rule & basic_unary_phrase &
  [ ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD verb & [ VFORM fin,
                                                  INV - ],
                                    VAL [ SUBJ < unexpressed_reg >,
                                          COMPS *olist* ] ],
                              CONT.HOOK [ LTOP #ltop,
                                          INDEX #event ] ],
                      NON-LOCAL [ SLASH 0-dlist & [ LIST < > ],
                                  REL 0-dlist,
                                  QUE 0-dlist ] ] ] >,
    C-CONT [ HOOK.INDEX #event,
             RELS <! relation !>,
             HCONS <! [ LARG #ltop ] !> ] ].

frag_dadv_rule := basic_frag_rule & basic_unary_phrase &
  [ ARGS < [ SYNSEM.LOCAL [ CAT [ HEAD root-marker,
                                  POSTHEAD - ],
                            CONJ cnil,
                            CONT.HOOK [ LTOP #ltop,
                                        INDEX #ind ] ] ] >,
    C-CONT [ HOOK.INDEX #ind,
             RELS <! relation !>,
             HCONS <! [ LARG #ltop ] !> ] ].

; Can't just identify synsems of mother and middle dtr since LKEYS and
; LOCAL.ARG-S are not passed up to phrases.

punctuated_expr_rule := basic_ternary_phrase & ternary_rule_left_to_right &
  [ SYNSEM [ LOCAL [ CAT #cat,
                     CONT #cont,
                     AGR #agr,
                     CONJ #conj,
                     CTXT #ctxt ],
             ROOT #root,
             NON-LOCAL #nonloc,
             MODIFIED #modif,
             --SEMIND #semind,
             PHON #phon ],
    ARGS < [ SYNSEM.LOCAL [ CAT.HEAD punct,
                            CONJ cnil ] ],
           [ SYNSEM [ LOCAL [ CAT #cat,
                              CONT #cont,
                              AGR #agr,
                              CONJ #conj,
                              CTXT #ctxt ],
                      ROOT #root,
                      NON-LOCAL #nonloc,
                      MODIFIED #modif,
                      --SEMIND #semind,
                      PHON #phon ],
             INFLECTED #infl,
             ROBUST #robust ],
           [ SYNSEM.LOCAL [ CAT.HEAD punct,
                            CONJ cnil ] ] >,
    C-CONT [ RELS <! !>,
             HCONS <! !> ],
    INFLECTED #infl,
    ROBUST #robust ].

quoted_expr_rule := punctuated_expr_rule &
  [ SYNSEM.LEX #lex,
    ARGS < [ SYNSEM.LOCAL.CAT.HEAD quote-punct & #head ],
           sign & [ SYNSEM.LEX #lex ],
           [ SYNSEM.LOCAL.CAT.HEAD #head ] > ].

; Make these valence-saturated for now to prevent them from getting too frisky
paren_expr_rule := punctuated_expr_rule &
  [ SYNSEM.LEX -,
    ARGS < [ SYNSEM.LOCAL.CAT.HEAD lp-punct ],
           sign & [ SYNSEM.LOCAL.CAT.VAL [ SPR *olist*,
                                           SUBJ *olist*,
                                           COMPS < > ] ],
           [ SYNSEM.LOCAL.CAT.HEAD rp-punct ] > ].