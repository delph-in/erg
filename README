Changes to ERG for oct-04 version:

1. Expansion of lexicon and grammar for Rondane (hiking) domain

   - With significant help from Becky Neil, coached by Stephan, about 
     2000 lexical entries were added manually to the lexicon, to 
     accommodate the vocabulary demands of the ~1500 sentences in the 
     Rondane domain for LOGON.  Current number of active entries in
     ERG lexdb now 14,347.
   - Extensions to the grammar included generalizing of predicative
     subordinate clauses (depictive adjectival or verbal phrases), with
     corresponding but necessary increases in ambiguity.
   - A treebank for the Rondane corpus is now included in erg/gold/rondane,
     constructed by parsing with a 100,000 edge limit and storing only the
     1000 most likely parses, using first the standard redwoods.mem model
     to treebank once, then training a new model based on this treebank 
     (rondane.mem), reparsing using this model, and updating the treebank.

2. MRS changes

   bare_div_q_rel => udef_q_rel

3. Refinement of punctuation treatment

   - Tuning of the implementation of most punctuation marks as full
     signs in the grammar included adjustments to enable efficient
     generation with sentence punctuation (but not yet commas).
     Parsing with punctuation is still relatively inefficient, since
     nothing prevents bottom-up parser from stranding punctuation
     marks which typically must attach to the lexical edge immediately
     to their left.

4. Employing more efficient generator

   - The new and improved LKB generator can cope astonishingly well
     with MRSs corresponding to up to 35-word sentences, as illustrated
     by its performance on the Rondane data.  Of the ~1000 input MRSs
     from the Rondane treebank, almost 90% generate with an average
     of 18 strings per item, using on average 3.0 seconds per item
     for exhaustive generation using a maximum of 10,000 edges.  Only
     a handful of items overran the edge limit, but the following items
     in that profile were manually excluded from the run because they 
     consumed an inordinate amount of CPU (in some cases apparently never
     terminating), suggesting room for further improvements:
     138 277 353 362 422 496 676 739 820 1036 1072 1141 1167 1301 1327 1329

------------------------------------------------------------------------------
Changes to ERG for 19-July-04 version:

1. MRS-related changes

   - Adjectives and adverbs now uniformly introduce pred-names of the form
     "..._a_rel" instead of old "..._j_rel" and "..._r_rel".  So the same 
     MRS predicate "_quick_a_rel" now appears in the MRSs for both 
     'Kim departed quickly.' and 'Kim made a quick departure.'; and
     similarly for most morphologically related adjective/adverb pairs,
     though the -ly adverbs are not yet being derived via lexical rule.

   - Nominal phrases consisting of a head noun preceded by an -ing verb,
     as in "dancing teacher", once again get two analyses: one where the
     modifier is a deverbal adjective (thus the teacher is dancing), as
     before; and a second one (which was missing for quite some time)
     where the two words form a noun-noun compound, where the semantic
     relation holding of the two instances is underspecified (and thus
     the teacher is somehow related to dancing, but is not necessarily
     doing the dancing).  These can be disambiguated if "dancing" is
     itself modified, where "skillfully dancing teacher" can only mean
     the teacher is dancing, while "performance dancing teacher" can only
     be the compound.

2. Punctuation

   - At long last, the grammar now has a reasonably ambitious account of
     ordinary punctuation, including commas, dashes, quote marks,
     parentheses, semicolons, and clause punctuation.  These marks are
     treated as full tokens in the string, and there are a handful of
     specialized grammar rules to put them together with the words to
     their left or (in some cases) with the phrases to their right.  The
     approach is built on accounts developed by Nunberg and Briscoe,
     though rich use of types has altered the story somewhat, and the
     implementation is still not complete.  In particular, there is still
     more tuning required before the generator will be ready to produce
     any more than the occasional comma in a coordinated phrase.

3. Feature names

   - In the interest of more readability when viewing feature structures,
     I finally renamed some of the longer feature names so they don't push
     everything off to the right of the screen/page.  I hope these new
     shorter names do not create confusion for those of you that sometimes
     admire ERG feature structures.  You'll see, for example, NONLOC instead
     of NON-LOCAL, and ND-AFF instead of NEEDS-AFFIX. (NB: I would expect 
     that before any similar renaming happened in the Matrix, we would have 
     to arrive at consensus for its utility among the current users.)  Note 
     that none of these renamed features involve anything in the MRSs - that
     necessary renaming already happened ages ago, and is now enshrined in
     the Matrix as well.

   - In case anyone cares, I note that I also managed to eliminate a 
     particularly vexing hack feature called STEMHEAD from the grammar - 
     it was introduced long ago to cope with some awkwardness with how the 
     existing types interacted with the inflectional rules -- now cleaned up.


4. Spelling matters

   - The LKB comes with a mechanism to adjust generator output so the
     determiner "a" precedes a following word with a phonological consonant
     onset, and "an" for vocalic.  But the ERG now enforces this minimal
     phonological constraint directly in the grammar, requiring that each
     entry of the lexicon specify its phonological onset value ('con' or
     'voc').  Appropriate minor extensions to the LexDB machinery have been
     made.
 
   - To accommodate sentence data where letters of the alphabet are used
     as proper names, as in "Suppose that A hired B.", lexical entries for
     25 of the 26 letters have been added, but the preprocessor marks the
     the uppercase letters (by adding a leading underscore), and only 
     these are treated as proper names.  But the capital letter I is too 
     annoyingly frequent to see always with a leading underscore, so it's
     missing from the inventory of proper name letters for now.  We'll see
     a better treatment of uppercase in the preprocessor in good time.
