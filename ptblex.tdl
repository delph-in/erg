be_c_am_neg_2_ptb := vc_prd_am_neg_le &
  [ STEM < "are", "n't" > ].

aint_be_c_am_neg_2_ptb := vc_prd_am_neg_le &
  [ STEM < "ai", "n't" > ].

be_c_are_neg_2_ptb := vc_prd_are_neg_le &
  [ STEM < "are", "n't" > ].

aint_be_c_are_neg_2_ptb := vc_prd_are_neg_le &
  [ STEM < "ai", "n't" > ].

be_id_am_neg_2_ptb := vc_id_am_neg_le &
  [ STEM < "are", "n't" > ].

aint_be_id_am_neg_2_ptb := vc_id_am_neg_le &
  [ STEM < "ai", "n't" > ].

be_id_are_neg_2_ptb := vc_id_are_neg_le &
  [ STEM < "are", "n't" > ].

aint_be_id_are_neg_2_ptb := vc_id_are_neg_le &
  [ STEM < "ai", "n't" > ].

be_th_cop_are_neg_2_ptb := vc_there_are_neg_le &
  [ STEM < "are", "n't" > ].

aint_be_th_cop_are_neg_2_ptb := vc_there_are_neg_le &
  [ STEM < "ai", "n't" > ].

can_aux_neg_2_ptb := va_modal_neg_le &
  [ STEM < "ca", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _can_rel ].

could_aux_neg_2_ptb := va_modal_subj_neg_le &
  [ STEM < "could", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _could_v_rel ].

dare_aux_neg_2_ptb := va_modal_neg_le &
  [ STEM < "dare", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _dare_aux_rel ].

did1_neg_2_ptb := va_do_neg_past_le &
  [ STEM < "did", "n't" > ].

does1_neg_2_ptb := va_doesnt_neg_pres_le &
  [ STEM < "does", "n't" > ].

dont_2_ptb := va_dont_imp_le &
  [ STEM < "do", "n't" > ].

do1_neg_2_ptb := va_dont_neg_pres_le &
  [ STEM < "do", "n't" > ].

hadnt_aux_2_ptb := va_had_neg_le &
  [ STEM < "had", "n't" > ].

hadnt_aux_subj_2_ptb := va_had_subj_neg_le &
  [ STEM < "had", "n't" > ].

hasnt_aux_2_ptb := va_has_neg_le &
  [ STEM < "has", "n't" > ].

aint_sg_have_aux_2_ptb := va_has_neg_le &
  [ STEM < "ai", "n't" > ].

have_fin_aux_neg_2_ptb := va_have_fin_neg_le &
  [ STEM < "have", "n't" > ].

aint_pl_have_aux_2_ptb := va_have_fin_neg_le &
  [ STEM < "ai", "n't" > ].

be_c_is_neg_2_ptb := vc_prd_is_neg_le &
  [ STEM < "is", "n't" > ].

aint_be_c_is_neg_2_ptb := vc_prd_is_neg_le &
  [ STEM < "ai", "n't" > ].

be_id_is_neg_2_ptb := vc_id_is_neg_le &
  [ STEM < "is", "n't" > ].

aint_be_id_is_neg_2_ptb := vc_id_is_neg_le &
  [ STEM < "ai", "n't" > ].

be_th_cop_is_neg_2_ptb := vc_there_is_neg_le &
  [ STEM < "is", "n't" > ].

aint_be_th_cop_is_neg_2_ptb := vc_there_is_neg_le &
  [ STEM < "ai", "n't" > ].

might_aux_neg_2_ptb := va_modal_subj_neg_le &
  [ STEM < "might", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _might_rel ].

must_aux_neg_2_ptb := va_modal_neg_le &
  [ STEM < "must", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _must_rel ].

need_aux_neg_2_ptb := va_modal_neg_le &
  [ STEM < "need", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _need_aux_rel ].

ought_aux_neg_2_ptb := va_ought_neg_le &
  [ STEM < "ought", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _ought_rel ].

should_aux_neg_2_ptb := va_modal_subj_neg_le &
  [ STEM < "should", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _should_rel ].

be_id_was_neg_2_ptb := vc_id_was_neg_le &
  [ STEM < "was", "n't" > ].

be_th_cop_was_neg_2_ptb := vc_there_was_neg_le &
  [ STEM < "was", "n't" > ].

be_c_was_neg_2_ptb := vc_prd_was_neg_le &
  [ STEM < "was", "n't" > ].

be_id_was_neg_subj_2_ptb := vc_id_was_neg_subj_le &
  [ STEM < "was", "n't" > ].

be_th_cop_was_neg_subj_2_ptb := vc_there_was_neg_subj_le &
  [ STEM < "was", "n't" > ].

be_c_was_neg_subj_2_ptb := vc_prd_was_neg_subj_le &
  [ STEM < "was", "n't" > ].

be_c_were_neg_2_ptb := vc_prd_were_neg_le &
  [ STEM < "were", "n't" > ].

be_id_were_neg_2_ptb := vc_id_were_neg_le &
  [ STEM < "were", "n't" > ].

be_th_cop_were_neg_2_ptb := vc_there_were_neg_le &
  [ STEM < "were", "n't" > ].

be_c_were_neg_subj_2_ptb := vc_prd_were_neg_subj_le &
  [ STEM < "were", "n't" > ].

be_id_were_neg_subj_2_ptb := vc_id_were_neg_subj_le &
  [ STEM < "were", "n't" > ].

be_th_cop_were_neg_subj_2_ptb := vc_there_were_neg_subj_le &
  [ STEM < "were", "n't" > ].

will_aux_neg_2_ptb := va_will_neg_le &
  [ STEM < "wo", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _will_aux_rel ].

would_aux_neg_2_ptb := va_would_neg_le &
  [ STEM < "would", "n't" >,
    SYNSEM.LOCAL.KEYS.KEY _would_rel ].

thirty_five_w_comps := adj_complemented_unspecified_card_le & 
  [ STEM < "thirty-five" >,
    SYNSEM.LOCAL.KEYS.KEY.CARG "35" ].

thirty_five := adj_bare_unspecified_card_two_le & 
  [ STEM < "thirty-five" >,
    SYNSEM.LOCAL.KEYS.KEY.CARG "35" ].

