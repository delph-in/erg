;;; -*- Mode: tdl; Coding: utf-8; -*-

;;;
;;; Copyright (c) 2009 -- 2010 Stephan Oepen (oe@ifi.uio.no); 
;;; see ‘LICENSE’ for conditions.
;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; a second pass at lightweight NEs, now that we have further split up tokens
;;; at hyphens and dashes.
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;
;;; numerals, including some sub-sets (days of the month or years).  in some of
;;; the rules |1| is deliberately excluded, because (unlike everyone else) it
;;; requires singular agreement.  hence, we assume that all usages of |1| need
;;; be accounted for in the native lexicon, including as hours or days of the
;;; month.
;;;

;;
;; (candidate) days of the month: |2| to |9|, |10| to |29|, |30|, and |31|
;;
card_or_dom_ne_tmr := ne_tmt &
[ +INPUT < [ +FORM ^([2-9]|[1-2][0-9]|3[01])$ ] >,
  +OUTPUT < [ +CLASS card_or_dom_ne ] > ].

;; DPF 2015-05-06 - To admit |the Jan. 5, 2004, event|, swallow the comma on
;; the year token.  
;; Should FIX this someday in the grammar to have the lexical entry for the 
;; dofm swallow the comma on the following year token, but not clear how.
;; DPF 2016-11-08 - Changed this rule and the next to also allow two-digit
;; years, particularly necessary for |in 1988-87|
;; DPF 2017-07-10 - Now that we can get |April 23, 2017| with the comma on
;; the dofm token, let's try getting rid of this rule, which overgenerates and
;; undergenerates: accepts |*23, cats arose| but rejects 
;; |Kim, 24, assistant director, arose| because the essential middle comma was
;; getting swallowed.
;;
;card_or_year_comma_ne_tmr := two_one_tmt &
;[ +INPUT < [ +FORM #form & ^[12]?[0-9]?[0-9]{2}(\.|-|\*)?$, +CLASS non_ne, 
;             +PRED #pred, +CARG #carg, +TNT.+MAIN #main,
;	     +TRAIT [ +UW #uw, +IT #it, +HD #hd, 
;		      +LB #lb, +LD #ld, +RB #rb, +RD #rd ] ],
;	   [ +FORM ^,$ ] >,
;  +OUTPUT < [ +FORM #form, +CLASS card_or_year_ne, 
;	      +PRED #pred, +CARG #carg, +TNT.+MAIN #main,
;	      +TRAIT [ +UW #uw & +, +IT #it, +HD #hd,
;                       +LB #lb, +RB #rb, +LD #ld, +RD #rd ] ] > ].

;;
;; (candidate) years: |950|, |1805|, |1957|, |2005|, et al.
;;
;; DPF 2012-12-09 - Allow for trailing hyphen (or decimal point) in order to
;; get e.g. |1990-model car|
;;
card_or_year_ne_tmr := ne_tmt &
[ +INPUT < [ +FORM ^[012]?[0-9]?[0-9]{2}(\.|-|\*)?$ ] >,
  +OUTPUT < [ +CLASS card_or_year_or_time_ne ] > ].

;;
;; any sequence of digits, with optional sign and optional decimal point.  to
;; accept measure phrases like |900-pound|, where at this point |900-| is one
;; token, allow an optional trailing hyphen.
;;
card_ne_1_tmr := ne_tmt &
[ +INPUT < [ +FORM ^[-+±~]?([2-9]|[1-9][0-9][0-9]*)(\.|-)?$ ] >,
  +OUTPUT < [ +CLASS card_ne ] > ].

;;
;; floating point numbers, with optional sign and at least one decimal.  again
;; for measures phrases, allow optional hyphen: |1.5-inch pianist|.
;; DPF 2012-05-27 - Generalized this class to also allow treatment of |8.10|
;; as a proper name, as in |Ubuntu 8.10|.
;;
;; DPF 2012-09-19 - In some contexts such as the WSJ, an expression like 
;; |stocks rose 0.3 point| is accepted with a sub-one decimal value and a 
;; singular measure noun.  So we split the old rule into two, one for
;; decimal numbers 1.0 or greater (and the negative equivalent), and the
;; other for decimals with a 0 before the decimal.
;; DPF 2014-07-09 - Re 2012-05-27: This is dubious, and too expensive, since
;; we then have to treat every decimal as possibly also an ordinary proper name.
;; So undo, and uniformly treat as numbers.
;; DPF 2015-05-09 - Re 2014-07-09: Well, but to get |the 1.9 release|, we don't
;; want to treat 1.9 as an ordinary cardinal, because we don't want to accept
;; |the three cat|.  So let's try treating these as class card_or_decimal_ne,
;; since we also want (and get) |the 0.9 release|.
;;
card_ne_2_tmr := ne_tmt &
[ +INPUT < [ +FORM ^[-+±~]?[1-9][0-9]*\.[0-9]+$ ] >,
  +OUTPUT < [ +CLASS card_or_decimal_ne ] > ].

card_ne_3_tmr := ne_tmt &
[ +INPUT < [ +FORM ^[-+±~]?[0]*\.[0-9]+$ ] >,
  +OUTPUT < [ +CLASS card_or_decimal_ne ] > ].

;;
;; US-style or German separators, optional sign and decimals: e.g. |23,000.-|
;;
card_ne_4_tmr := ne_tmt &
[ +INPUT < [ +FORM ^[-+±]?[1-9][0-9]{0,2}([,.][0-9]{1,3})+([,.]([0-9]*|-))?$ ] >,
  +OUTPUT < [ +CLASS card_ne ] > ].

;;
;; ordinals, mostly parallel to the numerals
;;
ord_or_dom_ne_tmr := ne_tmt &
[ +INPUT < [ +FORM ^([23]?(1st|2nd|3rd)|(2?[4-9]|1[0-9]|20|30)th)$ ] >,
  +OUTPUT < [ +CLASS ord_or_dom_ne ] > ].

ord_ne_tmr := ne_tmt &
[ +INPUT < [ +FORM ^[0-9]*((^|[^1])(1st|2nd|3rd)|(11|12|13|[04-9])th)$ ] >,
  +OUTPUT < [ +CLASS ord_ne ] > ].

;;
;; fractions and dates, again, this time pulled apart from a hyphenated context
;; such as |9/10-11/12|
;;
fraction_ne_2_tmr := ne_tmt &
[ +INPUT < [ +FORM ^[-+±~]?[0-9]+(\.[0-9]*)?/[1-9][0-9]*[-–]?$ ] >,
  +OUTPUT < [ +CLASS date_or_fract_ne ] > ].   

;;
;; _fix_me_
;; another pass at the decades, for cases like |mid-1800s|; see ‘ne1.tdl’ for
;; the original rules.  to clean these up, we would need something like the
;; ‘group call’ mechanism in REPP.                            (27-aug-11; oe)
;;
decade_ne_3_tmr := ne_tmt &
[ +INPUT < [ +FORM ^(?:1[0-9])?[0-9]0[sS]$ ] >,
  +OUTPUT < [ +CLASS plur_ne ] > ].

decade_ne_4_tmr := two_one_keep_brackets_tmt &
[ +INPUT < [ +FORM ^((?:1[0-9])?[0-9]0)$, 
             +CLASS non_ne,
             +PRED #pred, +CARG #carg, +TNT.+MAIN #main ],
           [ +FORM ^(['’][sS])$, +CLASS non_ne ] >,
  +OUTPUT < [ +FORM "${I1:+FORM:1}${I2:+FORM:1}", 
              +CLASS plur_ne,
              +PRED #pred, +CARG #carg, +TNT null_tnt & [ +MAIN #main ] ] > ].

