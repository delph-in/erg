;;;; settings for CHEAP

;; definition of names of types with a special meaning to PET
;; (previously builtin types)
special-name-top := "*top*".
special-name-symbol := "symbol".
special-name-string := "string".
special-name-cons := "*cons*".
special-name-list := "*list*".
special-name-nil := "*null*".
special-name-difflist := "*diff-list*".

;; same for attributes
special-name-attr-first := "FIRST".
special-name-attr-rest := "REST".
special-name-attr-list := "LIST".
special-name-attr-last := "LAST".
special-name-attr-args := "ARGS".

;; name of type to get info about grammar into (if at all)
grammar-info := grammar_info.

;; type of a valid parse
; start-symbols := $root_strict $root_phr $root_lex $root_subord $root_conj.
start-symbols := $root_strict.

;;
;; weighted start symbols: pairs of root type plus threshold; only once the
;; top score on the agenda drops below the threshold, the associated root will
;; be allowed to license results.  when the search space is exhausted, the
;; agenda score drops to 0, eventually.
;;

;;weighted-start-symbols := $root_strict 1000 
;;                          $root_phr 50
;;                          $root_lex 50
;;                          $root_conj 50
;;                          $root_subord 50.

;; names of attributes not to pass from daughter to mother in parsing
deleted-daughters := ARGS HEAD-DTR NON-HEAD-DTR LCONJ-DTR RCONJ-DTR.

;; prefix of list-valued path where to unify the affix
affixation-path := "ARGS.FIRST".

;; path into the MRS semantics
mrs-path := "SYNSEM.LOCAL.CONT".

;; path to LABEL for RA mapping
label-path := "SYNSEM.LOCAL.KEYS.KEY.LABEL".
;; the same, relative to the root of a rel
label-path-tail := "LABEL".

;; name of type containing quick check structure
qc-structure := $qc_paths.

;; k2y abstract type names
;; For English
k2y-type-names := 
                k2y_message message
                k2y_handle handle
                k2y_no_tense no_tense
                k2y_event event
                k2y_nonexpl_ind non_expl-ind.  

;; For Japanese
;; k2y-type-names := 
;;                k2y_message message
;;                k2y_handle handle
;;                k2y_no_tense no-tense
;;                k2y_event event
;;                k2y_nonexpl_ind non_expl-ind.

;; k2y abstract predicate names
;; For English:
k2y-pred-names := 
                k2y_verb_rel v_event_rel 
                k2y_adj_rel abstr_adj_rel
                k2y_prep_rel prep_mod_rel
                k2y_adv_rel abstr_adv_rel
                k2y_event_rel event_rel
                k2y_arg_rel arg_rel
                k2y_arg1_rel arg1_rel
                k2y_arg3_rel arg3_event_rel
                k2y_cop_rel support_rel
                k2y_select_rel selected_rel
                k2y_excl_rel excl_rel
                k2y_conj_rel conj_rel
                k2y_subord_rel subord_rel
                k2y_appos_rel appos_id_rel
                k2y_loc_rel unspec_loc_rel
                k2y_temploc_rel temp_loc_rel
                k2y_temp_rel temp_abstr_rel
                k2y_nn_rel unspec_rel
                k2y_nom_rel nonpro_rel
                k2y_prpstn_rel prpstn_rel
                k2y_hypo_rel hypo_rel
                k2y_nonevent_rel non_event_rel
                k2y_proposs_rel pro_poss_rel
                k2y_nomger_rel nominalize_or_gerund_rel.        

;; For Japanese:
;; k2y-pred-names := 
;;              k2y_event_rel event-rel 
;;              k2y_adj_rel adj-rel
;;              k2y_prep_rel arg-rel
;;              k2y_adv_rel adv-rel
;;              k2y_event_rel arg-rel
;;              k2y_arg_rel arg-rel
;;              k2y_arg1_rel arg1-rel
;;              k2y_arg3_rel arg3-rel
;;              k2y_cop_rel copula-rel
;;              k2y_select_rel not-applicable-rel
;;              k2y_excl_rel excl-rel
;;              k2y_conj_rel conj-rel
;;              k2y_subord_rel subord_rel
;;              k2y_nn_rel prep-mod-rel
;;              k2y_nom_rel reg-nom-rel.
;;              k2y_prpstn_rel prpstn_rel.
;;              k2y_nonevent_rel non_event_rel.

;; k2y abstract role names
;; For English
k2y-role-names := 
                k2y_hndl HANDEL
                k2y_inst INST
                k2y_event EVENT
                k2y_arg ARG
                k2y_arg1 ARG1
                k2y_arg2 ARG2
                k2y_arg3 ARG3
                k2y_arg4 ARG4
                k2y_soa SOA
                k2y_nn_head HINST 
                k2y_nn_nonhead NHINST
                k2y_bv BV
                k2y_c_arg C-ARG.

;; For Japanese
;; k2y-role-names := 
;;              k2y_handel HANDEL
;;              k2y_instance INST
;;              k2y_event EVENT
;;              k2y_arg ARG
;;              k2y_arg1 ARG1
;;              k2y_arg2 ARG2
;;              k2y_arg3 PREP
;;              k2y_arg4 ARG4
;;              k2y_nn_head ARG 
;;              k2y_nn_nonhead PREP.

;;;
;;; list of relations that we would rather not see in K2Y output
;;;
k2y-disfavoured-relations := free_relative_ever_rel.

;; Characters to ignore in tokenization
;; stop-characters := "\t?!.:;,()-+*\n'".
;; FIX soon
stop-characters := "?!.:;,()-+*'".

;;;
;;; generic lexical entries for unknown words: for each unknown word in the
;;; input all generic entries are postulated.  those that require a certain
;;; suffix (`generic-le-suffixes') only fire if the input form has the suffix.
;;; scoring for generic items is based on the default priority (typically 
;;; fairly low) and (optionally) adjusted on the basis of POS information that
;;; may be available for the unknown word.  if the input word has one more more
;;; POS tags associated to it, these are looked up in the `posmapping' table:
;;; this table is a list of triples (tag, score, gle) where `gle' is the name
;;; of one of the generic items in `generic-les'.  for each generic item, the
;;; score is adjusted to the first match of one of the tags associated with the
;;; unknown word in the mapping table.
;;;

default-gen-le-priority := 500.

generic-les := $generic_trans_verb_bse $generic_trans_verb_pres3sg 
               $generic_trans_verb_presn3sg $generic_trans_verb_past 
               $generic_trans_verb_psp $generic_trans_verb_prp 
               $generic_sg_noun $generic_pl_noun 
               $genericname $generic_adj $generic_adverb.

generic-le-suffixes := $generic_trans_verb_pres3sg "S" 
                       $generic_trans_verb_past "ED" 
                       $generic_trans_verb_psp "ED" 
                       $generic_trans_verb_prp "ING" $generic_pl_noun "S".

posmapping := TranVerb 800 $generic_trans_verb_bse 
              TranVerb 800 $generic_trans_verb_pres3sg 
              TranVerb 800 $generic_trans_verb_presn3sg 
              TranVerb 800 $generic_trans_verb_past 
              TranVerb 800 $generic_trans_verb_psp 
              TranVerb 800 $generic_trans_verb_prp 
              EnglishNoun 800 $generic_sg_noun 
              EnglishNoun 800 $generic_pl_noun 
              EnglishNoun 800 $genericname
              FreeRadical 800 $generic_sg_noun 
              FreeRadical 800 $generic_pl_noun
              FreeRadical 800 $generic_adj. 


;;;
;;; scoring for grammar rules
;;;

default-rule-priority := 500.

rule-priorities :=
; $extradj_s 150
$extracomp 250
$extrasubj_f 300
$extrasubj_i 300
$fillhead_non_wh 150
$fillhead_wh_r 300
$fillhead_wh_subj_r 300
$fillhead_wh_nr_f 150
$fillhead_wh_nr_i 150
$fillhead_rel 250
$freerel 100
$hoptcomp 400
$rootgap_l 100
$rootgap_r 100
$np_n_cmpnd 300
$np_n_cmpnd_2 300
$noun_n_cmpnd 500
$nadj_rc 400
$nadj_rr 800
$adjh_i 450
; $mid_coord_np 800
; $top_coord_np 700
$hcomp 800
$hadj_i_uns 450
$hadj_s 400
$bare_np 500
$bare_vger 500
$proper_np 800
$noptcomp 800
$fin_non_wh_rel 200
$inf_non_wh_rel 100
$runon_s 50
$vpellipsis_ref_lr 100
$vpellipsis_expl_lr 100
$taglr 300
$vgering 350
$measure_np 800
$appos 200
$imper 800
$tempnp_wh 800
$tempnp_nwh 400
; $root_cl 800
$sailr 400
$advadd 700
$num_noun 100
$passive 500
$intransng 200
$transng 300
$monthdet 400
$weekdaydet 400
; $monthunsat 400
$attr_adj 400
$attr_adj_verb_part 200
$partitive 200
$partnumc 300
$partnumnc 300
$NP_part_lr 400
$dative_lr 700.

default-le-priority := 800.

unlikely-le-types := 
				    N_MEALTIME_LE 200
				    N_ADV_LE 300
				    VC_THERE_IS_LE 250
				    VC_THERE_ARE_LE 250
				    VC_THERE_WAS_LE 250
				    VC_THERE_WERE_LE 250
				    ADV_INT_VP_POST_LE 200
				    N_FREEREL_PRO_LE 200
                                    N_FREEREL_PRO_ADV_LE 200
				    V_SORB_LE 200
				    DET_PART_ONE_LE 200
				    ADV_DISC_LIKE_LE 200
				    ADV_DISC_LE 200
				    P_CP_LE 200
                                    V_SUBJ_EQUI_PRD_LE 200
				    COMP_TO_PROP_ELIDED_LE 200
				    COMP_TO_NONPROP_ELIDED_LE 200
                                    N_HOUR_PREP_LE 200
	  			    N_PERS_PRO_NOAGR_LE 200
                                    N_PROPER_ABB_LE 50
                                    V_NP_TRANS_LOWPRIO_LE 100
                                    V_NP*_TRANS_LOWPRIO_LE 100
                                    V_NP_TRANS_MEDPRIO_LE 300
                                    V_DITRANS_ONLY_LOWPRIO_LE 200
                                    V_DITRANS*_ONLY_LE 200
                                    N_DEICTIC_PRO_LE 200
                                    V_UNACC_LE 300
                                    N_INTR_LOWPRIO_LE 200
                                    P_NBAR_COMP_LE 200
                                    P_NBAR_COMP_NMOD_LE 100
                                    N_YEAR_LE 400
                                    V_PREP_INTRANS_MEDPRIO_LE 300
                                    N_MASS_LOWPRIO_LE 100
				    N_PROPER_LOWPRIO_LE 200
                                    V_OBJ_EQUI_NON_TRANS_PRD_LOWPRIO_LE 200
                                    PP_WH_LE 200
                                    VC_ID_AM_LE 200
                                    V_PARTICLE_NP_MEDPRIO_LE 300
				    V_NP_NON_TRANS_LOWPRIO_LE 100
  				    ADJ_REG_ATRANS_MEDPRIO_LE 400
  				    ADJ_INTRANS_LOWPRIO_LE 300
  				    ADJ_PRED_INTRANS_LOWPRIO_LE 200
				    V_SOR_NON_TRANS_LE 300.


likely-le-types := CONJ_COMPLEX_LE 900
				  VA_QUASIMODAL_LE 900
				  V_POSS_LE 400
				  N_HOUR_LE 900
				  P_DITRANS_LE 900
				  V_EXPL_IT_SUBJ_LIKE_LE 900
                                  ADV_S_PRE_WORD_NOSPEC_LE 900
				  ADJ_MORE_LESS_LE 900
				  ADJ_MOST_LEAST_LE 900
				  V_SUBJ_EQUI_LE 900
				  N_PROPER_LE 900
				  ; V_PREP_PARTICLE_NP_LE 900
				  N_WH_PRO_LE 900
                                  V_EMPTY_PREP*_INTRANS_LE 900
                                  N_REL_PRO_LE 900
                                  V_EMPTY_PREP_INTRANS_LE 900
				  COMP_TO_PROP_LE 900
				  COMP_TO_NONPROP_LE 900
				  COMP_IF_INDIC_LE 900
				  CONJ_AND_NUM_LE 900
				  ADJ_COMPLEMENTED_UNSPECIFIED_CARD_LE 900
				  ADJ_REG_EQUI_LE 900
                                  V_NP_PREP_TRANS_LE 900
                                  ; V_NP_PREP*_TRANS_LE 900
                                  V_NP*_PREP_TRANS_LE 900
                                  P_SUBCONJ_LE 900
                                  ; V_EMPTY_PREP*_TRANS_NOSUBJ_LE 900
                                  N_REL_PRO_LE 900
                                  V_DOUBLE_PP_LE 900
                                  V_NP*_TRANS_PRP_NALE 900
                                  V_NP*_TRANS_PRES3SG_NALE 900
                                  V_NP*_TRANS_PAST_NALE 900
                                  V_NP*_TRANS_PSP_NALE 900
                                  ADJ_TRANS_LE 900
                                  V_PREP_INTRANS_UNACC_LE 900
                                  V_SSR_LE 900
                                  N_TITLE_LE 900
				  ADJ_REG_ATRANS_CP_LE 900
				  ADJ_REG_ATRANS_LE 900
                                  V_OBJ_EQUI_NON_TRANS_PRD_IMPER_LE 900
                                  V_SUBJ_EQUI_AND_LE 900
                                  DET_PART_MS_WH_LE 900
                                  DET_PART_PL_WH_LE 900
                                  V_NP_TRANS_DOUBLE_PP_LE 900
                                  V_NP_TRANS_DOUBLE_PP*_LE 900
                                  V_NP*_TRANS_DOUBLE_PP*_LE 900
                                  V_EXPL_IT_SUBJ_NP_CP_LE 900
                                  V_EXPL_IT_SUBJ_NP_CP_FIN_LE 900
                                  V_EXPL_IT_SUBJ_NP_CP_INF_LE 900.
